{"version":3,"file":"HoverCard.js","sourceRoot":"../src/","sources":["components/HoverCard/HoverCard.tsx"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\n/* tslint:enable:no-unused-variable */\r\nimport {\r\n  BaseComponent,\r\n  autobind,\r\n  divProperties,\r\n  getNativeProps,\r\n  getId,\r\n  KeyCodes,\r\n  getDocument\r\n} from '../../Utilities';\r\nimport {\r\n  mergeStyles\r\n} from '../../Styling';\r\n\r\nimport { IHoverCardProps, IHoverCardStyles } from './HoverCard.Props';\r\nimport { ExpandingCard } from './ExpandingCard';\r\nimport { ExpandingCardMode } from './ExpandingCard.Props';\r\nimport { getStyles } from './HoverCard.styles';\r\nimport { FocusTrapZone } from 'office-ui-fabric-react/lib/FocusTrapZone';\r\n\r\nexport interface IHoverCardState {\r\n  isHoverCardVisible: boolean;\r\n  mode: ExpandingCardMode;\r\n}\r\n\r\nexport class HoverCard extends BaseComponent<IHoverCardProps, IHoverCardState> {\r\n  public static defaultProps = {\r\n    cardOpenDelay: 500,\r\n    cardDismissDelay: 100,\r\n    expandedCardOpenDelay: 1500,\r\n    instantOpenOnClick: false\r\n  };\r\n\r\n  // The wrapping div that gets the hover events\r\n  private _hoverCard: HTMLElement;\r\n  // tslint:disable-next-line:no-unused-variable\r\n  private _expandingCard: ExpandingCard;\r\n  private _dismissTimerId: number;\r\n  private _openTimerId: number;\r\n  private _currentMouseTarget: EventTarget;\r\n\r\n  private _styles: IHoverCardStyles;\r\n\r\n  // Constructor\r\n  constructor(props: IHoverCardProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isHoverCardVisible: false,\r\n      mode: ExpandingCardMode.compact\r\n    };\r\n  }\r\n\r\n  public componentDidMount() {\r\n    const target = this._getTargetElement();\r\n\r\n    this._events.on(target, 'mouseenter', this._cardOpen);\r\n    this._events.on(target, 'mouseleave', this._cardDismiss);\r\n    if (this.props.trapFocus) {\r\n      this._events.on(target, 'keydown', this._cardOpen);\r\n    } else {\r\n      this._events.on(target, 'focus', this._cardOpen);\r\n      this._events.on(target, 'blur', this._cardDismiss);\r\n    }\r\n    if (this.props.instantOpenOnClick) {\r\n      this._events.on(target, 'click', this._instantOpenExpanded);\r\n    } else {\r\n      this._events.on(target, 'mousedown', this._cardDismiss);\r\n      this._events.on(target, 'keydown', this._cardDismiss);\r\n    }\r\n  }\r\n\r\n  public componentWillUpdate(newProps: IHoverCardProps, newState: IHoverCardState) {\r\n    if (newState.isHoverCardVisible !== this.state.isHoverCardVisible) {\r\n      if (newState.isHoverCardVisible) {\r\n        this._async.setTimeout(() => {\r\n          this.setState({\r\n            mode: ExpandingCardMode.expanded\r\n          });\r\n        }, this.props.expandedCardOpenDelay!);\r\n        this.props.onCardVisible && this.props.onCardVisible();\r\n      } else {\r\n        this.setState({\r\n          mode: ExpandingCardMode.compact\r\n        });\r\n        this.props.onCardHide && this.props.onCardHide();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Render\r\n  public render() {\r\n    const {\r\n      expandingCardProps,\r\n      children,\r\n      id,\r\n      setAriaDescribedBy = true,\r\n      styles: customStyles\r\n    } = this.props;\r\n    const { isHoverCardVisible, mode } = this.state;\r\n    const hoverCardId = id || getId('hoverCard');\r\n\r\n    this._styles = getStyles(customStyles);\r\n\r\n    return (\r\n      <div\r\n        className={ mergeStyles(this._styles.host) }\r\n        ref={ this._resolveRef('_hoverCard') }\r\n        aria-describedby={ setAriaDescribedBy && isHoverCardVisible ? hoverCardId : undefined }\r\n      >\r\n        { children }\r\n        { isHoverCardVisible &&\r\n          <ExpandingCard\r\n            componentRef={ this._resolveRef('_expandingCard') }\r\n            { ...getNativeProps(this.props, divProperties) }\r\n            id={ hoverCardId }\r\n            trapFocus={ !!this.props.trapFocus }\r\n            targetElement={ this._getTargetElement() }\r\n            onEnter={ this._cardOpen }\r\n            onLeave={ this._cardDismiss }\r\n            mode={ mode }\r\n            { ...expandingCardProps }\r\n          />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _getTargetElement(): HTMLElement {\r\n    const { target } = this.props;\r\n\r\n    switch (typeof target) {\r\n      case 'string':\r\n        return getDocument()!.querySelector(target as string) as HTMLElement;\r\n\r\n      case 'object':\r\n        return target as HTMLElement;\r\n\r\n      default:\r\n        return this._hoverCard;\r\n    }\r\n  }\r\n\r\n  // Show HoverCard\r\n  @autobind\r\n  private _cardOpen(ev: MouseEvent) {\r\n    if (ev.type === 'keydown' && !(ev.shiftKey && ev.which === KeyCodes.space)) {\r\n      return;\r\n    }\r\n    this._async.clearTimeout(this._dismissTimerId);\r\n    if (ev.type === 'mouseenter') {\r\n      this._currentMouseTarget = ev.currentTarget;\r\n    }\r\n\r\n    this._openTimerId = this._async.setTimeout(() => {\r\n      if (!this.state.isHoverCardVisible) {\r\n        this.setState({\r\n          isHoverCardVisible: true,\r\n          mode: ExpandingCardMode.compact\r\n        });\r\n      }\r\n    }, this.props.cardOpenDelay!);\r\n  }\r\n\r\n  // Hide HoverCard\r\n  @autobind\r\n  private _cardDismiss(ev: MouseEvent) {\r\n    if (ev.type === 'keydown' && (ev.which !== KeyCodes.escape)) {\r\n      return;\r\n    }\r\n    this._async.clearTimeout(this._openTimerId);\r\n\r\n    // Dismiss if not sticky and currentTarget is the same element that mouse last entered\r\n    if (!this.props.sticky && (this._currentMouseTarget === ev.currentTarget || (ev.which === KeyCodes.escape))) {\r\n      this._dismissTimerId = this._async.setTimeout(() => {\r\n        this.setState({\r\n          isHoverCardVisible: false,\r\n          mode: ExpandingCardMode.compact\r\n        });\r\n      }, this.props.cardDismissDelay!);\r\n    }\r\n  }\r\n\r\n  // Instant Open the card in Expanded mode\r\n  @autobind\r\n  private _instantOpenExpanded(ev: React.MouseEvent<HTMLDivElement>) {\r\n    this.setState({\r\n      isHoverCardVisible: true,\r\n      mode: ExpandingCardMode.expanded\r\n    });\r\n  }\r\n}\r\n"]}