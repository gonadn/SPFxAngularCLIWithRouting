{"version":3,"file":"ContextualMenu.Icon.Example.js","sourceRoot":"../src/","sources":["components/ContextualMenu/examples/ContextualMenu.Icon.Example.tsx"],"names":[],"mappings":";;;IAMA;QAA+C,qDAAyB;QAEtE;YAAA,YACE,iBAAO,SAIR;YAHC,KAAI,CAAC,KAAK,GAAG;gBACX,WAAW,EAAE,KAAK;aACnB,CAAC;;QACJ,CAAC;QAEM,0CAAM,GAAb;YAAA,iBA4EC;YA3EO,IAAA,oCAAW,CAAgB;YAEjC,MAAM,CAAC,CACL;gBACE,oBAAC,sBAAa,IACZ,EAAE,EAAC,uBAAuB,EAC1B,IAAI,EAAC,0BAA0B,EAC/B,SAAS,EAAG;wBACV,kBAAkB,EAAE,IAAI;wBACxB,KAAK,EAAE;4BACL;gCACE,GAAG,EAAE,SAAS;gCACd,SAAS,EAAE;oCACT,QAAQ,EAAE,KAAK;iCAChB;gCACD,IAAI,EAAE,KAAK;6BACZ;4BACD;gCACE,GAAG,EAAE,QAAQ;gCACb,OAAO,EAAE;oCACP,KAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;gCACvC,CAAC;gCACD,SAAS,EAAE;oCACT,QAAQ,EAAE,QAAQ;oCAClB,KAAK,EAAE;wCACL,KAAK,EAAE,QAAQ;qCAChB;iCACF;gCACD,IAAI,EAAE,0BAA0B;gCAChC,KAAK,EAAE,eAAe;6BACvB;4BACD;gCACE,GAAG,EAAE,WAAW;gCAChB,QAAQ,EAAE,uCAAsB,CAAC,OAAO;6BACzC;4BACD;gCACE,GAAG,EAAE,OAAO;gCACZ,SAAS,EAAE;oCACT,QAAQ,EAAE,OAAO;iCAClB;gCACD,IAAI,EAAE,OAAO;6BACd;4BACD;gCACE,GAAG,EAAE,OAAO;gCACZ,SAAS,EAAE;oCACT,QAAQ,EAAE,OAAO;iCAClB;gCACD,IAAI,EAAE,OAAO;6BACd;4BACD;gCACE,GAAG,EAAE,OAAO;gCACZ,SAAS,EAAE;oCACT,QAAQ,EAAE,uBAAuB;iCAClC;gCACD,IAAI,EAAE,OAAO;6BACd;yBACF;qBACF,GAED;gBACA,WAAW,IAAI,CACf,oBAAC,iBAAO,IACN,eAAe,EAAG,IAAI;oBACtB,yCAAyC;oBACzC,SAAS,EAAG,cAAM,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,EAArC,CAAqC;oBAEvD,oBAAC,sBAAa;oBACZ,yCAAyC;;wBAAzC,yCAAyC;wBACzC,OAAO,EAAG,cAAM,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,EAArC,CAAqC,EACrD,IAAI,EAAC,aAAa,GAClB,CACM,CACX,CACG,CACP,CAAC;QACJ,CAAC;QACH,gCAAC;IAAD,CAAC,AAtFD,CAA+C,KAAK,CAAC,SAAS,GAsF7D;IAtFY,8DAAyB","sourcesContent":["import * as React from 'react';\r\nimport { ContextualMenuItemType } from 'office-ui-fabric-react/lib/ContextualMenu';\r\nimport { Callout } from 'office-ui-fabric-react/lib/Callout';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport './ContextualMenuExample.scss';\r\n\r\nexport class ContextualMenuIconExample extends React.Component<any, any> {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showCallout: false\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    let { showCallout } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <DefaultButton\r\n          id='ContextualMenuButton2'\r\n          text='Click for ContextualMenu'\r\n          menuProps={ {\r\n            shouldFocusOnMount: true,\r\n            items: [\r\n              {\r\n                key: 'newItem',\r\n                iconProps: {\r\n                  iconName: 'Add'\r\n                },\r\n                name: 'New'\r\n              },\r\n              {\r\n                key: 'upload',\r\n                onClick: () => {\r\n                  this.setState({ showCallout: true });\r\n                },\r\n                iconProps: {\r\n                  iconName: 'Upload',\r\n                  style: {\r\n                    color: 'salmon'\r\n                  }\r\n                },\r\n                name: 'Upload (Click for popup)',\r\n                title: 'Upload a file'\r\n              },\r\n              {\r\n                key: 'divider_1',\r\n                itemType: ContextualMenuItemType.Divider\r\n              },\r\n              {\r\n                key: 'share',\r\n                iconProps: {\r\n                  iconName: 'Share'\r\n                },\r\n                name: 'Share'\r\n              },\r\n              {\r\n                key: 'print',\r\n                iconProps: {\r\n                  iconName: 'Print'\r\n                },\r\n                name: 'Print'\r\n              },\r\n              {\r\n                key: 'music',\r\n                iconProps: {\r\n                  iconName: 'MusicInCollectionFill'\r\n                },\r\n                name: 'Music',\r\n              }\r\n            ]\r\n          }\r\n          }\r\n        />\r\n        { showCallout && (\r\n          <Callout\r\n            setInitialFocus={ true }\r\n            // tslint:disable-next-line:jsx-no-lambda\r\n            onDismiss={ () => this.setState({ showCallout: false }) }\r\n          >\r\n            <DefaultButton\r\n              // tslint:disable-next-line:jsx-no-lambda\r\n              onClick={ () => this.setState({ showCallout: false }) }\r\n              text='Hello Popup'\r\n            />\r\n          </Callout>\r\n        ) }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}