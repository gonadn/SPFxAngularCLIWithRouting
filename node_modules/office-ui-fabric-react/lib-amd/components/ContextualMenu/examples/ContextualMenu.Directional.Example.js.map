{"version":3,"file":"ContextualMenu.Directional.Example.js","sourceRoot":"../src/","sources":["components/ContextualMenu/examples/ContextualMenu.Directional.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { Checkbox } from 'office-ui-fabric-react/lib/Checkbox';\r\nimport { DirectionalHint, ContextualMenuItemType } from 'office-ui-fabric-react/lib/ContextualMenu';\r\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport { autobind, getRTL } from 'office-ui-fabric-react/lib/Utilities';\r\nimport './ContextualMenuExample.scss';\r\nimport * as exampleStylesImport from '../../../common/_exampleStyles.scss';\r\nconst exampleStyles: any = exampleStylesImport;\r\n\r\nexport interface IContextualMenuDirectionalExampleState {\r\n  directionalHint?: DirectionalHint;\r\n  directionalHintForRTL?: DirectionalHint;\r\n  useDirectionalHintForRtl?: boolean;\r\n  isBeakVisible?: boolean;\r\n  gapSpace?: number;\r\n  beakWidth?: number;\r\n  edgeFixed?: boolean;\r\n}\r\n\r\nconst DIRECTION_OPTIONS = [{ key: DirectionalHint.topLeftEdge, text: 'Top Left Edge' },\r\n{ key: DirectionalHint.topCenter, text: 'Top Center' },\r\n{ key: DirectionalHint.topRightEdge, text: 'Top Right Edge' },\r\n{ key: DirectionalHint.topAutoEdge, text: 'Top Auto Edge' },\r\n{ key: DirectionalHint.bottomLeftEdge, text: 'Bottom Left Edge' },\r\n{ key: DirectionalHint.bottomCenter, text: 'Bottom Center' },\r\n{ key: DirectionalHint.bottomRightEdge, text: 'Bottom Right Edge' },\r\n{ key: DirectionalHint.bottomAutoEdge, text: 'Bottom Auto Edge' },\r\n{ key: DirectionalHint.leftTopEdge, text: 'Left Top Edge' },\r\n{ key: DirectionalHint.leftCenter, text: 'Left Center' },\r\n{ key: DirectionalHint.leftBottomEdge, text: 'Left Bottom Edge' },\r\n{ key: DirectionalHint.rightTopEdge, text: 'Right Top Edge' },\r\n{ key: DirectionalHint.rightCenter, text: 'Right Center' },\r\n{ key: DirectionalHint.rightBottomEdge, text: 'Right Bottom Edge' },\r\n];\r\n\r\nexport class ContextualMenuDirectionalExample extends React.Component<{}, IContextualMenuDirectionalExampleState> {\r\n  public refs: {\r\n    [key: string]: React.ReactInstance;\r\n    menuButton: HTMLElement;\r\n    gapSize: TextField;\r\n  };\r\n\r\n  public constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      isBeakVisible: false,\r\n      directionalHint: DirectionalHint.bottomLeftEdge,\r\n      directionalHintForRTL: DirectionalHint.bottomLeftEdge,\r\n      useDirectionalHintForRtl: false,\r\n      gapSpace: 0,\r\n      beakWidth: 20,\r\n      edgeFixed: false\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    let {\r\n      beakWidth,\r\n      directionalHint,\r\n      directionalHintForRTL,\r\n      edgeFixed,\r\n      gapSpace,\r\n      isBeakVisible,\r\n      useDirectionalHintForRtl\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className='ms-ContextualMenuDirectionalExample'>\r\n        <div className='ms-ContextualMenuDirectionalExample-configArea'>\r\n          <Checkbox\r\n            className={ exampleStyles.exampleCheckbox }\r\n            label='Show beak'\r\n            checked={ isBeakVisible }\r\n            onChange={ this._onShowBeakChange }\r\n          />\r\n          <Dropdown\r\n            label='Directional hint'\r\n            selectedKey={ directionalHint! }\r\n            options={ DIRECTION_OPTIONS }\r\n            onChanged={ this._onDirectionalChanged }\r\n          />\r\n          { getRTL() &&\r\n            <Checkbox label='Use RTL directional hint' checked={ useDirectionalHintForRtl } onChange={ this._onUseRtlHintChange } />\r\n          }\r\n          { getRTL() &&\r\n            <Dropdown\r\n              label='Directional hint for RTL'\r\n              selectedKey={ directionalHintForRTL! }\r\n              options={ DIRECTION_OPTIONS }\r\n              onChanged={ this._onDirectionalRtlChanged }\r\n              disabled={ !useDirectionalHintForRtl }\r\n            />\r\n          }\r\n        </div>\r\n        <div className='ms-ContextualMenuDirectionalExample-buttonArea' ref='menuButton'>\r\n          <DefaultButton\r\n            text='Show context menu'\r\n            menuProps={ {\r\n              isBeakVisible: isBeakVisible,\r\n              directionalHint: directionalHint,\r\n              directionalHintForRTL: useDirectionalHintForRtl ? directionalHintForRTL : undefined,\r\n              gapSpace: gapSpace,\r\n              beakWidth: beakWidth,\r\n              directionalHintFixed: edgeFixed,\r\n              items: [\r\n                {\r\n                  key: 'newItem',\r\n                  name: 'New'\r\n                },\r\n                {\r\n                  key: 'divider_1',\r\n                  itemType: ContextualMenuItemType.Divider\r\n                },\r\n                {\r\n                  key: 'rename',\r\n                  name: 'Rename'\r\n                },\r\n                {\r\n                  key: 'edit',\r\n                  name: 'Edit'\r\n                },\r\n                {\r\n                  key: 'properties',\r\n                  name: 'Properties'\r\n                },\r\n                {\r\n                  key: 'disabled',\r\n                  name: 'Disabled item',\r\n                  disabled: true\r\n                }\r\n              ]\r\n            }\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  @autobind\r\n  private _onShowBeakChange(ev: React.FormEvent<HTMLElement>, isVisible: boolean) {\r\n    this.setState({\r\n      isBeakVisible: isVisible\r\n    });\r\n  }\r\n\r\n  @autobind\r\n  private _onUseRtlHintChange(ev: React.FormEvent<HTMLElement>, isVisible: boolean) {\r\n    this.setState({\r\n      useDirectionalHintForRtl: isVisible\r\n    });\r\n  }\r\n\r\n  @autobind\r\n  private _onDirectionalChanged(option: IDropdownOption) {\r\n    this.setState({\r\n      directionalHint: option.key as number\r\n    });\r\n  }\r\n\r\n  @autobind\r\n  private _onDirectionalRtlChanged(option: IDropdownOption) {\r\n    this.setState({\r\n      directionalHintForRTL: option.key as number\r\n    });\r\n  }\r\n\r\n}\r\n"]}