{"version":3,"file":"BaseButton.styles.js","sourceRoot":"../src/","sources":["components/Button/BaseButton.styles.ts"],"names":[],"mappings":";;;IAUA,IAAM,SAAS,GAAc;QAC3B,OAAO,EAAE,CAAC;KACX,CAAC;IAEF,IAAM,SAAS,GAAG;QAChB,QAAQ,EAAE,mBAAS,CAAC,IAAI;QACxB,MAAM,EAAE,OAAO;QACf,MAAM,EAAE,MAAM;QACd,UAAU,EAAE,MAAM;QAClB,SAAS,EAAE,QAAQ;QACnB,aAAa,EAAE,QAAQ;QACvB,UAAU,EAAE,CAAC;KACd,CAAC;IAEF;;;;OAIG;IACU,QAAA,SAAS,GAAG,2BAAe,CAAC,UACvC,KAAa;QAEP,IAAA,qCAAc,CAAW;QAE/B,IAAI,MAAM,GAAG,cAAc,CAAC,YAAY,CAAC;QACzC,IAAI,kBAAkB,GAAG,cAAc,CAAC,kBAAkB,CAAC;QAC3D,IAAI,YAAY,GAAG,cAAc,CAAC,YAAY,CAAC;QAE/C,MAAM,CAAC;YACL,IAAI,EAAE;gBACJ,uBAAa,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBACxB,KAAK,CAAC,KAAK,CAAC,MAAM;gBAClB;oBACE,SAAS,EAAE,YAAY;oBACvB,MAAM,EAAE,YAAY,GAAG,MAAM;oBAC7B,UAAU,EAAE,MAAM;oBAClB,OAAO,EAAE,cAAc;oBACvB,cAAc,EAAE,MAAM;oBACtB,SAAS,EAAE,QAAQ;oBACnB,MAAM,EAAE,SAAS;oBACjB,aAAa,EAAE,KAAK;oBACpB,OAAO,EAAE,QAAQ;oBACjB,YAAY,EAAE,CAAC;iBAChB;aACF;YAED,YAAY,EAAE;gBACZ,eAAe,EAAE,kBAAkB;gBACnC,KAAK,EAAE,YAAY;gBACnB,MAAM,EAAE,SAAS;gBACjB,aAAa,EAAE,MAAM;gBACrB,SAAS,EAAE;oBACT,QAAQ,EAAE,SAAS;oBACnB,QAAQ,EAAE,SAAS;iBACpB;aACF;YAED,YAAY,EAAE;gBACZ,KAAK,EAAE,YAAY;aACpB;YAED,gBAAgB,EAAE;gBAChB,KAAK,EAAE,YAAY;aACpB;YAED,aAAa,EAAE;gBACb,OAAO,EAAE,MAAM;gBACf,MAAM,EAAE,MAAM;gBACd,QAAQ,EAAE,QAAQ;gBAClB,cAAc,EAAE,QAAQ;gBACxB,UAAU,EAAE,QAAQ;aACrB;YAED,aAAa,EAAE;gBACb,QAAQ,EAAE,CAAC;aACZ;YAED,IAAI,EAAE,SAAS;YAEf,QAAQ,EAAE;gBACR,SAAS;gBACT;oBACE,QAAQ,EAAE,mBAAS,CAAC,KAAK;iBAC1B;aACF;YAED,KAAK,EAAE;gBACL,MAAM,EAAE,OAAO;gBACf,UAAU,EAAE,MAAM;aACnB;YAED,gBAAgB,EAAE,4BAAkB;SACrC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["import { IButtonStyles } from './Button.Props';\r\nimport { memoizeFunction } from '../../Utilities';\r\nimport {\r\n  ITheme,\r\n  IRawStyle,\r\n  getFocusStyle,\r\n  FontSizes,\r\n  hiddenContentStyle\r\n} from '../../Styling';\r\n\r\nconst noOutline: IRawStyle = {\r\n  outline: 0\r\n};\r\n\r\nconst iconStyle = {\r\n  fontSize: FontSizes.icon,\r\n  margin: '0 4px',\r\n  height: '16px',\r\n  lineHeight: '16px',\r\n  textAlign: 'center',\r\n  verticalAlign: 'middle',\r\n  flexShrink: 0\r\n};\r\n\r\n/**\r\n * Gets the base button styles. Note: because it is a base class to be used with the `mergeRules`\r\n * helper, it should have values for all class names in the interface. This let `mergeRules` optimize\r\n * mixing class names together.\r\n */\r\nexport const getStyles = memoizeFunction((\r\n  theme: ITheme\r\n): IButtonStyles => {\r\n  let { semanticColors } = theme;\r\n\r\n  let border = semanticColors.buttonBorder;\r\n  let disabledBackground = semanticColors.disabledBackground;\r\n  let disabledText = semanticColors.disabledText;\r\n\r\n  return {\r\n    root: [\r\n      getFocusStyle(theme, -1),\r\n      theme.fonts.medium,\r\n      {\r\n        boxSizing: 'border-box',\r\n        border: '1px solid ' + border,\r\n        userSelect: 'none',\r\n        display: 'inline-block',\r\n        textDecoration: 'none',\r\n        textAlign: 'center',\r\n        cursor: 'pointer',\r\n        verticalAlign: 'top',\r\n        padding: '0 16px',\r\n        borderRadius: 0\r\n      }\r\n    ],\r\n\r\n    rootDisabled: {\r\n      backgroundColor: disabledBackground,\r\n      color: disabledText,\r\n      cursor: 'default',\r\n      pointerEvents: 'none',\r\n      selectors: {\r\n        ':hover': noOutline,\r\n        ':focus': noOutline\r\n      }\r\n    },\r\n\r\n    iconDisabled: {\r\n      color: disabledText\r\n    },\r\n\r\n    menuIconDisabled: {\r\n      color: disabledText\r\n    },\r\n\r\n    flexContainer: {\r\n      display: 'flex',\r\n      height: '100%',\r\n      flexWrap: 'nowrap',\r\n      justifyContent: 'center',\r\n      alignItems: 'center'\r\n    },\r\n\r\n    textContainer: {\r\n      flexGrow: 1\r\n    },\r\n\r\n    icon: iconStyle,\r\n\r\n    menuIcon: [\r\n      iconStyle,\r\n      {\r\n        fontSize: FontSizes.small\r\n      }\r\n    ],\r\n\r\n    label: {\r\n      margin: '0 4px',\r\n      lineHeight: '100%'\r\n    },\r\n\r\n    screenReaderText: hiddenContentStyle\r\n  };\r\n});\r\n"]}