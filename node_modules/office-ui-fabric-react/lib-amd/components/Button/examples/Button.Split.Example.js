define(["require", "exports", "tslib", "react", "office-ui-fabric-react/lib/Button", "office-ui-fabric-react/lib/Label", "./Button.Split.Example.styles"], function (require, exports, tslib_1, React, Button_1, Label_1, Button_Split_Example_styles_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var alertClicked = function () {
        alert('Clicked');
    };
    var ButtonSplitExample = /** @class */ (function (_super) {
        tslib_1.__extends(ButtonSplitExample, _super);
        function ButtonSplitExample() {
            return _super.call(this) || this;
        }
        ButtonSplitExample.prototype.render = function () {
            var _a = this.props, disabled = _a.disabled, checked = _a.checked;
            return (React.createElement("div", { className: 'ms-BasicButtonsTwoUp' },
                React.createElement("div", null,
                    React.createElement(Label_1.Label, null, "Standard"),
                    React.createElement(Button_1.DefaultButton, { "data-automation-id": 'test', disabled: disabled, checked: checked, text: 'Create account', onClick: alertClicked, split: true, style: { height: '35px' }, menuProps: {
                            items: [
                                {
                                    key: 'emailMessage',
                                    name: 'Email message',
                                    icon: 'Mail'
                                },
                                {
                                    key: 'calendarEvent',
                                    name: 'Calendar event',
                                    icon: 'Calendar'
                                }
                            ]
                        } })),
                React.createElement("div", null,
                    React.createElement(Label_1.Label, null, "Primary"),
                    React.createElement(Button_1.DefaultButton, { primary: true, "data-automation-id": 'test', disabled: disabled, checked: checked, text: 'Create account', onClick: alertClicked, split: true, style: { height: '35px' }, menuProps: {
                            items: [
                                {
                                    key: 'emailMessage',
                                    name: 'Email message',
                                    icon: 'Mail'
                                },
                                {
                                    key: 'calendarEvent',
                                    name: 'Calendar event',
                                    icon: 'Calendar'
                                }
                            ]
                        } })),
                React.createElement("div", null,
                    React.createElement(Label_1.Label, null, "Primary Action Disabled"),
                    React.createElement(Button_1.DefaultButton, { primary: true, "data-automation-id": 'test', disabled: disabled, primaryDisabled: true, checked: checked, text: 'Create account', onClick: alertClicked, split: true, style: { height: '35px' }, menuProps: {
                            items: [
                                {
                                    key: 'emailMessage',
                                    name: 'Email message',
                                    icon: 'Mail'
                                },
                                {
                                    key: 'calendarEvent',
                                    name: 'Calendar event',
                                    icon: 'Calendar'
                                }
                            ]
                        } }))));
        };
        return ButtonSplitExample;
    }(React.Component));
    exports.ButtonSplitExample = ButtonSplitExample;
    var ButtonSplitCustomExample = /** @class */ (function (_super) {
        tslib_1.__extends(ButtonSplitCustomExample, _super);
        function ButtonSplitCustomExample() {
            return _super.call(this) || this;
        }
        ButtonSplitCustomExample.prototype.render = function () {
            var _a = this.props, disabled = _a.disabled, checked = _a.checked;
            var customSplitButtonStyles = Button_Split_Example_styles_1.getCustomSplitButtonStyles();
            return (React.createElement("div", null,
                React.createElement(Label_1.Label, null, "Split button with icon and custom styles"),
                React.createElement(Button_1.IconButton, { "data-automation-id": 'test', disabled: disabled, checked: checked, iconProps: { iconName: 'Upload' }, text: 'Create account', onClick: alertClicked, split: true, styles: customSplitButtonStyles, menuProps: {
                        items: [
                            {
                                key: 'emailMessage',
                                name: 'Email message',
                                icon: 'Mail'
                            },
                            {
                                key: 'calendarEvent',
                                name: 'Calendar event',
                                icon: 'Calendar'
                            }
                        ]
                    } })));
        };
        return ButtonSplitCustomExample;
    }(React.Component));
    exports.ButtonSplitCustomExample = ButtonSplitCustomExample;
});
//# sourceMappingURL=Button.Split.Example.js.map