{"version":3,"file":"ActionButton.js","sourceRoot":"../src/","sources":["components/Button/ActionButton/ActionButton.tsx"],"names":[],"mappings":";;;IAOA;QAAkC,wCAA+B;QADjE;YAAA,qEAoBC;YAjBC;;eAEG;YACO,+BAAyB,GAAG,KAAK,CAAC;;QAc9C,CAAC;QAZQ,6BAAM,GAAb;YACM,IAAA,eAA8B,EAA5B,kBAAM,EAAE,gBAAK,CAAgB;YAEnC,MAAM,CAAC,CACL,oBAAC,uBAAU,uBACJ,IAAI,CAAC,KAAK,IACf,gBAAgB,EAAC,sCAAsC,EACvD,MAAM,EAAG,+BAAS,CAAC,KAAM,EAAE,MAAM,CAAC,EAClC,mBAAmB,EAAG,sBAAU,IAChC,CACH,CAAC;QACJ,CAAC;QAlBU,YAAY;YADxB,wBAAY,CAAC,cAAc,EAAE,CAAC,OAAO,CAAC,CAAC;WAC3B,YAAY,CAmBxB;QAAD,mBAAC;KAAA,AAnBD,CAAkC,yBAAa,GAmB9C;IAnBY,oCAAY","sourcesContent":["import * as React from 'react';\r\nimport { BaseButton } from '../BaseButton';\r\nimport { BaseComponent, customizable, nullRender } from '../../../Utilities';\r\nimport { IButtonProps } from '../Button.Props';\r\nimport { getStyles } from './ActionButton.styles';\r\n\r\n@customizable('ActionButton', ['theme'])\r\nexport class ActionButton extends BaseComponent<IButtonProps, {}> {\r\n\r\n  /**\r\n   * Tell BaseComponent to bypass resolution of componentRef.\r\n   */\r\n  protected _shouldUpdateComponentRef = false;\r\n\r\n  public render() {\r\n    let { styles, theme } = this.props;\r\n\r\n    return (\r\n      <BaseButton\r\n        { ...this.props }\r\n        variantClassName='ms-Button--action ms-Button--command'\r\n        styles={ getStyles(theme!, styles) }\r\n        onRenderDescription={ nullRender }\r\n      />\r\n    );\r\n  }\r\n}\r\n"]}