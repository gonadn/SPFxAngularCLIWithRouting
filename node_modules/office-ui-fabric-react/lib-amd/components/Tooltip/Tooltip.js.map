{"version":3,"file":"Tooltip.js","sourceRoot":"../src/","sources":["components/Tooltip/Tooltip.tsx"],"names":[],"mappings":";;;IAaA,IAAM,MAAM,GAAQ,YAAY,CAAC;IAGjC;QAA6B,mCAAiC;QAA9D;;QA2DA,CAAC;QA3CQ,wBAAM,GAAb;YACQ,IAAA,eASM,EARV,gCAAa,EACb,8BAAY,EACZ,oCAAe,EACf,gDAAqB,EACrB,gBAAK,EACL,UAAE,EACF,sBAAQ,EACR,uBAAuC,EAAvC,4DAAuC,CAC5B;YAEb,MAAM,CAAC,CACL,oBAAC,iBAAO,qBACN,MAAM,EAAG,aAAa,EACtB,eAAe,EAAG,eAAe,EACjC,qBAAqB,EAAG,qBAAqB,IACzC,YAAY,EACX,0BAAc,CAAC,IAAI,CAAC,KAAK,EAAE,yBAAa,CAAC,IAC9C,SAAS,EAAG,qBAAW,CACrB,YAAY,EACZ,6BAAmB,CAAC,SAAS,EAC7B,MAAM,CAAC,IAAI,EACX,CAAC,KAAK,KAAK,4BAAY,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,cAAc,EACxD,CAAC,QAAQ,KAAK,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAC7C,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,EACjD,IAAI,CAAC,KAAK,CAAC,SAAS,CACrB;gBAED,6BAAK,SAAS,EAAG,eAAG,CAAC,oBAAoB,EAAE,MAAM,CAAC,OAAO,CAAC,EAAG,EAAE,EAAG,EAAE,EAAG,IAAI,EAAC,SAAS,IACjF,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAChD,CACG,CACZ,CAAC;QACJ,CAAC;QAEO,kCAAgB,GAAxB,UAAyB,KAAoB;YAC3C,MAAM,CAAC,CACL,2BAAG,SAAS,EAAG,eAAG,CAAC,oBAAoB,EAAE,MAAM,CAAC,OAAO,CAAC,IACpD,KAAK,CAAC,OAAO,CACb,CACL,CAAC;QACJ,CAAC;QAxDD,+BAA+B;QACjB,oBAAY,GAAG;YAC3B,eAAe,mBAA2B;YAC1C,KAAK,EAAE,4BAAY,CAAC,MAAM;YAC1B,QAAQ,EAAE,OAAO;YACjB,YAAY,EAAE;gBACZ,aAAa,EAAE,IAAI;gBACnB,SAAS,EAAE,EAAE;gBACb,QAAQ,EAAE,CAAC;gBACX,eAAe,EAAE,IAAI;gBACrB,UAAU,EAAE,KAAK;aAClB;SACF,CAAC;QA6CJ,cAAC;KAAA,AA3DD,CAA6B,yBAAa,GA2DzC;IA3DY,0BAAO","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\n/* tslint:enable:no-unused-variable */\r\nimport {\r\n  BaseComponent,\r\n  css,\r\n  getNativeProps,\r\n  divProperties\r\n} from '../../Utilities';\r\nimport { ITooltipProps, TooltipDelay } from './Tooltip.Props';\r\nimport { Callout } from '../../Callout';\r\nimport { DirectionalHint } from '../../common/DirectionalHint';\r\nimport * as stylesImport from './Tooltip.scss';\r\nconst styles: any = stylesImport;\r\nimport { AnimationClassNames, mergeStyles } from '../../Styling';\r\n\r\nexport class Tooltip extends BaseComponent<ITooltipProps, any> {\r\n\r\n  // Specify default props values\r\n  public static defaultProps = {\r\n    directionalHint: DirectionalHint.topCenter,\r\n    delay: TooltipDelay.medium,\r\n    maxWidth: '364px',\r\n    calloutProps: {\r\n      isBeakVisible: true,\r\n      beakWidth: 16,\r\n      gapSpace: 0,\r\n      setInitialFocus: true,\r\n      doNotLayer: false\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    const {\r\n      targetElement,\r\n      calloutProps,\r\n      directionalHint,\r\n      directionalHintForRTL,\r\n      delay,\r\n      id,\r\n      maxWidth,\r\n      onRenderContent = this._onRenderContent\r\n  } = this.props;\r\n\r\n    return (\r\n      <Callout\r\n        target={ targetElement }\r\n        directionalHint={ directionalHint }\r\n        directionalHintForRTL={ directionalHintForRTL }\r\n        {...calloutProps}\r\n        { ...getNativeProps(this.props, divProperties) }\r\n        className={ mergeStyles(\r\n          'ms-Tooltip',\r\n          AnimationClassNames.fadeIn200,\r\n          styles.root,\r\n          (delay === TooltipDelay.medium) && styles.hasMediumDelay,\r\n          (maxWidth !== null) && { maxWidth: maxWidth },\r\n          calloutProps ? calloutProps.className : undefined,\r\n          this.props.className\r\n        ) }\r\n      >\r\n        <div className={ css('ms-Tooltip-content', styles.content) } id={ id } role='tooltip'>\r\n          { onRenderContent(this.props, this._onRenderContent) }\r\n        </div>\r\n      </Callout >\r\n    );\r\n  }\r\n\r\n  private _onRenderContent(props: ITooltipProps): JSX.Element {\r\n    return (\r\n      <p className={ css('ms-Tooltip-subText', styles.subText) }>\r\n        { props.content }\r\n      </p>\r\n    );\r\n  }\r\n}\r\n"]}