{"version":3,"file":"SwatchColorPicker.Props.js","sourceRoot":"../src/","sources":["components/SwatchColorPicker/SwatchColorPicker.Props.ts"],"names":[],"mappings":"","sourcesContent":["export interface ISwatchColorPicker { }\r\n\r\nexport interface ISwatchColorPickerProps {\r\n  /**\r\n   * Gets the component ref.\r\n   */\r\n  componentRef?: (componentRef?: ISwatchColorPicker) => void;\r\n\r\n  /**\r\n   * the number of columns for the swatch color picker\r\n   */\r\n  columnCount: number;\r\n\r\n  /**\r\n   * The id for the swatch color picker\r\n   */\r\n  id?: string;\r\n\r\n  /**\r\n   * Additional class name to provide on the root element\r\n   */\r\n  className?: string;\r\n\r\n  /**\r\n   * The shape of the color cells, defaults to circle\r\n   */\r\n  cellShape?: 'circle' | 'square';\r\n\r\n  /**\r\n   * The id of color cell that is currently selected\r\n   */\r\n  selectedId?: string;\r\n\r\n  /**\r\n   * The color cells that will be made available to the user\r\n   */\r\n  colorCells: IColorCellProps[];\r\n\r\n  /**\r\n   * Callback issued when the user changes the color.\r\n   * Note, if no id or color is given, there is no selected cell\r\n   * (e.g. the user executed the currently selected cell to unselect it)\r\n   */\r\n  onColorChanged?: (id?: string, color?: string) => void;\r\n\r\n  /**\r\n   * Callback issued when the user hovers over a color cell.\r\n   * Note, if no id or color is given, cells are not longer being hovered\r\n   */\r\n  onCellHovered?: (id?: string, color?: string) => void;\r\n\r\n  /**\r\n   * Callback issued when the user focuses a color cell.\r\n   * Note, if no id or color is given, cells are not longer being focused\r\n   */\r\n  onCellFocused?: (id?: string, color?: string) => void;\r\n\r\n  /**\r\n   * Is this swatch color picker disabled?\r\n   */\r\n  disabled?: boolean;\r\n\r\n  /**\r\n   * The optional position this grid is in the parent set (index in a parent menu, for example)\r\n   */\r\n  positionInSet?: number;\r\n\r\n  /**\r\n   * The optional size of the parent set (size of parent menu, for example)\r\n   */\r\n  setSize?: number;\r\n\r\n  /**\r\n   * Should focus cycle to the beginning of once the user navigates past the end (and visa vsersa).\r\n   * This prop is only relevant if doNotcontainWithinFocusZone is not true\r\n   * @default to true\r\n   */\r\n  shouldFocusCircularNavigate?: boolean;\r\n\r\n  /**\r\n   * If true do not contain the grid inside of a FocusZone.\r\n   * If false contain the grid inside of a FocusZone.\r\n   */\r\n  doNotContainWithinFocusZone?: boolean;\r\n}\r\n\r\nexport interface IColorCellProps {\r\n\r\n  /**\r\n   * Arbitrary unique string associated with this option\r\n   */\r\n  id: string;\r\n\r\n  /**\r\n   * The label for this item.\r\n   * Visible text if this item is a header,\r\n   * tooltip if is this item is normal\r\n   */\r\n  label?: string;\r\n\r\n  /**\r\n   * The CSS-compatible string to describe the color\r\n   */\r\n  color?: string;\r\n\r\n  /**\r\n   * Index for this option\r\n   */\r\n  index?: number;\r\n\r\n}"]}