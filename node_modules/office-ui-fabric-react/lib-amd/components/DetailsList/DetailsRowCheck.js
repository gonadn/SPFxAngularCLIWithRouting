define(["require", "exports", "tslib", "react", "../../Utilities", "../../Check", "./DetailsRowCheck.scss", "../Check/Check.scss"], function (require, exports, tslib_1, React, Utilities_1, Check_1, DetailsRowCheckStyles, CheckStylesModule) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    // tslint:disable:no-any
    var CheckStyles = CheckStylesModule;
    exports.DetailsRowCheck = function (props) {
        var _a = props.canSelect, canSelect = _a === void 0 ? false : _a, _b = props.isSelected, isSelected = _b === void 0 ? false : _b, _c = props.anySelected, anySelected = _c === void 0 ? false : _c, _d = props.selected, selected = _d === void 0 ? false : _d, _e = props.isHeader, isHeader = _e === void 0 ? false : _e, className = props.className, buttonProps = tslib_1.__rest(props, ["canSelect", "isSelected", "anySelected", "selected", "isHeader", "className"]);
        var isPressed = props.isSelected || props.selected;
        return (React.createElement("div", tslib_1.__assign({}, buttonProps, { role: 'checkbox', className: Utilities_1.css(className, 'ms-DetailsRow-check', DetailsRowCheckStyles.check, CheckStyles.checkHost, (_f = {},
                _f["ms-DetailsRow-check--isDisabled " + DetailsRowCheckStyles.isDisabled] = !props.canSelect,
                _f["ms-DetailsRow-check--isHeader " + DetailsRowCheckStyles.isHeader] = props.isHeader,
                _f)), "aria-checked": isPressed, "data-selection-toggle": true, "data-automationid": 'DetailsRowCheck' }),
            React.createElement(Check_1.Check, { checked: isPressed })));
        var _f;
    };
});
//# sourceMappingURL=DetailsRowCheck.js.map