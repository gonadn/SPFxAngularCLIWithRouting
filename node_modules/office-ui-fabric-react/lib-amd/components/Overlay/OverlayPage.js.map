{"version":3,"file":"OverlayPage.js","sourceRoot":"../src/","sources":["components/Overlay/OverlayPage.tsx"],"names":[],"mappings":";;;IAYA,IAAM,uBAAuB,GAAG,OAAO,CAAC,8FAA8F,CAAW,CAAC;IAClJ,IAAM,sBAAsB,GAAG,OAAO,CAAC,6FAA6F,CAAW,CAAC;IAEhJ;QAAiC,uCAA4C;QAA7E;;QA0DA,CAAC;QAzDQ,4BAAM,GAAb;YACE,MAAM,CAAC,CACL,oBAAC,gCAAa,IACZ,KAAK,EAAC,SAAS,EACf,aAAa,EAAC,gBAAgB,EAC9B,YAAY,EACV;oBACE,oBAAC,8BAAW,IAAC,KAAK,EAAC,OAAO,EAAC,IAAI,EAAG,uBAAuB;wBACvD,oBAAC,2CAAmB,OAAG,CACX;oBACd,oBAAC,8BAAW,IAAC,KAAK,EAAC,MAAM,EAAC,IAAI,EAAG,sBAAsB;wBACrD,oBAAC,yCAAkB,OAAG,CACV,CACV,EAER,gBAAgB,EACd,oBAAC,qCAAkB,IACjB,OAAO,EAAG;wBACR,OAAO,CAAS,4EAA4E,CAAC;qBAC9F,GACD,EAEJ,QAAQ,EACN;oBACE,gUAEI,CACA,EAER,aAAa,EACX,gCAAO,EAET,GAAG,EACD;oBACE;wBACE,kFAAwD;wBACxD,8EAAoD,CACjD,CACD,EAER,KAAK,EACH;oBACE;wBACE,uHAA6F,CAC1F,CACD,EAER,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAe,EAC5C,eAAe,EACb,oBAAC,iCAAe,uBACV,iCAAa,EACjB,GAEJ,CACH,CAAC;QACJ,CAAC;QAEH,kBAAC;IAAD,CAAC,AA1DD,CAAiC,KAAK,CAAC,SAAS,GA0D/C;IA1DY,kCAAW","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  ExampleCard,\r\n  ComponentPage,\r\n  IComponentDemoPageProps,\r\n  PropertiesTableSet\r\n} from '@uifabric/example-app-base';\r\nimport { OverlayDarkExample } from './examples/Overlay.Dark.Example';\r\nimport { OverlayLightExample } from './examples/Overlay.Light.Example';\r\nimport { ComponentStatus } from '../../demo/ComponentStatus/ComponentStatus';\r\nimport { OverlayStatus } from './Overlay.checklist';\r\n\r\nconst OverlayLightExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Overlay/examples/Overlay.Light.Example.tsx') as string;\r\nconst OverlayDarkExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Overlay/examples/Overlay.Dark.Example.tsx') as string;\r\n\r\nexport class OverlayPage extends React.Component<IComponentDemoPageProps, {}> {\r\n  public render() {\r\n    return (\r\n      <ComponentPage\r\n        title='Overlay'\r\n        componentName='OverlayExample'\r\n        exampleCards={\r\n          <div>\r\n            <ExampleCard title='Light' code={ OverlayLightExampleCode }>\r\n              <OverlayLightExample />\r\n            </ExampleCard>\r\n            <ExampleCard title='Dark' code={ OverlayDarkExampleCode }>\r\n              <OverlayDarkExample />\r\n            </ExampleCard>\r\n          </div>\r\n        }\r\n        propertiesTables={\r\n          <PropertiesTableSet\r\n            sources={ [\r\n              require<string>('!raw-loader!office-ui-fabric-react/src/components/Overlay/Overlay.Props.ts')\r\n            ] }\r\n          />\r\n        }\r\n        overview={\r\n          <div>\r\n            <p>\r\n              Overlays are used to render a semi-transparent layer on top of existing UI. Overlays help focus the user on the content that sits above the added layer and are often used to help designate a modal or blocking experience. Overlays can be seen used in conjunction with Panels and Dialogs.\r\n            </p>\r\n          </div>\r\n        }\r\n        bestPractices={\r\n          <div />\r\n        }\r\n        dos={\r\n          <div>\r\n            <ul>\r\n              <li>Use a dark Overlay with a first-run experience.</li>\r\n              <li>Use a white Overlay for dialogs and panels.</li>\r\n            </ul>\r\n          </div>\r\n        }\r\n        donts={\r\n          <div>\r\n            <ul>\r\n              <li>Use an Overlay when you want the user to interact with the UI that is being covered.</li>\r\n            </ul>\r\n          </div>\r\n        }\r\n        isHeaderVisible={ this.props.isHeaderVisible }\r\n        componentStatus={\r\n          <ComponentStatus\r\n            {...OverlayStatus}\r\n          />\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n}\r\n"]}