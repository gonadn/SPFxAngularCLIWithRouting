{"version":3,"file":"OverflowSet.js","sourceRoot":"../src/","sources":["components/OverflowSet/OverflowSet.tsx"],"names":[],"mappings":";;;IAWA,IAAM,MAAM,GAAQ,YAAY,CAAC;IAEjC;QAAiC,uCAAoC;QAArE;;QAiEA,CAAC;QA7DQ,4BAAM,GAAb;YACM,IAAA,eAQU,EAPZ,gBAAK,EACL,gCAAa,EACb,kDAAsB,EACtB,wBAAS,EACT,kCAAc,EACd,gBAAgB,EAAhB,qCAAgB,EAChB,YAAgB,EAAhB,qCAAgB,CACH;YAEf,MAAM,CAAC,CACL,oBAAC,qBAAS,uBACH,cAAc,IACnB,YAAY,EAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,EAC7C,SAAS,EAAG,qBAAW,CACrB,gBAAgB,EAChB,MAAM,CAAC,IAAI,EACX,QAAQ,IAAI,MAAM,CAAC,YAAY,EAC/B,SAAS,CACV,EACD,SAAS,EAAG,QAAQ,CAAC,CAAC,CAAC,8BAAkB,CAAC,QAAQ,CAAC,CAAC,CAAC,8BAAkB,CAAC,UAAU,EAClF,IAAI,EAAG,IAAI;gBAET,KAAK,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;gBACnC,aAAa,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,8BAA8B,CAAC,aAAa,CAAC,CACvF,CACb,CAAC;QACJ,CAAC;QAEM,2BAAK,GAAZ;YACE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACpB,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YAC1B,CAAC;QACH,CAAC;QAGO,oCAAc,GAAtB,UAAuB,KAAY;YADnC,iBAaC;YAXC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,CAAC;gBACvB,IAAI,eAAe,GAAoC,EAAE,SAAS,EAAE,eAAG,CAAC,qBAAqB,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;gBAC9G,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;oBACb,eAAe,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;gBACjC,CAAC;gBACD,MAAM,CAAC,CACL,gDAAS,eAAe,GACpB,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,CAC3B,CACP,CAAC;YACJ,CAAC,CAAC,CAAC;QACL,CAAC;QAGO,oDAA8B,GAAtC,UAAuC,KAAY;YACjD,IAAI,eAAe,GAAoC,EAAE,SAAS,EAAE,eAAG,CAAC,+BAA+B,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;YACxH,MAAM,CAAC,CACL,gDAAS,eAAe,GACpB,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,KAAK,CAAC,CACtC,CACP,CAAC;QACJ,CAAC;QAtBD;YADC,oBAAQ;yDAaR;QAGD;YADC,oBAAQ;yEAQR;QAEH,kBAAC;KAAA,AAjED,CAAiC,yBAAa,GAiE7C;IAjEY,kCAAW","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  css,\r\n  autobind,\r\n  BaseComponent\r\n} from '../../Utilities';\r\nimport { mergeStyles } from '../../Styling';\r\nimport { IOverflowSet, IOverflowSetProps } from './OverflowSet.Props';\r\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\r\n\r\nimport * as stylesImport from './OverflowSet.scss';\r\nconst styles: any = stylesImport;\r\n\r\nexport class OverflowSet extends BaseComponent<IOverflowSetProps, {}> implements IOverflowSet {\r\n\r\n  private _focusZone: FocusZone;\r\n\r\n  public render() {\r\n    let {\r\n      items,\r\n      overflowItems,\r\n      onRenderOverflowButton,\r\n      className,\r\n      focusZoneProps,\r\n      vertical = false,\r\n      role = 'menubar'\r\n    } = this.props;\r\n\r\n    return (\r\n      <FocusZone\r\n        { ...focusZoneProps }\r\n        componentRef={ this._resolveRef('_focusZone') }\r\n        className={ mergeStyles(\r\n          'ms-OverflowSet',\r\n          styles.root,\r\n          vertical && styles.rootVertical,\r\n          className\r\n        ) }\r\n        direction={ vertical ? FocusZoneDirection.vertical : FocusZoneDirection.horizontal }\r\n        role={ role }\r\n      >\r\n        { items && this._onRenderItems(items) }\r\n        { overflowItems && overflowItems.length > 0 && this._onRenderOverflowButtonWrapper(overflowItems) }\r\n      </FocusZone>\r\n    );\r\n  }\r\n\r\n  public focus() {\r\n    if (this._focusZone) {\r\n      this._focusZone.focus();\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _onRenderItems(items: any[]): JSX.Element[] {\r\n    return items.map((item, i) => {\r\n      let wrapperDivProps: React.HTMLProps<HTMLDivElement> = { className: css('ms-OverflowSet-item', styles.item) };\r\n      if (item.key) {\r\n        wrapperDivProps.key = item.key;\r\n      }\r\n      return (\r\n        <div {...wrapperDivProps}>\r\n          { this.props.onRenderItem(item) }\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  @autobind\r\n  private _onRenderOverflowButtonWrapper(items: any[]): JSX.Element {\r\n    let wrapperDivProps: React.HTMLProps<HTMLDivElement> = { className: css('ms-OverflowSet-overflowButton', styles.item) };\r\n    return (\r\n      <div {...wrapperDivProps}>\r\n        { this.props.onRenderOverflowButton(items) }\r\n      </div>\r\n    );\r\n  }\r\n\r\n}"]}