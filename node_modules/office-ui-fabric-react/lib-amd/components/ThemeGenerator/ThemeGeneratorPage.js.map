{"version":3,"file":"ThemeGeneratorPage.js","sourceRoot":"../src/","sources":["components/ThemeGenerator/ThemeGeneratorPage.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport './ThemeGeneratorPage.scss';\r\nimport {\r\n  BaseComponent,\r\n  autobind\r\n} from 'office-ui-fabric-react/lib/Utilities';\r\n\r\nimport { loadTheme } from 'office-ui-fabric-react/lib/Styling';\r\nimport {\r\n  IColor,\r\n  getContrastRatio,\r\n  updateA,\r\n  isDark,\r\n  getColorFromString\r\n} from 'office-ui-fabric-react/lib/utilities/color/index';\r\n\r\nimport {\r\n  ThemeGenerator,\r\n  themeRulesStandardCreator,\r\n  BaseSlots,\r\n  FabricSlots,\r\n  IThemeSlotRule,\r\n  IThemeRules\r\n} from 'office-ui-fabric-react/lib/ThemeGenerator';\r\n\r\nimport { Callout } from 'office-ui-fabric-react/lib/Callout';\r\nimport { ColorPicker } from 'office-ui-fabric-react/lib/ColorPicker';\r\n\r\nimport { ChoiceGroup } from 'office-ui-fabric-react/lib/ChoiceGroup';\r\nimport { TeachingBubbleBasicExample } from '../../components/TeachingBubble/examples/TeachingBubble.Basic.Example';\r\nimport { TextFieldBasicExample } from '../TextField/examples/TextField.Basic.Example';\r\nimport { ToggleBasicExample } from '../../components/Toggle/examples/Toggle.Basic.Example';\r\nimport { ProgressIndicatorBasicExample } from '../ProgressIndicator/examples/ProgressIndicator.Basic.Example';\r\n\r\nexport interface IThemeGeneratorPageState {\r\n  themeRules: IThemeRules;\r\n  colorPickerSlotRule: IThemeSlotRule | null;\r\n  colorPickerElement: HTMLElement | null;\r\n  colorPickerVisible: boolean;\r\n}\r\n\r\nconst BackgroundImageUriKey = 'backgroundImageUri';\r\nconst BackgroundOverlayKey = 'backgroundOverlay';\r\n\r\nexport class ThemeGeneratorPage extends BaseComponent<any, IThemeGeneratorPageState> {\r\n  private _semanticSlotColorChangeTimeout: number;\r\n  private _imgUrl: string;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    let themeRules = themeRulesStandardCreator();\r\n    ThemeGenerator.insureSlots(themeRules, isDark(themeRules[BaseSlots[BaseSlots.backgroundColor]].color!));\r\n\r\n    this.state = {\r\n      themeRules: themeRules,\r\n      colorPickerSlotRule: null,\r\n      colorPickerElement: null,\r\n      colorPickerVisible: false\r\n    };\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    // remove temp styles\r\n    let root = document.querySelector('.App-content') as HTMLElement;\r\n    if (root) {\r\n      root.style.backgroundColor = '';\r\n      root.style.color = '';\r\n    }\r\n    document.body.style.backgroundColor = '';\r\n    document.body.style.color = '';\r\n\r\n    // and apply the default theme to overwrite any existing custom theme\r\n    let themeRules = themeRulesStandardCreator();\r\n    ThemeGenerator.insureSlots(themeRules, false);\r\n    loadTheme({ palette: themeRules });\r\n  }\r\n\r\n  public render() {\r\n    let { colorPickerVisible, colorPickerSlotRule, colorPickerElement } = this.state;\r\n\r\n    let fabricThemeSlots =\r\n      [this._fabricSlotWidget(FabricSlots.themeDarker),\r\n      this._fabricSlotWidget(FabricSlots.themeDark),\r\n      this._fabricSlotWidget(FabricSlots.themeDarkAlt),\r\n      this._fabricSlotWidget(FabricSlots.themePrimary),\r\n      this._fabricSlotWidget(FabricSlots.themeSecondary),\r\n      this._fabricSlotWidget(FabricSlots.themeTertiary),\r\n      this._fabricSlotWidget(FabricSlots.themeLight),\r\n      this._fabricSlotWidget(FabricSlots.themeLighter),\r\n      this._fabricSlotWidget(FabricSlots.themeLighterAlt)];\r\n    let fabricNeutralForegroundSlots =\r\n      [this._fabricSlotWidget(FabricSlots.black),\r\n      this._fabricSlotWidget(FabricSlots.neutralDark),\r\n      this._fabricSlotWidget(FabricSlots.neutralPrimary),\r\n      this._fabricSlotWidget(FabricSlots.neutralSecondary),\r\n      this._fabricSlotWidget(FabricSlots.neutralTertiary)\r\n      ];\r\n    let fabricNeutralBackgroundSlots =\r\n      [this._fabricSlotWidget(FabricSlots.neutralTertiaryAlt),\r\n      this._fabricSlotWidget(FabricSlots.neutralQuaternary),\r\n      this._fabricSlotWidget(FabricSlots.neutralQuaternaryAlt),\r\n      this._fabricSlotWidget(FabricSlots.neutralLight),\r\n      this._fabricSlotWidget(FabricSlots.neutralLighter),\r\n      this._fabricSlotWidget(FabricSlots.neutralLighterAlt),\r\n      this._fabricSlotWidget(FabricSlots.white)];\r\n\r\n    return (\r\n      <div className='ms-themer'>\r\n        <p>\r\n          This tool helps you easily create all the shades and slots for a custom theme.\r\n          The theme can be used by Fabric React's styling package, see the <a href='https://github.com/OfficeDev/office-ui-fabric-react/tree/master/packages/styling'>documentation</a>.\r\n          <br />\r\n          As you modify one of the three base colors, the theme will update automatically based on predefined rules. You can modify each individual slot below as well.\r\n        </p>\r\n\r\n        {/* Hello! You've found hidden functionality for generating a theme from an image. This uses Microsoft's\r\n          * Cognitive Vision API, documented here:\r\n          * https://docs.microsoft.com/en-us/azure/cognitive-services/computer-vision/quickstarts/javascript\r\n          * We use that API to identify the most prominent background and foreground colors, and the accent color,\r\n          * and generate a theme based off of those.\r\n          * Since this API requires a personal subscription key, you'll have to enlist and insert your subscription\r\n          * key in _makeThemeFromImg() below. Then, just uncomment this section. */}\r\n        {/*}\r\n        <div style={ { display: 'flex' } }>\r\n          <div>URL to image:&nbsp;</div>\r\n          <input type='text' id='imageUrl' />\r\n          <button onClick={ this._makeThemeFromImg }>Create theme from image</button>\r\n        </div>\r\n        <div id='imageDescription' />\r\n        <div><img id='imagePreview' style={ { maxHeight: '500px', maxWidth: '800px' } } /></div>\r\n        {*/}\r\n\r\n        {/* the shared popup color picker for slots */ }\r\n        { colorPickerVisible && colorPickerSlotRule !== null && colorPickerSlotRule !== undefined && colorPickerElement &&\r\n          <Callout\r\n            key={ colorPickerSlotRule.name }\r\n            gapSpace={ 10 }\r\n            target={ colorPickerElement }\r\n            setInitialFocus={ true }\r\n            onDismiss={ this._colorPickerOnDismiss }\r\n          >\r\n            <ColorPicker\r\n              color={ colorPickerSlotRule.color!.str }\r\n              onColorChanged={ this._semanticSlotRuleChanged.bind(this, colorPickerSlotRule) }\r\n            />\r\n          </Callout>\r\n        }\r\n\r\n        {/* the three base slots, prominently displayed at the top of the page */ }\r\n        <div style={ { display: 'flex' } }>\r\n          { [this._baseColorSlotPicker(BaseSlots.primaryColor, 'Primary theme color'),\r\n          this._baseColorSlotPicker(BaseSlots.foregroundColor, 'Body text color'),\r\n          this._baseColorSlotPicker(BaseSlots.backgroundColor, 'Body background color')] }\r\n        </div>\r\n        <br />\r\n\r\n        { this._outputSection() }\r\n        <br />\r\n\r\n        <h2>Fabric Palette</h2>\r\n        <p>The original Fabric palette slots. These are raw colors with no prescriptive uses. Each one is a shade or tint of a base color.</p>\r\n        <div className={ 'ms-themer-fabricPalette-root' }>\r\n          <div>{ fabricThemeSlots }</div>\r\n          <div>\r\n            <p>generally used for text and foregrounds</p>\r\n            { fabricNeutralForegroundSlots }\r\n          </div>\r\n          <div>\r\n            <p>generally used for backgrounds</p>\r\n            { fabricNeutralBackgroundSlots }\r\n          </div>\r\n        </div>\r\n        <br />\r\n\r\n        <h3>Samples</h3>\r\n        { <div style={ { display: 'flex', flexDirection: 'row' } }>\r\n          <div className='ms-themer-example'>\r\n            <TextFieldBasicExample />\r\n          </div>\r\n          <div className='ms-themer-example'>\r\n            <ToggleBasicExample />\r\n            <ChoiceGroup\r\n              options={ [\r\n                {\r\n                  key: 'A',\r\n                  text: 'Option A'\r\n                },\r\n                {\r\n                  key: 'B',\r\n                  text: 'Option B',\r\n                  checked: true\r\n                }] }\r\n              label='Pick one'\r\n              required={ true }\r\n            />,\r\n            <ChoiceGroup\r\n              options={ [\r\n                {\r\n                  key: 'C',\r\n                  text: 'Option C',\r\n                  disabled: true\r\n                },\r\n                {\r\n                  key: 'D',\r\n                  text: 'Option D',\r\n                  checked: true,\r\n                  disabled: true\r\n                }] }\r\n              label='Pick one'\r\n              required={ true }\r\n            />\r\n          </div>\r\n          <div className='ms-themer-example'>\r\n            <TeachingBubbleBasicExample />\r\n            <br />\r\n            <ProgressIndicatorBasicExample />\r\n          </div>\r\n        </div> }\r\n\r\n        <h3>Accessibility</h3>\r\n        <p>Each pair of colors below should produce legible text and have a minimum contrast ratio of 4.5.</p>\r\n        <table className='ms-themer-accessibilityTable'>\r\n          <thead>\r\n            <td>Sample text</td>\r\n            <td>Contrast ratio</td>\r\n            <td>Slot pair</td>\r\n          </thead>\r\n          <tbody>\r\n            { [this._accessibilityRow(FabricSlots.neutralPrimary, FabricSlots.white)] }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  @autobind\r\n  /* tslint:disable:no-unused-variable */\r\n  private _makeThemeFromImg() {\r\n    /* tslint:enable:no-unused-variable */\r\n    this._imgUrl = (document.getElementById('imageUrl') as HTMLInputElement).value;\r\n    (document.getElementById('imagePreview') as HTMLImageElement).src = this._imgUrl;\r\n\r\n    if (this._imgUrl) {\r\n      let xhr = new XMLHttpRequest();\r\n      xhr.addEventListener('load', this._cognitiveVisionCallback.bind(this));\r\n      // you may need to change the URL here\r\n      xhr.open('POST', 'https://westus.api.cognitive.microsoft.com/vision/v1.0/analyze?visualFeatures=Description%2CColor&details=&language=en');\r\n      xhr.setRequestHeader('Content-Type', 'application/json');\r\n      alert('You forgot to set the subscription key!');\r\n      xhr.setRequestHeader('Ocp-Apim-Subscription-Key', 'YourSubscriptionKeyHere'); // put your subscription key here\r\n      xhr.send('{ \"url\": \"' + this._imgUrl + '\" }');\r\n    } else {\r\n      // remove related properties from theme\r\n      let { themeRules } = this.state;\r\n      if (themeRules.hasOwnProperty(BackgroundImageUriKey)) {\r\n        delete themeRules[BackgroundImageUriKey];\r\n      }\r\n      if (themeRules.hasOwnProperty(BackgroundOverlayKey)) {\r\n        delete themeRules[BackgroundOverlayKey];\r\n      }\r\n      this.setState({ themeRules: themeRules }, this._makeNewTheme);\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _cognitiveVisionCallback(e: any) {\r\n    const xhr = e.target;\r\n    if (xhr.status === 200) {\r\n      const response = JSON.parse(xhr.response);\r\n\r\n      document.getElementById('imageDescription')!.innerHTML = response.description.captions[0].text;\r\n\r\n      /* API returns:\r\n       response.color.accentColor\r\n       response.color.dominantColorBackground\r\n       response.color.dominantColorForeground */\r\n\r\n      // converts a returned color from a word into a hex value conforming to our palette\r\n      const getHexFromColor = (color: string, isBg: boolean) => {\r\n        // todo: could use more logic based on isInverted and isBg\r\n        switch (color.toLowerCase()) {\r\n          case 'black': return '#1f1f1f';\r\n          case 'blue': return '#0078d7';\r\n          case 'brown': return '#754d12';\r\n          case 'gray':\r\n          case 'grey': return isBg ? '#444' : '#ccc';\r\n          case 'green': return '#107c10';\r\n          case 'orange': return '#ff8c00';\r\n          case 'pink': return '#e3008c';\r\n          case 'purple': return '#5c2d91';\r\n          case 'red': return '#e81123';\r\n          case 'teal': return '#008272';\r\n          case 'white': return '#fff';\r\n          case 'yellow': return '#fff100';\r\n        }\r\n        alert('Error: Unexpected color passed to getHexFromColor(): ' + color);\r\n        return '#fff';\r\n      };\r\n\r\n      let { themeRules } = this.state;\r\n      const bgColor = getHexFromColor(response.color.dominantColorBackground, true);\r\n      const bgColorIsDark = isDark(getColorFromString(bgColor)!);\r\n      ThemeGenerator.setSlot(\r\n        themeRules[BaseSlots[BaseSlots.backgroundColor]],\r\n        bgColor,\r\n        bgColorIsDark,\r\n        true,\r\n        true);\r\n      ThemeGenerator.setSlot(\r\n        themeRules[BaseSlots[BaseSlots.primaryColor]],\r\n        '#' + response.color.accentColor,\r\n        bgColorIsDark,\r\n        true,\r\n        true);\r\n      ThemeGenerator.setSlot(\r\n        themeRules[BaseSlots[BaseSlots.foregroundColor]],\r\n        getHexFromColor(response.color.dominantColorForeground, false),\r\n        bgColorIsDark,\r\n        true,\r\n        true);\r\n\r\n      themeRules[BackgroundImageUriKey] = {\r\n        name: BackgroundImageUriKey,\r\n        value: 'url(\\'' + this._imgUrl + '\\')',\r\n        dependentRules: []\r\n      };\r\n      themeRules[BackgroundOverlayKey] = {\r\n        name: BackgroundOverlayKey,\r\n        color: updateA((themeRules[BaseSlots[BaseSlots.backgroundColor]]).color!, 50),\r\n        dependentRules: []\r\n      };\r\n\r\n      this.setState({ themeRules: themeRules }, this._makeNewTheme);\r\n\r\n    } else {\r\n      alert('Error ' + xhr.status + ': ' + xhr.statusText);\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _colorPickerOnDismiss() {\r\n    this.setState({ colorPickerVisible: false });\r\n  }\r\n\r\n  @autobind\r\n  private _semanticSlotRuleChanged(slotRule: IThemeSlotRule, color: string) {\r\n    if (this._semanticSlotColorChangeTimeout) {\r\n      clearTimeout(this._semanticSlotColorChangeTimeout);\r\n    }\r\n    this._semanticSlotColorChangeTimeout = this._async.setTimeout(() => {\r\n      let { themeRules } = this.state;\r\n\r\n      ThemeGenerator.setSlot(slotRule, color, isDark(themeRules[BaseSlots[BaseSlots.backgroundColor]].color!), true, true);\r\n      this.setState({ themeRules: themeRules }, this._makeNewTheme);\r\n    }, 20);\r\n    // 20ms is low enough that you can slowly drag to change color and see that theme,\r\n    // but high enough that quick changes don't get bogged down by a million changes inbetween\r\n  }\r\n\r\n  @autobind\r\n  private _onSwatchClick(slotRule: IThemeSlotRule, ev: React.MouseEvent<HTMLElement>) {\r\n    let { colorPickerSlotRule, colorPickerElement } = this.state;\r\n\r\n    if (colorPickerSlotRule !== null && colorPickerSlotRule !== undefined && !!colorPickerElement && colorPickerSlotRule === slotRule && colorPickerElement === ev.target) { // same one, close it\r\n      this.setState({ colorPickerVisible: false, colorPickerSlotRule: null, colorPickerElement: null });\r\n    } else { // new one, open it\r\n      this.setState({ colorPickerVisible: true, colorPickerSlotRule: slotRule, colorPickerElement: ev.target as HTMLElement });\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _slotWidget(slotRule: IThemeSlotRule) {\r\n    return (\r\n      <div key={ slotRule.name } className='ms-themer-slot'>\r\n        { this._colorSquareSwatchWidget(slotRule) }\r\n        <div>\r\n          <div>{ slotRule.name }</div>\r\n          { !slotRule.isCustomized ?\r\n            <div>Inherits from: { slotRule.inherits!.name }</div>\r\n            : <div>Customized</div> }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  @autobind\r\n  private _fabricSlotWidget(fabricSlot: FabricSlots) {\r\n    return this._slotWidget(this.state.themeRules[FabricSlots[fabricSlot]]);\r\n  }\r\n\r\n  private _colorSquareSwatchWidget(slotRule: IThemeSlotRule) {\r\n    return (\r\n      <div\r\n        key={ slotRule.name }\r\n        className='ms-themer-swatch'\r\n        style={ { backgroundColor: slotRule.color!.str } }\r\n        onClick={ this._onSwatchClick.bind(this, slotRule) }\r\n      />\r\n    );\r\n  }\r\n\r\n  @autobind\r\n  private _accessibilityRow(foreground: FabricSlots, background: FabricSlots) {\r\n    let themeRules = this.state.themeRules;\r\n    let bgc: IColor = themeRules[FabricSlots[background]].color!;\r\n    let fgc: IColor = themeRules[FabricSlots[foreground]].color!;\r\n\r\n    let contrastRatio = getContrastRatio(bgc, fgc);\r\n    let contrastRatioString = String(contrastRatio);\r\n    contrastRatioString = contrastRatioString.substr(0, contrastRatioString.indexOf('.') + 3);\r\n    if (contrastRatio < 4.5) {\r\n      contrastRatioString = '**' + contrastRatioString + '**';\r\n    }\r\n\r\n    return (\r\n      <tr key={ String(foreground) + String(background) }>\r\n        <td style={ { backgroundColor: bgc.str, color: fgc.str } }>The quick brown fox jumps over the lazy dog.</td>\r\n        <td>{ contrastRatioString }</td>\r\n        <td>{ FabricSlots[foreground] + ' + ' + FabricSlots[background] }</td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  @autobind\r\n  private _outputSection() {\r\n    const themeRules = this.state.themeRules;\r\n\r\n    // strip out the unnecessary shade slots from the final output theme\r\n    let abridgedTheme: IThemeRules = {};\r\n    for (let ruleName in themeRules) {\r\n      if (themeRules.hasOwnProperty(ruleName)) {\r\n        if (ruleName.indexOf('ColorShade') === -1 && ruleName !== 'primaryColor' && ruleName !== 'backgroundColor' && ruleName !== 'foregroundColor') {\r\n          abridgedTheme[ruleName] = themeRules[ruleName];\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h2>Output</h2>\r\n        <div className={ 'ms-themer-output-root' }>\r\n          <div>\r\n            <h3>JSON</h3>\r\n            <textarea\r\n              readOnly={ true }\r\n              spellCheck={ false }\r\n              value={ JSON.stringify(ThemeGenerator.getThemeAsJson(abridgedTheme), void 0, 2) }\r\n            />\r\n          </div>\r\n          <div>\r\n            <h3>SASS</h3>\r\n            <textarea\r\n              readOnly={ true }\r\n              spellCheck={ false }\r\n              value={ ThemeGenerator.getThemeAsSass(abridgedTheme) }\r\n            />\r\n          </div>\r\n          <div>\r\n            <h3>PowerShell</h3>\r\n            <textarea\r\n              readOnly={ true }\r\n              spellCheck={ false }\r\n              value={ ThemeGenerator.getThemeForPowerShell(abridgedTheme) }\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  @autobind\r\n  private _makeNewTheme() {\r\n    let themeAsJson: { [key: string]: string } = ThemeGenerator.getThemeAsJson(this.state.themeRules);\r\n    console.log('New theme...', themeAsJson);\r\n\r\n    let root = document.querySelector('.App-content') as HTMLElement;\r\n    if (root) {\r\n      root.style.backgroundColor = themeAsJson.backgroundColor;\r\n      root.style.color = themeAsJson.bodyText;\r\n    }\r\n    document.body.style.backgroundColor = themeAsJson.backgroundColor;\r\n    document.body.style.color = themeAsJson.bodyText;\r\n    loadTheme({ palette: themeAsJson });\r\n  }\r\n\r\n  @autobind\r\n  private _baseColorSlotPicker(baseSlot: BaseSlots, title: string) {\r\n    let colorChangeTimeout: number;\r\n\r\n    function _onColorChanged(newColor: string) {\r\n      if (colorChangeTimeout) {\r\n        clearTimeout(colorChangeTimeout);\r\n      }\r\n      colorChangeTimeout = this._async.setTimeout(() => {\r\n        let themeRules = this.state.themeRules;\r\n        const currentIsDark = isDark(themeRules[BaseSlots[BaseSlots.backgroundColor]].color!);\r\n        ThemeGenerator.setSlot(\r\n          themeRules[BaseSlots[baseSlot]],\r\n          newColor,\r\n          currentIsDark,\r\n          true,\r\n          true);\r\n        if (currentIsDark !== isDark(themeRules[BaseSlots[BaseSlots.backgroundColor]].color!)) {\r\n          // isInverted got swapped, so need to refresh slots with new shading rules\r\n          ThemeGenerator.insureSlots(themeRules, !currentIsDark);\r\n        }\r\n        this.setState({ themeRules: themeRules }, this._makeNewTheme);\r\n      }, 20);\r\n      // 20ms is low enough that you can slowly drag to change color and see that theme,\r\n      // but high enough that quick changes don't get bogged down by a million changes inbetween\r\n    }\r\n\r\n    return (\r\n      <div className='ms-themer-paletteSlot' key={ baseSlot }>\r\n        <h3>{ title }</h3>\r\n        <div>\r\n          <ColorPicker\r\n            key={ 'baseslotcolorpicker' + baseSlot }\r\n            color={ this.state.themeRules[BaseSlots[baseSlot]].color!.str }\r\n            /* tslint:disable:jsx-no-bind */\r\n            onColorChanged={ _onColorChanged.bind(this) }\r\n          /* tslint:enable:jsx-no-bind */\r\n          />\r\n        </div>\r\n        <div className='ms-themer-swatchBg' style={ { backgroundColor: this.state.themeRules[BaseSlots[baseSlot]].color!.str } }>\r\n          <div className='ms-themer-swatch' style={ { backgroundColor: this.state.themeRules[BaseSlots[baseSlot]].color!.str } } />\r\n          { [this._colorSquareSwatchWidget(this.state.themeRules[BaseSlots[baseSlot] + 'Shade1']),\r\n          this._colorSquareSwatchWidget(this.state.themeRules[BaseSlots[baseSlot] + 'Shade2']),\r\n          this._colorSquareSwatchWidget(this.state.themeRules[BaseSlots[baseSlot] + 'Shade3']),\r\n          this._colorSquareSwatchWidget(this.state.themeRules[BaseSlots[baseSlot] + 'Shade4']),\r\n          this._colorSquareSwatchWidget(this.state.themeRules[BaseSlots[baseSlot] + 'Shade5']),\r\n          this._colorSquareSwatchWidget(this.state.themeRules[BaseSlots[baseSlot] + 'Shade6']),\r\n          this._colorSquareSwatchWidget(this.state.themeRules[BaseSlots[baseSlot] + 'Shade7']),\r\n          this._colorSquareSwatchWidget(this.state.themeRules[BaseSlots[baseSlot] + 'Shade8'])] }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}"]}