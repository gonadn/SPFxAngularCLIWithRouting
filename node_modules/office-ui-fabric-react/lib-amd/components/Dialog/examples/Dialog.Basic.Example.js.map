{"version":3,"file":"Dialog.Basic.Example.js","sourceRoot":"../src/","sources":["components/Dialog/examples/Dialog.Basic.Example.tsx"],"names":[],"mappings":";;;IAMA;QAAwC,8CAAyB;QAE/D;YAAA,YACE,iBAAO,SAIR;YAHC,KAAI,CAAC,KAAK,GAAG;gBACX,UAAU,EAAE,IAAI;aACjB,CAAC;;QACJ,CAAC;QAEM,mCAAM,GAAb;YACE,MAAM,CAAC,CACL;gBACE,oBAAC,sBAAa,IACZ,WAAW,EAAC,yBAAyB,EACrC,OAAO,EAAG,IAAI,CAAC,WAAW,EAC1B,IAAI,EAAC,aAAa,GAClB;gBACF,+BAAO,EAAE,EAAC,WAAW,EAAC,SAAS,EAAC,kBAAkB,sBAAwB;gBAC1E,+BAAO,EAAE,EAAC,aAAa,EAAC,SAAS,EAAC,kBAAkB,4BAA8B;gBAElF,oBAAC,eAAM,IACL,MAAM,EAAG,IAAI,CAAC,KAAK,CAAC,UAAU,EAC9B,SAAS,EAAG,IAAI,CAAC,YAAY,EAC7B,kBAAkB,EAAG;wBACnB,IAAI,EAAE,mBAAU,CAAC,MAAM;wBACvB,KAAK,EAAE,qBAAqB;wBAC5B,OAAO,EAAE,4GAA4G;qBACtH,EACD,UAAU,EAAG;wBACX,WAAW,EAAE,WAAW;wBACxB,cAAc,EAAE,aAAa;wBAC7B,UAAU,EAAE,KAAK;wBACjB,kBAAkB,EAAE,uBAAuB;qBAC5C;oBAEC,IAAI,CAAC,qEAAqE;oBAC5E,oBAAC,qBAAY;wBACX,oBAAC,sBAAa,IAAC,OAAO,EAAG,IAAI,CAAC,YAAY,EAAG,IAAI,EAAC,MAAM,GAAG;wBAC3D,oBAAC,sBAAa,IAAC,OAAO,EAAG,IAAI,CAAC,YAAY,EAAG,IAAI,EAAC,QAAQ,GAAG,CAChD,CACR,CACL,CACP,CAAC;QACJ,CAAC;QAGO,wCAAW,GAAnB;YACE,IAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;QACvC,CAAC;QAGO,yCAAY,GAApB;YACE,IAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;QACtC,CAAC;QAPD;YADC,oBAAQ;6DAGR;QAGD;YADC,oBAAQ;8DAGR;QACH,yBAAC;KAAA,AAtDD,CAAwC,KAAK,CAAC,SAAS,GAsDtD;IAtDY,gDAAkB","sourcesContent":["import * as React from 'react';\r\nimport { autobind } from '../../../Utilities';\r\nimport { Dialog, DialogType, DialogFooter } from 'office-ui-fabric-react/lib/Dialog';\r\nimport { PrimaryButton, DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport './Dialog.Basic.Example.scss';\r\n\r\nexport class DialogBasicExample extends React.Component<any, any> {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      hideDialog: true\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        <DefaultButton\r\n          description='Opens the Sample Dialog'\r\n          onClick={ this._showDialog }\r\n          text='Open Dialog'\r\n        />\r\n        <label id='myLabelId' className='screenReaderOnly'>My sample Label</label>\r\n        <label id='mySubTextId' className='screenReaderOnly'>My Sample description</label>\r\n\r\n        <Dialog\r\n          hidden={ this.state.hideDialog }\r\n          onDismiss={ this._closeDialog }\r\n          dialogContentProps={ {\r\n            type: DialogType.normal,\r\n            title: 'All emails together',\r\n            subText: 'Your Inbox has changed. No longer does it include favorites, it is a singular destination for your emails.'\r\n          } }\r\n          modalProps={ {\r\n            titleAriaId: 'myLabelId',\r\n            subtitleAriaId: 'mySubTextId',\r\n            isBlocking: false,\r\n            containerClassName: 'ms-dialogMainOverride'\r\n          } }\r\n        >\r\n          { null /** You can also include null values as the result of conditionals */ }\r\n          <DialogFooter>\r\n            <PrimaryButton onClick={ this._closeDialog } text='Save' />\r\n            <DefaultButton onClick={ this._closeDialog } text='Cancel' />\r\n          </DialogFooter>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  @autobind\r\n  private _showDialog() {\r\n    this.setState({ hideDialog: false });\r\n  }\r\n\r\n  @autobind\r\n  private _closeDialog() {\r\n    this.setState({ hideDialog: true });\r\n  }\r\n}\r\n"]}