define(["require", "exports", "tslib", "react", "../../../Utilities", "office-ui-fabric-react/lib/Dialog", "office-ui-fabric-react/lib/Button", "./Dialog.Basic.Example.scss"], function (require, exports, tslib_1, React, Utilities_1, Dialog_1, Button_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var DialogBasicExample = /** @class */ (function (_super) {
        tslib_1.__extends(DialogBasicExample, _super);
        function DialogBasicExample() {
            var _this = _super.call(this) || this;
            _this.state = {
                hideDialog: true
            };
            return _this;
        }
        DialogBasicExample.prototype.render = function () {
            return (React.createElement("div", null,
                React.createElement(Button_1.DefaultButton, { description: 'Opens the Sample Dialog', onClick: this._showDialog, text: 'Open Dialog' }),
                React.createElement("label", { id: 'myLabelId', className: 'screenReaderOnly' }, "My sample Label"),
                React.createElement("label", { id: 'mySubTextId', className: 'screenReaderOnly' }, "My Sample description"),
                React.createElement(Dialog_1.Dialog, { hidden: this.state.hideDialog, onDismiss: this._closeDialog, dialogContentProps: {
                        type: Dialog_1.DialogType.normal,
                        title: 'All emails together',
                        subText: 'Your Inbox has changed. No longer does it include favorites, it is a singular destination for your emails.'
                    }, modalProps: {
                        titleAriaId: 'myLabelId',
                        subtitleAriaId: 'mySubTextId',
                        isBlocking: false,
                        containerClassName: 'ms-dialogMainOverride'
                    } },
                    null /** You can also include null values as the result of conditionals */,
                    React.createElement(Dialog_1.DialogFooter, null,
                        React.createElement(Button_1.PrimaryButton, { onClick: this._closeDialog, text: 'Save' }),
                        React.createElement(Button_1.DefaultButton, { onClick: this._closeDialog, text: 'Cancel' })))));
        };
        DialogBasicExample.prototype._showDialog = function () {
            this.setState({ hideDialog: false });
        };
        DialogBasicExample.prototype._closeDialog = function () {
            this.setState({ hideDialog: true });
        };
        tslib_1.__decorate([
            Utilities_1.autobind
        ], DialogBasicExample.prototype, "_showDialog", null);
        tslib_1.__decorate([
            Utilities_1.autobind
        ], DialogBasicExample.prototype, "_closeDialog", null);
        return DialogBasicExample;
    }(React.Component));
    exports.DialogBasicExample = DialogBasicExample;
});
//# sourceMappingURL=Dialog.Basic.Example.js.map