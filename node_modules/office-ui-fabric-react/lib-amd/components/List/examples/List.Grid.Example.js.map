{"version":3,"file":"List.Grid.Example.js","sourceRoot":"../src/","sources":["components/List/examples/List.Grid.Example.tsx"],"names":[],"mappings":";;;IAWA,IAAM,aAAa,GAAG,CAAC,CAAC;IACxB,IAAM,cAAc,GAAG,GAAG,CAAC;IAE3B;QAAqC,2CAA2C;QAM9E;YAAA,YACE,iBAAO,SAKR;YAHC,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,KAAI,CAAC,oBAAoB,GAAG,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YACjE,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;QACvD,CAAC;QAEM,gCAAM,GAAb;YACE,MAAM,CAAC,CACL,oBAAC,qBAAS;gBACR,oBAAC,WAAI,IACH,SAAS,EAAC,oBAAoB,EAC9B,KAAK,EAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EACxB,mBAAmB,EAAG,IAAI,CAAC,oBAAoB,EAC/C,aAAa,EAAG,IAAI,CAAC,cAAc,EACnC,oBAAoB,EAAG,CAAC,EACxB,YAAY,EAAG,IAAI,CAAC,aAAa,GACjC,CACQ,CACb,CAAC;QACJ,CAAC;QAEO,8CAAoB,GAA5B,UAA6B,SAAiB,EAAE,WAAuB;YACrE,EAAE,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC,CAAC;gBACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,cAAc,CAAC,CAAC;gBAClE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;gBACtE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;YACtC,CAAC;YAED,MAAM,CAAC,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC;QAC3C,CAAC;QAEO,wCAAc,GAAtB,UAAuB,SAAiB,EAAE,WAAuB;YAC/D,MAAM,CAAC,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC;QACzC,CAAC;QAGO,uCAAa,GAArB,UAAsB,IAAS,EAAE,KAAyB;YACxD,MAAM,CAAC,CACL,6BACE,SAAS,EAAC,yBAAyB,uBACf,IAAI,EACxB,KAAK,EAAG;oBACN,KAAK,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,GAAG;iBACvC;gBAED,6BAAK,SAAS,EAAC,0BAA0B;oBACvC,6BAAK,SAAS,EAAC,0BAA0B;wBACvC,6BAAK,GAAG,EAAG,IAAI,CAAC,SAAS,EAAG,SAAS,EAAC,0BAA0B,GAAG;wBACnE,8BAAM,SAAS,EAAC,0BAA0B,IACtC,UAAQ,KAAO,CACZ,CACH,CACF,CACF,CACP,CAAC;QACJ,CAAC;QAnBD;YADC,oBAAQ;4DAoBR;QACH,sBAAC;KAAA,AAhED,CAAqC,KAAK,CAAC,SAAS,GAgEnD;IAhEY,0CAAe","sourcesContent":["import * as React from 'react';\r\nimport { FocusZone } from 'office-ui-fabric-react/lib/FocusZone';\r\nimport { List } from 'office-ui-fabric-react/lib/List';\r\nimport './List.Grid.Example.scss';\r\nimport { IRectangle } from '../../../Utilities';\r\nimport { autobind } from 'office-ui-fabric-react/lib/Utilities';\r\n\r\nexport interface IListGridExampleProps {\r\n  items: any[];\r\n}\r\n\r\nconst ROWS_PER_PAGE = 3;\r\nconst MAX_ROW_HEIGHT = 250;\r\n\r\nexport class ListGridExample extends React.Component<IListGridExampleProps, any> {\r\n  private _positions: any;\r\n  private _columnCount: number;\r\n  private _columnWidth: number;\r\n  private _rowHeight: number;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this._positions = {};\r\n    this._getItemCountForPage = this._getItemCountForPage.bind(this);\r\n    this._getPageHeight = this._getPageHeight.bind(this);\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <FocusZone>\r\n        <List\r\n          className='ms-ListGridExample'\r\n          items={ this.props.items }\r\n          getItemCountForPage={ this._getItemCountForPage }\r\n          getPageHeight={ this._getPageHeight }\r\n          renderedWindowsAhead={ 4 }\r\n          onRenderCell={ this._onRenderCell }\r\n        />\r\n      </FocusZone>\r\n    );\r\n  }\r\n\r\n  private _getItemCountForPage(itemIndex: number, surfaceRect: IRectangle) {\r\n    if (itemIndex === 0) {\r\n      this._columnCount = Math.ceil(surfaceRect.width / MAX_ROW_HEIGHT);\r\n      this._columnWidth = Math.floor(surfaceRect.width / this._columnCount);\r\n      this._rowHeight = this._columnWidth;\r\n    }\r\n\r\n    return this._columnCount * ROWS_PER_PAGE;\r\n  }\r\n\r\n  private _getPageHeight(itemIndex: number, surfaceRect: IRectangle) {\r\n    return this._rowHeight * ROWS_PER_PAGE;\r\n  }\r\n\r\n  @autobind\r\n  private _onRenderCell(item: any, index: number | undefined): JSX.Element {\r\n    return (\r\n      <div\r\n        className='ms-ListGridExample-tile'\r\n        data-is-focusable={ true }\r\n        style={ {\r\n          width: (100 / this._columnCount) + '%'\r\n        } }\r\n      >\r\n        <div className='ms-ListGridExample-sizer'>\r\n          <div className='msListGridExample-padder'>\r\n            <img src={ item.thumbnail } className='ms-ListGridExample-image' />\r\n            <span className='ms-ListGridExample-label'>\r\n              { `item ${index}` }\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}"]}