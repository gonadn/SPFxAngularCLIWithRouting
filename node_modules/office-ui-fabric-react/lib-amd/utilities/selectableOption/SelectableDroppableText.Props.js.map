{"version":3,"file":"SelectableDroppableText.Props.js","sourceRoot":"../src/","sources":["utilities/selectableOption/SelectableDroppableText.Props.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\r\nimport { IRenderFunction } from '../../Utilities';\r\nimport { ICalloutProps } from '../../Callout';\r\nimport { ISelectableOption } from '../../utilities/selectableOption/SelectableOption.Props';\r\n\r\nexport interface ISelectableDroppableTextProps<T> extends React.HTMLAttributes<T> {\r\n  /**\r\n  * Optional callback to access the ISelectableDroppableText interface. Use this instead of ref for accessing\r\n  * the public methods and properties of the component.\r\n  */\r\n  componentRef?: (component: T) => void;\r\n\r\n  /**\r\n   * Descriptive label for the ISelectableDroppableText\r\n   */\r\n  label?: string;\r\n\r\n  /**\r\n  * Aria Label for the ISelectableDroppableText for screen reader users.\r\n  */\r\n  ariaLabel?: string;\r\n\r\n  /**\r\n  * Id of the ISelectableDroppableText\r\n  */\r\n  id?: string;\r\n\r\n  /**\r\n   * If provided, additional class name to provide on the root element.\r\n   */\r\n  className?: string;\r\n\r\n  /**\r\n   * The key that will be initially used to set a selected item.\r\n   */\r\n  defaultSelectedKey?: string | number;\r\n\r\n  /**\r\n   * The key of the selected item. If you provide this, you must maintain selection\r\n   * state by observing onChange events and passing a new value in when changed.\r\n   */\r\n  selectedKey?: string | number;\r\n\r\n  /**\r\n   * Collection of options for this ISelectableDroppableText\r\n   */\r\n  options?: any;\r\n\r\n  /**\r\n   * Callback issues when the selected option changes\r\n   */\r\n  onChanged?: (option: ISelectableOption, index?: number) => void;\r\n\r\n  /**\r\n    * Optional custom renderer for the ISelectableDroppableText container\r\n    */\r\n  onRenderContainer?: IRenderFunction<ISelectableDroppableTextProps<T>>;\r\n\r\n  /**\r\n    * Optional custom renderer for the ISelectableDroppableText list\r\n    */\r\n  onRenderList?: IRenderFunction<ISelectableDroppableTextProps<T>>;\r\n\r\n  /**\r\n   * Optional custom renderer for the ISelectableDroppableText options\r\n   */\r\n  onRenderItem?: IRenderFunction<ISelectableOption>;\r\n\r\n  /**\r\n   * Optional custom renderer for the ISelectableDroppableText option content\r\n   */\r\n  onRenderOption?: IRenderFunction<ISelectableOption>;\r\n\r\n  /**\r\n   * Whether or not the ISelectableDroppableText is disabled.\r\n   */\r\n  disabled?: boolean;\r\n\r\n  /**\r\n   * Whether or not the ISelectableDroppableText is required.\r\n   */\r\n  required?: boolean;\r\n\r\n  /**\r\n   * Custom properties for ISelectableDroppableText's Callout used to render options.\r\n   */\r\n  calloutProps?: ICalloutProps;\r\n\r\n  /**\r\n   * Descriptive label for the ISelectableDroppableText Error Message\r\n   */\r\n  errorMessage?: string;\r\n}"]}