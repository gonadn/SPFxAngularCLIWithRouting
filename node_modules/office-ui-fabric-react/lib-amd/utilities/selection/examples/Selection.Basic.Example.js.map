{"version":3,"file":"Selection.Basic.Example.js","sourceRoot":"../src/","sources":["utilities/selection/examples/Selection.Basic.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { CommandBar } from 'office-ui-fabric-react/lib/CommandBar';\r\nimport { Check } from 'office-ui-fabric-react/lib/Check';\r\nimport { IContextualMenuItem } from 'office-ui-fabric-react/lib/ContextualMenu';\r\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\r\nimport {\r\n  IObjectWithKey,\r\n  ISelection,\r\n  Selection,\r\n  SelectionMode,\r\n  SelectionZone\r\n} from 'office-ui-fabric-react/lib/Selection';\r\nimport { createListItems } from '@uifabric/example-app-base';\r\n\r\nimport './Selection.Example.scss';\r\n\r\nconst ITEM_COUNT = 100;\r\n\r\nexport interface ISelectionBasicExampleState {\r\n  items: any[];\r\n  selection: ISelection;\r\n  selectionMode?: SelectionMode;\r\n  canSelect?: string;\r\n}\r\n\r\nexport interface ISelectionItemExampleProps {\r\n  item?: any;\r\n  itemIndex?: number;\r\n  selection?: ISelection;\r\n  selectionMode?: SelectionMode;\r\n}\r\n\r\n/**\r\n * The SelectionItemExample controls and displays the selection state of a single item\r\n */\r\nexport class SelectionItemExample extends React.Component<ISelectionItemExampleProps, {}> {\r\n  public render() {\r\n    let { item, itemIndex, selection } = this.props;\r\n    let isSelected = false;\r\n\r\n    if (selection && itemIndex !== undefined) {\r\n      isSelected = selection.isIndexSelected(itemIndex);\r\n    }\r\n\r\n    return (\r\n      <div className='ms-SelectionItemExample' data-is-focusable={ true } data-selection-index={ itemIndex }>\r\n        { (selection && selection.canSelectItem(item) && selection.mode !== SelectionMode.none) && (\r\n          <div className='ms-SelectionItemExample-check' data-is-focusable={ true } data-selection-toggle={ true } >\r\n            <Check checked={ isSelected } />\r\n          </div>\r\n        ) }\r\n        <span className='ms-SelectionItemExample-name'>\r\n          { item.name }\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * The SelectionBasicExample controls the selection state of all items\r\n */\r\nexport class SelectionBasicExample extends React.Component<any, ISelectionBasicExampleState> {\r\n  private _hasMounted: boolean;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this._hasMounted = false;\r\n    this._onSelectionChanged = this._onSelectionChanged.bind(this);\r\n    this._onSelectionModeChanged = this._onSelectionModeChanged.bind(this);\r\n    this._onToggleSelectAll = this._onToggleSelectAll.bind(this);\r\n    this._onCanSelectChanged = this._onCanSelectChanged.bind(this);\r\n    this._canSelectItem = this._canSelectItem.bind(this);\r\n\r\n    this.state = {\r\n      items: createListItems(ITEM_COUNT),\r\n      selection: new Selection({ onSelectionChanged: this._onSelectionChanged }),\r\n      selectionMode: SelectionMode.multiple,\r\n      canSelect: 'all'\r\n    };\r\n    this.state.selection.setItems(this.state.items as IObjectWithKey[], false);\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this._hasMounted = true;\r\n  }\r\n\r\n  public render() {\r\n    let { items, selection } = this.state;\r\n\r\n    return (\r\n      <div className='ms-SelectionBasicExample'>\r\n        <CommandBar items={ this._getCommandItems() } />\r\n        <MarqueeSelection selection={ selection } isEnabled={ selection.mode === SelectionMode.multiple } >\r\n          <SelectionZone\r\n            selection={ selection }\r\n            // tslint:disable-next-line:jsx-no-lambda\r\n            onItemInvoked={ (item) => alert('item invoked: ' + item.name) }\r\n          >\r\n            { items.map((item, index) => (\r\n              <SelectionItemExample\r\n                ref={ 'detailsGroup_' + index }\r\n                key={ item.key }\r\n                item={ item }\r\n                itemIndex={ index }\r\n                selection={ selection }\r\n              />\r\n            )) }\r\n          </SelectionZone>\r\n        </MarqueeSelection>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onSelectionChanged() {\r\n    if (this._hasMounted) {\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  private _onToggleSelectAll() {\r\n    let { selection } = this.state;\r\n    selection.toggleAllSelected();\r\n  }\r\n\r\n  private _onSelectionModeChanged(ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem) {\r\n    this.setState((previousState: ISelectionBasicExampleState) => {\r\n      let newSelection = new Selection({\r\n        onSelectionChanged: this._onSelectionChanged,\r\n        canSelectItem: previousState.canSelect === 'vowels' ? this._canSelectItem : undefined,\r\n        selectionMode: menuItem.data\r\n      });\r\n      newSelection.setItems(previousState.items as IObjectWithKey[], false);\r\n\r\n      return {\r\n        selection: newSelection\r\n      };\r\n    });\r\n  }\r\n\r\n  private _onCanSelectChanged(ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem) {\r\n    let canSelectItem = (menuItem.data === 'vowels') ? this._canSelectItem : undefined;\r\n\r\n    this.setState((previousState: ISelectionBasicExampleState) => {\r\n      let newSelection = new Selection({ onSelectionChanged: this._onSelectionChanged, canSelectItem: canSelectItem, selectionMode: previousState.selection.mode });\r\n      newSelection.setItems(previousState.items as IObjectWithKey[], false);\r\n      return {\r\n        selection: newSelection,\r\n        canSelect: (menuItem.data === 'vowels') ? 'vowels' : 'all'\r\n      };\r\n    });\r\n  }\r\n\r\n  private _canSelectItem(item: any): boolean {\r\n    return item.name && (item.name.indexOf('a') === 0 || item.name.indexOf('e') === 0 || item.name.indexOf('i') === 0 || item.name.indexOf('o') === 0 || item.name.indexOf('u') === 0);\r\n  }\r\n\r\n  private _getCommandItems(): IContextualMenuItem[] {\r\n    let { selection, canSelect } = this.state;\r\n\r\n    return [\r\n      {\r\n        key: 'selectionMode',\r\n        name: 'Selection Mode',\r\n        items: [\r\n          {\r\n            key: SelectionMode[SelectionMode.none],\r\n            name: 'None',\r\n            canCheck: true,\r\n            checked: selection.mode === SelectionMode.none,\r\n            onClick: this._onSelectionModeChanged,\r\n            data: SelectionMode.none\r\n\r\n          },\r\n          {\r\n            key: SelectionMode[SelectionMode.single],\r\n            name: 'Single select',\r\n            canCheck: true,\r\n            checked: selection.mode === SelectionMode.single,\r\n            onClick: this._onSelectionModeChanged,\r\n            data: SelectionMode.single\r\n          },\r\n          {\r\n            key: SelectionMode[SelectionMode.multiple],\r\n            name: 'Multi select',\r\n            canCheck: true,\r\n            checked: selection.mode === SelectionMode.multiple,\r\n            onClick: this._onSelectionModeChanged,\r\n            data: SelectionMode.multiple\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        key: 'selectAll',\r\n        name: 'Select All',\r\n        icon: 'CheckMark',\r\n        onClick: this._onToggleSelectAll\r\n      },\r\n      {\r\n        key: 'allowCanSelect',\r\n        name: 'Choose selectable items',\r\n        items: [\r\n          {\r\n            key: 'all',\r\n            name: 'All items',\r\n            canCheck: true,\r\n            checked: canSelect === 'all',\r\n            onClick: this._onCanSelectChanged,\r\n            data: 'all'\r\n          },\r\n          {\r\n            key: 'a',\r\n            name: 'Names starting with vowels',\r\n            canCheck: true,\r\n            checked: canSelect === 'vowels',\r\n            onClick: this._onCanSelectChanged,\r\n            data: 'vowels'\r\n          }\r\n        ]\r\n      }\r\n    ];\r\n  }\r\n}\r\n"]}