{"version":3,"file":"Grid.Props.js","sourceRoot":"../src/","sources":["utilities/grid/Grid.Props.ts"],"names":[],"mappings":"","sourcesContent":["export interface IGridProps {\r\n  /**\r\n   * Gets the component ref.\r\n   */\r\n  componentRef?: () => void;\r\n\r\n  /**\r\n   * The items to turn into a grid\r\n   */\r\n  items: any[];\r\n\r\n  /**\r\n   * The number of columns\r\n   */\r\n  columnCount: number;\r\n\r\n  /**\r\n   * Custom renderer for the individual items\r\n   */\r\n  onRenderItem: (item: any, index: number) => JSX.Element;\r\n\r\n  /**\r\n   * Boolean indicating if the focus should support circular navigation.\r\n   * This prop is only relevant if doNotcontainWithinFocusZone is not true\r\n   */\r\n  shouldFocusCircularNavigate?: boolean;\r\n\r\n  /**\r\n   * If true do not contain the grid inside of a FocusZone.\r\n   * If false contain the grid inside of a FocusZone.\r\n   */\r\n  doNotContainWithinFocusZone?: boolean;\r\n\r\n  /**\r\n   * Optional, class name for the FocusZone container for the grid\r\n   */\r\n  containerClassName?: string;\r\n\r\n  /**\r\n   * Optional, handler for when the grid should blur\r\n   */\r\n  onBlur?: () => void;\r\n\r\n  /**\r\n   * The optional position this grid is in the parent set (index in a parent menu, for example)\r\n   */\r\n  positionInSet?: number;\r\n\r\n  /**\r\n   * The optional size of the parent set (size of parent menu, for example)\r\n   */\r\n  setSize?: number;\r\n}"]}