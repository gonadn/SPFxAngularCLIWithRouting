{"version":3,"file":"GridCell.Props.js","sourceRoot":"../src/","sources":["utilities/grid/GridCell.Props.ts"],"names":[],"mappings":"","sourcesContent":["export interface IGridCellProps<T> {\r\n\r\n  /**\r\n   * The option that will be made available to the user\r\n   */\r\n  item: T;\r\n\r\n  /**\r\n   * Arbitrary unique string associated with this option\r\n   */\r\n  id: string;\r\n\r\n  /**\r\n   * Optional, if the this option should be diabled\r\n   */\r\n  disabled?: boolean;\r\n\r\n  /**\r\n   * Optional, if the cell is currently selected\r\n   */\r\n  selected?: boolean;\r\n\r\n  /**\r\n   * The on click handler\r\n   */\r\n  onClick?: (item: T) => void;\r\n\r\n  /**\r\n   * The render callback to handle rendering the item\r\n   */\r\n  onRenderItem: (item: T) => JSX.Element;\r\n\r\n  /**\r\n   * Optional, the onHover handler\r\n   */\r\n  onHover?: (item?: T) => void;\r\n\r\n  /**\r\n   * Optional, the onFocus handler\r\n   */\r\n  onFocus?: (item: T) => void;\r\n\r\n  /**\r\n   * The accessible role for this option\r\n   */\r\n  role?: string;\r\n\r\n  /**\r\n   * Optional, className(s) to apply\r\n   */\r\n  className?: string;\r\n\r\n  /**\r\n  * Optional, the CSS class used for when the cell is disabled\r\n  */\r\n  cellDisabledStyle?: string[];\r\n\r\n  /**\r\n  * Optional, the CSS class used for when the cell is selected\r\n  */\r\n  cellIsSelectedStyle?: string[];\r\n\r\n  /**\r\n  * Index for this option\r\n  */\r\n  index?: number;\r\n\r\n  /**\r\n * The label for this item.\r\n * Visible text if this item is a header,\r\n * tooltip if is this item is normal\r\n */\r\n  label?: string;\r\n}\r\n"]}