{"version":3,"file":"Fabric.js","sourceRoot":"../src/","sources":["components/Fabric/Fabric.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,6CAMyB;AAIzB,yDAAoD;AAEpD,IAAM,qBAAqB,GAAG;;;;;;;;;;CAU7B,CAAC;AAUF,qFAAqF;AACrF,yEAAyE;AACzE,IAAI,mBAAmB,GAAY,KAAK,CAAC;AAEzC,6HAA6H;AAC7H,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,QAAQ,IAAI,QAAQ,CAAC,eAAe,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAChH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AACtD,CAAC;AAGD;IAA4B,kCAAyC;IAInE;QAAA,YACE,iBAAO,SAKR;QAHC,KAAI,CAAC,KAAK,GAAG;YACX,cAAc,EAAE,mBAAmB;SACpC,CAAC;;IACJ,CAAC;IAEM,kCAAiB,GAAxB;QACE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;QACrE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;IACnE,CAAC;IAEM,uBAAM,GAAb;QACU,IAAA,0CAAc,CAAgB;QAC9B,IAAA,gCAAS,CAAgB;QAEjC,IAAM,UAAU,GAAG,iCAAa,CAC9B,IAAI,CAAC,KAAK,CAAC,KAAM,EACjB,SAAU,EACV,cAAe,CAChB,CAAC;QAEF,IAAI,QAAQ,GAAG,0BAAc,CAAC,IAAI,CAAC,KAAK,EAAE,yBAAa,CAAC,CAAC;QACzD,MAAM,CAAC,CACL,gDACO,QAAQ,IACb,SAAS,EAAG,UAAU,CAAC,IAAI,EAC3B,GAAG,EAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAC/B,CACH,CAAC;IACJ,CAAC;IAEO,6BAAY,GAApB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,QAAQ,CAAC;gBACZ,cAAc,EAAE,KAAK;aACtB,CAAC,CAAC;YAEH,mBAAmB,GAAG,KAAK,CAAC;QAC9B,CAAC;IACH,CAAC;IAEO,2BAAU,GAAlB,UAAmB,EAAiB;QAClC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,IAAI,qBAAqB,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/E,IAAI,CAAC,QAAQ,CAAC;gBACZ,cAAc,EAAE,IAAI;aACrB,CAAC,CAAC;YAEH,mBAAmB,GAAG,IAAI,CAAC;QAC7B,CAAC;IACH,CAAC;IAvDU,MAAM;QADlB,wBAAY,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,CAAC;OACrB,MAAM,CAwDlB;IAAD,aAAC;CAAA,AAxDD,CAA4B,yBAAa,GAwDxC;AAxDY,wBAAM","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  BaseComponent,\r\n  KeyCodes,\r\n  customizable,\r\n  getNativeProps,\r\n  divProperties\r\n} from '../../Utilities';\r\nimport {\r\n  ITheme\r\n} from '../../Styling';\r\nimport { getClassNames } from './Fabric.classNames';\r\n\r\nconst DIRECTIONAL_KEY_CODES = [\r\n  KeyCodes.up,\r\n  KeyCodes.down,\r\n  KeyCodes.left,\r\n  KeyCodes.right,\r\n  KeyCodes.home,\r\n  KeyCodes.end,\r\n  KeyCodes.tab,\r\n  KeyCodes.pageUp,\r\n  KeyCodes.pageDown\r\n];\r\n\r\nexport interface IFabricProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  componentRef?: () => void;\r\n  theme?: ITheme;\r\n}\r\nexport interface IFabricState {\r\n  isFocusVisible?: boolean;\r\n}\r\n\r\n// We will track the last focus visibility state so that if we tear down and recreate\r\n// the Fabric component, we will use the last known value as the default.\r\nlet _lastIsFocusVisible: boolean = false;\r\n\r\n// Ensure that the HTML element has a dir specified. This helps to ensure RTL/LTR macros in css for all components will work.\r\nif (typeof (document) === 'object' && document.documentElement && !document.documentElement.getAttribute('dir')) {\r\n  document.documentElement.setAttribute('dir', 'ltr');\r\n}\r\n\r\n@customizable('Fabric', ['theme'])\r\nexport class Fabric extends BaseComponent<IFabricProps, IFabricState> {\r\n  // tslint:disable-next-line:no-unused-variable\r\n  private _root: HTMLElement;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      isFocusVisible: _lastIsFocusVisible\r\n    };\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this._events.on(document.body, 'mousedown', this._onMouseDown, true);\r\n    this._events.on(document.body, 'keydown', this._onKeyDown, true);\r\n  }\r\n\r\n  public render() {\r\n    const { isFocusVisible } = this.state;\r\n    const { className } = this.props;\r\n\r\n    const classNames = getClassNames(\r\n      this.props.theme!,\r\n      className!,\r\n      isFocusVisible!\r\n    );\r\n\r\n    let divProps = getNativeProps(this.props, divProperties);\r\n    return (\r\n      <div\r\n        { ...divProps }\r\n        className={ classNames.root }\r\n        ref={ this._resolveRef('_root') }\r\n      />\r\n    );\r\n  }\r\n\r\n  private _onMouseDown() {\r\n    if (this.state.isFocusVisible) {\r\n      this.setState({\r\n        isFocusVisible: false\r\n      });\r\n\r\n      _lastIsFocusVisible = false;\r\n    }\r\n  }\r\n\r\n  private _onKeyDown(ev: KeyboardEvent) {\r\n    if (!this.state.isFocusVisible && DIRECTIONAL_KEY_CODES.indexOf(ev.which) > -1) {\r\n      this.setState({\r\n        isFocusVisible: true\r\n      });\r\n\r\n      _lastIsFocusVisible = true;\r\n    }\r\n  }\r\n}\r\n"]}