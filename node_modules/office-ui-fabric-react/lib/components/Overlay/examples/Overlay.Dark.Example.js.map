{"version":3,"file":"Overlay.Dark.Example.js","sourceRoot":"../src/","sources":["components/Overlay/examples/Overlay.Dark.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,kEAAgE;AAChE,4DAAkE;AAClE,8DAA6D;AAE7D,kCAAgC;AAEhC;IAAwC,8CAAyB;IAC/D;QAAA,YACE,iBAAO,SAGR;QADC,KAAI,CAAC,KAAK,GAAG,EAAE,gBAAgB,EAAE,KAAK,EAAE,CAAC;;IAC3C,CAAC;IAEM,mCAAM,GAAb;QACQ,IAAA,8CAAgB,CAAgB;QAEtC,MAAM,CAAC,CACL;YACE,oBAAC,sBAAa,IACZ,OAAO,EAAG,IAAI,CAAC,cAAc,EAC7B,IAAI,EAAC,kBAAkB,GACvB;YACA,gBAAgB,IAAI,CACpB,oBAAC,iBAAO,IACN,YAAY,EAAG,IAAI,EACnB,OAAO,EAAG,IAAI,CAAC,mBAAmB;gBAElC,6BAAK,SAAS,EAAC,wBAAwB;oBACrC,kEAAuC,CACnC,CACE,CACX,CACG,CACP,CAAC;IACJ,CAAC;IAGO,gDAAmB,GAA3B;QACE,IAAI,CAAC,QAAQ,CAAC,EAAE,gBAAgB,EAAE,KAAK,EAAE,CAAC,CAAC;IAC7C,CAAC;IAGO,2CAAc,GAAtB;QACE,IAAI,CAAC,QAAQ,CAAC,EAAE,gBAAgB,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC,CAAC;IACpE,CAAC;IAPD;QADC,oBAAQ;iEAGR;IAGD;QADC,oBAAQ;4DAGR;IACH,yBAAC;CAAA,AAvCD,CAAwC,KAAK,CAAC,SAAS,GAuCtD;AAvCY,gDAAkB","sourcesContent":["import * as React from 'react';\r\nimport { autobind } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { Overlay } from 'office-ui-fabric-react/lib/Overlay';\r\n\r\nimport './Overlay.Example.scss';\r\n\r\nexport class OverlayDarkExample extends React.Component<any, any> {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = { isOverlayVisible: false };\r\n  }\r\n\r\n  public render() {\r\n    let { isOverlayVisible } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <DefaultButton\r\n          onClick={ this._toggleOverlay }\r\n          text='Show the overlay'\r\n        />\r\n        { isOverlayVisible && (\r\n          <Overlay\r\n            isDarkThemed={ true }\r\n            onClick={ this._setVisibilityFalse }\r\n          >\r\n            <div className='OverlayExample-content'>\r\n              <p>I am content within the overlay.</p>\r\n            </div>\r\n          </Overlay>\r\n        ) }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  @autobind\r\n  private _setVisibilityFalse(): void {\r\n    this.setState({ isOverlayVisible: false });\r\n  }\r\n\r\n  @autobind\r\n  private _toggleOverlay(): void {\r\n    this.setState({ isOverlayVisible: !this.state.isOverlayVisible });\r\n  }\r\n}\r\n"]}