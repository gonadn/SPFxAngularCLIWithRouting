{"version":3,"file":"DatePicker.js","sourceRoot":"../src/","sources":["components/DatePicker/DatePicker.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  IDatePickerProps,\r\n  IDatePickerStrings\r\n} from './DatePicker.Props';\r\nimport {\r\n  Calendar,\r\n  DayOfWeek\r\n} from '../../Calendar';\r\nimport { FirstWeekOfYear } from '../../utilities/dateValues/DateValues';\r\nimport { Callout } from '../../Callout';\r\nimport { DirectionalHint } from '../../common/DirectionalHint';\r\nimport { TextField } from '../../TextField';\r\nimport {\r\n  autobind,\r\n  BaseComponent,\r\n  KeyCodes,\r\n  css\r\n} from '../../Utilities';\r\nimport { compareDates, compareDatePart } from '../../utilities/dateMath/DateMath';\r\nimport * as stylesImport from './DatePicker.scss';\r\nconst styles: any = stylesImport;\r\n\r\nexport interface IDatePickerState {\r\n  /** The currently focused date in the drop down, but not necessarily selected */\r\n  navigatedDate?: Date;\r\n  selectedDate?: Date;\r\n  formattedDate?: string;\r\n  isDatePickerShown?: boolean;\r\n  errorMessage?: string;\r\n}\r\n\r\nconst DEFAULT_STRINGS: IDatePickerStrings = {\r\n  months: [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n  ],\r\n\r\n  shortMonths: [\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Apr',\r\n    'May',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Dec'\r\n  ],\r\n\r\n  days: [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday'\r\n  ],\r\n\r\n  shortDays: [\r\n    'S',\r\n    'M',\r\n    'T',\r\n    'W',\r\n    'T',\r\n    'F',\r\n    'S'\r\n  ],\r\n\r\n  goToToday: 'Go to today',\r\n  prevMonthAriaLabel: 'Go to previous month',\r\n  nextMonthAriaLabel: 'Go to next month',\r\n  prevYearAriaLabel: 'Go to previous year',\r\n  nextYearAriaLabel: 'Go to next year'\r\n};\r\n\r\nexport class DatePicker extends BaseComponent<IDatePickerProps, IDatePickerState> {\r\n  public static defaultProps: IDatePickerProps = {\r\n    allowTextInput: false,\r\n    formatDate: (date: Date) => {\r\n      if (date) {\r\n        return date.toDateString();\r\n      }\r\n\r\n      return '';\r\n    },\r\n    parseDateFromString: (dateStr: string) => {\r\n      const date = Date.parse(dateStr);\r\n      if (date) {\r\n        return new Date(date);\r\n      }\r\n\r\n      return null;\r\n    },\r\n    firstDayOfWeek: DayOfWeek.Sunday,\r\n    isRequired: false,\r\n    isMonthPickerVisible: true,\r\n    showMonthPickerAsOverlay: false,\r\n    strings: DEFAULT_STRINGS,\r\n    highlightCurrentMonth: false,\r\n    borderless: false,\r\n    pickerAriaLabel: 'Calender',\r\n    showWeekNumbers: false,\r\n    firstWeekOfYear: FirstWeekOfYear.FirstDay,\r\n    showGoToToday: true,\r\n    dateTimeFormatter: undefined\r\n  };\r\n\r\n  private _root: HTMLElement;\r\n  private _calendar: Calendar;\r\n  private _datepicker: HTMLDivElement;\r\n  private _textField: TextField;\r\n  private _preventFocusOpeningPicker: boolean;\r\n  private _focusOnSelectedDateOnUpdate: boolean;\r\n\r\n  constructor(props: IDatePickerProps) {\r\n    super();\r\n\r\n    let { formatDate, value } = props;\r\n\r\n    this.state = {\r\n      selectedDate: value || new Date(),\r\n      formattedDate: (formatDate && value) ? formatDate(value) : '',\r\n      isDatePickerShown: false,\r\n      errorMessage: undefined\r\n    };\r\n\r\n    this._preventFocusOpeningPicker = false;\r\n  }\r\n\r\n  public componentWillReceiveProps(nextProps: IDatePickerProps) {\r\n    let { formatDate, isRequired, strings, value, minDate, maxDate } = nextProps;\r\n    let errorMessage = (isRequired && !value) ? (strings!.isRequiredErrorMessage || '*') : undefined;\r\n\r\n    if (!errorMessage && value) {\r\n      errorMessage = this._isDateOutOfBounds(value!, minDate, maxDate) ? strings!.isOutOfBoundsErrorMessage || '*' : undefined;\r\n    }\r\n\r\n    // Set error message\r\n    this.setState({\r\n      errorMessage: errorMessage\r\n    });\r\n\r\n    // Issue# 1274: Check if the date value changed from old value, i.e., if indeed a new date is being\r\n    // passed in or if the formatting function was modified. We only update the selected date if either of these\r\n    // had a legit change. Note tha the bug will still repro when only the formatDate was passed in props and this\r\n    // is the result of the onSelectDate callback, but this should be a rare scenario.\r\n    let oldValue = this.state.selectedDate;\r\n    if (!compareDates(oldValue!, value!) || this.props.formatDate !== formatDate) {\r\n      this.setState({\r\n        selectedDate: value || new Date(),\r\n        formattedDate: (formatDate && value) ? formatDate(value) : '',\r\n      });\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    const {\r\n      firstDayOfWeek,\r\n      strings,\r\n      label,\r\n      isRequired,\r\n      disabled,\r\n      ariaLabel,\r\n      pickerAriaLabel,\r\n      placeholder,\r\n      allowTextInput,\r\n      borderless,\r\n      className,\r\n      minDate,\r\n      maxDate\r\n    } = this.props;\r\n    const { isDatePickerShown, formattedDate, selectedDate, errorMessage } = this.state;\r\n\r\n    return (\r\n      <div className={ css('ms-DatePicker', styles.root, className) } ref={ this._resolveRef('_root') }>\r\n        <div ref={ this._resolveRef('_datepicker') }>\r\n          <TextField\r\n            className={ styles.textField }\r\n            ariaLabel={ ariaLabel }\r\n            aria-haspopup='true'\r\n            aria-expanded={ isDatePickerShown }\r\n            required={ isRequired }\r\n            disabled={ disabled }\r\n            onKeyDown={ this._onTextFieldKeyDown }\r\n            onFocus={ this._onTextFieldFocus }\r\n            onBlur={ this._onTextFieldBlur }\r\n            onClick={ this._onTextFieldClick }\r\n            onChanged={ this._onTextFieldChanged }\r\n            errorMessage={ errorMessage }\r\n            label={ label }\r\n            placeholder={ placeholder }\r\n            borderless={ borderless }\r\n            iconProps={ {\r\n              iconName: 'Calendar',\r\n              onClick: this._onIconClick,\r\n              className: css(\r\n                label ? 'ms-DatePicker-event--with-label' : 'ms-DatePicker-event--without-label',\r\n                label ? styles.eventWithLabel : styles.eventWithoutLabel\r\n              )\r\n            } }\r\n            readOnly={ !allowTextInput }\r\n            value={ formattedDate }\r\n            ref={ this._resolveRef('_textField') }\r\n            role={ allowTextInput ? 'combobox' : 'menu' }\r\n          />\r\n        </div>\r\n        { isDatePickerShown && (\r\n          <Callout\r\n            role='dialog'\r\n            ariaLabel={ pickerAriaLabel }\r\n            isBeakVisible={ false }\r\n            className={ css('ms-DatePicker-callout') }\r\n            gapSpace={ 0 }\r\n            doNotLayer={ false }\r\n            target={ this._datepicker }\r\n            directionalHint={ DirectionalHint.bottomLeftEdge }\r\n            onDismiss={ this._calendarDismissed }\r\n            onPositioned={ this._onCalloutPositioned }\r\n          >\r\n            <Calendar\r\n              onSelectDate={ this._onSelectDate }\r\n              onDismiss={ this._calendarDismissed }\r\n              isMonthPickerVisible={ this.props.isMonthPickerVisible }\r\n              showMonthPickerAsOverlay={ this.props.showMonthPickerAsOverlay }\r\n              today={ this.props.today }\r\n              value={ selectedDate }\r\n              firstDayOfWeek={ firstDayOfWeek }\r\n              strings={ strings! }\r\n              highlightCurrentMonth={ this.props.highlightCurrentMonth }\r\n              showWeekNumbers={ this.props.showWeekNumbers }\r\n              firstWeekOfYear={ this.props.firstWeekOfYear }\r\n              showGoToToday={ this.props.showGoToToday }\r\n              dateTimeFormatter={ this.props.dateTimeFormatter }\r\n              minDate={ minDate }\r\n              maxDate={ maxDate }\r\n              ref={ this._resolveRef('_calendar') }\r\n            />\r\n          </Callout>\r\n        ) }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  @autobind\r\n  private _onSelectDate(date: Date) {\r\n    let { formatDate, onSelectDate } = this.props;\r\n\r\n    this.setState({\r\n      selectedDate: date,\r\n      isDatePickerShown: false,\r\n      formattedDate: formatDate && date ? formatDate(date) : '',\r\n    }, () => {\r\n      if (onSelectDate) {\r\n        onSelectDate(date);\r\n      }\r\n    });\r\n  }\r\n\r\n  @autobind\r\n  private _onCalloutPositioned() {\r\n    this._calendar.focus();\r\n  }\r\n\r\n  @autobind\r\n  private _onTextFieldFocus(ev: React.FocusEvent<HTMLElement>) {\r\n    if (this.props.disableAutoFocus) {\r\n      return;\r\n    }\r\n\r\n    if (!this.props.allowTextInput) {\r\n      if (!this._preventFocusOpeningPicker) {\r\n        this._showDatePickerPopup();\r\n      } else {\r\n        this._preventFocusOpeningPicker = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _onTextFieldBlur(ev: React.FocusEvent<HTMLElement>) {\r\n    this._validateTextInput();\r\n  }\r\n\r\n  @autobind\r\n  private _onTextFieldChanged(newValue: string) {\r\n    if (this.props.allowTextInput) {\r\n      if (this.state.isDatePickerShown) {\r\n        this._dismissDatePickerPopup();\r\n      }\r\n\r\n      let { isRequired, value, strings } = this.props;\r\n\r\n      this.setState({\r\n        errorMessage: (isRequired && !value) ? (strings!.isRequiredErrorMessage || '*') : undefined,\r\n        formattedDate: newValue\r\n      });\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _onTextFieldKeyDown(ev: React.KeyboardEvent<HTMLElement>) {\r\n    switch (ev.which) {\r\n      case KeyCodes.enter:\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        if (!this.state.isDatePickerShown) {\r\n          this._showDatePickerPopup();\r\n        } else {\r\n          // When DatePicker allows input date string directly,\r\n          // it is expected to hit another enter to close the popup\r\n          if (this.props.allowTextInput) {\r\n            this._dismissDatePickerPopup();\r\n          }\r\n        }\r\n        break;\r\n\r\n      case KeyCodes.escape:\r\n        this._handleEscKey(ev);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _onTextFieldClick(ev: React.MouseEvent<HTMLElement>) {\r\n    if (!this.state.isDatePickerShown) {\r\n      this._showDatePickerPopup();\r\n    } else {\r\n      if (this.props.allowTextInput) {\r\n        this.setState({\r\n          isDatePickerShown: false\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _onIconClick(ev: React.MouseEvent<HTMLElement>) {\r\n    ev.stopPropagation();\r\n    this._onTextFieldClick(ev);\r\n  }\r\n\r\n  private _showDatePickerPopup() {\r\n    if (!this.state.isDatePickerShown) {\r\n      this._preventFocusOpeningPicker = true;\r\n      this._focusOnSelectedDateOnUpdate = true;\r\n      this.setState({\r\n        isDatePickerShown: true,\r\n        navigatedDate: this.state.selectedDate,\r\n        errorMessage: ''\r\n      });\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _dismissDatePickerPopup() {\r\n    if (this.state.isDatePickerShown) {\r\n      this.setState({\r\n        isDatePickerShown: false\r\n      });\r\n\r\n      this._validateTextInput();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Callback for closing the calendar callout\r\n   */\r\n  @autobind\r\n  private _calendarDismissed() {\r\n    this._preventFocusOpeningPicker = true;\r\n    this._dismissDatePickerPopup();\r\n\r\n    if (this._textField) {\r\n      this._textField.focus();\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _handleEscKey(ev: React.KeyboardEvent<HTMLElement>) {\r\n    this._calendarDismissed();\r\n  }\r\n\r\n  @autobind\r\n  private _validateTextInput() {\r\n    const { isRequired, allowTextInput, strings, parseDateFromString, onSelectDate, formatDate, minDate, maxDate } = this.props;\r\n    const inputValue = this.state.formattedDate;\r\n\r\n    // Do validation only if DatePicker's popup is dismissed\r\n    if (this.state.isDatePickerShown) {\r\n      return;\r\n    }\r\n\r\n    // Check when DatePicker is a required field but has NO input value\r\n    if (isRequired && !inputValue) {\r\n      this.setState({\r\n        // Since fabic react doesn't have loc support yet\r\n        // use the symbol '*' to represent error message\r\n        errorMessage: strings!.isRequiredErrorMessage || '*'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (allowTextInput) {\r\n      let date = null;\r\n      if (inputValue) {\r\n        // Don't parse if the selected date has the same formatted string as what we're about to parse.\r\n        // The formatted string might be ambiguous (ex: \"1/2/3\" or \"New Year Eve\") and the parser might\r\n        // not be able to come up with the exact same date.\r\n        if (this.state.selectedDate && formatDate && formatDate(this.state.selectedDate) === inputValue) {\r\n          date = this.state.selectedDate;\r\n        } else {\r\n          date = parseDateFromString!(inputValue);\r\n          if (!date) {\r\n            this.setState({\r\n              errorMessage: strings!.invalidInputErrorMessage || '*'\r\n            });\r\n          } else {\r\n            // Check against optional date boundaries\r\n            if (this._isDateOutOfBounds(date, minDate, maxDate)) {\r\n              this.setState({\r\n                errorMessage: strings!.isOutOfBoundsErrorMessage || '*'\r\n              });\r\n            } else {\r\n              this.setState({\r\n                selectedDate: date,\r\n                errorMessage: ''\r\n              });\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        // No input date string shouldn't be an error if field is not required\r\n        this.setState({\r\n          errorMessage: ''\r\n        });\r\n      }\r\n\r\n      // Execute onSelectDate callback\r\n      if (onSelectDate) {\r\n        // If no input date string or input date string is invalid\r\n        // date variable will be null, callback should expect null value for this case\r\n        onSelectDate(date);\r\n      }\r\n    }\r\n  }\r\n\r\n  private _isDateOutOfBounds(date: Date, minDate?: Date, maxDate?: Date): boolean {\r\n    return ((!!minDate && compareDatePart(minDate!, date) > 0) || (!!maxDate && compareDatePart(maxDate!, date) < 0));\r\n  }\r\n}"]}