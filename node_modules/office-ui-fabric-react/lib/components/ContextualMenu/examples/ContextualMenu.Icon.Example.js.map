{"version":3,"file":"ContextualMenu.Icon.Example.js","sourceRoot":"../src/","sources":["components/ContextualMenu/examples/ContextualMenu.Icon.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,4EAAmF;AACnF,8DAA6D;AAC7D,4DAAkE;AAClE,wCAAsC;AAEtC;IAA+C,qDAAyB;IAEtE;QAAA,YACE,iBAAO,SAIR;QAHC,KAAI,CAAC,KAAK,GAAG;YACX,WAAW,EAAE,KAAK;SACnB,CAAC;;IACJ,CAAC;IAEM,0CAAM,GAAb;QAAA,iBA4EC;QA3EO,IAAA,oCAAW,CAAgB;QAEjC,MAAM,CAAC,CACL;YACE,oBAAC,sBAAa,IACZ,EAAE,EAAC,uBAAuB,EAC1B,IAAI,EAAC,0BAA0B,EAC/B,SAAS,EAAG;oBACV,kBAAkB,EAAE,IAAI;oBACxB,KAAK,EAAE;wBACL;4BACE,GAAG,EAAE,SAAS;4BACd,SAAS,EAAE;gCACT,QAAQ,EAAE,KAAK;6BAChB;4BACD,IAAI,EAAE,KAAK;yBACZ;wBACD;4BACE,GAAG,EAAE,QAAQ;4BACb,OAAO,EAAE;gCACP,KAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;4BACvC,CAAC;4BACD,SAAS,EAAE;gCACT,QAAQ,EAAE,QAAQ;gCAClB,KAAK,EAAE;oCACL,KAAK,EAAE,QAAQ;iCAChB;6BACF;4BACD,IAAI,EAAE,0BAA0B;4BAChC,KAAK,EAAE,eAAe;yBACvB;wBACD;4BACE,GAAG,EAAE,WAAW;4BAChB,QAAQ,EAAE,uCAAsB,CAAC,OAAO;yBACzC;wBACD;4BACE,GAAG,EAAE,OAAO;4BACZ,SAAS,EAAE;gCACT,QAAQ,EAAE,OAAO;6BAClB;4BACD,IAAI,EAAE,OAAO;yBACd;wBACD;4BACE,GAAG,EAAE,OAAO;4BACZ,SAAS,EAAE;gCACT,QAAQ,EAAE,OAAO;6BAClB;4BACD,IAAI,EAAE,OAAO;yBACd;wBACD;4BACE,GAAG,EAAE,OAAO;4BACZ,SAAS,EAAE;gCACT,QAAQ,EAAE,uBAAuB;6BAClC;4BACD,IAAI,EAAE,OAAO;yBACd;qBACF;iBACF,GAED;YACA,WAAW,IAAI,CACf,oBAAC,iBAAO,IACN,eAAe,EAAG,IAAI;gBACtB,yCAAyC;gBACzC,SAAS,EAAG,cAAM,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,EAArC,CAAqC;gBAEvD,oBAAC,sBAAa;gBACZ,yCAAyC;;oBAAzC,yCAAyC;oBACzC,OAAO,EAAG,cAAM,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,EAArC,CAAqC,EACrD,IAAI,EAAC,aAAa,GAClB,CACM,CACX,CACG,CACP,CAAC;IACJ,CAAC;IACH,gCAAC;AAAD,CAAC,AAtFD,CAA+C,KAAK,CAAC,SAAS,GAsF7D;AAtFY,8DAAyB","sourcesContent":["import * as React from 'react';\r\nimport { ContextualMenuItemType } from 'office-ui-fabric-react/lib/ContextualMenu';\r\nimport { Callout } from 'office-ui-fabric-react/lib/Callout';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport './ContextualMenuExample.scss';\r\n\r\nexport class ContextualMenuIconExample extends React.Component<any, any> {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showCallout: false\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    let { showCallout } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <DefaultButton\r\n          id='ContextualMenuButton2'\r\n          text='Click for ContextualMenu'\r\n          menuProps={ {\r\n            shouldFocusOnMount: true,\r\n            items: [\r\n              {\r\n                key: 'newItem',\r\n                iconProps: {\r\n                  iconName: 'Add'\r\n                },\r\n                name: 'New'\r\n              },\r\n              {\r\n                key: 'upload',\r\n                onClick: () => {\r\n                  this.setState({ showCallout: true });\r\n                },\r\n                iconProps: {\r\n                  iconName: 'Upload',\r\n                  style: {\r\n                    color: 'salmon'\r\n                  }\r\n                },\r\n                name: 'Upload (Click for popup)',\r\n                title: 'Upload a file'\r\n              },\r\n              {\r\n                key: 'divider_1',\r\n                itemType: ContextualMenuItemType.Divider\r\n              },\r\n              {\r\n                key: 'share',\r\n                iconProps: {\r\n                  iconName: 'Share'\r\n                },\r\n                name: 'Share'\r\n              },\r\n              {\r\n                key: 'print',\r\n                iconProps: {\r\n                  iconName: 'Print'\r\n                },\r\n                name: 'Print'\r\n              },\r\n              {\r\n                key: 'music',\r\n                iconProps: {\r\n                  iconName: 'MusicInCollectionFill'\r\n                },\r\n                name: 'Music',\r\n              }\r\n            ]\r\n          }\r\n          }\r\n        />\r\n        { showCallout && (\r\n          <Callout\r\n            setInitialFocus={ true }\r\n            // tslint:disable-next-line:jsx-no-lambda\r\n            onDismiss={ () => this.setState({ showCallout: false }) }\r\n          >\r\n            <DefaultButton\r\n              // tslint:disable-next-line:jsx-no-lambda\r\n              onClick={ () => this.setState({ showCallout: false }) }\r\n              text='Hello Popup'\r\n            />\r\n          </Callout>\r\n        ) }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}