"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = require("react");
var Button_1 = require("office-ui-fabric-react/lib/Button");
require("./ContextualMenuExample.scss");
var ContextualMenuHeaderExample = /** @class */ (function (_super) {
    tslib_1.__extends(ContextualMenuHeaderExample, _super);
    function ContextualMenuHeaderExample() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ContextualMenuHeaderExample.prototype.render = function () {
        return (React.createElement(Button_1.DefaultButton, { id: 'ContextualMenuButton1', text: 'Click for ContextualMenu', menuProps: {
                shouldFocusOnMount: true,
                items: [
                    {
                        key: 'Actions',
                        itemType: 2,
                        name: 'Actions'
                    },
                    {
                        key: 'upload',
                        iconProps: {
                            iconName: 'Upload',
                            style: {
                                color: 'salmon'
                            }
                        },
                        name: 'Upload',
                        title: 'Upload a file'
                    },
                    {
                        key: 'rename',
                        name: 'Rename'
                    },
                    {
                        key: 'share',
                        iconProps: {
                            iconName: 'Share'
                        },
                        subMenuProps: {
                            items: [
                                {
                                    key: 'sharetoemail',
                                    name: 'Share to Email',
                                    iconProps: {
                                        iconName: 'Mail'
                                    },
                                },
                                {
                                    key: 'sharetofacebook',
                                    name: 'Share to Facebook',
                                },
                                {
                                    key: 'sharetotwitter',
                                    name: 'Share to Twitter',
                                    iconProps: {
                                        iconName: 'Share'
                                    },
                                },
                            ],
                        },
                        name: 'Sharing'
                    },
                    {
                        key: 'navigation',
                        itemType: 2,
                        name: 'Navigation'
                    },
                    {
                        key: 'properties',
                        name: 'Properties'
                    },
                    {
                        key: 'print',
                        iconProps: {
                            iconName: 'Print'
                        },
                        name: 'Print'
                    },
                    {
                        key: 'Bing',
                        name: 'Go to Bing',
                        href: 'http://www.bing.com'
                    },
                ]
            } }));
    };
    return ContextualMenuHeaderExample;
}(React.Component));
exports.ContextualMenuHeaderExample = ContextualMenuHeaderExample;
//# sourceMappingURL=ContextualMenu.Header.Example.js.map