{"version":3,"file":"Check.js","sourceRoot":"../src/","sources":["components/Check/Check.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,6CAAqD;AACrD,mCAAkC;AAClC,2CAA6C;AAC7C,IAAM,MAAM,GAAQ,YAAY,CAAC;AAsBjC;IAA2B,iCAA8B;IAAzD;;IAmCA,CAAC;IA9BQ,qCAAqB,GAA5B,UAA6B,QAAqB;QAChD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,KAAK,QAAQ,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,KAAK,QAAQ,CAAC,OAAO,CAAC;IAChG,CAAC;IAEM,sBAAM,GAAb;QACM,IAAA,eAAmC,EAAjC,wBAAS,EAAE,oBAAO,CAAgB;QAExC,SAAS,GAAG,SAAS,IAAI,OAAO,CAAC;QAEjC,MAAM,CAAC,CACL,6BACE,SAAS,EAAG,eAAG,CACb,UAAU,EACV,MAAM,CAAC,IAAI;gBAET,GAAC,gBAAc,MAAM,CAAC,aAAe,IAAG,SAAS;oBAEpD;YAEC,WAAI,CAAC;gBACL,SAAS,EAAE,kBAAkB,GAAG,MAAM,CAAC,MAAM;gBAC7C,QAAQ,EAAE,YAAY;aACvB,CAAC;YACA,WAAI,CAAC;gBACL,SAAS,EAAE,iBAAiB,GAAG,MAAM,CAAC,KAAK;gBAC3C,QAAQ,EAAE,uBAAuB;aAClC,CAAC,CACE,CACP,CAAC;;IACJ,CAAC;IAjCa,kBAAY,GAAG;QAC3B,SAAS,EAAE,KAAK;KACjB,CAAC;IAgCJ,YAAC;CAAA,AAnCD,CAA2B,yBAAa,GAmCvC;AAnCY,sBAAK","sourcesContent":["import * as React from 'react';\r\nimport { BaseComponent, css } from '../../Utilities';\r\nimport { Icon } from '../../Icon';\r\nimport * as stylesImport from './Check.scss';\r\nconst styles: any = stylesImport;\r\n\r\nexport interface ICheckProps extends React.Props<Check> {\r\n  /**\r\n   * Gets the component ref.\r\n   */\r\n  componentRef?: () => void;\r\n\r\n  /**\r\n   * Whether or not this menu item is currently checked.\r\n   * @defaultvalue false\r\n   */\r\n  checked?: boolean;\r\n  /**\r\n   * Deprecated at v0.65.1 and will be removed by v 1.0. Use 'checked' instead.\r\n   * @deprecated\r\n   */\r\n  isChecked?: boolean;\r\n\r\n  alwaysShowCheck?: boolean;\r\n}\r\n\r\nexport class Check extends BaseComponent<ICheckProps, {}> {\r\n  public static defaultProps = {\r\n    isChecked: false\r\n  };\r\n\r\n  public shouldComponentUpdate(newProps: ICheckProps) {\r\n    return this.props.isChecked !== newProps.isChecked || this.props.checked !== newProps.checked;\r\n  }\r\n\r\n  public render() {\r\n    let { isChecked, checked } = this.props;\r\n\r\n    isChecked = isChecked || checked;\r\n\r\n    return (\r\n      <div\r\n        className={ css(\r\n          'ms-Check',\r\n          styles.root,\r\n          {\r\n            [`is-checked ${styles.rootIsChecked}`]: isChecked\r\n          }\r\n        ) }\r\n      >\r\n        { Icon({\r\n          className: 'ms-Check-circle ' + styles.circle,\r\n          iconName: 'CircleRing'\r\n        }) }\r\n        { Icon({\r\n          className: 'ms-Check-check ' + styles.check,\r\n          iconName: 'StatusCircleCheckmark'\r\n        }) }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}