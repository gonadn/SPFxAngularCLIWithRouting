{"version":3,"file":"DropdownPage.js","sourceRoot":"../src/","sources":["components/Dropdown/DropdownPage.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EACL,WAAW,EAEX,aAAa,EACb,kBAAkB,EACnB,MAAM,4BAA4B,CAAC;AACpC,OAAO,EAAE,oBAAoB,EAAE,MAAM,mCAAmC,CAAC;AACzE,OAAO,EAAE,qBAAqB,EAAE,MAAM,oCAAoC,CAAC;AAC3E,OAAO,EAAE,eAAe,EAAE,MAAM,4CAA4C,CAAC;AAC7E,OAAO,EAAE,cAAc,EAAE,MAAM,sBAAsB,CAAC;AAEtD,IAAM,wBAAwB,GAAG,OAAO,CAAC,gGAAgG,CAAW,CAAC;AACrJ,IAAM,yBAAyB,GAAG,OAAO,CAAC,iGAAiG,CAAW,CAAC;AAEvJ;IAAkC,wCAA4C;IAA9E;;IA0DA,CAAC;IAzDQ,6BAAM,GAAb;QACE,MAAM,CAAC,CACL,oBAAC,aAAa,IACZ,KAAK,EAAC,UAAU,EAChB,aAAa,EAAC,iBAAiB,EAC/B,YAAY,EACV;gBACE,oBAAC,WAAW,IAAC,KAAK,EAAC,UAAU,EAAC,IAAI,EAAG,wBAAwB;oBAC3D,oBAAC,oBAAoB,OAAG,CACZ;gBAEd,oBAAC,WAAW,IAAC,KAAK,EAAC,qBAAqB,EAAC,IAAI,EAAG,yBAAyB;oBACvE,oBAAC,qBAAqB,OAAG,CACb,CAEV,EAGR,gBAAgB,EACd,oBAAC,kBAAkB,IACjB,OAAO,EAAG;oBACR,OAAO,CAAS,8EAA8E,CAAC;oBAC/F,OAAO,CAAS,oGAAoG,CAAC;iBACtH,GACD,EAEJ,QAAQ,EACN;gBACE,keAEI,CACA,EAER,aAAa,EACX,gCAAO,EAET,GAAG,EACD;gBACE;oBACE,sLAA4J;oBAC5J,mFAAyD;oBACzD,+NAAqM,CAClM,CACD,EAER,KAAK,EACH,gCAAO,EAET,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAe,EAC5C,eAAe,EACb,oBAAC,eAAe,uBACV,cAAc,EAClB,GAEJ,CACH,CAAC;IACJ,CAAC;IACH,mBAAC;AAAD,CAAC,AA1DD,CAAkC,KAAK,CAAC,SAAS,GA0DhD","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  ExampleCard,\r\n  IComponentDemoPageProps,\r\n  ComponentPage,\r\n  PropertiesTableSet\r\n} from '@uifabric/example-app-base';\r\nimport { DropdownBasicExample } from './examples/Dropdown.Basic.Example';\r\nimport { DropdownCustomExample } from './examples/Dropdown.Custom.Example';\r\nimport { ComponentStatus } from '../../demo/ComponentStatus/ComponentStatus';\r\nimport { DropdownStatus } from './Dropdown.checklist';\r\n\r\nconst DropdownBasicExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Dropdown/examples/Dropdown.Basic.Example.tsx') as string;\r\nconst DropdownCustomExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Dropdown/examples/Dropdown.Custom.Example.tsx') as string;\r\n\r\nexport class DropdownPage extends React.Component<IComponentDemoPageProps, {}> {\r\n  public render() {\r\n    return (\r\n      <ComponentPage\r\n        title='Dropdown'\r\n        componentName='DropdownExample'\r\n        exampleCards={\r\n          <div>\r\n            <ExampleCard title='Dropdown' code={ DropdownBasicExampleCode }>\r\n              <DropdownBasicExample />\r\n            </ExampleCard>\r\n\r\n            <ExampleCard title='Customized Dropdown' code={ DropdownCustomExampleCode }>\r\n              <DropdownCustomExample />\r\n            </ExampleCard>\r\n\r\n          </div>\r\n\r\n        }\r\n        propertiesTables={\r\n          <PropertiesTableSet\r\n            sources={ [\r\n              require<string>('!raw-loader!office-ui-fabric-react/src/components/Dropdown/Dropdown.Props.ts'),\r\n              require<string>('!raw-loader!office-ui-fabric-react/src/utilities/selectableOption/SelectableDroppableText.Props.ts')\r\n            ] }\r\n          />\r\n        }\r\n        overview={\r\n          <div>\r\n            <p>\r\n              A Dropdown is a list in which the selected item is always visible, and the others are visible on demand by clicking a drop-down button. They are used to simplify the design and make a choice within the UI. When closed, only the selected item is visible. When users click the drop-down button, all the options become visible. To change the value, users open the list and click another value or use the arrow keys (up and down) to select a new value.\r\n            </p>\r\n          </div>\r\n        }\r\n        bestPractices={\r\n          <div />\r\n        }\r\n        dos={\r\n          <div>\r\n            <ul>\r\n              <li>Use a Dropdown when there are multiple choices that can be collapsed under one title. Or if the list of items is long or when space is constrained.</li>\r\n              <li>Dropdowns contain shortened statements or words.</li>\r\n              <li>Use a Dropdown when the selected option is more important than the alternatives (in contrast to radio buttons where all the choices are visible putting more emphasis on the other options).</li>\r\n            </ul>\r\n          </div>\r\n        }\r\n        donts={\r\n          <div />\r\n        }\r\n        isHeaderVisible={ this.props.isHeaderVisible }\r\n        componentStatus={\r\n          <ComponentStatus\r\n            {...DropdownStatus}\r\n          />\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n"]}