{"version":3,"file":"Icon.js","sourceRoot":"../src/","sources":["components/Icon/Icon.tsx"],"names":[],"mappings":";AAAA,oBAAoB;AACpB,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,mBAAmB;AACnB,OAAO,EAAc,QAAQ,EAAE,MAAM,cAAc,CAAC;AACpD,OAAO,EAAE,KAAK,EAAE,MAAM,gBAAgB,CAAC;AACvC,OAAO,EACL,GAAG,EACH,cAAc,EACd,qBAAqB,EACtB,MAAM,iBAAiB,CAAC;AACzB,OAAO,EAAE,OAAO,EAAe,MAAM,eAAe,CAAC;AACrD,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAElD,MAAM,CAAC,IAAM,IAAI,GAAG,UAAC,KAAiB;IAElC,IAAA,2BAAS,EACT,2BAAS,EACT,qBAAM,EACN,yBAAQ,CACC;IACX,IAAI,UAAU,GAAG,aAAa,CAC5B,MAAM,CACP,CAAC;IAEF,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,KAAK,QAAQ,CAAC,KAAK,IAAI,KAAK,CAAC,QAAQ,KAAK,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;QAC3E,IAAI,kBAAkB,GAAG,GAAG,CAC1B,SAAS,EACT,wBAAwB,EACxB,UAAU,CAAC,IAAI,EACf,UAAU,CAAC,cAAc,EACzB,SAAS,CACV,CAAC;QAEF,MAAM,CAAC,CACL,6BACE,SAAS,EACP,GAAG,CACD,kBAAkB,EAClB,UAAU,CAAC,IAAI,CAChB;YAEH,oBAAC,KAAK,uBAAM,KAAK,CAAC,UAAiB,EAAK,CACpC,CACP,CAAC;IACJ,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,QAAQ,KAAK,QAAQ,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;QACjE,MAAM,CAAC,CACL,0DACe,SAAS,IACjB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACrB,IAAI,EAAE,cAAc;YACpB,aAAa,EAAE,IAAI;SACpB,CAAC,EACG,cAAc,CAAC,KAAK,EAAE,qBAAqB,CAAC,IACjD,SAAS,EACP,GAAG,CACD,6BAA6B,EAC7B,UAAU,CAAC,kBAAkB,EAC7B,KAAK,CAAC,SAAS,CAChB,IACH,CACH,CAAC;IACJ,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,IAAI,cAAc,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI;YACxC,MAAM,EAAE;gBACN,SAAS,EAAE,SAAS;aACrB;YACD,IAAI,EAAE,SAAS;SAChB,CAAC;QAEF,MAAM,CAAC,CACL,0DACe,SAAS,IACjB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACrB,IAAI,EAAE,cAAc;YACpB,aAAa,EAAE,IAAI;YACnB,gBAAgB,EAAE,QAAQ;SAC3B,CAAC,EACG,cAAc,CAAC,KAAK,EAAE,qBAAqB,CAAC,IACjD,SAAS,EACP,GAAG,CACD,SAAS,EAAE,aAAa;YACxB,cAAc,CAAC,MAAM,CAAC,SAAS,EAC/B,UAAU,CAAC,IAAI,EACf,KAAK,CAAC,SAAS,CAChB,KAED,cAAc,CAAC,IAAI,CACnB,CACL,CAAC;IACJ,CAAC;AACH,CAAC,CAAC","sourcesContent":["/* tslint:disable */\r\nimport * as React from 'react';\r\n/* tslint:enable */\r\nimport { IIconProps, IconType } from './Icon.Props';\r\nimport { Image } from '../Image/Image';\r\nimport {\r\n  css,\r\n  getNativeProps,\r\n  htmlElementProperties\r\n} from '../../Utilities';\r\nimport { getIcon, IIconRecord } from '../../Styling';\r\nimport { getClassNames } from './Icon.classNames';\r\n\r\nexport const Icon = (props: IIconProps): JSX.Element => {\r\n  let {\r\n    ariaLabel,\r\n    className,\r\n    styles,\r\n    iconName\r\n   } = props;\r\n  let classNames = getClassNames(\r\n    styles\r\n  );\r\n\r\n  if (props.iconType === IconType.image || props.iconType === IconType.Image) {\r\n    let containerClassName = css(\r\n      'ms-Icon',\r\n      'ms-Icon-imageContainer',\r\n      classNames.root,\r\n      classNames.imageContainer,\r\n      className\r\n    );\r\n\r\n    return (\r\n      <div\r\n        className={\r\n          css(\r\n            containerClassName,\r\n            classNames.root\r\n          ) }\r\n      >\r\n        <Image { ...props.imageProps as any } />\r\n      </div>\r\n    );\r\n  } else if (typeof iconName === 'string' && iconName.length === 0) {\r\n    return (\r\n      <i\r\n        aria-label={ ariaLabel }\r\n        { ...(ariaLabel ? {} : {\r\n          role: 'presentation',\r\n          'aria-hidden': true\r\n        }) }\r\n        { ...getNativeProps(props, htmlElementProperties) }\r\n        className={\r\n          css(\r\n            'ms-Icon ms-Icon-placeHolder',\r\n            classNames.rootHasPlaceHolder,\r\n            props.className\r\n          ) }\r\n      />\r\n    );\r\n  } else {\r\n    let iconDefinition = getIcon(iconName) || {\r\n      subset: {\r\n        className: undefined\r\n      },\r\n      code: undefined\r\n    };\r\n\r\n    return (\r\n      <i\r\n        aria-label={ ariaLabel }\r\n        { ...(ariaLabel ? {} : {\r\n          role: 'presentation',\r\n          'aria-hidden': true,\r\n          'data-icon-name': iconName,\r\n        }) }\r\n        { ...getNativeProps(props, htmlElementProperties) }\r\n        className={\r\n          css(\r\n            'ms-Icon', // dangerous?\r\n            iconDefinition.subset.className,\r\n            classNames.root,\r\n            props.className\r\n          ) }\r\n      >\r\n        { iconDefinition.code }\r\n      </i>\r\n    );\r\n  }\r\n};\r\n"]}