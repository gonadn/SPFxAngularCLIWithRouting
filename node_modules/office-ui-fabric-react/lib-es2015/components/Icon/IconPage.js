import * as tslib_1 from "tslib";
import * as React from 'react';
import { ExampleCard, ComponentPage, PropertiesTableSet } from '@uifabric/example-app-base';
import { IconBasicExample } from './examples/Icon.Basic.Example';
import { IconSvgExample } from './examples/Icon.Svg.Example';
import { IconColorExample } from './examples/Icon.Color.Example';
import { IconImageSheetExample } from './examples/Icon.ImageSheet.Example';
import { ComponentStatus } from '../../demo/ComponentStatus/ComponentStatus';
import { IconStatus } from './Icon.checklist';
var IconBasicExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Icon/examples/Icon.Basic.Example.tsx');
var IconSvgExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Icon/examples/Icon.Svg.Example.tsx');
var IconColorExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Icon/examples/Icon.Color.Example.tsx');
var IconImageSheetExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Icon/examples/Icon.ImageSheet.Example.tsx');
var IconPage = /** @class */ (function (_super) {
    tslib_1.__extends(IconPage, _super);
    function IconPage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    IconPage.prototype.render = function () {
        return (React.createElement(ComponentPage, { title: 'Icon', componentName: 'IconExample', exampleCards: React.createElement("div", null,
                React.createElement(ExampleCard, { title: 'Icon', code: IconBasicExampleCode },
                    React.createElement(IconBasicExample, null)),
                React.createElement(ExampleCard, { title: 'Icon with custom color', code: IconColorExampleCode },
                    React.createElement(IconColorExample, null)),
                React.createElement(ExampleCard, { title: 'Icon using custom svg', code: IconSvgExampleCode },
                    React.createElement(IconSvgExample, null)),
                React.createElement(ExampleCard, { title: 'Icon using image sheet', code: IconImageSheetExampleCode },
                    React.createElement(IconImageSheetExample, null))), propertiesTables: React.createElement(PropertiesTableSet, { sources: [
                    require('!raw-loader!office-ui-fabric-react/src/components/Icon/Icon.Props.ts')
                ] }), overview: React.createElement("div", null,
                React.createElement("p", null, "In a computer's graphical user interface ( GUI ), an icon is an image that represents an application, a capability, or some other concept or specific entity with meaning for the user. An icon is usually selectable but can also be a nonselectable image such as a company's logo.")), bestPractices: React.createElement("div", null), dos: React.createElement("div", null,
                React.createElement("ul", null,
                    React.createElement("li", null, "Adjust to proper size to highlight importance but not occupying too much space."),
                    React.createElement("li", null, "Be simple and concise."))), donts: React.createElement("div", null,
                React.createElement("ul", null,
                    React.createElement("li", null, "Use Icons to show pictures."),
                    React.createElement("li", null, "Use photos or long sentences as icons."))), isHeaderVisible: this.props.isHeaderVisible, componentStatus: React.createElement(ComponentStatus, tslib_1.__assign({}, IconStatus)) }));
    };
    return IconPage;
}(React.Component));
export { IconPage };
//# sourceMappingURL=IconPage.js.map