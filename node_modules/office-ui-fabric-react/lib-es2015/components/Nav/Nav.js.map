{"version":3,"file":"Nav.js","sourceRoot":"../src/","sources":["components/Nav/Nav.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  autobind,\r\n  BaseComponent,\r\n  css,\r\n  divProperties,\r\n  getNativeProps,\r\n  getRTL\r\n} from '../../Utilities';\r\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\r\nimport { ActionButton, IButtonStyles } from '../../Button';\r\nimport { Icon } from '../../Icon';\r\nimport * as stylesImport from './Nav.scss';\r\nconst styles: any = stylesImport;\r\nimport { AnimationClassNames, mergeStyles } from '../../Styling';\r\nimport {\r\n  INav,\r\n  INavProps,\r\n  INavLinkGroup,\r\n  INavLink\r\n} from './Nav.Props';\r\n\r\n// The number pixels per indentation level for Nav links.\r\nconst _indentationSize: number = 14;\r\n\r\n// The number of pixels of left margin\r\nconst _baseIndent: number = 3;\r\n\r\n// The number of pixels of padding to add to the far side of the button (allows ellipsis to happen)\r\nconst _farSidePadding: number = 20;\r\n\r\n// global var used in _isLinkSelectedKey\r\nlet _urlResolver: HTMLAnchorElement | undefined;\r\n\r\nexport function isRelativeUrl(url: string): boolean {\r\n  // A URL is relative if it has no protocol.\r\n  return !!url && !/^[a-z0-9+-.]:\\/\\//i.test(url);\r\n}\r\n\r\nexport interface INavState {\r\n  isGroupCollapsed?: { [key: string]: boolean };\r\n  isLinkExpandStateChanged?: boolean;\r\n  selectedKey?: string;\r\n}\r\n\r\nexport class Nav extends BaseComponent<INavProps, INavState> implements INav {\r\n\r\n  public static defaultProps: INavProps = {\r\n    groups: null\r\n  };\r\n\r\n  private _hasExpandButton: boolean;\r\n\r\n  constructor(props: INavProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isGroupCollapsed: {},\r\n      isLinkExpandStateChanged: false,\r\n      selectedKey: props.initialSelectedKey || props.selectedKey,\r\n    };\r\n\r\n    if (props.groups) {\r\n      for (let group of props.groups) {\r\n        if (group.collapseByDefault && group.name) {\r\n          this.state.isGroupCollapsed![group.name] = true;\r\n        }\r\n      }\r\n    }\r\n    this._hasExpandButton = false;\r\n  }\r\n\r\n  public componentWillReceiveProps(newProps: INavProps) {\r\n    let newGroups = newProps.groups || [];\r\n    let isGroupCollapsed = this.state.isGroupCollapsed!;\r\n\r\n    // If the component's props were updated, new groups may have been added, which may have\r\n    // collapseByDefault set. Ensure that setting is respected for any new groups.\r\n    // (If isGroupCollapsed is already set for a group, don't overwrite that.)\r\n    let hasUpdated = false;\r\n    for (let newGroup of newGroups) {\r\n      if (newGroup.name && newGroup.collapseByDefault && !isGroupCollapsed.hasOwnProperty(newGroup.name)) {\r\n        isGroupCollapsed[newGroup.name] = true;\r\n        hasUpdated = true;\r\n      }\r\n    }\r\n\r\n    if (hasUpdated) {\r\n      this.setState({\r\n        isGroupCollapsed: isGroupCollapsed\r\n      });\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element | null {\r\n    const { groups, className, isOnTop } = this.props;\r\n\r\n    if (!groups) {\r\n      return null;\r\n    }\r\n\r\n    // When groups[x].name is specified or any of the links have children, the expand/collapse\r\n    // chevron button is shown and different padding is needed. _hasExpandButton marks this condition.\r\n    this._hasExpandButton = groups.some((group: INavLinkGroup) => {\r\n      return group ? !!group.name || (group.links && group.links.some((link: INavLink) => {\r\n        return !!(link && link.links && link.links.length);\r\n      })) : false;\r\n    });\r\n\r\n    const groupElements: React.ReactElement<{}>[] = groups.map(this._renderGroup);\r\n\r\n    return (\r\n      <FocusZone direction={ FocusZoneDirection.vertical }>\r\n        <nav\r\n          role='navigation'\r\n          className={ css(\r\n            'ms-Nav',\r\n            styles.root,\r\n            className,\r\n            isOnTop && css('is-onTop', styles.rootIsOnTop, AnimationClassNames.slideRightIn40)\r\n          ) }\r\n        >\r\n          { groupElements }\r\n        </nav>\r\n      </FocusZone>\r\n    );\r\n  }\r\n\r\n  public get selectedKey(): string | undefined {\r\n    return this.state.selectedKey;\r\n  }\r\n\r\n  private _onRenderLink(link: INavLink) {\r\n    return (<div className={ css('ms-Nav-linkText', styles.linkText) }>{ link.name }</div>);\r\n  }\r\n\r\n  private _renderNavLink(link: INavLink, linkIndex: number, nestingLevel: number) {\r\n    const isRtl: boolean = getRTL();\r\n    const paddingBefore = _indentationSize * nestingLevel + _baseIndent;\r\n    const buttonStyles: IButtonStyles = {\r\n      root: {\r\n        [isRtl ? 'paddingRight' : 'paddingLeft']: paddingBefore,\r\n        [isRtl ? 'paddingLeft' : 'paddingRight']: _farSidePadding,\r\n      },\r\n      textContainer: {\r\n        overflow: 'hidden',\r\n      },\r\n      label: {\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        overflow: 'hidden',\r\n        lineHeight: '36px'\r\n      }\r\n    };\r\n    let {\r\n      onRenderLink = this._onRenderLink\r\n    } = this.props;\r\n\r\n    // Prevent hijacking of the parent window if link.target is defined\r\n    const rel = link.url && link.target && !isRelativeUrl(link.url) ? 'noopener noreferrer' : undefined;\r\n\r\n    return (\r\n      <ActionButton\r\n        className={ mergeStyles(\r\n          'ms-Nav-link' + link.onClick && 'ms-Nav-linkButton',\r\n          styles.link,\r\n          link.onClick && !link.forceAnchor && styles.buttonEntry,\r\n          this._hasExpandButton && 'isOnExpanded') as string\r\n        }\r\n        styles={ buttonStyles }\r\n        href={ link.url || (link.forceAnchor ? 'javascript:' : undefined) }\r\n        iconProps={ { iconName: link.icon || '' } }\r\n        description={ link.title || link.name }\r\n        onClick={ link.onClick ? this._onNavButtonLinkClicked.bind(this, link) : this._onNavAnchorLinkClicked.bind(this, link) }\r\n        title={ link.title || link.name }\r\n        target={ link.target }\r\n        rel={ rel }\r\n        aria-label={ link.ariaLabel }\r\n      >\r\n        { onRenderLink(link, this._onRenderLink) }\r\n      </ActionButton>);\r\n  }\r\n\r\n  private _renderCompositeLink(link: INavLink, linkIndex: number, nestingLevel: number): React.ReactElement<{}> {\r\n    const isLinkSelected: boolean = this._isLinkSelected(link);\r\n    const isRtl: boolean = getRTL();\r\n    const absolutePositionString = `${_indentationSize * nestingLevel + 1}px`;\r\n\r\n    return (\r\n      <div\r\n        { ...getNativeProps(link, divProperties) }\r\n        key={ link.key || linkIndex }\r\n        className={ css(\r\n          'ms-Nav-compositeLink',\r\n          styles.compositeLink,\r\n          !!link.isExpanded && 'is-expanded',\r\n          isLinkSelected && 'is-selected',\r\n          !!link.isExpanded && styles.compositeLinkIsExpanded,\r\n          isLinkSelected && styles.compositeLinkIsSelected\r\n        ) }\r\n      >\r\n        { (link.links && link.links.length > 0 ?\r\n          <button\r\n            className={ mergeStyles(\r\n              'ms-Nav-chevronButton ms-Nav-chevronButton--link',\r\n              styles.chevronButton,\r\n              styles.chevronButtonLink,\r\n              isRtl && {\r\n                right: absolutePositionString,\r\n              },\r\n              !isRtl && {\r\n                left: absolutePositionString,\r\n              }) as string\r\n            }\r\n            onClick={ this._onLinkExpandClicked.bind(this, link) }\r\n            aria-label={ this.props.expandButtonAriaLabel }\r\n            aria-expanded={ link.isExpanded ? 'true' : 'false' }\r\n          >\r\n            <Icon\r\n              className={ css('ms-Nav-chevron', styles.chevronIcon, link.isExpanded) }\r\n              iconName='ChevronDown'\r\n            />\r\n          </button> : null\r\n        ) }\r\n        { this._renderNavLink(link, linkIndex, nestingLevel) }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _renderLink(link: INavLink, linkIndex: number, nestingLevel: number): React.ReactElement<{}> {\r\n    return (\r\n      <li key={ link.key || linkIndex } role='listitem' className={ css(styles.navItem) }>\r\n        { this._renderCompositeLink(link, linkIndex, nestingLevel) }\r\n        { (link.isExpanded ? this._renderLinks(link.links, ++nestingLevel) : null) }\r\n      </li>\r\n    );\r\n  }\r\n\r\n  private _renderLinks(links: INavLink[] | undefined, nestingLevel: number): React.ReactElement<{}> | null {\r\n    if (!links || !links.length) {\r\n      return null;\r\n    }\r\n    const linkElements: React.ReactElement<{}>[] = links.map(\r\n      (link: INavLink, linkIndex: number) => this._renderLink(link, linkIndex, nestingLevel));\r\n\r\n    return (\r\n      <ul role='list' aria-label={ this.props.ariaLabel } className={ css(styles.navItems) }>\r\n        { linkElements }\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  @autobind\r\n  private _renderGroup(group: INavLinkGroup, groupIndex: number): React.ReactElement<{}> {\r\n    const isGroupExpanded: boolean = !this.state.isGroupCollapsed![group.name!];\r\n\r\n    return (\r\n      <div\r\n        key={ groupIndex }\r\n        className={ css(\r\n          'ms-Nav-group',\r\n          styles.group,\r\n          isGroupExpanded && ('is-expanded ' + styles.groupIsExpanded)\r\n        ) }\r\n      >\r\n        { (group.name ?\r\n          <button\r\n            className={ css('ms-Nav-chevronButton ms-Nav-chevronButton--group ms-Nav-groupHeaderFontSize', styles.chevronButton, styles.chevronButtonIsGroup, styles.groupHeaderFontSize) }\r\n            onClick={ this._onGroupHeaderClicked.bind(this, group) }\r\n          >\r\n            <Icon\r\n              className={ css(\r\n                'ms-Nav-chevron',\r\n                styles.chevronIcon,\r\n                isGroupExpanded && styles.chevronIsExpanded\r\n              ) }\r\n              iconName='ChevronDown'\r\n            />\r\n            { group.name }\r\n          </button> : null)\r\n        }\r\n        <div className={ css('ms-Nav-groupContent', AnimationClassNames.slideDownIn20, styles.groupContent) }>\r\n          { this._renderLinks(group.links, 0 /* nestingLevel */) }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onGroupHeaderClicked(group: INavLinkGroup, ev: React.MouseEvent<HTMLElement>): void {\r\n    let { isGroupCollapsed } = this.state;\r\n    let groupKey = group.name!;\r\n    let isCollapsed = !isGroupCollapsed![groupKey];\r\n\r\n    if (group.onHeaderClick) {\r\n      group.onHeaderClick(ev, isCollapsed);\r\n    }\r\n\r\n    isGroupCollapsed![groupKey] = isCollapsed;\r\n    this.setState({ isGroupCollapsed: isGroupCollapsed });\r\n\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  private _onLinkExpandClicked(link: INavLink, ev: React.MouseEvent<HTMLElement>): void {\r\n    link.isExpanded = !link.isExpanded;\r\n    this.setState({ isLinkExpandStateChanged: true });\r\n\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  private _onNavAnchorLinkClicked(link: INavLink, ev: React.MouseEvent<HTMLElement>): void {\r\n    if (this.props.onLinkClick) {\r\n      this.props.onLinkClick(ev, link);\r\n    }\r\n\r\n    this.setState({ selectedKey: link.key });\r\n  }\r\n\r\n  private _onNavButtonLinkClicked(link: INavLink, ev: React.MouseEvent<HTMLElement>): void {\r\n    if (link.onClick) {\r\n      link.onClick(ev, link);\r\n    }\r\n\r\n    this.setState({ selectedKey: link.key });\r\n  }\r\n\r\n  private _isLinkSelected(link: INavLink): boolean {\r\n    // if caller passes in selectedKey, use it as first choice or\r\n    // if current state.selectedKey (from addressbar) is match to the link\r\n    if (this.props.selectedKey !== undefined) {\r\n      return link.key === this.props.selectedKey;\r\n    } else if (this.state.selectedKey !== undefined && link.key === this.state.selectedKey) {\r\n      return true;\r\n    }\r\n\r\n    // resolve is not supported for ssr\r\n    if (typeof (window) === 'undefined') {\r\n      return false;\r\n    }\r\n\r\n    if (!link.url) {\r\n      return false;\r\n    }\r\n\r\n    _urlResolver = _urlResolver || document.createElement('a');\r\n\r\n    _urlResolver.href = link.url || '';\r\n    const target: string = _urlResolver.href;\r\n\r\n    if (location.href === target) {\r\n      return true;\r\n    }\r\n\r\n    if (location.protocol + '//' + location.host + location.pathname === target) {\r\n      return true;\r\n    }\r\n\r\n    if (location.hash) {\r\n      // Match the hash to the url.\r\n      if (location.hash === link.url) {\r\n        return true;\r\n      }\r\n\r\n      // Match a rebased url. (e.g. #foo becomes http://hostname/foo)\r\n      _urlResolver.href = location.hash.substring(1);\r\n\r\n      return _urlResolver.href === target;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n"]}