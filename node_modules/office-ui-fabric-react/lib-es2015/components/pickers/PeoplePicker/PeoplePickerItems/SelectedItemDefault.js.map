{"version":3,"file":"SelectedItemDefault.js","sourceRoot":"../src/","sources":["components/pickers/PeoplePicker/PeoplePickerItems/SelectedItemDefault.tsx"],"names":[],"mappings":";AAAA,oBAAoB;AACpB,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,mBAAmB;AACnB,OAAO,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,uBAAuB,CAAC;AACnD,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAC;AAE5E,OAAO,EAAE,eAAe,EAAE,MAAM,wBAAwB,CAAC;AACzD,OAAO,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAC;AAChD,OAAO,KAAK,YAAY,MAAM,2BAA2B,CAAC;AAC1D,IAAM,MAAM,GAAQ,YAAY,CAAC;AAEjC,MAAM,CAAC,IAAM,mBAAmB,GAAmD,UAAC,qBAA6C;IAE7H,IAAA,iCAAI,EACJ,iDAAY,EACZ,mCAAK,EACL,yCAAQ,EACR,mEAAqB,CACG;IAE1B,IAAM,MAAM,GAAG,KAAK,EAAE,CAAC;IACvB,IAAM,iBAAiB,GAAG,UAAC,UAAoC;QAC7D,MAAM,CAAC;YACL,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBACf,UAAU,EAAE,CAAC;YACf,CAAC;QACH,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,MAAM,CAAC,CACL,6BACE,SAAS,EAAG,GAAG,CACb,4BAA4B,EAC5B,MAAM,CAAC,gBAAgB,YACrB,GAAC,cAAc,GAAG,MAAM,CAAC,0BAA0B,IAAG,QAAQ,iBAC9D,GAAC,aAAa,GAAG,MAAM,CAAC,eAAe,IAAG,IAAI,CAAC,eAAe,KAAK,eAAe,CAAC,OAAO,MAC7F,uBACmB,IAAI,2BACA,IAAI,0BACL,KAAK,EAC5B,IAAI,EAAG,UAAU,qBACC,sBAAsB,GAAG,MAAM;QAEjD,6BACE,SAAS,EAAG,GAAG,CAAC,uBAAuB,EAAE,MAAM,CAAC,WAAW,CAAC,EAC5D,EAAE,EAAG,sBAAsB,GAAG,MAAM;YAEpC,oBAAC,OAAO,uBACD,IAAI,IACT,QAAQ,EAAG,IAAI,CAAC,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,eAAe,CAAC,IAAI,EAC7E,IAAI,EAAG,WAAW,CAAC,MAAM,IACzB,CACE;QACN,oBAAC,UAAU,IACT,OAAO,EAAG,iBAAiB,CAAC,YAAY,CAAC,EACzC,SAAS,EAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAC/D,SAAS,EAAG,GAAG,CAAC,4BAA4B,EAAE,MAAM,CAAC,YAAY,CAAC,EAClE,SAAS,EAAG,qBAAqB,GACjC,CACG,CACR,CAAC;;AACJ,CAAC,CAAC","sourcesContent":["/* tslint:disable */\r\nimport * as React from 'react';\r\n/* tslint:enable */\r\nimport { css, getId } from '../../../../Utilities';\r\nimport { Persona, PersonaSize, PersonaPresence } from '../../../../Persona';\r\nimport { IPeoplePickerItemProps } from './PeoplePickerItem.Props';\r\nimport { ValidationState } from '../../BasePicker.Props';\r\nimport { IconButton } from '../../../../Button';\r\nimport * as stylesImport from './PickerItemsDefault.scss';\r\nconst styles: any = stylesImport;\r\n\r\nexport const SelectedItemDefault: (props: IPeoplePickerItemProps) => JSX.Element = (peoplePickerItemProps: IPeoplePickerItemProps) => {\r\n  let {\r\n    item,\r\n    onRemoveItem,\r\n    index,\r\n    selected,\r\n    removeButtonAriaLabel\r\n  } = peoplePickerItemProps;\r\n\r\n  const itemId = getId();\r\n  const onClickIconButton = (removeItem: (() => void) | undefined): () => void => {\r\n    return (): void => {\r\n      if (removeItem) {\r\n        removeItem();\r\n      }\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={ css(\r\n        'ms-PickerPersona-container',\r\n        styles.personaContainer,\r\n        { ['is-selected ' + styles.personaContainerIsSelected]: selected },\r\n        { ['is-invalid ' + styles.validationError]: item.ValidationState === ValidationState.warning }\r\n      ) }\r\n      data-is-focusable={ true }\r\n      data-is-sub-focuszone={ true }\r\n      data-selection-index={ index }\r\n      role={ 'listitem' }\r\n      aria-labelledby={ 'selectedItemPersona-' + itemId }\r\n    >\r\n      <div\r\n        className={ css('ms-PickerItem-content', styles.itemContent) }\r\n        id={ 'selectedItemPersona-' + itemId }\r\n      >\r\n        <Persona\r\n          { ...item }\r\n          presence={ item.presence !== undefined ? item.presence : PersonaPresence.none }\r\n          size={ PersonaSize.size28 }\r\n        />\r\n      </div>\r\n      <IconButton\r\n        onClick={ onClickIconButton(onRemoveItem) }\r\n        iconProps={ { iconName: 'Cancel', style: { fontSize: '12px' } } }\r\n        className={ css('ms-PickerItem-removeButton', styles.removeButton) }\r\n        ariaLabel={ removeButtonAriaLabel }\r\n      />\r\n    </div >\r\n  );\r\n};\r\n"]}