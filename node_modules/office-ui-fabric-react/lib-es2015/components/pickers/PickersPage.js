import * as tslib_1 from "tslib";
import * as React from 'react';
import { Link } from 'office-ui-fabric-react/lib/Link';
import { ExampleCard, ComponentPage, PropertiesTableSet } from '@uifabric/example-app-base';
import { PickerCustomResultExample } from './examples/Picker.CustomResult.Example';
import { TagPickerBasicExample } from './examples/TagPicker.Basic.Example';
import { ComponentStatus } from '../../demo/ComponentStatus/ComponentStatus';
import { PickersStatus } from './Pickers.checklist';
var TagPickerExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/pickers/examples/TagPicker.Basic.Example.tsx');
var PickerCustomResultExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/pickers/examples/Picker.CustomResult.Example.tsx');
var PickersPage = /** @class */ (function (_super) {
    tslib_1.__extends(PickersPage, _super);
    function PickersPage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PickersPage.prototype.render = function () {
        return (React.createElement(ComponentPage, { title: 'Pickers', componentName: 'PickersExample', exampleCards: React.createElement("div", null,
                React.createElement(ExampleCard, { title: 'Tag Picker', code: TagPickerExampleCode },
                    React.createElement(TagPickerBasicExample, null)),
                React.createElement(ExampleCard, { title: 'Custom Picker (Document Picker)', code: PickerCustomResultExampleCode },
                    React.createElement(PickerCustomResultExample, null))), propertiesTables: React.createElement(PropertiesTableSet, { sources: [
                    require('!raw-loader!office-ui-fabric-react/src/components/pickers/BasePicker.Props.ts')
                ] }), overview: React.createElement("div", null,
                React.createElement(Link, { target: '_blank', href: 'http://dev.office.com/fabric/components/Pickers' }, " Pickers "),
                React.createElement("span", null, " are used to pick recipients.")), isHeaderVisible: this.props.isHeaderVisible, componentStatus: React.createElement(ComponentStatus, tslib_1.__assign({}, PickersStatus)) }));
    };
    return PickersPage;
}(React.Component));
export { PickersPage };
//# sourceMappingURL=PickersPage.js.map