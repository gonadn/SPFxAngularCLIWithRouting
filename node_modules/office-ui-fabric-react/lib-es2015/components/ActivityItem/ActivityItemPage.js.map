{"version":3,"file":"ActivityItemPage.js","sourceRoot":"../src/","sources":["components/ActivityItem/ActivityItemPage.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EACL,WAAW,EACX,aAAa,EAEb,kBAAkB,EACnB,MAAM,4BAA4B,CAAC;AACpC,OAAO,sCAAsC,CAAC;AAC9C,OAAO,EAAE,wBAAwB,EAAE,MAAM,uCAAuC,CAAC;AACjF,OAAO,EAAE,0BAA0B,EAAE,MAAM,yCAAyC,CAAC;AACrF,OAAO,EAAE,0BAA0B,EAAE,MAAM,yCAAyC,CAAC;AAErF,IAAM,4BAA4B,GAAG,OAAO,CAAC,wGAAwG,CAAW,CAAC;AACjK,IAAM,8BAA8B,GAAG,OAAO,CAAC,0GAA0G,CAAW,CAAC;AACrK,IAAM,8BAA8B,GAAG,OAAO,CAAC,0GAA0G,CAAW,CAAC;AAErK;IAAsC,4CAA4C;IAAlF;;IAwDA,CAAC;IAvDQ,iCAAM,GAAb;QACE,MAAM,CAAC,CACL,oBAAC,aAAa,IACZ,KAAK,EAAC,cAAc,EACpB,aAAa,EAAC,cAAc,EAC5B,YAAY,EACV;gBACE,oBAAC,WAAW,IAAC,KAAK,EAAC,2BAA2B,EAAC,IAAI,EAAG,4BAA4B;oBAChF,oBAAC,wBAAwB,OAAG,CAChB;gBACd,oBAAC,WAAW,IAAC,KAAK,EAAC,8BAA8B,EAAC,IAAI,EAAG,8BAA8B;oBACrF,oBAAC,0BAA0B,OAAG,CAClB;gBACd,oBAAC,WAAW,IAAC,KAAK,EAAC,wBAAwB,EAAC,IAAI,EAAG,8BAA8B;oBAC/E,oBAAC,0BAA0B,OAAG,CAClB,CACV,EAER,gBAAgB,EACd,oBAAC,kBAAkB,IACjB,OAAO,EAAG;oBACR,OAAO,CAAS,sFAAsF,CAAC;iBACxG,GACD,EAEJ,QAAQ,EACN;gBACE,qMAEI,CACA,EAER,aAAa,EACX,gCAAO,EAET,GAAG,EACD;gBACE;oBACE,0PAAgO;oBAChO,uHAA6F,CAC1F,CACD,EAER,KAAK,EACH;gBACE;oBACE,4JAAkI,CAC/H,CACD,EAER,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAe,GAC5C,CACH,CAAC;IACJ,CAAC;IAEH,uBAAC;AAAD,CAAC,AAxDD,CAAsC,KAAK,CAAC,SAAS,GAwDpD","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  ExampleCard,\r\n  ComponentPage,\r\n  IComponentDemoPageProps,\r\n  PropertiesTableSet\r\n} from '@uifabric/example-app-base';\r\nimport './examples/ActivityItem.Example.scss';\r\nimport { ActivityItemBasicExample } from './examples/ActivityItem.Basic.Example';\r\nimport { ActivityItemPersonaExample } from './examples/ActivityItem.Persona.Example';\r\nimport { ActivityItemCompactExample } from './examples/ActivityItem.Compact.Example';\r\n\r\nconst ActivityItemBasicExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/ActivityItem/examples/ActivityItem.Basic.Example.tsx') as string;\r\nconst ActivityItemPersonaExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/ActivityItem/examples/ActivityItem.Persona.Example.tsx') as string;\r\nconst ActivityItemCompactExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/ActivityItem/examples/ActivityItem.Compact.Example.tsx') as string;\r\n\r\nexport class ActivityItemPage extends React.Component<IComponentDemoPageProps, {}> {\r\n  public render() {\r\n    return (\r\n      <ComponentPage\r\n        title='ActivityItem'\r\n        componentName='ActivityItem'\r\n        exampleCards={\r\n          <div>\r\n            <ExampleCard title='Activity Items with Icons' code={ ActivityItemBasicExampleCode }>\r\n              <ActivityItemBasicExample />\r\n            </ExampleCard>\r\n            <ExampleCard title='Activity Items with Personas' code={ ActivityItemPersonaExampleCode }>\r\n              <ActivityItemPersonaExample />\r\n            </ExampleCard>\r\n            <ExampleCard title='Compact Activity Items' code={ ActivityItemCompactExampleCode }>\r\n              <ActivityItemCompactExample />\r\n            </ExampleCard>\r\n          </div>\r\n        }\r\n        propertiesTables={\r\n          <PropertiesTableSet\r\n            sources={ [\r\n              require<string>('!raw-loader!office-ui-fabric-react/src/components/ActivityItem/ActivityItem.Props.ts')\r\n            ] }\r\n          />\r\n        }\r\n        overview={\r\n          <div>\r\n            <p>\r\n              ActivityItems represent individual units of a user's activity, such as making a comment, mentioning someone with an @mention, editing a document, or moving a file.\r\n            </p>\r\n          </div>\r\n        }\r\n        bestPractices={\r\n          <div />\r\n        }\r\n        dos={\r\n          <div>\r\n            <ul>\r\n              <li>Use a list of multiple ActivityItems to indicate a history of events relating to a single file, folder, user, or other entity. Alternatively, use a single ActivityItem to indicate the most recent event on an entity.</li>\r\n              <li>Group multiple similar events occuring near the same time into single ActivityItems.</li>\r\n            </ul>\r\n          </div>\r\n        }\r\n        donts={\r\n          <div>\r\n            <ul>\r\n              <li>Use ActivityItems to render large amounts of body text, they are meant to be concise descriptions of a specific activity.</li>\r\n            </ul>\r\n          </div>\r\n        }\r\n        isHeaderVisible={ this.props.isHeaderVisible }\r\n      />\r\n    );\r\n  }\r\n\r\n}\r\n"]}