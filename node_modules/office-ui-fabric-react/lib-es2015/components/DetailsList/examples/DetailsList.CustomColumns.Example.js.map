{"version":3,"file":"DetailsList.CustomColumns.Example.js","sourceRoot":"../src/","sources":["components/DetailsList/examples/DetailsList.CustomColumns.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\n/* tslint:enable:no-unused-variable */\r\nimport { createListItems } from '@uifabric/example-app-base';\r\nimport { autobind } from '../../../Utilities';\r\nimport { Link } from 'office-ui-fabric-react/lib/Link';\r\nimport { Image, ImageFit } from 'office-ui-fabric-react/lib/Image';\r\nimport {\r\n  DetailsList,\r\n  buildColumns,\r\n  IColumn\r\n} from 'office-ui-fabric-react/lib/DetailsList';\r\n\r\nlet _items: any[];\r\n\r\nexport interface IDetailsListCustomColumnsExampleState {\r\n  sortedItems?: any[];\r\n  columns?: IColumn[];\r\n}\r\n\r\nexport class DetailsListCustomColumnsExample extends React.Component<{}, IDetailsListCustomColumnsExampleState> {\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    _items = _items || createListItems(500);\r\n\r\n    this.state = {\r\n      sortedItems: _items,\r\n      columns: _buildColumns()\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    let { sortedItems, columns } = this.state;\r\n\r\n    return (\r\n      <DetailsList\r\n        items={ sortedItems as any[] }\r\n        setKey='set'\r\n        columns={ columns }\r\n        onRenderItemColumn={ _renderItemColumn }\r\n        onColumnHeaderClick={ this._onColumnClick }\r\n        onItemInvoked={ this._onItemInvoked }\r\n        onColumnHeaderContextMenu={ this._onColumnHeaderContextMenu }\r\n      />\r\n    );\r\n  }\r\n\r\n  @autobind\r\n  private _onColumnClick(event: React.MouseEvent<HTMLElement>, column: IColumn) {\r\n    let { sortedItems, columns } = this.state;\r\n    let isSortedDescending = column.isSortedDescending;\r\n\r\n    // If we've sorted this column, flip it.\r\n    if (column.isSorted) {\r\n      isSortedDescending = !isSortedDescending;\r\n    }\r\n\r\n    // Sort the items.\r\n    sortedItems = sortedItems!.concat([]).sort((a, b) => {\r\n      let firstValue = a[column.fieldName];\r\n      let secondValue = b[column.fieldName];\r\n\r\n      if (isSortedDescending) {\r\n        return firstValue > secondValue ? -1 : 1;\r\n      } else {\r\n        return firstValue > secondValue ? 1 : -1;\r\n      }\r\n    });\r\n\r\n    // Reset the items and columns to match the state.\r\n    this.setState({\r\n      sortedItems: sortedItems,\r\n      columns: columns!.map(col => {\r\n        col.isSorted = (col.key === column.key);\r\n\r\n        if (col.isSorted) {\r\n          col.isSortedDescending = isSortedDescending;\r\n        }\r\n\r\n        return col;\r\n      })\r\n    });\r\n  }\r\n\r\n  private _onColumnHeaderContextMenu(column: IColumn | undefined, ev: React.MouseEvent<HTMLElement> | undefined): void {\r\n    console.log(`column ${column!.key} contextmenu opened.`);\r\n  }\r\n\r\n  private _onItemInvoked(item: any, index: number | undefined): void {\r\n    alert(`Item ${item.name} at index ${index} has been invoked.`);\r\n  }\r\n}\r\n\r\nfunction _buildColumns() {\r\n  let columns = buildColumns(_items);\r\n\r\n  let thumbnailColumn = columns.filter(column => column.name === 'thumbnail')[0];\r\n\r\n  // Special case one column's definition.\r\n  thumbnailColumn.name = '';\r\n  thumbnailColumn.maxWidth = 50;\r\n\r\n  return columns;\r\n}\r\n\r\nfunction _renderItemColumn(item: any, index: number, column: IColumn) {\r\n  let fieldContent = item[column.fieldName];\r\n\r\n  switch (column.key) {\r\n    case 'thumbnail':\r\n      return <Image src={ fieldContent } width={ 50 } height={ 50 } imageFit={ ImageFit.cover } />;\r\n\r\n    case 'name':\r\n      return <Link href='#'>{ fieldContent }</Link>;\r\n\r\n    case 'color':\r\n      return <span data-selection-disabled={ true } style={ { color: fieldContent } }>{ fieldContent }</span>;\r\n\r\n    default:\r\n      return <span>{ fieldContent }</span>;\r\n  }\r\n}\r\n"]}