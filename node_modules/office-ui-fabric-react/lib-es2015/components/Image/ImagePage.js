import * as tslib_1 from "tslib";
import * as React from 'react';
import { ExampleCard, ComponentPage, PropertiesTableSet } from '@uifabric/example-app-base';
import './ImagePage.scss';
import { ImageDefaultExample } from './examples/Image.Default.Example';
import { ImageCenterExample } from './examples/Image.Center.Example';
import { ImageContainExample } from './examples/Image.Contain.Example';
import { ImageCoverExample } from './examples/Image.Cover.Example';
import { ImageNoneExample } from './examples/Image.None.Example';
import { ImageMaximizeFrameExample } from './examples/Image.MaximizeFrame.Example';
import { ComponentStatus } from '../../demo/ComponentStatus/ComponentStatus';
import { ImageStatus } from './Image.checklist';
var ImageDefaultExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Image/examples/Image.Default.Example.tsx');
var ImageCenterExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Image/examples/Image.Center.Example.tsx');
var ImageContainExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Image/examples/Image.Contain.Example.tsx');
var ImageCoverExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Image/examples/Image.Cover.Example.tsx');
var ImageNoneExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Image/examples/Image.None.Example.tsx');
var ImageMaximizeFrameExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Image/examples/Image.MaximizeFrame.Example.tsx');
var ImagePage = /** @class */ (function (_super) {
    tslib_1.__extends(ImagePage, _super);
    function ImagePage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ImagePage.prototype.render = function () {
        return (React.createElement(ComponentPage, { title: 'Image', componentName: 'ImageExample', exampleCards: React.createElement("div", null,
                React.createElement(ExampleCard, { title: 'ImageFit: Not specified', code: ImageDefaultExampleCode },
                    React.createElement(ImageDefaultExample, null)),
                React.createElement(ExampleCard, { title: 'ImageFit: None', code: ImageNoneExampleCode },
                    React.createElement(ImageNoneExample, null)),
                React.createElement(ExampleCard, { title: 'ImageFit: Center', code: ImageCenterExampleCode },
                    React.createElement(ImageCenterExample, null)),
                React.createElement(ExampleCard, { title: 'ImageFit: Contain', code: ImageContainExampleCode },
                    React.createElement(ImageContainExample, null)),
                React.createElement(ExampleCard, { title: 'ImageFit: Cover', code: ImageCoverExampleCode },
                    React.createElement(ImageCoverExample, null)),
                React.createElement(ExampleCard, { title: 'Maximizing the image frame', code: ImageMaximizeFrameExampleCode },
                    React.createElement(ImageMaximizeFrameExample, null))), propertiesTables: React.createElement(PropertiesTableSet, { sources: [
                    require('!raw-loader!office-ui-fabric-react/src/components/Image/Image.Props.ts')
                ] }), overview: React.createElement("div", null, "Images render an image. The borders have been added to these examples in order to help visualize empty space in the image frame."), bestPractices: React.createElement("div", null), dos: React.createElement("div", null,
                React.createElement("ul", null,
                    React.createElement("li", null,
                        "Provide descriptive values for the alt text attribute for all images. If alt text isn't provided for images, the image information is inaccessible, for example, to people who cannot see and use a screen reader that reads aloud the information on a page.",
                        React.createElement("ul", null,
                            React.createElement("li", null, "Consider context. If the image represents a function, be sure to indicate that. If it is to be consumed with other objects on the page, consider that as well."),
                            React.createElement("li", null, "Make the description brief but accurate. Use one sentence, two at the most."))))), donts: React.createElement("div", null,
                React.createElement("ul", null,
                    React.createElement("li", null, "Repeat information in your alt text that is already on the page. Don't use \"image of\" or \"graphic of\" to describe it, as that is already apparent to the reader."))), isHeaderVisible: this.props.isHeaderVisible, componentStatus: React.createElement(ComponentStatus, tslib_1.__assign({}, ImageStatus)) }));
    };
    return ImagePage;
}(React.Component));
export { ImagePage };
//# sourceMappingURL=ImagePage.js.map