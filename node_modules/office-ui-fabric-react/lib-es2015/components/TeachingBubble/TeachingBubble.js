import * as tslib_1 from "tslib";
/* tslint:disable:no-unused-variable */
import * as React from 'react';
/* tslint:enable:no-unused-variable */
import { BaseComponent, css } from '../../Utilities';
import { TeachingBubbleContent } from './TeachingBubbleContent';
import { Callout } from '../../Callout';
import * as stylesImport from './TeachingBubble.scss';
var styles = stylesImport;
var TeachingBubble = /** @class */ (function (_super) {
    tslib_1.__extends(TeachingBubble, _super);
    // Constructor
    function TeachingBubble(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {};
        return _this;
    }
    TeachingBubble.prototype.render = function () {
        var _a = this.props, calloutProps = _a.calloutProps, targetElement = _a.targetElement;
        return (React.createElement(Callout, tslib_1.__assign({ className: css('ms-TeachingBubble', styles.root), ref: this._resolveRef('_callout'), target: targetElement }, calloutProps),
            React.createElement(TeachingBubbleContent, tslib_1.__assign({}, this.props))));
    };
    // Specify default props values
    TeachingBubble.defaultProps = {
        calloutProps: {
            beakWidth: 16,
            gapSpace: 0,
            setInitialFocus: true,
            doNotLayer: false,
            directionalHint: 12 /* rightCenter */
        }
    };
    return TeachingBubble;
}(BaseComponent));
export { TeachingBubble };
//# sourceMappingURL=TeachingBubble.js.map