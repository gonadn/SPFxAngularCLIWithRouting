{"version":3,"file":"Slider.js","sourceRoot":"../src/","sources":["components/Slider/Slider.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  BaseComponent,\r\n  KeyCodes,\r\n  autobind,\r\n  css,\r\n  getId,\r\n  getRTL,\r\n  getRTLSafeKeyCode\r\n} from '../../Utilities';\r\nimport { ISliderProps, ISlider } from './Slider.Props';\r\nimport { Label } from '../../Label';\r\nimport * as stylesImport from './Slider.scss';\r\nconst styles: any = stylesImport;\r\n\r\nexport interface ISliderState {\r\n  value?: number;\r\n  renderedValue?: number;\r\n}\r\n\r\nexport enum ValuePosition {\r\n  Previous = 0,\r\n  Next = 1\r\n}\r\n\r\nexport class Slider extends BaseComponent<ISliderProps, ISliderState> implements ISlider {\r\n  public static defaultProps: {} = {\r\n    step: 1,\r\n    min: 0,\r\n    max: 10,\r\n    showValue: true,\r\n    disabled: false,\r\n    vertical: false,\r\n    buttonProps: {}\r\n  };\r\n\r\n  public refs: {\r\n    [key: string]: React.ReactInstance,\r\n    root: HTMLElement,\r\n    sliderLine: HTMLElement,\r\n    thumb: HTMLElement\r\n  };\r\n\r\n  private _id: string;\r\n\r\n  constructor(props: ISliderProps) {\r\n    super(props);\r\n\r\n    this._warnMutuallyExclusive({\r\n      'value': 'defaultValue'\r\n    });\r\n\r\n    this._id = getId('Slider');\r\n\r\n    let value = props.value || props.defaultValue || props.min;\r\n\r\n    this.state = {\r\n      value: value,\r\n      renderedValue: value\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Invoked when a component is receiving new props. This method is not called for the initial render.\r\n   */\r\n  public componentWillReceiveProps(newProps: ISliderProps): void {\r\n\r\n    if (newProps.value !== undefined) {\r\n      let value = Math.max(newProps.min as number, Math.min(newProps.max as number, newProps.value));\r\n\r\n      this.setState({\r\n        value: value,\r\n        renderedValue: value\r\n      });\r\n    }\r\n  }\r\n\r\n  public render(): React.ReactElement<{}> {\r\n    const {\r\n      ariaLabel,\r\n      className,\r\n      disabled,\r\n      label,\r\n      max,\r\n      min,\r\n      showValue,\r\n      buttonProps,\r\n      vertical\r\n    } = this.props;\r\n    const { value, renderedValue } = this.state;\r\n    const thumbOffsetPercent: number = (renderedValue! - min!) / (max! - min!) * 100;\r\n    const lengthString = vertical ? 'height' : 'width';\r\n    const onMouseDownProp: {} = disabled ? {} : { onMouseDown: this._onMouseDownOrTouchStart };\r\n    const onTouchStartProp: {} = disabled ? {} : { onTouchStart: this._onMouseDownOrTouchStart };\r\n    const onKeyDownProp: {} = disabled ? {} : { onKeyDown: this._onKeyDown };\r\n\r\n    return (\r\n      <div\r\n        className={ css('ms-Slider', styles.root, className, {\r\n          ['ms-Slider-enabled ' + styles.rootIsEnabled]: !disabled,\r\n          ['ms-Slider-disabled ' + styles.rootIsDisabled]: disabled,\r\n          ['ms-Slider-row ' + styles.rootIsHorizontal]: !vertical,\r\n          ['ms-Slider-column ' + styles.rootIsVertical]: vertical\r\n        }) }\r\n        ref='root'\r\n      >\r\n        { label && (\r\n          <Label className={ styles.titleLabel } { ...ariaLabel ? {} : { 'htmlFor': this._id } }>\r\n            { label }\r\n          </Label>\r\n        ) }\r\n        <div className={ css('ms-Slider-container', styles.container) }>\r\n          <button\r\n            aria-valuenow={ value }\r\n            aria-valuemin={ min }\r\n            aria-valuemax={ max }\r\n            aria-valuetext={ this._getAriaValueText(value) }\r\n            aria-label={ ariaLabel || label }\r\n            { ...onMouseDownProp }\r\n            { ...onTouchStartProp }\r\n            { ...onKeyDownProp }\r\n            { ...buttonProps }\r\n            className={ css(\r\n              'ms-Slider-slideBox',\r\n              styles.slideBox,\r\n              buttonProps!.className,\r\n              !!showValue && 'ms-Slider-showValue',\r\n              (renderedValue === value) && ('ms-Slider-showTransitions ' + styles.showTransitions)\r\n            ) }\r\n            id={ this._id }\r\n            disabled={ disabled }\r\n            type='button'\r\n            role='slider'\r\n          >\r\n            <div\r\n              ref='sliderLine'\r\n              className={ css('ms-Slider-line', styles.line) }\r\n            >\r\n              <span\r\n                ref='thumb'\r\n                className={ css('ms-Slider-thumb', styles.thumb) }\r\n                style={ this._getThumbStyle(vertical, thumbOffsetPercent) }\r\n              />\r\n              <span\r\n                className={ css('ms-Slider-active', styles.lineContainer, styles.activeSection) }\r\n                style={ { [lengthString]: thumbOffsetPercent + '%' } }\r\n              />\r\n              <span\r\n                className={ css('ms-Slider-inactive', styles.lineContainer, styles.inactiveSection) }\r\n                style={ { [lengthString]: (100 - thumbOffsetPercent) + '%' } }\r\n              />\r\n            </div>\r\n          </button>\r\n          { showValue && <Label className={ css('ms-Slider-value', styles.valueLabel) }>{ value }</Label> }\r\n        </div>\r\n      </div>\r\n    ) as React.ReactElement<{}>;\r\n  }\r\n  public focus(): void {\r\n    if (this.refs.thumb) {\r\n      this.refs.thumb.focus();\r\n    }\r\n  }\r\n\r\n  public get value(): number | undefined {\r\n    return this.state.value;\r\n  }\r\n\r\n  @autobind\r\n  private _getAriaValueText(value: number | undefined): string | void {\r\n    if (this.props.ariaValueText && value !== undefined) {\r\n      return this.props.ariaValueText(value);\r\n    }\r\n  }\r\n\r\n  private _getThumbStyle(vertical: boolean | undefined, thumbOffsetPercent: number): any {\r\n    let direction: string = vertical ? 'bottom' : (getRTL() ? 'right' : 'left');\r\n    return {\r\n      [direction]: thumbOffsetPercent + '%'\r\n    };\r\n  }\r\n\r\n  @autobind\r\n  private _onMouseDownOrTouchStart(event: MouseEvent | TouchEvent): void {\r\n    if (event.type === 'mousedown') {\r\n      this._events.on(window, 'mousemove', this._onMouseMoveOrTouchMove, true);\r\n      this._events.on(window, 'mouseup', this._onMouseUpOrTouchEnd, true);\r\n    } else if (event.type === 'touchstart') {\r\n      this._events.on(window, 'touchmove', this._onMouseMoveOrTouchMove, true);\r\n      this._events.on(window, 'touchend', this._onMouseUpOrTouchEnd, true);\r\n    }\r\n    this._onMouseMoveOrTouchMove(event, true);\r\n  }\r\n\r\n  @autobind\r\n  private _onMouseMoveOrTouchMove(event: MouseEvent | TouchEvent, suppressEventCancelation?: boolean): void {\r\n    const { max, min, step } = this.props;\r\n    const steps: number = (max! - min!) / step!;\r\n    const sliderPositionRect: ClientRect = this.refs.sliderLine.getBoundingClientRect();\r\n    const sliderLength: number = !this.props.vertical ? sliderPositionRect.width : sliderPositionRect.height;\r\n    const stepLength: number = sliderLength / steps;\r\n    let currentSteps: number | undefined;\r\n    let distance: number | undefined;\r\n\r\n    if (!this.props.vertical) {\r\n      let left: number | undefined = this._getPosition(event, this.props.vertical);\r\n      distance = getRTL() ? sliderPositionRect.right - left! : left! - sliderPositionRect.left;\r\n      currentSteps = distance / stepLength;\r\n    } else {\r\n      let bottom: number | undefined = this._getPosition(event, this.props.vertical);\r\n      distance = sliderPositionRect.bottom - bottom!;\r\n      currentSteps = distance / stepLength;\r\n    }\r\n\r\n    let currentValue: number | undefined;\r\n    let renderedValue: number | undefined;\r\n\r\n    // The value shouldn't be bigger than max or be smaller than min.\r\n    if (currentSteps! > Math.floor(steps)) {\r\n      renderedValue = currentValue = max as number;\r\n    } else if (currentSteps! < 0) {\r\n      renderedValue = currentValue = min as number;\r\n    } else {\r\n      renderedValue = min! + step! * currentSteps!;\r\n      currentValue = min! + step! * Math.round(currentSteps!);\r\n    }\r\n\r\n    this._updateValue(currentValue, renderedValue);\r\n\r\n    if (!suppressEventCancelation) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  private _getPosition(event: MouseEvent | TouchEvent, vertical: boolean | undefined): number | undefined {\r\n    let currentPosition: number | undefined;\r\n    switch (event.type) {\r\n      case 'mousedown':\r\n      case 'mousemove':\r\n        currentPosition = !vertical ? (event as MouseEvent).clientX : (event as MouseEvent).clientY;\r\n        break;\r\n      case 'touchstart':\r\n      case 'touchmove':\r\n        currentPosition = !vertical ? (event as TouchEvent).touches[0].clientX : (event as TouchEvent).touches[0].clientY;\r\n        break;\r\n    }\r\n    return currentPosition;\r\n  }\r\n  private _updateValue(value: number, renderedValue: number) {\r\n    let interval: number = 1.0 / this.props.step!;\r\n    // Make sure value has correct number of decimal places based on steps without JS's floating point issues\r\n    let roundedValue: number = Math.round(value * interval) / interval;\r\n\r\n    let valueChanged = roundedValue !== this.state.value;\r\n\r\n    this.setState({\r\n      value: roundedValue,\r\n      renderedValue\r\n    }, () => {\r\n      if (valueChanged && this.props.onChange) {\r\n        this.props.onChange(this.state.value as number);\r\n      }\r\n    });\r\n  }\r\n\r\n  @autobind\r\n  private _onMouseUpOrTouchEnd(): void {\r\n    // Synchronize the renderedValue to the actual value.\r\n    this.setState({\r\n      renderedValue: this.state.value\r\n    });\r\n\r\n    this._events.off();\r\n  }\r\n\r\n  @autobind\r\n  private _onKeyDown(event: KeyboardEvent): void {\r\n    let value: number | undefined = this.state.value;\r\n    const { max, min, step } = this.props;\r\n\r\n    let diff: number | undefined = 0;\r\n\r\n    switch (event.which) {\r\n      case getRTLSafeKeyCode(KeyCodes.left):\r\n      case KeyCodes.down:\r\n        diff = -(step as number);\r\n        break;\r\n      case getRTLSafeKeyCode(KeyCodes.right):\r\n      case KeyCodes.up:\r\n        diff = step;\r\n        break;\r\n\r\n      case KeyCodes.home:\r\n        value = min;\r\n        break;\r\n\r\n      case KeyCodes.end:\r\n        value = max;\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n\r\n    const newValue: number = Math.min(max as number, Math.max(min as number, value! + diff!));\r\n\r\n    this._updateValue(newValue, newValue);\r\n\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n  }\r\n\r\n}\r\n"]}