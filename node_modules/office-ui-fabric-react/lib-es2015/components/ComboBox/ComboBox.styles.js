import { FontSizes, FontWeights, concatStyleSets, getFocusStyle } from '../../Styling';
import { memoizeFunction } from '../../Utilities';
var MS_HIGHCONTRAST_ACTIVE = '@media screen and (-ms-high-contrast: active)';
var ComboBoxHeight = '32px';
var ComboBoxLineHeight = '30px';
var ComboxBoxCaretDownWidth = '32px';
var ComboBoxOptionHeight = '36px';
var getDisabledStyles = memoizeFunction(function (theme) {
    var semanticColors = theme.semanticColors;
    return {
        backgroundColor: semanticColors.disabledBackground,
        borderColor: semanticColors.disabledBackground,
        color: semanticColors.disabledText,
        cursor: 'default',
        selectors: (_a = {},
            _a[MS_HIGHCONTRAST_ACTIVE] = {
                borderColor: 'GrayText',
                color: 'GrayText'
            },
            _a),
    };
    var _a;
});
var getListOptionHighContrastStyles = memoizeFunction(function (theme) {
    return {
        selectors: (_a = {},
            _a[MS_HIGHCONTRAST_ACTIVE] = {
                backgroundColor: 'Highlight',
                borderColor: 'Highlight',
                color: 'HighlightText',
                MsHighContrastAdjust: 'none'
            },
            _a),
    };
    var _a;
});
export var getOptionStyles = memoizeFunction(function (theme, customStylesForAllOptions, customOptionStylesForCurrentOption) {
    var semanticColors = theme.semanticColors, palette = theme.palette;
    var ComboBoxOptionBackgroundSelected = semanticColors.menuItemBackgroundChecked;
    var ComboBoxOptionBackgroundHovered = semanticColors.menuItemBackgroundHovered;
    var ComboBoxOptionTextColorHovered = semanticColors.bodyText;
    var ComboBoxOptionTextColorSelected = palette.black;
    var ComboBoxOptionTextColorDisabled = semanticColors.disabledText;
    var ComboBoxOptionBackgroundDisabled = semanticColors.disabledBackground;
    var optionStyles = {
        root: [
            {
                backgroundColor: 'transparent',
                boxSizing: 'border-box',
                cursor: 'pointer',
                display: 'block',
                width: '100%',
                height: 'auto',
                minHeight: ComboBoxOptionHeight,
                lineHeight: '20px',
                padding: '5px 16px',
                position: 'relative',
                borderWidth: '1px',
                borderStyle: 'solid',
                borderColor: 'transparent',
                wordWrap: 'break-word',
                overflowWrap: 'break-word',
                textAlign: 'left',
                selectors: (_a = {},
                    _a[MS_HIGHCONTRAST_ACTIVE] = {
                        borderColor: 'Background'
                    },
                    _a)
            },
            getFocusStyle(theme),
        ],
        rootHovered: {
            color: ComboBoxOptionTextColorHovered
        },
        rootFocused: {
            backgroundColor: ComboBoxOptionBackgroundHovered
        },
        rootPressed: {
            backgroundColor: ComboBoxOptionBackgroundHovered,
            color: ComboBoxOptionTextColorSelected
        },
        rootChecked: [
            {
                backgroundColor: ComboBoxOptionBackgroundSelected,
                color: ComboBoxOptionTextColorSelected
            },
            getFocusStyle(theme),
            getListOptionHighContrastStyles(theme)
        ],
        rootDisabled: {
            backgroundColor: ComboBoxOptionBackgroundDisabled,
            color: ComboBoxOptionTextColorDisabled,
            cursor: 'default',
            selectors: {
                '& .ms-Button-flexContainer': {
                    justifyContent: 'flex-start'
                }
            }
        },
        optionText: {
            overflow: 'hidden',
            whiteSpace: 'nowrap',
            textOverflow: 'ellipsis',
            minWidth: '0px',
            maxWidth: '100%',
            wordWrap: 'break-word',
            overflowWrap: 'break-word',
            margin: '1px',
        }
    };
    return concatStyleSets(optionStyles, customStylesForAllOptions, customOptionStylesForCurrentOption);
    var _a;
});
export var getCaretDownButtonStyles = memoizeFunction(function (theme, customStyles) {
    var palette = theme.palette;
    var caretButtonTextColor = palette.neutralDark;
    var caretButtonBackgroundHovered = palette.neutralQuaternaryAlt;
    var caretButtonBackgroundActive = palette.neutralTertiaryAlt;
    var styles = {
        root: {
            color: caretButtonTextColor,
            fontSize: FontSizes.small,
            position: 'absolute',
            height: ComboBoxHeight,
            lineHeight: ComboBoxLineHeight,
            width: ComboxBoxCaretDownWidth,
            textAlign: 'center',
            cursor: 'default',
            selectors: (_a = {},
                _a[MS_HIGHCONTRAST_ACTIVE] = {
                    backgroundColor: 'ButtonFace',
                    borderColor: 'ButtonText',
                    color: 'ButtonText',
                    MsHighContrastAdjust: 'none'
                },
                _a)
        },
        rootHovered: {
            backgroundColor: caretButtonBackgroundHovered
        },
        rootPressed: {
            backgroundColor: caretButtonBackgroundActive
        },
        rootDisabled: getDisabledStyles(theme),
    };
    return concatStyleSets(styles, customStyles);
    var _a;
});
export var getStyles = memoizeFunction(function (theme, customStyles, comboBoxOptionWidth) {
    var semanticColors = theme.semanticColors, fonts = theme.fonts, palette = theme.palette;
    var ComboBoxRootBackground = semanticColors.bodyBackground;
    var ComboBoxRootTextColor = semanticColors.bodyText;
    var ComboBoxRootBorderColor = palette.neutralTertiaryAlt;
    var ComboBoxRootBorderColorHovered = semanticColors.inputFocusBorderAlt;
    var ComboBoxRootColorErrored = semanticColors.errorText;
    var ComboBoxCalloutBorderColor = palette.neutralLight;
    var ComboBoxOptionHeaderTextColor = semanticColors.menuHeader;
    var ComboBoxOptionDividerBorderColor = semanticColors.bodyDivider;
    var styles = {
        container: {},
        label: {},
        labelDisabled: {},
        root: [
            fonts.medium,
            {
                boxShadow: 'none',
                marginBottom: '10px',
                marginLeft: '0',
                paddingTop: '0',
                paddingRight: ComboxBoxCaretDownWidth,
                paddingBottom: '0',
                paddingLeft: '12px',
                color: ComboBoxRootTextColor,
                position: 'relative',
                outline: '0',
                userSelect: 'none',
                backgroundColor: ComboBoxRootBackground,
                borderWidth: '1px',
                borderStyle: 'solid',
                borderColor: ComboBoxRootBorderColor,
                cursor: 'text',
                display: 'block',
                height: ComboBoxHeight,
                lineHeight: ComboBoxLineHeight,
                overflow: 'hidden',
                whiteSpace: 'nowrap',
                textOverflow: 'ellipsis',
                boxSizing: 'content-box',
                selectors: {
                    '.ms-Label': {
                        display: 'inline-block',
                        marginBottom: '8px',
                    }
                }
            }
        ],
        rootHovered: {
            borderColor: ComboBoxRootBorderColorHovered,
            selectors: (_a = {},
                _a[MS_HIGHCONTRAST_ACTIVE] = {
                    color: 'HighlightText',
                    borderColor: 'Highlight',
                    MsHighContrastAdjust: 'none'
                },
                _a),
        },
        rootFocused: {
            borderColor: ComboBoxRootBorderColorHovered,
            selectors: (_b = {},
                _b[MS_HIGHCONTRAST_ACTIVE] = {
                    color: 'HighlightText',
                    borderColor: 'Highlight',
                    MsHighContrastAdjust: 'none'
                },
                _b),
        },
        rootDisabled: getDisabledStyles(theme),
        rootError: {
            borderColor: ComboBoxRootColorErrored,
            marginBottom: '5px'
        },
        rootDisallowFreeForm: {},
        input: {
            boxSizing: 'border-box',
            width: '100%',
            height: '30px',
            borderStyle: 'none',
            outline: 'none',
            font: 'inherit',
            textOverflow: 'ellipsis',
            padding: '0',
            margin: '1px 0px'
        },
        inputDisabled: getDisabledStyles(theme),
        errorMessage: {
            color: ComboBoxRootColorErrored
        },
        callout: {
            boxShadow: '0 0px 5px 0px rgba(0, 0, 0, 0.4)',
            borderWidth: '1px',
            borderStyle: 'solid',
            borderColor: ComboBoxCalloutBorderColor,
        },
        optionsContainerWrapper: {
            width: comboBoxOptionWidth
        },
        optionsContainer: {
            display: 'block'
        },
        header: [
            fonts.medium,
            {
                fontWeight: FontWeights.semibold,
                color: ComboBoxOptionHeaderTextColor,
                backgroundColor: 'none',
                borderStyle: 'none',
                height: ComboBoxOptionHeight,
                lineHeight: ComboBoxOptionHeight,
                cursor: 'default',
                padding: '0px 16px',
                userSelect: 'none',
                textAlign: 'left'
            }
        ],
        divider: {
            borderWidth: '1px',
            borderStyle: 'solid',
            borderColor: ComboBoxOptionDividerBorderColor
        }
    };
    return concatStyleSets(styles, customStyles);
    var _a, _b;
});
//# sourceMappingURL=ComboBox.styles.js.map