{"version":3,"file":"DatePicker.Bounded.Example.js","sourceRoot":"../src/","sources":["components/DatePicker/examples/DatePicker.Bounded.Example.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EACL,UAAU,EACV,SAAS,EAEV,MAAM,uCAAuC,CAAC;AAC/C,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,sCAAsC,CAAC;AAE3E,IAAM,KAAK,GAAS,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;AACzC,IAAM,OAAO,GAAS,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3C,IAAM,OAAO,GAAS,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AACzC,IAAM,WAAW,GAAG,oLAAkL,OAAO,CAAC,kBAAkB,EAAE,SAAI,OAAO,CAAC,kBAAkB,EAAI,CAAC;AAErQ,IAAM,gBAAgB,GAAuB;IAC3C,MAAM,EAAE;QACN,SAAS;QACT,UAAU;QACV,OAAO;QACP,OAAO;QACP,KAAK;QACL,MAAM;QACN,MAAM;QACN,QAAQ;QACR,WAAW;QACX,SAAS;QACT,UAAU;QACV,UAAU;KACX;IAED,WAAW,EAAE;QACX,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;KACN;IAED,IAAI,EAAE;QACJ,QAAQ;QACR,QAAQ;QACR,SAAS;QACT,WAAW;QACX,UAAU;QACV,QAAQ;QACR,UAAU;KACX;IAED,SAAS,EAAE;QACT,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;KACJ;IAED,SAAS,EAAE,aAAa;IACxB,kBAAkB,EAAE,sBAAsB;IAC1C,kBAAkB,EAAE,kBAAkB;IACtC,iBAAiB,EAAE,qBAAqB;IACxC,iBAAiB,EAAE,iBAAiB;IAEpC,sBAAsB,EAAE,oBAAoB;IAE5C,wBAAwB,EAAE,sBAAsB;IAEhD,yBAAyB,EAAE,0BAAwB,OAAO,CAAC,kBAAkB,EAAE,SAAI,OAAO,CAAC,kBAAkB,EAAI;CAClH,CAAC;AAMF;IAA8C,oDAAqD;IACjG;QAAA,YACE,iBAAO,SAKR;QAHC,KAAI,CAAC,KAAK,GAAG;YACX,cAAc,EAAE,SAAS,CAAC,MAAM;SACjC,CAAC;;IACJ,CAAC;IAEM,yCAAM,GAAb;QACQ,IAAA,0CAAc,CAAgB;QAEpC,MAAM,CAAC,CACL;YACE,+BAAK,WAAW,CAAM;YACtB,oBAAC,UAAU,IACT,UAAU,EAAG,KAAK,EAClB,cAAc,EAAG,cAAc,EAC/B,OAAO,EAAG,gBAAgB,EAC1B,WAAW,EAAC,kBAAkB,EAC9B,OAAO,EAAG,OAAO,EACjB,OAAO,EAAG,OAAO,EACjB,cAAc,EAAG,IAAI,GACrB,CACE,CACP,CAAC;IACJ,CAAC;IACH,+BAAC;AAAD,CAAC,AA3BD,CAA8C,KAAK,CAAC,SAAS,GA2B5D","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  DatePicker,\r\n  DayOfWeek,\r\n  IDatePickerStrings\r\n} from 'office-ui-fabric-react/lib/DatePicker';\r\nimport { addMonths, addYears } from '../../../utilities/dateMath/DateMath';\r\n\r\nconst today: Date = new Date(Date.now());\r\nconst minDate: Date = addMonths(today, -1);\r\nconst maxDate: Date = addYears(today, 1);\r\nconst description = `When date boundaries are set (via minDate and maxDate props) the DatePicker will not allow out-of-bounds dates to be picked or entered. In this example, the allowed dates are ${minDate.toLocaleDateString()}-${maxDate.toLocaleDateString()}`;\r\n\r\nconst DayPickerStrings: IDatePickerStrings = {\r\n  months: [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n  ],\r\n\r\n  shortMonths: [\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Apr',\r\n    'May',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Dec'\r\n  ],\r\n\r\n  days: [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday'\r\n  ],\r\n\r\n  shortDays: [\r\n    'S',\r\n    'M',\r\n    'T',\r\n    'W',\r\n    'T',\r\n    'F',\r\n    'S'\r\n  ],\r\n\r\n  goToToday: 'Go to today',\r\n  prevMonthAriaLabel: 'Go to previous month',\r\n  nextMonthAriaLabel: 'Go to next month',\r\n  prevYearAriaLabel: 'Go to previous year',\r\n  nextYearAriaLabel: 'Go to next year',\r\n\r\n  isRequiredErrorMessage: 'Field is required.',\r\n\r\n  invalidInputErrorMessage: 'Invalid date format.',\r\n\r\n  isOutOfBoundsErrorMessage: `Date must be between ${minDate.toLocaleDateString()}-${maxDate.toLocaleDateString()}`\r\n};\r\n\r\nexport interface IDatePickerRequiredExampleState {\r\n  firstDayOfWeek?: DayOfWeek;\r\n}\r\n\r\nexport class DatePickerBoundedExample extends React.Component<any, IDatePickerRequiredExampleState> {\r\n  public constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      firstDayOfWeek: DayOfWeek.Sunday\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    let { firstDayOfWeek } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <p>{ description }</p>\r\n        <DatePicker\r\n          isRequired={ false }\r\n          firstDayOfWeek={ firstDayOfWeek }\r\n          strings={ DayPickerStrings }\r\n          placeholder='Select a date...'\r\n          minDate={ minDate }\r\n          maxDate={ maxDate }\r\n          allowTextInput={ true }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}"]}