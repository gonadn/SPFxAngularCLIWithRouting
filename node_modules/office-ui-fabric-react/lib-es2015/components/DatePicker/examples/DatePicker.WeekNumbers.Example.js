import * as tslib_1 from "tslib";
import * as React from 'react';
import { autobind } from '../../../Utilities';
import { Dropdown } from 'office-ui-fabric-react/lib/Dropdown';
import { DatePicker, DayOfWeek } from 'office-ui-fabric-react/lib/DatePicker';
var DayPickerStrings = {
    months: [
        'January',
        'February',
        'March',
        'April',
        'May',
        'June',
        'July',
        'August',
        'September',
        'October',
        'November',
        'December'
    ],
    shortMonths: [
        'Jan',
        'Feb',
        'Mar',
        'Apr',
        'May',
        'Jun',
        'Jul',
        'Aug',
        'Sep',
        'Oct',
        'Nov',
        'Dec'
    ],
    days: [
        'Sunday',
        'Monday',
        'Tuesday',
        'Wednesday',
        'Thursday',
        'Friday',
        'Saturday'
    ],
    shortDays: [
        'S',
        'M',
        'T',
        'W',
        'T',
        'F',
        'S'
    ],
    goToToday: 'Go to today',
    prevMonthAriaLabel: 'Go to previous month',
    nextMonthAriaLabel: 'Go to next month',
    prevYearAriaLabel: 'Go to previous year',
    nextYearAriaLabel: 'Go to next year'
};
var DatePickerWeekNumbersExample = /** @class */ (function (_super) {
    tslib_1.__extends(DatePickerWeekNumbersExample, _super);
    function DatePickerWeekNumbersExample() {
        var _this = _super.call(this) || this;
        _this.state = {
            firstDayOfWeek: DayOfWeek.Monday
        };
        return _this;
    }
    DatePickerWeekNumbersExample.prototype.render = function () {
        var firstDayOfWeek = this.state.firstDayOfWeek;
        return (React.createElement("div", null,
            React.createElement(DatePicker, { firstDayOfWeek: firstDayOfWeek, strings: DayPickerStrings, showWeekNumbers: true, firstWeekOfYear: 1, showMonthPickerAsOverlay: true, placeholder: 'Select a date...' }),
            React.createElement(Dropdown, { label: 'Select the first day of the week', options: [
                    {
                        text: 'Sunday',
                        key: DayOfWeek[DayOfWeek.Sunday]
                    },
                    {
                        text: 'Monday',
                        key: DayOfWeek[DayOfWeek.Monday]
                    },
                    {
                        text: 'Tuesday',
                        key: DayOfWeek[DayOfWeek.Tuesday]
                    },
                    {
                        text: 'Wednesday',
                        key: DayOfWeek[DayOfWeek.Wednesday]
                    },
                    {
                        text: 'Thursday',
                        key: DayOfWeek[DayOfWeek.Thursday]
                    },
                    {
                        text: 'Friday',
                        key: DayOfWeek[DayOfWeek.Friday]
                    },
                    {
                        text: 'Saturday',
                        key: DayOfWeek[DayOfWeek.Saturday]
                    }
                ], selectedKey: DayOfWeek[firstDayOfWeek], onChanged: this._onDropdownChanged })));
    };
    DatePickerWeekNumbersExample.prototype._onDropdownChanged = function (option) {
        this.setState({
            firstDayOfWeek: DayOfWeek[option.key]
        });
    };
    tslib_1.__decorate([
        autobind
    ], DatePickerWeekNumbersExample.prototype, "_onDropdownChanged", null);
    return DatePickerWeekNumbersExample;
}(React.Component));
export { DatePickerWeekNumbersExample };
//# sourceMappingURL=DatePicker.WeekNumbers.Example.js.map