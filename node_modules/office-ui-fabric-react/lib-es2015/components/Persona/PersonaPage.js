import * as tslib_1 from "tslib";
import * as React from 'react';
import { ExampleCard, ComponentPage, PropertiesTableSet } from '@uifabric/example-app-base';
import { PersonaInitialsExample } from './examples/Persona.Initials.Example';
import { PersonaBasicExample } from './examples/Persona.Basic.Example';
import { PersonaAlternateExample } from './examples/Persona.Alternate.Example';
import { PersonaCustomRenderExample } from './examples/Persona.CustomRender.Example';
import { ComponentStatus } from '../../demo/ComponentStatus/ComponentStatus';
import { PersonaStatus } from './Persona.checklist';
var PersonaInitialsExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Persona/examples/Persona.Initials.Example.tsx');
var PersonaBasicExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Persona/examples/Persona.Basic.Example.tsx');
var PersonaAlternateExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Persona/examples/Persona.Alternate.Example.tsx');
var PersonaCustomRenderExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Persona/examples/Persona.CustomRender.Example.tsx');
var PersonaPage = /** @class */ (function (_super) {
    tslib_1.__extends(PersonaPage, _super);
    function PersonaPage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PersonaPage.prototype.render = function () {
        return (React.createElement(ComponentPage, { title: 'Persona', componentName: 'PersonaExample', exampleCards: React.createElement("div", null,
                React.createElement(ExampleCard, { title: 'Persona in various sizes', code: PersonaBasicExampleCode },
                    React.createElement(PersonaBasicExample, null)),
                React.createElement(ExampleCard, { title: 'Alternative small personas', code: PersonaAlternateExampleCode },
                    React.createElement(PersonaAlternateExample, null)),
                React.createElement(ExampleCard, { title: 'Persona with initials', code: PersonaInitialsExampleCode },
                    React.createElement(PersonaInitialsExample, null)),
                React.createElement(ExampleCard, { title: 'Rendering custom persona text and custom coin size', code: PersonaCustomRenderExampleCode },
                    React.createElement(PersonaCustomRenderExample, null))), propertiesTables: React.createElement(PropertiesTableSet, { sources: [
                    require('!raw-loader!office-ui-fabric-react/src/components/Persona/Persona.Props.ts')
                ] }), overview: React.createElement("div", null,
                React.createElement("p", null, "Personas are used for rendering an individual's avatar and presence. They are used within the PeoplePicker components.")), bestPractices: React.createElement("div", null), dos: React.createElement("div", null,
                React.createElement("ul", null,
                    React.createElement("li", null, "Use Size 24 Persona in text fields in read mode or in experiences such as multi-column list view which need compact Persona representations."),
                    React.createElement("li", null, "Use Size 32 Persona in text fields in edit mode."),
                    React.createElement("li", null, "Use Size 32, Size 40, and Size 48 Personas in menus and list views."),
                    React.createElement("li", null, "Use Size 72 and Size 100 Personas in profile cards and views."))), donts: React.createElement("div", null,
                React.createElement("ul", null,
                    React.createElement("li", null, "Change the values of the color swatches in high contrast mode. "))), isHeaderVisible: this.props.isHeaderVisible, componentStatus: React.createElement(ComponentStatus, tslib_1.__assign({}, PersonaStatus)) }));
    };
    return PersonaPage;
}(React.Component));
export { PersonaPage };
//# sourceMappingURL=PersonaPage.js.map