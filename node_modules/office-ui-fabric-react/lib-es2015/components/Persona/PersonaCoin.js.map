{"version":3,"file":"PersonaCoin.js","sourceRoot":"../src/","sources":["components/Persona/PersonaCoin.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  autobind,\r\n  css,\r\n  divProperties,\r\n  getInitials,\r\n  getNativeProps,\r\n  getRTL\r\n} from '../../Utilities';\r\nimport { Image, ImageFit, ImageLoadState } from '../../Image';\r\nimport { PersonaPresence } from './PersonaPresence';\r\nimport {\r\n  IPersonaProps,\r\n  PersonaPresence as PersonaPresenceEnum,\r\n  PersonaInitialsColor,\r\n  PersonaSize\r\n} from './Persona.Props';\r\nimport {\r\n  PERSONA_INITIALS_COLOR,\r\n  PERSONA_SIZE\r\n} from './PersonaConsts';\r\nimport {\r\n  Icon\r\n} from '../../Icon';\r\nimport * as stylesImport from './Persona.scss';\r\nconst styles: any = stylesImport;\r\n\r\nconst SIZE_TO_PIXELS = {\r\n  [PersonaSize.tiny]: 20,\r\n  [PersonaSize.extraExtraSmall]: 24,\r\n  [PersonaSize.extraSmall]: 28,\r\n  [PersonaSize.small]: 40,\r\n  [PersonaSize.regular]: 48,\r\n  [PersonaSize.large]: 72,\r\n  [PersonaSize.extraLarge]: 100,\r\n\r\n  [PersonaSize.size24]: 24,\r\n  [PersonaSize.size28]: 28,\r\n  [PersonaSize.size10]: 20,\r\n  [PersonaSize.size32]: 32,\r\n  [PersonaSize.size40]: 40,\r\n  [PersonaSize.size48]: 48,\r\n  [PersonaSize.size72]: 72,\r\n  [PersonaSize.size100]: 100\r\n};\r\n\r\n/**\r\n * These colors are considered reserved colors and can only be set with overrides:\r\n * - Red is a color that often has a special meaning.\r\n * - Transparent is not intended to be used with typical initials due to accessibility issues,\r\n *   its primary use is for Facepile overflow buttons.\r\n */\r\nconst COLOR_SWATCHES_LOOKUP: PersonaInitialsColor[] = [\r\n  PersonaInitialsColor.lightGreen,\r\n  PersonaInitialsColor.lightBlue,\r\n  PersonaInitialsColor.lightPink,\r\n  PersonaInitialsColor.green,\r\n  PersonaInitialsColor.darkGreen,\r\n  PersonaInitialsColor.pink,\r\n  PersonaInitialsColor.magenta,\r\n  PersonaInitialsColor.purple,\r\n  PersonaInitialsColor.black,\r\n  PersonaInitialsColor.teal,\r\n  PersonaInitialsColor.blue,\r\n  PersonaInitialsColor.darkBlue,\r\n  PersonaInitialsColor.orange,\r\n  PersonaInitialsColor.darkRed\r\n];\r\n\r\nconst COLOR_SWATCHES_NUM_ENTRIES = COLOR_SWATCHES_LOOKUP.length;\r\n\r\nexport interface IPersonaState {\r\n  isImageLoaded?: boolean;\r\n  isImageError?: boolean;\r\n}\r\n\r\nexport class PersonaCoin extends React.Component<IPersonaProps, IPersonaState> {\r\n  public static defaultProps: IPersonaProps = {\r\n    primaryText: '',\r\n    size: PersonaSize.size48,\r\n    presence: PersonaPresenceEnum.none,\r\n    imageAlt: ''\r\n  };\r\n\r\n  constructor(props: IPersonaProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isImageLoaded: false,\r\n      isImageError: false\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element | null {\r\n    let {\r\n      coinProps,\r\n      coinSize,\r\n      imageUrl,\r\n      imageAlt,\r\n      initialsColor,\r\n      primaryText,\r\n      imageShouldFadeIn,\r\n      onRenderInitials = this._onRenderInitials,\r\n      imageShouldStartVisible\r\n     } = this.props;\r\n\r\n    let size = this.props.size as PersonaSize;\r\n    let divProps = getNativeProps(this.props, divProperties);\r\n    let coinSizeStyle = coinSize ? { width: coinSize, height: coinSize } : undefined;\r\n\r\n    initialsColor = initialsColor !== undefined && initialsColor !== null ? initialsColor : this._getColorFromName(primaryText);\r\n\r\n    return (\r\n      <div\r\n        { ...divProps }\r\n        className={ css('ms-Persona-coin', PERSONA_SIZE[size]) }\r\n      >\r\n        { (size !== PersonaSize.size10 && size !== PersonaSize.tiny) ? (\r\n          <div\r\n            { ...coinProps }\r\n            className={ css('ms-Persona-imageArea', styles.imageArea) }\r\n            style={ coinSizeStyle }\r\n          >\r\n            {\r\n              !this.state.isImageLoaded &&\r\n              (!imageUrl || this.state.isImageError) &&\r\n              (\r\n                <div\r\n                  className={ css(\r\n                    'ms-Persona-initials',\r\n                    styles.initials,\r\n                    PERSONA_INITIALS_COLOR[initialsColor]\r\n                  ) }\r\n                  style={ coinSizeStyle }\r\n                  aria-hidden='true'\r\n                >\r\n                  { onRenderInitials(this.props, this._onRenderInitials) }\r\n                </div>\r\n              )\r\n            }\r\n            <Image\r\n              className={ css('ms-Persona-image', styles.image) }\r\n              imageFit={ ImageFit.cover }\r\n              src={ imageUrl }\r\n              width={ coinSize || SIZE_TO_PIXELS[size] }\r\n              height={ coinSize || SIZE_TO_PIXELS[size] }\r\n              alt={ imageAlt }\r\n              shouldFadeIn={ imageShouldFadeIn }\r\n              shouldStartVisible={ imageShouldStartVisible }\r\n              onLoadingStateChange={ this._onPhotoLoadingStateChange }\r\n            />\r\n            <PersonaPresence { ...this.props } />\r\n          </div>\r\n        ) :\r\n          (this.props.presence ?\r\n            <PersonaPresence\r\n              { ...this.props }\r\n            /> :\r\n            <Icon\r\n              iconName='Contact'\r\n              className={ styles.size10NoPresenceIcon }\r\n            />\r\n          )\r\n        }\r\n        { this.props.children }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _getColorFromName(displayName: string | undefined): PersonaInitialsColor {\r\n    let color = PersonaInitialsColor.blue;\r\n    if (!displayName) {\r\n      return color;\r\n    }\r\n\r\n    let hashCode = 0;\r\n    for (let iLen: number = displayName.length - 1; iLen >= 0; iLen--) {\r\n      const ch: number = displayName.charCodeAt(iLen);\r\n      const shift: number = iLen % 8;\r\n      // tslint:disable-next-line:no-bitwise\r\n      hashCode ^= (ch << shift) + (ch >> (8 - shift));\r\n    }\r\n\r\n    color = COLOR_SWATCHES_LOOKUP[hashCode % COLOR_SWATCHES_NUM_ENTRIES];\r\n\r\n    return color;\r\n  }\r\n\r\n  @autobind\r\n  private _onRenderInitials(props: IPersonaProps): JSX.Element {\r\n    let {\r\n      imageInitials,\r\n      primaryText\r\n    } = props;\r\n\r\n    let isRTL = getRTL();\r\n\r\n    imageInitials = imageInitials || getInitials(primaryText, isRTL);\r\n\r\n    return (\r\n      <span>{ imageInitials }</span>\r\n    );\r\n  }\r\n\r\n  @autobind\r\n  private _onPhotoLoadingStateChange(loadState: ImageLoadState) {\r\n    this.setState({\r\n      isImageLoaded: loadState === ImageLoadState.loaded,\r\n      isImageError: loadState === ImageLoadState.error\r\n    });\r\n  }\r\n}"]}