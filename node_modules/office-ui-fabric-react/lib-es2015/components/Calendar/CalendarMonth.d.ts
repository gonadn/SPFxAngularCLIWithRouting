/// <reference types="react" />
import * as React from 'react';
import { BaseComponent } from '../../Utilities';
import { ICalendarStrings, ICalendarIconStrings, ICalendarFormatDateCallbacks } from './Calendar.Props';
export interface ICalendarMonthProps extends React.Props<CalendarMonth> {
    componentRef?: () => void;
    navigatedDate: Date;
    strings: ICalendarStrings;
    onNavigateDate: (date: Date, focusOnNavigatedDay: boolean) => void;
    today?: Date;
    highlightCurrentMonth: boolean;
    onHeaderSelect?: (focus: boolean) => void;
    navigationIcons: ICalendarIconStrings;
    dateTimeFormatter: ICalendarFormatDateCallbacks;
    minDate?: Date;
    maxDate?: Date;
}
export declare class CalendarMonth extends BaseComponent<ICalendarMonthProps, {}> {
    refs: {
        [key: string]: React.ReactInstance;
        navigatedMonth: HTMLElement;
    };
    private _selectMonthCallbacks;
    constructor(props: ICalendarMonthProps);
    render(): JSX.Element;
    focus(): void;
    private _isCurrentMonth(month, year, today);
    private _onKeyDown(callback, ev);
    private _onSelectNextYear();
    private _onSelectNextYearKeyDown(ev);
    private _onSelectPrevYear();
    private _onSelectPrevYearKeyDown(ev);
    private _onSelectMonth(newMonth);
    private _onHeaderSelect();
    private _onHeaderKeyDown(ev);
}
