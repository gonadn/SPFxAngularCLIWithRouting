{"version":3,"file":"FocusZone.List.Example.js","sourceRoot":"../src/","sources":["components/FocusZone/examples/FocusZone.List.Example.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAEL,WAAW,EACX,iBAAiB,EAClB,MAAM,sCAAsC,CAAC;AAC9C,OAAO,EAAE,aAAa,EAAE,MAAM,mCAAmC,CAAC;AAClE,OAAO,EAAE,IAAI,EAAE,MAAM,iCAAiC,CAAC;AACvD,OAAO,EAAE,SAAS,EAAE,kBAAkB,EAAE,MAAM,sCAAsC,CAAC;AACrF,OAAO,EAAE,UAAU,EAAW,SAAS,EAAE,aAAa,EAAE,MAAM,wCAAwC,CAAC;AACvG,OAAO,+BAA+B,CAAC;AAEvC,IAAM,KAAK,GAAG,WAAW,CAAC,EAAE,EAAE,UAAC,KAAK,IAAK,OAAA,CAAC;IACxC,GAAG,EAAE,KAAK,CAAC,QAAQ,EAAE;IACrB,IAAI,EAAE,OAAO,GAAG,KAAK;IACrB,GAAG,EAAE,0BAA0B,GAAG,CAAC,GAAG,GAAG,KAAM,CAAC;CACjD,CAAC,EAJuC,CAIvC,CAAC,CAAC;AAEJ,IAAM,OAAO,GAAc;IACzB;QACE,GAAG,EAAE,MAAM;QACX,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,MAAM;QACjB,QAAQ,EAAE,GAAG;KACd;IACD;QACE,GAAG,EAAE,MAAM;QACX,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,KAAK;QAChB,QAAQ,EAAE,GAAG;QACb,QAAQ,EAAE,UAAA,IAAI,IAAI,OAAA,oBAAC,IAAI,IAAC,IAAI,EAAG,IAAI,CAAC,GAAG,IAAK,IAAI,CAAC,GAAG,CAAS,EAA3C,CAA2C;KAC9D;IACD;QACE,GAAG,EAAE,MAAM;QACX,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,KAAK;QAChB,QAAQ,EAAE,GAAG;QACb,QAAQ,EAAE,UAAA,IAAI,IAAI,OAAA,oBAAC,aAAa,QAAG,IAAI,CAAC,GAAG,CAAkB,EAA3C,CAA2C;KAC9D;CACF,CAAC;AAEF;IAA0C,gDAAyB;IAGjE;QAAA,YACE,iBAAO,SAIR;QAFC,KAAI,CAAC,UAAU,GAAG,IAAI,SAAS,EAAE,CAAC;QAClC,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;;IAClC,CAAC;IAEM,qCAAM,GAAb;QAAA,iBAoBC;QAnBC,MAAM,CAAC,CACL,oBAAC,SAAS,IACR,SAAS,EAAC,yBAAyB,EACnC,SAAS,EAAG,kBAAkB,CAAC,QAAQ,EACvC,oBAAoB,EAAG,IAAI,EAC3B,oBAAoB,EAAG,IAAI,CAAC,qBAAqB,IAE/C,KAAK,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,KAAK,IAAK,OAAA,CAC3B,oBAAC,UAAU,IACT,GAAG,EAAG,KAAK,EACX,IAAI,EAAG,IAAI,EACX,SAAS,EAAG,KAAK,EACjB,OAAO,EAAG,OAAO,EACjB,aAAa,EAAG,aAAa,CAAC,MAAM,EACpC,SAAS,EAAG,KAAI,CAAC,UAAU,GAC3B,CACH,EAT4B,CAS5B,CAAC,CACQ,CACb,CAAC;IACJ,CAAC;IAEO,oDAAqB,GAA7B,UAA8B,EAAoC;QAChE,MAAM,CAAC,EAAE,CAAC,KAAK,KAAK,iBAAiB,gBAAgB,CAAC;IACxD,CAAC;IAEH,2BAAC;AAAD,CAAC,AApCD,CAA0C,KAAK,CAAC,SAAS,GAoCxD","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  KeyCodes,\r\n  createArray,\r\n  getRTLSafeKeyCode\r\n} from 'office-ui-fabric-react/lib/Utilities';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { Link } from 'office-ui-fabric-react/lib/Link';\r\nimport { FocusZone, FocusZoneDirection } from 'office-ui-fabric-react/lib/FocusZone';\r\nimport { DetailsRow, IColumn, Selection, SelectionMode } from 'office-ui-fabric-react/lib/DetailsList';\r\nimport './FocusZone.List.Example.scss';\r\n\r\nconst ITEMS = createArray(10, (index) => ({\r\n  key: index.toString(),\r\n  name: 'Item-' + index,\r\n  url: 'http://placehold.it/100x' + (200 + index!)\r\n}));\r\n\r\nconst COLUMNS: IColumn[] = [\r\n  {\r\n    key: 'name',\r\n    name: 'Name',\r\n    fieldName: 'name',\r\n    minWidth: 100\r\n  },\r\n  {\r\n    key: 'link',\r\n    name: 'Link',\r\n    fieldName: 'url',\r\n    minWidth: 100,\r\n    onRender: item => <Link href={ item.url }>{ item.url }</Link>\r\n  },\r\n  {\r\n    key: 'link',\r\n    name: 'Link',\r\n    fieldName: 'url',\r\n    minWidth: 100,\r\n    onRender: item => <DefaultButton>{ item.url }</DefaultButton>\r\n  }\r\n];\r\n\r\nexport class FocusZoneListExample extends React.Component<any, any> {\r\n  private _selection: Selection;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this._selection = new Selection();\r\n    this._selection.setItems(ITEMS);\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <FocusZone\r\n        className='ms-FocusZoneListExample'\r\n        direction={ FocusZoneDirection.vertical }\r\n        isCircularNavigation={ true }\r\n        isInnerZoneKeystroke={ this._isInnerZoneKeystroke }\r\n      >\r\n        { ITEMS.map((item, index) => (\r\n          <DetailsRow\r\n            key={ index }\r\n            item={ item }\r\n            itemIndex={ index }\r\n            columns={ COLUMNS }\r\n            selectionMode={ SelectionMode.single }\r\n            selection={ this._selection }\r\n          />\r\n        )) }\r\n      </FocusZone>\r\n    );\r\n  }\r\n\r\n  private _isInnerZoneKeystroke(ev: React.KeyboardEvent<HTMLElement>): boolean {\r\n    return ev.which === getRTLSafeKeyCode(KeyCodes.right);\r\n  }\r\n\r\n}\r\n"]}