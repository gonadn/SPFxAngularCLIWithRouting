{"version":3,"file":"Toggle.Props.js","sourceRoot":"../src/","sources":["components/Toggle/Toggle.Props.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\r\nimport { Toggle } from './Toggle';\r\nimport { IStyle, ITheme } from '../../Styling';\r\n\r\nexport interface IToggle {\r\n  focus: () => void;\r\n}\r\n\r\n/**\r\n * Toggle component props.\r\n */\r\nexport interface IToggleProps extends React.HTMLAttributes<HTMLElement | Toggle> {\r\n  /**\r\n   * Optional callback to access the IToggle interface. Use this instead of ref for accessing\r\n   * the public methods and properties of the component.\r\n   */\r\n  componentRef?: (component: IToggle) => void;\r\n\r\n  /**\r\n   * A label for the toggle.\r\n   */\r\n  label?: string;\r\n\r\n  /**\r\n   * Text to display when toggle is ON.\r\n   */\r\n  onText?: string;\r\n\r\n  /**\r\n   * Text to display when toggle is OFF.\r\n   */\r\n  offText?: string;\r\n\r\n  /**\r\n   * Text for screen-reader to announce when toggle is ON.\r\n   */\r\n  onAriaLabel?: string;\r\n\r\n  /**\r\n   * Text for screen-reader to announce when toggle is OFF.\r\n   */\r\n  offAriaLabel?: string;\r\n\r\n  /**\r\n   * Checked state of the toggle. If you are maintaining state yourself, use this property. Otherwise refer to 'defaultChecked'.\r\n   */\r\n  checked?: boolean;\r\n\r\n  /**\r\n   * Initial state of the toggle. If you want the toggle to maintain its own state, use this. Otherwise refer to 'checked'.\r\n   */\r\n  defaultChecked?: boolean;\r\n\r\n  /**\r\n   * Optional disabled flag.\r\n   */\r\n  disabled?: boolean;\r\n\r\n  /**\r\n   * onchange callback.\r\n   */\r\n  onChanged?: (checked: boolean) => void;\r\n\r\n  /**\r\n   * Theme provided by HOC.\r\n   */\r\n  theme?: ITheme;\r\n\r\n  /**\r\n   * Custom styles for this component\r\n   */\r\n  styles?: IToggleStyles;\r\n}\r\n\r\nexport interface IToggleStyles {\r\n  /**\r\n   * Style for the root element in the default enabled/unchecked state.\r\n   */\r\n  root?: IStyle;\r\n\r\n  /*\r\n   * Style for the text before the actual toggle switch.\r\n   */\r\n  label?: IStyle;\r\n\r\n  /**\r\n   * Style for the container wrapping switch and the state (on/off) text.\r\n   */\r\n  container?: IStyle;\r\n\r\n  /**\r\n   * Style for the toggle \"pill\" element, which is inside of the container and contains the thumb.\r\n   */\r\n  pill?: IStyle;\r\n\r\n  /**\r\n   * Style override for the pill element when enabled/checked.\r\n   */\r\n  pillChecked?: IStyle;\r\n\r\n  /**\r\n   * Style override for the pill element when enabled/unchecked/hovered.\r\n   */\r\n  pillHovered?: IStyle;\r\n\r\n  /**\r\n   * Style override for the pill element when enabled/checked/hovered.\r\n   */\r\n  pillCheckedHovered?: IStyle;\r\n\r\n  /**\r\n   * Style override for the pill element when disabled/unchecked.\r\n   */\r\n  pillDisabled?: IStyle;\r\n\r\n  /**\r\n   * Style override for the pill element when disabled/checked.\r\n   */\r\n  pillCheckedDisabled?: IStyle;\r\n\r\n  /**\r\n   * Style for the thumb element inside of the pill, in the normal unchecked enabled state.\r\n   */\r\n  thumb?: IStyle;\r\n\r\n  /**\r\n   * Style override for the thumb when enabled/unchecked/hovered.\r\n   */\r\n  thumbHovered?: IStyle;\r\n\r\n  /**\r\n   * Style override for the thumb when enabled/checked.\r\n   */\r\n  thumbChecked?: IStyle;\r\n\r\n  /**\r\n   * Style override for the thumb when enabled/checked/hovered.\r\n   */\r\n  thumbCheckedHovered?: IStyle;\r\n\r\n  /**\r\n   * Style override for the thumb when disabled/unchecked.\r\n   */\r\n  thumbDisabled?: IStyle;\r\n\r\n  /**\r\n   * Style override for the thumb when disabled/checked.\r\n   */\r\n  thumbCheckedDisabled?: IStyle;\r\n\r\n  /**\r\n   * Style for the text indicating the on/off state of the control.\r\n   */\r\n  text?: IStyle;\r\n}\r\n"]}