{"version":3,"file":"Modal.Props.js","sourceRoot":"../src/","sources":["components/Modal/Modal.Props.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\r\nimport { Modal } from './Modal';\r\nimport { IWithResponsiveModeState } from '../../utilities/decorators/withResponsiveMode';\r\nimport { IAccessiblePopupProps } from '../../common/IAccessiblePopupProps';\r\n\r\nexport interface IModal {\r\n  /**\r\n   * Sets focus on the first focusable, or configured, child in focus trap zone\r\n   */\r\n  focus: () => void;\r\n}\r\n\r\nexport interface IModalProps extends React.Props<Modal>, IWithResponsiveModeState, IAccessiblePopupProps {\r\n  /**\r\n   * Optional callback to access the IDialog interface. Use this instead of ref for accessing\r\n   * the public methods and properties of the component.\r\n   */\r\n  componentRef?: (component: IModal) => void;\r\n\r\n  /**\r\n  * Whether the dialog is displayed.\r\n  * @default false\r\n  */\r\n  isOpen?: boolean;\r\n\r\n  /**\r\n  * Whether the overlay is dark themed.\r\n  * @default true\r\n  */\r\n  isDarkOverlay?: boolean;\r\n\r\n  /**\r\n  * A callback function for when the Modal is dismissed light dismiss, before the animation completes.\r\n  */\r\n  onDismiss?: (ev?: React.MouseEvent<HTMLButtonElement>) => any;\r\n\r\n  /**\r\n   * A callback function which is called after the Modal is dismissed and the animation is complete.\r\n   */\r\n  onDismissed?: () => any;\r\n\r\n  /**\r\n  * Whether the dialog can be light dismissed by clicking outside the dialog (on the overlay).\r\n  * @default false\r\n  */\r\n  isBlocking?: boolean;\r\n\r\n  /**\r\n   * Optional class name to be added to the root class\r\n   */\r\n  className?: string;\r\n\r\n  /**\r\n  * Optional override for container class\r\n  */\r\n  containerClassName?: string;\r\n\r\n  /**\r\n   * A callback function for when the Modal content is mounted on the overlay layer\r\n   */\r\n  onLayerDidMount?: () => void;\r\n\r\n  /**\r\n   * ARIA id for the title of the Modal, if any\r\n   */\r\n  titleAriaId?: string;\r\n\r\n  /**\r\n   * ARIA id for the subtitle of the Modal, if any\r\n   */\r\n  subtitleAriaId?: string;\r\n}\r\n"]}