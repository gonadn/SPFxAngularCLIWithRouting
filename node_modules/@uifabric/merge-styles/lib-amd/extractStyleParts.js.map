{"version":3,"file":"extractStyleParts.js","sourceRoot":"../src/","sources":["extractStyleParts.ts"],"names":[],"mappings":";;;IAGA;;;OAGG;IACH;QACE,cAAyD;aAAzD,UAAyD,EAAzD,qBAAyD,EAAzD,IAAyD;YAAzD,yBAAyD;;QAEzD,IAAM,OAAO,GAAa,EAAE,CAAC;QAC7B,IAAM,OAAO,GAAS,EAAE,CAAC;QACzB,IAAM,UAAU,GAAG,uBAAU,CAAC,WAAW,EAAE,CAAC;QAE5C,sBAAsB,QAA+B;YACnD,GAAG,CAAC,CAAc,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ;gBAArB,IAAM,GAAG,iBAAA;gBACZ,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACR,EAAE,CAAC,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC;wBAC5B,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;4BAC1B,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;wBAC/B,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,IAAM,cAAc,GAAG,UAAU,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;4BAEzD,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;gCACnB,YAAY,CAAC,cAAc,CAAC,CAAC;4BAC/B,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACN,qCAAqC;gCACrC,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;oCAChC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gCACpB,CAAC;4BACH,CAAC;wBACH,CAAC;oBACH,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBAC9B,YAAY,CAAC,GAAG,CAAC,CAAC;oBACpB,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC;wBACnC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACpB,CAAC;gBACH,CAAC;aACF;QACH,CAAC;QAED,YAAY,CAAC,IAAI,CAAC,CAAC;QAEnB,MAAM,CAAC;YACL,OAAO,SAAA;YACP,OAAO,SAAA;SACR,CAAC;IACJ,CAAC;IAxCD,8CAwCC","sourcesContent":["import { IStyle } from './IStyle';\r\nimport { Stylesheet } from './Stylesheet';\r\n\r\n/**\r\n * Separates the classes and style objects. Any classes that are pre-registered\r\n * args are auto expanded into objects.\r\n */\r\nexport function extractStyleParts(\r\n  ...args: (IStyle | IStyle[] | false | null | undefined)[]\r\n): { classes: string[], objects: IStyle[] } {\r\n  const classes: string[] = [];\r\n  const objects: {}[] = [];\r\n  const stylesheet = Stylesheet.getInstance();\r\n\r\n  function _processArgs(argsList: (IStyle | IStyle[])[]): void {\r\n    for (const arg of argsList) {\r\n      if (arg) {\r\n        if (typeof arg === 'string') {\r\n          if (arg.indexOf(' ') >= 0) {\r\n            _processArgs(arg.split(' '));\r\n          } else {\r\n            const translatedArgs = stylesheet.argsFromClassName(arg);\r\n\r\n            if (translatedArgs) {\r\n              _processArgs(translatedArgs);\r\n            } else {\r\n              // Avoid adding the same class twice.\r\n              if (classes.indexOf(arg) === -1) {\r\n                classes.push(arg);\r\n              }\r\n            }\r\n          }\r\n        } else if (Array.isArray(arg)) {\r\n          _processArgs(arg);\r\n        } else if (typeof arg === 'object') {\r\n          objects.push(arg);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _processArgs(args);\r\n\r\n  return {\r\n    classes,\r\n    objects\r\n  };\r\n}"]}