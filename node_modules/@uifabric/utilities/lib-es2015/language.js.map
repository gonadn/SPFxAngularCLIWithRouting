{"version":3,"file":"language.js","sourceRoot":"../src/","sources":["language.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,OAAO,CAAC;AACpC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,gBAAgB,CAAC;AAElD,4DAA4D;AAC5D,IAAI,SAAwB,CAAC;AAE7B;;;;GAIG;AACH,MAAM;IACJ,EAAE,CAAC,CAAC,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC;QAC5B,IAAI,GAAG,GAAG,WAAW,EAAE,CAAC;QACxB,IAAM,aAAa,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;QAE1C,EAAE,CAAC,CAAC,aAAa,KAAK,IAAI,CAAC,CAAC,CAAC;YAC3B,SAAS,GAAG,aAAa,CAAC;QAC5B,CAAC;QAED,EAAE,CAAC,CAAC,SAAS,KAAK,SAAS,IAAI,GAAG,CAAC,CAAC,CAAC;YACnC,SAAS,GAAG,GAAG,CAAC,eAAe,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QACvD,CAAC;QAED,EAAE,CAAC,CAAC,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC;YAC5B,SAAS,GAAG,IAAI,CAAC;QACnB,CAAC;IACH,CAAC;IAED,MAAM,CAAC,SAAS,CAAC;AACnB,CAAC;AAED;;;;GAIG;AACH,MAAM,sBAAsB,QAAgB,EAAE,eAAgC;IAAhC,gCAAA,EAAA,uBAAgC;IAC5E,IAAI,GAAG,GAAG,WAAW,EAAE,CAAC;IAExB,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACR,GAAG,CAAC,eAAe,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IACrD,CAAC;IAED,EAAE,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;QACrB,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IAChC,CAAC;IAED,SAAS,GAAG,QAAQ,CAAC;AACvB,CAAC","sourcesContent":["import { getDocument } from './dom';\r\nimport { getItem, setItem } from './localStorage';\r\n\r\n// Default to undefined so that we initialize on first read.\r\nlet _language: string | null;\r\n\r\n/**\r\n * Gets the rtl state of the page (returns true if in rtl.)\r\n *\r\n * @public\r\n */\r\nexport function getLanguage(): string | null {\r\n  if (_language === undefined) {\r\n    let doc = getDocument();\r\n    const savedLanguage = getItem('language');\r\n\r\n    if (savedLanguage !== null) {\r\n      _language = savedLanguage;\r\n    }\r\n\r\n    if (_language === undefined && doc) {\r\n      _language = doc.documentElement.getAttribute('lang');\r\n    }\r\n\r\n    if (_language === undefined) {\r\n      _language = 'en';\r\n    }\r\n  }\r\n\r\n  return _language;\r\n}\r\n\r\n/**\r\n * Sets the rtl state of the page (by adjusting the dir attribute of the html element.)\r\n *\r\n * @public\r\n */\r\nexport function setLanguage(language: string, avoidPersisting: boolean = false): void {\r\n  let doc = getDocument();\r\n\r\n  if (doc) {\r\n    doc.documentElement.setAttribute('lang', language);\r\n  }\r\n\r\n  if (!avoidPersisting) {\r\n    setItem('language', language);\r\n  }\r\n\r\n  _language = language;\r\n}\r\n"]}