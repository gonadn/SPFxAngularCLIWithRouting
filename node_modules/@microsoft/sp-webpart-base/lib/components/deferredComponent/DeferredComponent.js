"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = require("react");
var DeferredComponent = (function (_super) {
    tslib_1.__extends(DeferredComponent, _super);
    function DeferredComponent(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {};
        _this.load = _this.load.bind(_this);
        return _this;
    }
    Object.defineProperty(DeferredComponent.prototype, "_shouldLoad", {
        get: function () {
            return true;
        },
        enumerable: true,
        configurable: true
    });
    DeferredComponent.prototype.componentWillMount = function () {
        var duration = this.props.duration;
        if (duration === undefined || duration >= 0) {
            setTimeout(this.load, this.props.duration);
        }
    };
    DeferredComponent.prototype.render = function () {
        return (!!this.state.component &&
            React.createElement(this.state.component, this.props.deferredProps));
    };
    DeferredComponent.prototype.load = function () {
        var _this = this;
        var onAfterLoad = this.props.onAfterLoad;
        if (!this._loadPromise) {
            if (this._shouldLoad) {
                this._loadPromise = this._internalLoad();
                this._loadPromise.then(function (component) {
                    _this.setState({ component: component });
                    if (onAfterLoad) {
                        onAfterLoad.forEach(function (fn) { return fn(); });
                    }
                });
            }
            else {
                this._loadPromise = Promise.reject(new Error('_shouldLoad returns false'));
            }
        }
        return this._loadPromise;
    };
    return DeferredComponent;
}(React.Component));
exports.default = DeferredComponent;
