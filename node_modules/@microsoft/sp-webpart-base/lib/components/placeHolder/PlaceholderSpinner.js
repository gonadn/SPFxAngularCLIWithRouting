"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var decorators_1 = require("@microsoft/decorators");
var React = require("react");
var office_ui_fabric_react_1 = require("office-ui-fabric-react");
require("./Placeholder.scss");
var PlaceholderSpinner = (function (_super) {
    tslib_1.__extends(PlaceholderSpinner, _super);
    function PlaceholderSpinner(props) {
        var _this = _super.call(this, props) || this;
        _this.showSpinner = _this.showSpinner.bind(_this);
        _this.state = { showSpinner: !props.hideSpinner };
        return _this;
    }
    PlaceholderSpinner.prototype.componentDidMount = function () {
        this._isMounted = true;
    };
    PlaceholderSpinner.prototype.render = function () {
        if (this.state.removePlaceholder) {
            return null; 
        }
        return (React.createElement(office_ui_fabric_react_1.Overlay, { className: 'Placeholder-overlay' },
            React.createElement("div", { className: 'Placeholder-spinnerContainer' }, this.state.showSpinner && React.createElement(office_ui_fabric_react_1.Spinner, { type: office_ui_fabric_react_1.SpinnerType.large, label: this.props.label }))));
    };
    PlaceholderSpinner.prototype.componentWillUnmount = function () {
        this._isMounted = false;
    };
    PlaceholderSpinner.prototype.showSpinner = function (showSpinner) {
        if (this._isMounted) {
            this.setState({ showSpinner: showSpinner });
        }
    };
    PlaceholderSpinner.prototype.clearPlaceholder = function () {
        if (this._isMounted) {
            this.setState({ removePlaceholder: true });
        }
    };
    PlaceholderSpinner = tslib_1.__decorate([
        decorators_1.sealed
    ], PlaceholderSpinner);
    return PlaceholderSpinner;
}(React.Component));
exports.default = PlaceholderSpinner;
