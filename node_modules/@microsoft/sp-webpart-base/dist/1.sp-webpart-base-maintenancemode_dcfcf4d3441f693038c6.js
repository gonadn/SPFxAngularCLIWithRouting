webpackJsonp974a7777_0990_4136_8fa6_95d80114c2e0_1_4_1([1],{

/***/ 101:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var decorators_1 = __webpack_require__(2);
var React = __webpack_require__(4);
var MaintenanceModeText = (function (_super) {
    tslib_1.__extends(MaintenanceModeText, _super);
    function MaintenanceModeText() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MaintenanceModeText.prototype.render = function () {
        return (React.createElement("div", null,
            React.createElement("span", null,
                this.props.label,
                ":\u00A0"),
            React.createElement("span", null, this.props.value)));
    };
    MaintenanceModeText = tslib_1.__decorate([
        decorators_1.sealed
    ], MaintenanceModeText);
    return MaintenanceModeText;
}(React.Component));
exports.MaintenanceModeText = MaintenanceModeText;


/***/ }),

/***/ 102:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(103);
var styles = {
    maintenanceModeCard: 'maintenanceModeCard_712748c7',
    cardContainer: 'cardContainer_712748c7',
    cardHeader: 'cardHeader_712748c7',
    copyButton: 'copyButton_712748c7',
    cardBody: 'cardBody_712748c7',
    pivotItem: 'pivotItem_712748c7',
    pivotItemContent: 'pivotItemContent_712748c7',
};
exports.default = styles;


/***/ }),

/***/ 103:
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(104);
var loader = __webpack_require__(10);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),

/***/ 104:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(13)(undefined);
// imports


// module
exports.push([module.i, ".maintenanceModeCard_712748c7 .cardContainer_712748c7{border:1px solid #ccc;background-color:\"[theme:neutralLighterAlt, default: #f8f8f8]\"}.maintenanceModeCard_712748c7 .cardHeader_712748c7{position:relative;height:30px;line-height:30px;border-bottom:1px solid #ccc;background-color:\"[theme:neutralLight, default: #eaeaea]\";font-size:17px;font-weight:400;padding:8px 12px}.maintenanceModeCard_712748c7 .copyButton_712748c7{position:absolute}[dir=ltr] .maintenanceModeCard_712748c7 .copyButton_712748c7{right:12px}[dir=rtl] .maintenanceModeCard_712748c7 .copyButton_712748c7{left:12px}.maintenanceModeCard_712748c7 .cardBody_712748c7{padding:12px}.maintenanceModeCard_712748c7 .pivotItem_712748c7{padding-top:12px;max-height:400px;overflow:auto}[dir=ltr] .maintenanceModeCard_712748c7 .pivotItem_712748c7{padding-left:8px}[dir=rtl] .maintenanceModeCard_712748c7 .pivotItem_712748c7{padding-right:8px}.maintenanceModeCard_712748c7 .pivotItemContent_712748c7{overflow:visible}", ""]);

// exports


/***/ }),

/***/ 105:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var strings = ( false)
    ? require('../../resx-strings/en-us.json')
    : __webpack_require__(19);
exports.default = strings['_zoj2xNtYPrp/8X0YtlTbbQ'];


/***/ }),

/***/ 31:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var decorators_1 = __webpack_require__(2);
var React = __webpack_require__(4);
var sp_core_library_1 = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(9);
var office_ui_fabric_react_2 = __webpack_require__(9);
var MaintenanceModeText_1 = __webpack_require__(101);
var MaintenanceMode_module_scss_1 = __webpack_require__(102);
var Strings_resx_1 = __webpack_require__(105);
var MaintenanceMode = (function (_super) {
    tslib_1.__extends(MaintenanceMode, _super);
    function MaintenanceMode() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MaintenanceMode.prototype.render = function () {
        var context = this.props.context;
        var isInternal = !!context.manifest.isInternal;
        var isInternalString = isInternal.toString() + " (" + (isInternal ? Strings_resx_1.default.MadeByMicrosoft : Strings_resx_1.default.NotMadeByMicrosoft) + ")";
        var envStringSuffix = '';
        switch (sp_core_library_1.Environment.type) {
            case 0:
                envStringSuffix = Strings_resx_1.default.Test;
                break;
            case 1:
                envStringSuffix = Strings_resx_1.default.LocalWorkbench;
                break;
            case 2:
                envStringSuffix = Strings_resx_1.default.SharePoint;
                break;
            case 3:
                envStringSuffix = Strings_resx_1.default.ClassicSharePoint;
                break;
        }
        var envString = sp_core_library_1.Environment.type.toString() + " (" + envStringSuffix + ")";
        return (React.createElement("div", { className: MaintenanceMode_module_scss_1.default.maintenanceModeCard },
            React.createElement("div", { className: MaintenanceMode_module_scss_1.default.cardContainer },
                React.createElement("div", { className: MaintenanceMode_module_scss_1.default.cardHeader },
                    React.createElement("span", null, context.manifest.alias),
                    React.createElement(office_ui_fabric_react_1.IconButton, { iconProps: { iconName: 'Copy' }, title: Strings_resx_1.default.CopyToClipboard, ariaLabel: Strings_resx_1.default.CopyToClipboard, className: MaintenanceMode_module_scss_1.default.copyButton, onClick: this._copyData.bind(this) })),
                React.createElement("div", { className: MaintenanceMode_module_scss_1.default.cardBody },
                    React.createElement(office_ui_fabric_react_2.Pivot, null,
                        React.createElement(office_ui_fabric_react_2.PivotItem, { linkText: Strings_resx_1.default.General },
                            React.createElement("div", { className: MaintenanceMode_module_scss_1.default.pivotItem },
                                React.createElement("pre", null,
                                    React.createElement("code", null,
                                        React.createElement(MaintenanceModeText_1.MaintenanceModeText, { label: Strings_resx_1.default.Alias, value: context.manifest.alias }),
                                        React.createElement(MaintenanceModeText_1.MaintenanceModeText, { label: Strings_resx_1.default.Id, value: context.manifest.id }),
                                        React.createElement(MaintenanceModeText_1.MaintenanceModeText, { label: Strings_resx_1.default.InstanceId, value: context.instanceId }),
                                        React.createElement(MaintenanceModeText_1.MaintenanceModeText, { label: Strings_resx_1.default.IsInternal, value: isInternalString }),
                                        React.createElement(MaintenanceModeText_1.MaintenanceModeText, { label: Strings_resx_1.default.Version, value: context.manifest.version }),
                                        React.createElement(MaintenanceModeText_1.MaintenanceModeText, { label: Strings_resx_1.default.Environment, value: envString }),
                                        React.createElement(MaintenanceModeText_1.MaintenanceModeText, { label: Strings_resx_1.default.UserAgent, value: navigator.userAgent }))))),
                        React.createElement(office_ui_fabric_react_2.PivotItem, { linkText: Strings_resx_1.default.Manifest, className: MaintenanceMode_module_scss_1.default.pivotItem },
                            React.createElement("div", { className: MaintenanceMode_module_scss_1.default.pivotItemContent },
                                React.createElement("pre", null,
                                    React.createElement("code", null,
                                        React.createElement("span", null, JSON.stringify(context.manifest, undefined, 2)))))),
                        React.createElement(office_ui_fabric_react_2.PivotItem, { linkText: Strings_resx_1.default.Data, className: MaintenanceMode_module_scss_1.default.pivotItem },
                            React.createElement("div", { className: MaintenanceMode_module_scss_1.default.pivotItemContent },
                                React.createElement("pre", null,
                                    React.createElement("code", null,
                                        React.createElement("span", null, JSON.stringify(this.props.data, undefined, 2)))))))))));
    };
    MaintenanceMode.prototype._copyData = function () {
        var details = {}; 
        var context = this.props.context;
        var general = {}; 
        general.alias = context.manifest.alias;
        general.id = context.manifest.id;
        general.instanceId = context.instanceId;
        general.isInternal = context.manifest.isInternal;
        general.version = context.manifest.version;
        general.environment = sp_core_library_1.Environment.type.toString();
        general.userAgent = navigator.userAgent;
        details.general = general;
        details.manifest = context.manifest;
        details.webPartData = this.props.data;
        this._copyDataToClipBoard(JSON.stringify(details, undefined, 2));
    };
    MaintenanceMode.prototype._copyDataToClipBoard = function (data) {
        var result = false;
        if (window.clipboardData && window.window.clipboardData.setData) {
            result = window.clipboardData.setData('Text', data); 
        }
        else if (document.queryCommandSupported && document.queryCommandSupported('copy')) {
            var textarea = document.createElement('textarea');
            textarea.textContent = data;
            textarea.style.position = 'fixed'; 
            textarea.style.height = '0';
            document.body.appendChild(textarea);
            textarea.select();
            try {
                result = document.execCommand('copy'); 
            }
            catch (ex) {
                result = false;
            }
            finally {
                document.body.removeChild(textarea);
            }
        }
        return result;
    };
    MaintenanceMode = tslib_1.__decorate([
        decorators_1.sealed
    ], MaintenanceMode);
    return MaintenanceMode;
}(React.Component));
exports.default = MaintenanceMode;


/***/ })

});