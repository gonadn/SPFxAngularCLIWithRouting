{"version":3,"sources":["packageSolution/packageSolution/xmlGenerators/createFeatureXml.ts"],"names":[],"mappings":"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","file":"packageSolution/packageSolution/xmlGenerators/createFeatureXml.js","sourcesContent":["/**\r\n * @file createFeatureXml.ts\r\n * @Copyright (c) Microsoft Corporation.  All rights reserved.\r\n *\r\n * Creates an package's Feature.Xml\r\n */\r\n\r\nimport * as path from 'path';\r\nimport * as uuid from 'uuid';\r\nimport * as fsx from 'fs-extra';\r\nimport * as XmlGenerator from 'xml';\r\nimport { merge } from 'lodash';\r\n\r\nimport createRelationshipsXml, { IRelationship } from './createRelationshipsXml';\r\nimport createComponentXml from './createComponentXml';\r\nimport { readSharepointAssets } from '../utils/readSharepointAssets';\r\nimport IFeature from '../models/packageDefinition/IFeature';\r\nimport IComponent from '../models/packageDefinition/IComponent';\r\nimport IResources from '../models/packageXml/IResources';\r\nimport IFeatureXml from '../models/packageXml/IFeatureXml';\r\nimport { ISharepointAssets } from '../models/packageXml/ISharepointAssets';\r\nimport IFile from '../models/packageXml/IFile';\r\nimport IOpenDocumentConventionXml from '../models/packageXml/IOpenDocumentConventionXml';\r\nimport serializationOptions from './serializationOptions';\r\n\r\nexport default function createFeatureXml(\r\n  feature: IFeature,\r\n  resources: IResources,\r\n  clientSideAssets?: Array<{\r\n    originalFilename: string,\r\n    packageFilename: string\r\n  }>,\r\n  featureXmlFile: string = `feature_${feature.id}.xml`\r\n): IFeatureXml {\r\n\r\n  feature = merge({\r\n    version: '1.0.0.0'\r\n  }, feature) as IFeature;\r\n\r\n  const featureXml: IOpenDocumentConventionXml = {\r\n    filename: featureXmlFile,  // ensure this is unique\r\n    /* tslint:disable:no-null-keyword */\r\n    relationships: null,\r\n    /* tslint:enable:no-null-keyword */\r\n    contents: new Buffer(XmlGenerator({\r\n      Feature: [\r\n        {\r\n          _attr: {\r\n            xmlns: 'http://schemas.microsoft.com/sharepoint/',\r\n            Title: feature.title,\r\n            Description: feature.description,\r\n            Id: feature.id,\r\n            Version: feature.version,\r\n            Scope: 'Web', // @todo change to Site scope\r\n            Hidden: 'FALSE'\r\n          }\r\n        }\r\n      ]\r\n    }, serializationOptions))\r\n  };\r\n\r\n  const configXml: IFile = {\r\n    filename: `${featureXmlFile}.config.xml`,\r\n    contents: new Buffer(XmlGenerator({\r\n      AppPartConfig: [\r\n        {\r\n          _attr: {\r\n            xmlns: 'http://schemas.microsoft.com/sharepoint/2012/app/partconfiguration'\r\n          }\r\n        },\r\n        {\r\n          Id: uuid.v4()\r\n        }\r\n      ]\r\n    }, serializationOptions))\r\n  };\r\n\r\n  const componentsXml: IFile[] = feature.components.map((component: IComponent) => {\r\n    return createComponentXml(component, feature.id);\r\n  });\r\n\r\n  const clientSideResources: IFile[] = [];\r\n\r\n  if (clientSideAssets && clientSideAssets.length) {\r\n    // read each hosted asset\r\n\r\n    // iterate through every file that was found and add a relationship\r\n    clientSideAssets.forEach(({\r\n      originalFilename,\r\n      packageFilename\r\n    }) => {\r\n      // read the file into memory\r\n      const contents: Buffer = fsx.readFileSync(originalFilename);\r\n\r\n      const relativeFilename: string = path.posix.join(\r\n        'ClientSideAssets',\r\n        packageFilename\r\n      );\r\n\r\n      const file: IFile = {\r\n        contents,\r\n        filename: relativeFilename\r\n      };\r\n\r\n      clientSideResources.push(file);\r\n    });\r\n  }\r\n\r\n  // tslint:disable-next-line:max-line-length\r\n  const assets: ISharepointAssets<IFile> = readSharepointAssets(feature.assets, feature.id);\r\n\r\n  const relationshipsXml: IFile = createRelationshipsXml(featureXmlFile,\r\n    [\r\n      {\r\n        type: 'partconfiguration',\r\n        target: configXml.filename\r\n      } as IRelationship\r\n    ].concat(\r\n      componentsXml.map((component: IFile): IRelationship => {\r\n        return {\r\n          type: 'feature-elementmanifest',\r\n          target: component.filename\r\n        };\r\n      })\r\n      ).concat((resources.localizedResourcePaths.length > 0) ?\r\n        resources.localizedResourcePaths.map((filename: string) => {\r\n          return {\r\n            type: 'content-resource',\r\n            target: filename\r\n          };\r\n        })\r\n        : []\r\n      ).concat((resources.defaultResourcePath)\r\n        ? {\r\n          type: 'content-defaultresource',\r\n          target: resources.defaultResourcePath\r\n        }\r\n        : []\r\n      ).concat(createAssetRelationships(assets))\r\n      .concat(clientSideResources.map((clientSideResource: IFile) => {\r\n        return {\r\n          target: clientSideResource.filename,\r\n          type: 'clientsideasset'\r\n        };\r\n      }))\r\n  );\r\n\r\n  return {\r\n    filename: featureXml.filename,\r\n    contents: featureXml.contents,\r\n    relationships: relationshipsXml,\r\n    config: configXml,\r\n    components: componentsXml,\r\n    assets,\r\n    clientSideResources\r\n  };\r\n}\r\n\r\nfunction createAssetRelationships(assets: ISharepointAssets<IFile>): IRelationship[] {\r\n  let relationships: IRelationship[] = [];\r\n  if (assets) {\r\n    relationships = relationships.concat(\r\n      createAssetRelationship('feature-elementfile', assets.elementFiles),\r\n      createAssetRelationship('feature-elementmanifest', assets.elementManifests),\r\n      createAssetRelationship('feature-upgradeactions', assets.upgradeActions)\r\n    );\r\n  }\r\n  return relationships;\r\n}\r\n\r\nfunction createAssetRelationship(type: string, files: IFile[]): IRelationship[] {\r\n  return files.map((file) => {\r\n    return {\r\n      type,\r\n      target: file.filename\r\n    };\r\n  });\r\n}"],"sourceRoot":"..\\..\\..\\..\\src"}