{"version":3,"sources":["packageSolution/packageSolution/xmlGenerators/createComponentXml.ts"],"names":[],"mappings":";AAAA;;;;;GAKG;AACH,mCAAmC;;AAEnC,6BAA6B;AAC7B,oCAAoC;AAIpC,iEAA0D;AAE1D,4BAA2C,OAAmB,EAAE,SAAiB;IAC/E,MAAM,QAAQ,GAAwB;QACpC,QAAQ,EAAE;8BAEH,gCAAgC,CAAC,OAAO,CAAC;SAE/C;KACF,CAAC;IAEF,MAAM,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;QACvC,KAAK,SAAS;YACZ,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC;gBACrB,MAAM,EAAE,YAAY,CAAC,SAAS,EAAE,OAAO,CAAC;aACzC,CAAC,CAAC;YACH,KAAK,CAAC;QAER,KAAK,aAAa,CAAC;QACnB,KAAK,WAAW,CAAC;QACjB,KAAK,SAAS;YACZ,KAAK,CAAC;QAER;YACE,MAAM,IAAI,KAAK,CAAC,2BAA2B,OAAO,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC;IACjF,CAAC;IAED,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC;QACrB,KAAK,EAAE;YACL,KAAK,EAAE,0CAA0C;SAClD;KACF,CAAC,CAAC;IAEH,mEAAmE;IACnE,MAAM,CAAC;QACL,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,OAAO,CAAC,QAAQ,CAAC,aAAa,IAAI,OAAO,CAAC,EAAE,MAAM,CAAC;QAC3F,QAAQ,EAAE,IAAI,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE,8BAAoB,CAAC,CAAC;KACnE,CAAC;AACJ,CAAC;AApCD,qCAoCC;AAED;;GAEG;AACH,0CAA0C,OAAmB;IAC3D,MAAM,UAAU,GAAO;QACrB,IAAI,EAAE,OAAO,CAAC,IAAI;QAClB,EAAE,EAAE,OAAO,CAAC,EAAE;QACd,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC;QACnD,IAAI,EAAE,OAAO,CAAC,QAAQ,CAAC,aAAa;KACrC,CAAC;IAEF,EAAE,CAAC,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC,CAAC;QACjC,6CAA6C;QAC7C,UAAU,CAAC,8BAA8B,CAAC,GAAG,CAAC,OAAO,CAAC,oBAAoB,CAAC;IAC7E,CAAC;IAED,MAAM,CAAC;QACL,mBAAmB,EAAE;YACnB;gBACE,KAAK,EAAE,UAAU;aAClB;SACF;KACF,CAAC;AACJ,CAAC;AAED;;GAEG;AACH,sBAAsB,SAAiB,EAAE,SAAqB;IAC5D,MAAM,MAAM,GAAU,CAAC;YACrB,KAAK,EAAE;gBACL,IAAI,EAAE,SAAS,CAAC,IAAI;gBACpB,GAAG,EAAE,cAAc;gBACnB,IAAI,EAAE,KAAK;aACZ;SACF,CAAC,CAAC;IAEH,MAAM,CAAC,MAAM,CAAC;AAChB,CAAC","file":"packageSolution/packageSolution/xmlGenerators/createComponentXml.js","sourcesContent":["/**\r\n * @file createComponentXml.ts\r\n * @Copyright (c) Microsoft Corporation.  All rights reserved.\r\n *\r\n * Creates an package's Element.Xml for a WebPart or ClientSideSolution\r\n */\r\n/// <reference path='./xml.d.ts' />\r\n\r\nimport * as path from 'path';\r\nimport * as XmlGenerator from 'xml';\r\n\r\nimport IComponent from '../models/packageDefinition/IComponent';\r\nimport IFile from '../models/packageXml/IFile';\r\nimport serializationOptions from './serializationOptions';\r\n\r\nexport default function createComponentXml(options: IComponent, featureId: string): IFile {\r\n  const contents: { Elements: any[] } = { // tslint:disable-line:no-any\r\n    Elements: [\r\n      {\r\n        ...createClientSideComponentElement(options)\r\n      }\r\n    ]\r\n  };\r\n\r\n  switch (options.manifest.componentType) {\r\n    case 'WebPart':\r\n      contents.Elements.push({\r\n        Module: createModule(featureId, options)\r\n      });\r\n      break;\r\n\r\n    case 'Application':\r\n    case 'Extension':\r\n    case 'Library':\r\n      break;\r\n\r\n    default:\r\n      throw new Error(`Invalid Component Type: ${options.manifest.componentType}`);\r\n  }\r\n\r\n  contents.Elements.push({\r\n    _attr: {\r\n      xmlns: 'http://schemas.microsoft.com/sharepoint/'\r\n    }\r\n  });\r\n\r\n  // @todo Note that the options.id is NOT necessarily the feature ID\r\n  return {\r\n    filename: path.posix.join(featureId, `${options.manifest.componentType}_${options.id}.xml`),\r\n    contents: new Buffer(XmlGenerator(contents, serializationOptions))\r\n  };\r\n}\r\n\r\n/**\r\n * Creates a ClientSideComponent element.\r\n */\r\nfunction createClientSideComponentElement(options: IComponent): any { // tslint:disable-line:no-any\r\n  const attributes: {} = {\r\n    Name: options.name,\r\n    Id: options.id,\r\n    ComponentManifest: JSON.stringify(options.manifest),\r\n    Type: options.manifest.componentType\r\n  };\r\n\r\n  if (options.requiresCustomScript) {\r\n    // tslint:disable-next-line:no-string-literal\r\n    attributes['ReturnIfCustomScriptDisabled'] = !options.requiresCustomScript;\r\n  }\r\n\r\n  return {\r\n    ClientSideComponent: [\r\n      {\r\n        _attr: attributes\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\n/**\r\n * Creates a Module xml element with all the files.\r\n */\r\nfunction createModule(featureId: string, component: IComponent): any { // tslint:disable-line:no-any\r\n  const result: any[] = [{ // tslint:disable-line:no-any\r\n    _attr: {\r\n      Name: component.name,\r\n      Url: '_catalogs/wp',\r\n      List: '113'\r\n    }\r\n  }];\r\n\r\n  return result;\r\n}"],"sourceRoot":"..\\..\\..\\..\\src"}