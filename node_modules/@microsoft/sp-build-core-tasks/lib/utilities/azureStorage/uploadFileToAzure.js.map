{"version":3,"sources":["utilities/azureStorage/uploadFileToAzure.ts"],"names":[],"mappings":";AAAA;;;;;GAKG;;AAEH,4DAAqD;AAErD,2BACE,WAA8B,EAC9B,aAAqB,EACrB,aAAqB,EACrB,cAAuB,EACvB,MAA6B,OAAO,CAAC,GAAG;IAExC,cAAc,GAAG,cAAc,IAAI,aAAa,CAAC;IAEjD,MAAM,CAAC,IAAI,0BAAgB,CAAoB,CAAC,OAAyC,EAClD,MAA8B;QACjE,IAAI,CAAC;YACH,WAAW,CAAC,4BAA4B,CAAC,aAAa,EAAE,cAAc,EAAE,aAAa,EAC5C,CAAC,KAAc,EAAE,MAAe,EAC/B,QAAwB;gBAChE,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACV,MAAM,CAAC,IAAI,KAAK,CAAC,0BAA0B,cAAc,SAAS,aAAa,EAAE,CAAC,CAAC,CAAC;gBACtF,CAAC;gBAED,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACX,GAAG,CAAC,kBAAkB,cAAc,EAAE,CAAC,CAAC;gBAC1C,CAAC;gBAED,OAAO,CAAC,WAAW,CAAC,CAAC;YACvB,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,MAAM,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;QAC3B,CAAC;IACH,CAAC,CACF,CAAC;AACJ,CAAC;AA9BD,oCA8BC","file":"utilities/azureStorage/uploadFileToAzure.js","sourcesContent":["/**\r\n * @file uploadFileToAzure.ts\r\n * @Copyright (c) Microsoft Corporation.  All rights reserved.\r\n *\r\n * Uploads an individual file to an Azure Blob Service instance, wrapped in a promise\r\n */\r\n\r\nimport RetryablePromise from './../RetryablePromise';\r\n\r\nexport default function uploadFileToAzure(\r\n  blobService: IAzureBlobService,\r\n  containerName: string,\r\n  localFilename: string,\r\n  serverFilename?: string,\r\n  log: (str: string) => void = console.log\r\n): RetryablePromise<IAzureBlobService> {\r\n  serverFilename = serverFilename || localFilename;\r\n\r\n  return new RetryablePromise<IAzureBlobService>((resolve: (svc: IAzureBlobService) => void,\r\n                                         reject: (error: Error) => void) => {\r\n      try {\r\n        blobService.createBlockBlobFromLocalFile(containerName, serverFilename, localFilename,\r\n                                                 (error: boolean, result: boolean,\r\n                                                  response: IAzureResponse) => {\r\n          if (error) {\r\n            reject(new Error(`Unable to upload file: ${serverFilename} from ${localFilename}`));\r\n          }\r\n\r\n          if (result) {\r\n            log(`Uploaded file: ${serverFilename}`);\r\n          }\r\n\r\n          resolve(blobService);\r\n        });\r\n      } catch (error) {\r\n        reject(new Error(error));\r\n      }\r\n    }\r\n  );\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}