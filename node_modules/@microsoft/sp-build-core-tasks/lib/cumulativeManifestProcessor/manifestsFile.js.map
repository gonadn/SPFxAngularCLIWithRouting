{"version":3,"sources":["cumulativeManifestProcessor/manifestsFile.ts"],"names":[],"mappings":";AAAA;;;;GAIG;;AAMH,IAAI,GAAG,GAAmB,OAAO,CAAC,KAAK,CAAC,CAAC;AAIzC;;;;GAIG;AACH;IACE,uBAAuB;IACvB,IAAI,SAAS,GAAmC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;IAC3F,8FAA8F;IAC9F,SAAS,CAAC,OAAO,CAAC,UAAU,QAAsC;QAChE,IAAI,QAAQ,GAAa,QAAQ,CAAC,YAAY,CAAC,sBAAsB,CAAC;QACtE,IAAI,OAAO,GAAgB,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAElD,IAAI,OAAO,GAAgB,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;QACjE,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QACpC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QAE5B,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,SAAS,CAAC;AACnB,CAAC;AAhBD,sDAgBC;AAED;;GAEG;AACH;IACE,MAAM,CAAC,eAAe,CAAC;AACzB,CAAC;AAFD,oCAEC","file":"cumulativeManifestProcessor/manifestsFile.js","sourcesContent":["/**\r\n * @copyright Microsoft Corporation. All rights reserved.\r\n *\r\n * @file manifestsFile.ts\r\n */\r\n\r\n/* tslint:disable:prefer-const no-var-keyword (this needs to be compatible with es5) */\r\n\r\nimport { IClientSideComponentManifest } from '@microsoft/sp-module-interfaces';\r\nimport * as urlType from 'url';\r\nvar url: typeof urlType = require('url');\r\n\r\ndeclare const MANIFESTS_ARRAY: IClientSideComponentManifest[];\r\n\r\n/**\r\n * Get the manifest array with each of the base URLs rewritten to point to the local\r\n *  page's protocol, hostname, and port. This function is useful for automated tests\r\n *  that run locally and use an unpredictable port.\r\n */\r\nexport function getLocalPageManifests(): IClientSideComponentManifest[] {\r\n  // Clone manifestsArray\r\n  var manifests: IClientSideComponentManifest[] = JSON.parse(JSON.stringify(getManifests()));\r\n  // tslint:disable-next-line:no-function-expression ES5 browsers don't support lambda functions\r\n  manifests.forEach(function (manifest: IClientSideComponentManifest): void {\r\n    var baseUrls: string[] = manifest.loaderConfig.internalModuleBaseUrls;\r\n    var baseUrl: urlType.Url = url.parse(baseUrls[0]);\r\n\r\n    var pageUrl: urlType.Url = url.parse(window.location.toString());\r\n    baseUrl.protocol = pageUrl.protocol;\r\n    baseUrl.host = pageUrl.host;\r\n\r\n    baseUrls[0] = url.format(baseUrl);\r\n  });\r\n\r\n  return manifests;\r\n}\r\n\r\n/**\r\n * Get the manifest array.\r\n */\r\nexport function getManifests(): IClientSideComponentManifest[] {\r\n  return MANIFESTS_ARRAY;\r\n}\r\n"],"sourceRoot":"..\\..\\src"}