{"version":3,"sources":["TextTask.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAE3D,gEAAsD;AAUtD,cAAsB,SAAQ,0BAAyB;IACrD;QACE,KAAK,CACH,MAAM,EACN;YACE,SAAS,EAAE,CAAC,cAAc,CAAC;SAC5B,CACF,CAAC;IACJ,CAAC;IAEM,WAAW,CAAC,IAAmB;QACpC,4BAA4B;QAC5B,MAAM,KAAK,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;QAChC,MAAM,QAAQ,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;QAC1C,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC;QACtC,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;QACrD,2BAA2B;QAE3B,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACd,MAAM,kBAAkB,GAA2B,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC;iBACnE,IAAI,CAAC,QAAQ,CAAC;gBACb,QAAQ,EAAE,kCAAkC;aAC7C,CAAC,CAAC;iBACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YAE9B,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBACjB,MAAM,CAAC,KAAK,CACV,kBAAkB,EAClB,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC;qBAChB,IAAI,CAAC,QAAQ,EAAE,CAAC;qBAChB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CACjC,CAAC;YACJ,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,kBAAkB,CAAC;YAC5B,CAAC;QACH,CAAC;IACH,CAAC;CACF;AArCD,4BAqCC","file":"TextTask.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { GulpTask } from '@microsoft/gulp-core-build';\r\nimport gulpType = require('gulp');\r\n\r\nexport interface ITextTaskConfig {\r\n  /**\r\n   * Glob matches for files that should be converted into modules.\r\n   */\r\n  textMatch?: string[];\r\n}\r\n\r\nexport class TextTask extends GulpTask<ITextTaskConfig> {\r\n  constructor() {\r\n    super(\r\n      'text',\r\n      {\r\n        textMatch: ['src/**/*.txt']\r\n      }\r\n    );\r\n  }\r\n\r\n  public executeTask(gulp: gulpType.Gulp): NodeJS.ReadWriteStream | void {\r\n    /* tslint:disable:typedef */\r\n    const merge = require('merge2');\r\n    const texttojs = require('gulp-texttojs');\r\n    const { textMatch } = this.taskConfig;\r\n    const { libFolder, libAMDFolder } = this.buildConfig;\r\n    /* tslint:enable:typedef */\r\n\r\n    if (textMatch) {\r\n      const commonJSTextStream: NodeJS.ReadWriteStream = gulp.src(textMatch)\r\n        .pipe(texttojs({\r\n          template: 'module.exports = <%= content %>;'\r\n        }))\r\n        .pipe(gulp.dest(libFolder));\r\n\r\n      if (libAMDFolder) {\r\n        return merge(\r\n          commonJSTextStream,\r\n          gulp.src(textMatch)\r\n            .pipe(texttojs())\r\n            .pipe(gulp.dest(libAMDFolder))\r\n        );\r\n      } else {\r\n        return commonJSTextStream;\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\src"}