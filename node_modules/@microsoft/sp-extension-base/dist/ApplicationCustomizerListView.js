var ApplicationCustomizerListView = (function () {
    function ApplicationCustomizerListView(serverURL) {
        this._serverURL = serverURL;
        this._listName = 'TABTestApplicationCustomizerList';
    }
    ApplicationCustomizerListView.prototype.TestName = function () {
        return 'ApplicationCustomizer in ListView application';
    };
    ApplicationCustomizerListView.prototype.TestOwner = function () {
        return 'mpasarin';
    };
    ApplicationCustomizerListView.prototype.TestIncludeScripts = function () {
        return [
            '<ProductScriptsLocation>msajaxbundle.debug.js',
            '<ProductScriptsLocation>sp.runtime.debug.js',
            '<ProductScriptsLocation>sp.debug.js',
            '<TestLocation>/TabTaskLib.debug.js',
            '<AzureTaskLibLocation>/sp-tab-tasklib.js'
        ];
    };
    ApplicationCustomizerListView.prototype.TestSetup = function () {
        TAB.Log.Comment('ApplicationCustomizer in ListView application test start');
        SPTaskLib.ExtensionUtil.loadList(this._listName);
    };
    ApplicationCustomizerListView.prototype.TestRun = function () {
        var listViewPagePath = "/Lists/" + this._listName + "/AllItems.aspx";
        var customActionParams = '{"e6ebfc48-d18a-46c2-ad11-8133c5badf5e":' +
            '{"location":"ClientSideExtension.ApplicationCustomizer",' +
            '"properties":{"headerMessage":"Header area of the page","footerMessage":"Footer area in the page"}}}';
        var azurePath = TAB.Settings.Get('AzurePath');
        var moduleLoader = azurePath + "/listview-host-assembly_en-us.js";
        var spQueryParams = {
            loadSPFX: true,
            customActions: customActionParams,
            debugManifestsFile: SPTaskLib.PageUtil.GetDebugManifestsUrl(),
            moduleloader: moduleLoader
        };
        var pageUrl = SPTaskLib.PageUtil.CreatePageUrl(listViewPagePath, spQueryParams);
        TAB.AddTask(TAB.LoadPage(pageUrl));
        var listPageReady = TAB.MakeWaiter(function () {
            return TAB.ElementExists(TAB.Win, TAB.searchBy.customQuery, "[data-automationid='DetailsRowCell']");
        });
        SPTaskLib.PageUtil.AddTaskClearSecurityDialog(listPageReady);
        SPTaskLib.PageUtil.AddTaskValidateAutomationIdExists('YellowHeaderPlaceholderMessage');
        SPTaskLib.PageUtil.AddTaskValidateAutomationIdExists('YellowFooterPlaceholderMessage');
        TAB.Log.AddTaskPass('Test complete');
    };
    return ApplicationCustomizerListView;
}());
TabTest = ApplicationCustomizerListView;
