import { IPreloadedData } from './IPreloadedData';
/**
 * Application loader. Includes logic to load SPFX client-side applications.
 */
export default class SPApplicationLoader {
    /**
     * Loads an application and starts its execution through the shell.
     * Relies in SPComponentLoader to load the framework and the application components.
     *
     * @param preloadedData - Application preloaded data. Must include the application id.
     */
    static startApplication<TApplication>(preloadedData: IPreloadedData): Promise<TApplication>;
    private static _startApplication<TApplication>(preloadedData, qosMonitor);
    /**
     * Gets the manifest for the platform. This is the sp-application-base manifest.
     * It throws if the manifest is not available.
     */
    private static _getPlatformManifest(error);
    /**
     * Loads the platform, defined by the manifest passed as input.
     * Rejects the promise if the platform can't be loaded.
     */
    private static _loadPlatform<TPlatform>(manifest, error);
}
