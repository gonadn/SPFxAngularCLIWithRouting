"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var sp_http_1 = require("@microsoft/sp-http");
var PlaceholderProvider_1 = require("../extensibility/placeholder/PlaceholderProvider");
var PlaceholderName_1 = require("../extensibility/placeholder/PlaceholderName");
var PlaceholderManager_1 = require("../extensibility/placeholder/PlaceholderManager");
var AadPlaceholderManager = (function () {
    function AadPlaceholderManager() {
        this._eventHooked = false;
    }
    AadPlaceholderManager.prototype.setUpTokenAcquistionFailurePlaceholder = function (application, serviceScope) {
        var _this = this;
        var tokenProvider = serviceScope.consume(sp_http_1.AadTokenProvider.serviceKey);
        var placeHolderProvider = new PlaceholderProvider_1.default(serviceScope, 0 );
        var placeholderManager = serviceScope.consume(PlaceholderManager_1.default.serviceKey);
        tokenProvider.tokenAcquisitionFailureEvent.add(application, function (eventArgs) {
            if (!placeholderManager.isEnabled) {
                _this._renderTokenAcquistionFailureAlert(eventArgs);
            }
            else {
                if (_this._aadPlaceHolderContent) {
                    _this._renderTokenAcquistionFailurePlaceholder(_this._aadPlaceHolderContent, eventArgs);
                }
                else if (!_this._eventHooked) {
                    placeHolderProvider.changedEvent.add(application, function () {
                        _this._aadPlaceHolderContent = _this._createAndRenderPlaceholder(placeHolderProvider, eventArgs);
                    });
                    _this._eventHooked = true;
                }
                else {
                    _this._renderTokenAcquistionFailureAlert(eventArgs);
                }
            }
        });
    };
    AadPlaceholderManager.prototype._createAndRenderPlaceholder = function (placeholderProvider, eventArgs) {
        var placeholderContent = placeholderProvider.tryCreateContent(PlaceholderName_1.default.Top);
        if (placeholderContent) {
            this._renderTokenAcquistionFailurePlaceholder(placeholderContent, eventArgs);
        }
        else {
            this._renderTokenAcquistionFailureAlert(eventArgs);
        }
        return placeholderContent;
    };
    AadPlaceholderManager.prototype._renderTokenAcquistionFailurePlaceholder = function (placeholderContent, eventArgs) {
        var errorMessageHtml = '<span>' + eventArgs.errorMessage + '  </span>';
        placeholderContent.domElement.setAttribute('style', 'text-align: center; padding: 10px; background-color:#fff4ce;');
        placeholderContent.domElement.innerHTML = eventArgs.redirectUrl ?
            errorMessageHtml + '<a href=' + eventArgs.redirectUrl + '>Click to resolve issue</a>' :
            errorMessageHtml;
    };
    AadPlaceholderManager.prototype._renderTokenAcquistionFailureAlert = function (eventArgs) {
        if (confirm(eventArgs.errorMessage) && eventArgs.redirectUrl) {
            window.location.href = eventArgs.redirectUrl;
        }
    };
    return AadPlaceholderManager;
}());
exports.default = AadPlaceholderManager;
