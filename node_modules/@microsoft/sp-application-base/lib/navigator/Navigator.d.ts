import { _IPreloadedData } from '@microsoft/sp-loader';
import BaseApplicationContext from '../BaseApplicationContext';
/**
 * Navigator for SPFx applications.
 * It allows to navigate to a different URL that is backed by an SPFx application.
 * Updates all SPFx-internal data structures with the information from the new URL.
 *
 * @internal
 */
export default class Navigator {
    private _context;
    /**
     * Raises an event for a page navigation.
     */
    static raiseNavigatedEvent(): void;
    constructor(context: BaseApplicationContext);
    /**
     * Navigates to a new page.
     * Requests a JSON to SharePoint server and updates all SPFx related data with the new information.
     * This includes new manifests, page context, theme, telemetry settings.
     *
     * @param url Destination URL
     */
    navigate(url: string): Promise<_IPreloadedData>;
    /**
     * Given a preloaded data object, it sets up all SPFx related data with the new information from the preloaded data.
     * @internalremarks This is necessary because ListView has its own router and will give us only the object itself.
     *
     * @param preloadedData Preloaded data object
     */
    navigateToPreloadedData(preloadedData: _IPreloadedData): void;
    private _processPreloadedData(preloadedData);
    /**
     * Loads a page from SharePoint.
     *
     * @param url URL of the page to load.
     * @return Promise with the preloaded data from the requested URL.
     */
    private loadPage(url);
    private _isCrossSite(preloadedData);
}
