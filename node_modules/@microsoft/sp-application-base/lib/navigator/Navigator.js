"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var sp_core_library_1 = require("@microsoft/sp-core-library");
var sp_http_1 = require("@microsoft/sp-http");
var sp_loader_1 = require("@microsoft/sp-loader");
var sp_page_context_1 = require("@microsoft/sp-page-context");
var sp_telemetry_1 = require("@ms/sp-telemetry");
var SPThemeProvider_1 = require("../pageChrome/SPThemeProvider");
var BaseApplication_1 = require("../BaseApplication");
var ApplicationManager_1 = require("../ApplicationManager");
var Navigator = (function () {
    function Navigator(context) {
        sp_core_library_1.Validate.isNotNullOrUndefined(context, 'context');
        this._context = context;
    }
    Navigator.raiseNavigatedEvent = function () {
        sp_core_library_1._EventManager.instance.raiseStickyEvent(BaseApplication_1.default._navigatedEventName, {});
    };
    Navigator.prototype.navigate = function (url) {
        var _this = this;
        sp_core_library_1.Validate.isNonemptyString(url, 'url');
        return this.loadPage(url).then(function (preloadedData) {
            _this.navigateToPreloadedData(preloadedData);
            return preloadedData;
        }).catch(function (error) {
            location.href = url;
            throw error;
        });
    };
    Navigator.prototype.navigateToPreloadedData = function (preloadedData) {
        this._processPreloadedData(preloadedData);
        sp_core_library_1.Session._changePage();
        Navigator.raiseNavigatedEvent();
    };
    Navigator.prototype._processPreloadedData = function (preloadedData) {
        var isCrossSite = this._isCrossSite(preloadedData);
        if (isCrossSite && preloadedData.customActions && preloadedData.customActions.length) {
            throw new Error('Cross-site in-place navigation not supported with custom actions');
        }
        this._context.pageContext.initialize(sp_page_context_1.SharePointPageContextDataProvider._createPageContextData(preloadedData.spPageContextInfo), preloadedData.spPageContextInfo);
        sp_loader_1.SPComponentLoader.registerManifests(preloadedData.manifests);
        if (isCrossSite) {
            if (!ApplicationManager_1.default._isChromelessApplication(this._context.manifest.id)) {
                var themeProvider = new SPThemeProvider_1.default(this._context.serviceScope);
                themeProvider.loadThemedStyles();
            }
            sp_telemetry_1._Telemetry.updateSettings({
                siteId: this._context.pageContext.legacyPageContext.siteId,
                webId: this._context.pageContext.legacyPageContext.webId
            });
        }
    };
    Navigator.prototype.loadPage = function (url) {
        return this._context.spHttpClient.get(url + (url.indexOf('?') === -1 ? '?' : '&') + 'as=json', sp_http_1.SPHttpClient.configurations.v1).then(function (response) {
            if (!response.ok) {
                throw new Error(response.statusMessage);
            }
            else {
                return response.json();
            }
        }).catch(function (error) {
            return Promise.reject(error);
        });
    };
    Navigator.prototype._isCrossSite = function (preloadedData) {
        return !sp_core_library_1.Guid.parse(preloadedData.spPageContextInfo.webId).equals(this._context.pageContext.web.id);
    };
    return Navigator;
}());
exports.default = Navigator;
