"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var decorators_1 = require("@microsoft/decorators");
var sp_core_library_1 = require("@microsoft/sp-core-library");
var sp_component_base_1 = require("@microsoft/sp-component-base");
var Navigator_1 = require("./navigator/Navigator");
var SuiteNavManagerConfiguration_1 = require("./suiteNav/SuiteNavManagerConfiguration");
var SPThemeProvider_1 = require("./pageChrome/SPThemeProvider");
var BaseApplicationContext_1 = require("./BaseApplicationContext");
var AadPlaceholderManager_1 = require("./frameworkPlaceholders/AadPlaceholderManager");
var SUITE_NAV_USE_SPO_BEHAVIOR_KILL_SWITCH = sp_core_library_1.Guid.parse('22F8084E-9DEB-4642-B63E-E70A7F87C998');
var BaseApplication = (function (_super) {
    tslib_1.__extends(BaseApplication, _super);
    function BaseApplication() {
        var _this = _super.call(this) || this;
        _this._domElement = undefined;
        _this['__type'] = 'BaseApplication';
        return _this;
    }
    Object.defineProperty(BaseApplication.prototype, "domElement", {
        get: function () {
            sp_core_library_1.Validate.isNotNullOrUndefined(this._domElement, 'domElement');
            return this._domElement;
        },
        set: function (value) {
            throw new Error('The property cannot be assigned because it is read-only');
        },
        enumerable: true,
        configurable: true
    });
    BaseApplication.prototype._load = function (contextParameters) {
        var applicationContext = new BaseApplicationContext_1.default(contextParameters);
        this._initializeContext(applicationContext);
        var aadPlaceholderManager = new AadPlaceholderManager_1.default();
        aadPlaceholderManager.setUpTokenAcquistionFailurePlaceholder(this, this.context.serviceScope);
        this._navigator = new Navigator_1.default(applicationContext);
        this.onLoad();
    };
    BaseApplication.prototype._render = function (domElement) {
        this._domElement = domElement;
        this.onRender();
    };
    BaseApplication.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this._navigator = undefined;
        this._domElement = undefined;
    };
    BaseApplication.prototype.getBrowserCompatibility = function () {
        return {
            supportLevel: sp_core_library_1.BrowserSupportLevel.None,
            warning: undefined
        };
    };
    BaseApplication.prototype.suiteNavConfiguration = function () {
        var pageContext = this.context.pageContext;
        var webTemplateId;
        if (!sp_core_library_1._SPKillSwitch.isActivated(SUITE_NAV_USE_SPO_BEHAVIOR_KILL_SWITCH, '9/08/2017', 'SuiteNavUseSPOBehaviors')) {
            webTemplateId = pageContext.legacyPageContext.webTemplateId;
        }
        return new SuiteNavManagerConfiguration_1.default({
            currentUICultureName: pageContext.cultureInfo.currentUICultureName,
            disableSuiteNav: this._shouldDisableSuiteNav(),
            settingsData: pageContext.legacyPageContext.MenuData ?
                pageContext.legacyPageContext.MenuData.SettingsData :
                undefined,
            signoutUrl: pageContext.legacyPageContext.MenuData ?
                pageContext.legacyPageContext.MenuData.SignOutUrl :
                undefined,
            siteClientTag: pageContext.legacyPageContext.siteClientTag,
            systemUserKey: pageContext.legacyPageContext.systemUserKey,
            webServerRelativeUrl: pageContext.web.serverRelativeUrl,
            webTemplateId: webTemplateId
        });
    };
    BaseApplication.prototype.onLoad = function () {
    };
    BaseApplication.prototype.onRender = function () {
    };
    BaseApplication.prototype.onDispose = function () {
    };
    BaseApplication.prototype._loadTheme = function () {
        var themeProvider = new SPThemeProvider_1.default(this.context.serviceScope);
        themeProvider.loadThemedStyles();
    };
    BaseApplication.prototype._navigate = function (url) {
        sp_core_library_1.Validate.isNonemptyString(url, 'url');
        return this._navigator.navigate(url);
    };
    BaseApplication.prototype._navigateToPreloadedData = function (preloadedData) {
        sp_core_library_1.Validate.isNotNullOrUndefined(preloadedData, 'preloadedData');
        return this._navigator.navigateToPreloadedData(preloadedData);
    };
    BaseApplication.prototype.raiseLayoutChangedEvent = function () {
        sp_core_library_1._EventManager.instance.raiseEvent(BaseApplication._layoutChangedEventName, {});
    };
    BaseApplication.prototype._shouldDisableSuiteNav = function () {
        var urlQueryParams = new sp_core_library_1.UrlQueryParameterCollection(window.location.href);
        return window.location.hostname === 'localhost' ||
            urlQueryParams.getValue('disableSuiteNav') === 'true' ?
            true :
            false;
    };
    BaseApplication._navigatedEventName = 'application.navigatedEvent';
    BaseApplication._layoutChangedEventName = 'application.layoutChangedEvent';
    tslib_1.__decorate([
        decorators_1.override
    ], BaseApplication.prototype, "dispose", null);
    tslib_1.__decorate([
        decorators_1.virtual
    ], BaseApplication.prototype, "getBrowserCompatibility", null);
    tslib_1.__decorate([
        decorators_1.virtual
    ], BaseApplication.prototype, "onLoad", null);
    tslib_1.__decorate([
        decorators_1.virtual
    ], BaseApplication.prototype, "onRender", null);
    tslib_1.__decorate([
        decorators_1.virtual
    ], BaseApplication.prototype, "onDispose", null);
    return BaseApplication;
}(sp_component_base_1.BaseComponent));
exports.default = BaseApplication;
