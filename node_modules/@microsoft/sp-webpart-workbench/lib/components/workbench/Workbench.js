"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = require("react");
var sp_a11y_1 = require("@ms/sp-a11y");
var sp_core_library_1 = require("@microsoft/sp-core-library");
var office_ui_fabric_react_1 = require("office-ui-fabric-react");
var WorkbenchCommandBar_1 = require("../workbenchCommandBar/WorkbenchCommandBar");
var CanvasHost_1 = require("../canvasHost/CanvasHost");
var MobilePreview_1 = require("../mobilePreview/mobilePreview/MobilePreview");
var SerializedCanvasView_1 = require("../serializedCanvasView/SerializedCanvasView");
var Workbench_resx_1 = require("./Workbench.resx");
var Workbench_module_scss_1 = require("./Workbench.module.scss");
var WorkBench = (function (_super) {
    tslib_1.__extends(WorkBench, _super);
    function WorkBench(props, context) {
        var _this = _super.call(this, props, context) || this;
        var urlParams = new sp_core_library_1.UrlQueryParameterCollection(window.location.href);
        _this.state = {
            displayMobilePreview: false,
            showSerializedCanvasView: false,
            mobilePreviewDeviceType: MobilePreview_1.DeviceType.Phone,
            isEditing: (urlParams.getValue('Mode') !== 'Read'),
            officeHeaderTitle: Workbench_resx_1.default.Office365Title,
            hasOfficeHeader: false,
            hasCommandBar: false
        };
        _this._a11yManager = sp_a11y_1.A11yManager.getInstanceById(_this.props.a11yManagerId);
        return _this;
    }
    WorkBench.prototype.getChildContext = function () {
        return {
            a11yManager: this._a11yManager
        };
    };
    WorkBench.prototype.render = function () {
        var mobilePreview = undefined;
        var pageStore = this.props.pageStore;
        if (this.state.displayMobilePreview) {
            mobilePreview = React.createElement(MobilePreview_1.default, { onExit: this._closeMobilePreview, deviceType: this.state.mobilePreviewDeviceType });
        }
        var serializeCallback = pageStore.getSerializeCallback();
        return (React.createElement("div", { className: office_ui_fabric_react_1.css(Workbench_module_scss_1.default.workbench, 'ms-Fabric is-focusVisible') },
            React.createElement("div", { className: Workbench_module_scss_1.default.header },
                React.createElement("div", { className: Workbench_module_scss_1.default.headerMenu },
                    React.createElement(office_ui_fabric_react_1.Icon, { iconName: 'Waffle' })),
                React.createElement("div", { className: office_ui_fabric_react_1.css(Workbench_module_scss_1.default.headerTitle, 'ms-font-xl') },
                    React.createElement("em", null, this.state.officeHeaderTitle),
                    Workbench_resx_1.default.SharePointWorkbenchTitle),
                React.createElement("div", { className: Workbench_module_scss_1.default.headerPerson },
                    React.createElement(office_ui_fabric_react_1.Icon, { iconName: 'Contact' }))),
            React.createElement("div", null,
                React.createElement("div", { id: 'workbenchCommandBar', className: Workbench_module_scss_1.default.commandBar },
                    React.createElement(WorkbenchCommandBar_1.default, { isEditing: this.state.isEditing, onClickMobileView: this._onClickMobileView, onClickTabletView: this._onClickTabletView, toggleEdit: this._toggleEdit, clearPage: pageStore.clearPageState, savePage: pageStore.savePageState, onClickSerializeCanvasView: this._onClickSerializeCanvasView })),
                React.createElement("div", { id: 'workbenchPageContent', className: Workbench_module_scss_1.default.pageContent },
                    React.createElement(CanvasHost_1.default, { store: pageStore, isEditing: this.state.isEditing, hasOfficeHeader: this.state.hasOfficeHeader, hasCommandBar: this.state.hasCommandBar }))),
            mobilePreview,
            React.createElement(SerializedCanvasView_1.default, { getSerializedData: function (json) { return (serializeCallback) ? serializeCallback(json) : undefined; }, isVisible: this.state.showSerializedCanvasView, closeCallback: this._closeClickSerializeCanvasView })));
    };
    WorkBench.prototype.componentDidUpdate = function (prevProps, prevState) {
        if (this.state.isEditing !== prevState.isEditing) {
            if (this.state.isEditing) {
                this._a11yManager.focusById('previewButton');
                this._a11yManager.alert(Workbench_resx_1.default.ScreenReaderDisplayModeSwitchToEditMode);
            }
            else {
                this._a11yManager.focusById('editButton');
                this._a11yManager.alert(Workbench_resx_1.default.ScreenReaderDisplayModeSwitchToReadMode);
            }
        }
    };
    WorkBench.prototype._toggleEdit = function () {
        this.setState({
            isEditing: !this.state.isEditing
        });
    };
    WorkBench.prototype._onClickMobileView = function () {
        this.setState({
            displayMobilePreview: true,
            mobilePreviewDeviceType: MobilePreview_1.DeviceType.Phone
        });
        this._setSuiteNavZIndex('0');
    };
    WorkBench.prototype._onClickSerializeCanvasView = function () {
        this.setState({
            showSerializedCanvasView: true
        });
    };
    WorkBench.prototype._closeClickSerializeCanvasView = function () {
        this.setState({
            showSerializedCanvasView: false
        });
    };
    WorkBench.prototype._onClickTabletView = function () {
        this.setState({
            displayMobilePreview: true,
            mobilePreviewDeviceType: MobilePreview_1.DeviceType.Tablet
        });
        this._setSuiteNavZIndex('0');
    };
    WorkBench.prototype._closeMobilePreview = function () {
        this.setState({
            displayMobilePreview: false,
            mobilePreviewDeviceType: MobilePreview_1.DeviceType.Phone
        });
        this._setSuiteNavZIndex('5');
    };
    WorkBench.prototype._setSuiteNavZIndex = function (value) {
        var suiteNav = document.getElementById('SuiteNavPlaceHolder');
        if (suiteNav) {
            suiteNav.style.zIndex = value;
        }
    };
    WorkBench.childContextTypes = {
        a11yManager: React.PropTypes.object.isRequired
    };
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], WorkBench.prototype, "_toggleEdit", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], WorkBench.prototype, "_onClickMobileView", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], WorkBench.prototype, "_onClickSerializeCanvasView", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], WorkBench.prototype, "_closeClickSerializeCanvasView", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], WorkBench.prototype, "_onClickTabletView", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], WorkBench.prototype, "_closeMobilePreview", null);
    return WorkBench;
}(React.Component));
exports.WorkBench = WorkBench;
