"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = require("react");
var office_ui_fabric_react_bundle_1 = require("@microsoft/office-ui-fabric-react-bundle");
var MobilePreviewDeviceTypeSelector_module_scss_1 = require("./MobilePreviewDeviceTypeSelector.module.scss");
var MobilePreview_1 = require("../../mobilePreview/MobilePreview");
var MobilePreviewDeviceTypeSelector = (function (_super) {
    tslib_1.__extends(MobilePreviewDeviceTypeSelector, _super);
    function MobilePreviewDeviceTypeSelector() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MobilePreviewDeviceTypeSelector.prototype.render = function () {
        var _this = this;
        var spanClassNameMobile = office_ui_fabric_react_bundle_1.css(office_ui_fabric_react_bundle_1.getIconClassName('CellPhone'), 'ms-fontColor-neutralTertiary', MobilePreviewDeviceTypeSelector_module_scss_1.default.mobilePreviewDeviceIcon);
        var spanClassNameTablet = office_ui_fabric_react_bundle_1.css(office_ui_fabric_react_bundle_1.getIconClassName('Tablet'), 'ms-fontColor-neutralTertiary', MobilePreviewDeviceTypeSelector_module_scss_1.default.mobilePreviewDeviceIcon);
        return (React.createElement("div", null,
            React.createElement("div", { className: MobilePreviewDeviceTypeSelector_module_scss_1.default.navBarItemRight },
                React.createElement("a", { tabIndex: 0, role: 'button', onClick: function () { return _this.props.onChangeDeviceType(MobilePreview_1.DeviceType.Phone); } },
                    React.createElement("span", { className: spanClassNameMobile }))),
            React.createElement("div", { className: MobilePreviewDeviceTypeSelector_module_scss_1.default.navBarItemRight },
                React.createElement("a", { tabIndex: 0, role: 'button', onClick: function () { return _this.props.onChangeDeviceType(MobilePreview_1.DeviceType.Tablet); } },
                    React.createElement("span", { className: spanClassNameTablet })))));
    };
    return MobilePreviewDeviceTypeSelector;
}(React.Component));
exports.default = MobilePreviewDeviceTypeSelector;
