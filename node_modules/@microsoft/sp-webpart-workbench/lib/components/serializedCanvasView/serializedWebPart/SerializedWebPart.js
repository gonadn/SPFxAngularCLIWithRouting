"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = require("react");
var office_ui_fabric_react_1 = require("office-ui-fabric-react");
var sp_webpart_base_1 = require("@microsoft/sp-webpart-base");
var encodingUtilities_1 = require("./../encodingUtilities");
var SerializedWebPart_module_scss_1 = require("./SerializedWebPart.module.scss");
var SerializedCanvasView_module_scss_1 = require("./../SerializedCanvasView.module.scss");
var SerializedWebPart = (function (_super) {
    tslib_1.__extends(SerializedWebPart, _super);
    function SerializedWebPart() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SerializedWebPart.prototype.render = function () {
        var serializedString = sp_webpart_base_1.WebPartDataConverter.convertWebPartDataToHtml(this.props.serializedWebPart);
        var escapedSerializedString = encodingUtilities_1.htmlEncode(serializedString);
        var webPartXmlLines = ['<webParts>',
            '  <webPart xmlns="http://schemas.microsoft.com/WebPart/v3">',
            '    <metaData>',
            '      <type name="Microsoft.SharePoint.WebPartPages.ClientSideWebPart,',
            '        Microsoft.SharePoint, Version=16.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c" />',
            '      <importErrorMessage>Cannot Import WebPart</importErrorMessage>',
            '    </metaData>',
            '    <data>',
            '      <properties>',
            "        <property name=\"Title\" type=\"string\">" + this.props.serializedWebPart.title + "</property>",
            "        <property name=\"Description\" type=\"string\">" + this.props.serializedWebPart.description + "</property>",
            "        <property name=\"IconUrl\" type=\"string\">" + '' + "</property>",
            "        <property name=\"ClientSideWebPartId\">" + this.props.serializedWebPart.id + "</property>",
            "        <property name=\"ClientSideWebPartData\" type=\"string\">" + escapedSerializedString + "</property>",
            '      </properties>',
            '    </data>',
            '  </webPart>',
            '</webParts>'];
        return (React.createElement("p", { key: this.props.serializedWebPart.instanceId, className: office_ui_fabric_react_1.css(SerializedWebPart_module_scss_1.default.serializedWebPartItem, SerializedCanvasView_module_scss_1.default.serializedTextArea) }, encodingUtilities_1.getReactLines(webPartXmlLines)));
    };
    return SerializedWebPart;
}(React.Component));
exports.default = SerializedWebPart;
