define("8be81a5c-af38-4bb2-af97-afa3b64dfbed_1.4.1", ["react","office-ui-fabric-react","@microsoft/sp-core-library","@ms/sp-telemetry","@microsoft/sp-lodash-subset","resx-strings","@microsoft/sp-webpart-base","react-dom","@microsoft/office-ui-fabric-react-bundle","@microsoft/sp-page-context","@microsoft/sp-http","@microsoft/sp-application-base","@microsoft/sp-loader"], (function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_12__, __WEBPACK_EXTERNAL_MODULE_13__, __WEBPACK_EXTERNAL_MODULE_16__, __WEBPACK_EXTERNAL_MODULE_17__, __WEBPACK_EXTERNAL_MODULE_23__, __WEBPACK_EXTERNAL_MODULE_47__, __WEBPACK_EXTERNAL_MODULE_130__, __WEBPACK_EXTERNAL_MODULE_139__, __WEBPACK_EXTERNAL_MODULE_140__) { return /******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	var parentJsonpFunction = window["webpackJsonp8be81a5c_af38_4bb2_af97_afa3b64dfbed_1_4_1"];
/******/ 	window["webpackJsonp8be81a5c_af38_4bb2_af97_afa3b64dfbed_1_4_1"] = function webpackJsonpCallback(chunkIds, moreModules, executeModules) {
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [], result;
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules, executeModules);
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 	};
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// objects to store loaded and loading chunks
/******/ 	var installedChunks = {
/******/ 		4: 0
/******/ 	};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId) {
/******/ 		var installedChunkData = installedChunks[chunkId];
/******/ 		if(installedChunkData === 0) {
/******/ 			return new Promise(function(resolve) { resolve(); });
/******/ 		}
/******/
/******/ 		// a Promise means "currently loading".
/******/ 		if(installedChunkData) {
/******/ 			return installedChunkData[2];
/******/ 		}
/******/
/******/ 		// setup Promise in chunk cache
/******/ 		var promise = new Promise(function(resolve, reject) {
/******/ 			installedChunkData = installedChunks[chunkId] = [resolve, reject];
/******/ 		});
/******/ 		installedChunkData[2] = promise;
/******/
/******/ 		// start chunk loading
/******/ 		var head = document.getElementsByTagName('head')[0];
/******/ 		var script = document.createElement('script');
/******/ 		script.type = 'text/javascript';
/******/ 		script.charset = 'utf-8';
/******/ 		script.async = true;
/******/ 		script.timeout = 120000;
/******/
/******/ 		if (__webpack_require__.nc) {
/******/ 			script.setAttribute("nonce", __webpack_require__.nc);
/******/ 		}
/******/ 		script.src = __webpack_require__.p + "" + chunkId + "." + ({"0":"sp-canvas-ckeditor","1":"toolbox","2":"page-picker-component","3":"sp-rte-propertypane"}[chunkId]||chunkId) + "_" + {"0":"ca73742e336b863054a9","1":"7007eb6cf2cefb719a42","2":"fdfca2a2ae0d58fa032e","3":"db940de11ff91f72b80a"}[chunkId] + ".js";
/******/ 		var timeout = setTimeout(onScriptComplete, 120000);
/******/ 		script.onerror = script.onload = onScriptComplete;
/******/ 		function onScriptComplete() {
/******/ 			// avoid mem leaks in IE.
/******/ 			script.onerror = script.onload = null;
/******/ 			clearTimeout(timeout);
/******/ 			var chunk = installedChunks[chunkId];
/******/ 			if(chunk !== 0) {
/******/ 				if(chunk) {
/******/ 					chunk[1](new Error('Loading chunk ' + chunkId + ' failed.'));
/******/ 				}
/******/ 				installedChunks[chunkId] = undefined;
/******/ 			}
/******/ 		};
/******/ 		head.appendChild(script);
/******/
/******/ 		return promise;
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// on error function for async loading
/******/ 	__webpack_require__.oe = function(err) { console.error(err); throw err; };
/******/
/******/ 	// Set the webpack public path
/******/ 	(function () {
/******/ 	  var scripts = document.getElementsByTagName('script');
/******/ 	  var regex = (typeof spScriptNamePattern !== 'undefined') ? spScriptNamePattern : new RegExp('sp-webpart-workbench_?[a-zA-Z0-9-_]*.js', 'i');
/******/ 	  var publicPath;
/******/ 	
/******/ 	  if (scripts && scripts.length) {
/******/ 	    for (var i = 0; i < scripts.length; i++) {
/******/ 	      if (!scripts[i]) continue;
/******/ 	      var path = scripts[i].getAttribute('src');
/******/ 	      if (path && path.match(regex)) {
/******/ 	        publicPath = path.substring(0, path.lastIndexOf('/') + 1);
/******/ 	        break;
/******/ 	      }
/******/ 	    }
/******/ 	  }
/******/ 	
/******/ 	  if (!publicPath) {
/******/ 	    for (var global in window.__setWebpackPublicPathLoaderSrcRegistry__) {
/******/ 	      if (global && global.match(regex)) {
/******/ 	        publicPath = global.substring(0, global.lastIndexOf('/') + 1);
/******/ 	        break;
/******/ 	      }
/******/ 	    }
/******/ 	  }
/******/ 	  __webpack_require__.p = publicPath;
/******/ 	})();
/******/ 	
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 137);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ ((function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (immutable) */ __webpack_exports__["__extends"] = __extends;
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__assign", (function() { return __assign; }));
/* harmony export (immutable) */ __webpack_exports__["__rest"] = __rest;
/* harmony export (immutable) */ __webpack_exports__["__decorate"] = __decorate;
/* harmony export (immutable) */ __webpack_exports__["__param"] = __param;
/* harmony export (immutable) */ __webpack_exports__["__metadata"] = __metadata;
/* harmony export (immutable) */ __webpack_exports__["__awaiter"] = __awaiter;
/* harmony export (immutable) */ __webpack_exports__["__generator"] = __generator;
/* harmony export (immutable) */ __webpack_exports__["__exportStar"] = __exportStar;
/* harmony export (immutable) */ __webpack_exports__["__values"] = __values;
/* harmony export (immutable) */ __webpack_exports__["__read"] = __read;
/* harmony export (immutable) */ __webpack_exports__["__spread"] = __spread;
/* harmony export (immutable) */ __webpack_exports__["__await"] = __await;
/* harmony export (immutable) */ __webpack_exports__["__asyncGenerator"] = __asyncGenerator;
/* harmony export (immutable) */ __webpack_exports__["__asyncDelegator"] = __asyncDelegator;
/* harmony export (immutable) */ __webpack_exports__["__asyncValues"] = __asyncValues;
/* harmony export (immutable) */ __webpack_exports__["__makeTemplateObject"] = __makeTemplateObject;
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = Object.setPrototypeOf ||
    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = Object.assign || function __assign(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }
    return t;
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __exportStar(m, exports) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", (function (e) { throw e; })), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; }; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator];
    return m ? m.call(o) : typeof __values === "function" ? __values(o) : o[Symbol.iterator]();
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};


/***/ })),
/* 1 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_1__;

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_2__;

/***/ }),
/* 3 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function(useSourceMap) {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		return this.map((function (item) {
			var content = cssWithMappingToString(item, useSourceMap);
			if(item[2]) {
				return "@media " + item[2] + "{" + content + "}";
			} else {
				return content;
			}
		})).join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};

function cssWithMappingToString(item, useSourceMap) {
	var content = item[1] || '';
	var cssMapping = item[3];
	if (!cssMapping) {
		return content;
	}

	if (useSourceMap && typeof btoa === 'function') {
		var sourceMapping = toComment(cssMapping);
		var sourceURLs = cssMapping.sources.map((function (source) {
			return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'
		}));

		return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
	}

	return [content].join('\n');
}

// Adapted from convert-source-map (MIT)
function toComment(sourceMap) {
	// eslint-disable-next-line no-undef
	var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
	var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;

	return '/*# ' + data + ' */';
}


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {
/**
 * An IThemingInstruction can specify a rawString to be preserved or a theme slot and a default value
 * to use if that slot is not specified by the theme.
 */
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
// IE needs to inject styles using cssText. However, we need to evaluate this lazily, so this
// value will initialize as undefined, and later will be set once on first loadStyles injection.
var _injectStylesWithCssText;
// Store the theming state in __themeState__ global scope for reuse in the case of duplicate
// load-themed-styles hosted on the page.
var _root = (typeof window === 'undefined') ? global : window; // tslint:disable-line:no-any
var _themeState = initializeThemeState();
/**
 * Matches theming tokens. For example, "[theme: themeSlotName, default: #FFF]" (including the quotes).
 */
// tslint:disable-next-line:max-line-length
var _themeTokenRegex = /[\'\"]\[theme:\s*(\w+)\s*(?:\,\s*default:\s*([\\"\']?[\.\,\(\)\#\-\s\w]*[\.\,\(\)\#\-\w][\"\']?))?\s*\][\'\"]/g;
/** Maximum style text length, for supporting IE style restrictions. */
var MAX_STYLE_CONTENT_SIZE = 10000;
var now = function () { return (typeof performance !== 'undefined' && !!performance.now) ? performance.now() : Date.now(); };
function measure(func) {
    var start = now();
    func();
    var end = now();
    _themeState.perf.duration += end - start;
}
/**
 * initialize global state object
 */
function initializeThemeState() {
    var state = _root.__themeState__ || {
        theme: undefined,
        lastStyleElement: undefined,
        registeredStyles: []
    };
    if (!state.runState) {
        state = __assign({}, (state), { perf: {
                count: 0,
                duration: 0
            }, runState: {
                flushTimer: 0,
                mode: 0 /* sync */,
                buffer: []
            } });
    }
    if (!state.registeredThemableStyles) {
        state = __assign({}, (state), { registeredThemableStyles: [] });
    }
    _root.__themeState__ = state;
    return state;
}
/**
 * Loads a set of style text. If it is registered too early, we will register it when the window.load
 * event is fired.
 * @param {string | ThemableArray} styles Themable style text to register.
 * @param {boolean} loadAsync When true, always load styles in async mode, irrespective of current sync mode.
 */
function loadStyles(styles, loadAsync) {
    if (loadAsync === void 0) { loadAsync = false; }
    measure((function () {
        var styleParts = Array.isArray(styles) ? styles : splitStyles(styles);
        if (_injectStylesWithCssText === undefined) {
            _injectStylesWithCssText = shouldUseCssText();
        }
        var _a = _themeState.runState, mode = _a.mode, buffer = _a.buffer, flushTimer = _a.flushTimer;
        if (loadAsync || mode === 1 /* async */) {
            buffer.push(styleParts);
            if (!flushTimer) {
                _themeState.runState.flushTimer = asyncLoadStyles();
            }
        }
        else {
            applyThemableStyles(styleParts);
        }
    }));
}
exports.loadStyles = loadStyles;
/**
 * Allows for customizable loadStyles logic. e.g. for server side rendering application
 * @param {(processedStyles: string, rawStyles?: string | ThemableArray) => void}
 * a loadStyles callback that gets called when styles are loaded or reloaded
 */
function configureLoadStyles(loadStylesFn) {
    _themeState.loadStyles = loadStylesFn;
}
exports.configureLoadStyles = configureLoadStyles;
/**
 * Configure run mode of load-themable-styles
 * @param mode load-themable-styles run mode, async or sync
 */
function configureRunMode(mode) {
    _themeState.runState.mode = mode;
}
exports.configureRunMode = configureRunMode;
/**
 * external code can call flush to synchronously force processing of currently buffered styles
 */
function flush() {
    measure((function () {
        var styleArrays = _themeState.runState.buffer.slice();
        _themeState.runState.buffer = [];
        var mergedStyleArray = [].concat.apply([], styleArrays);
        if (mergedStyleArray.length > 0) {
            applyThemableStyles(mergedStyleArray);
        }
    }));
}
exports.flush = flush;
/**
 * register async loadStyles
 */
function asyncLoadStyles() {
    return setTimeout((function () {
        _themeState.runState.flushTimer = 0;
        flush();
    }), 0);
}
/**
 * Loads a set of style text. If it is registered too early, we will register it when the window.load event
 * is fired.
 * @param {string} styleText Style to register.
 * @param {IStyleRecord} styleRecord Existing style record to re-apply.
 */
function applyThemableStyles(stylesArray, styleRecord) {
    if (_themeState.loadStyles) {
        _themeState.loadStyles(resolveThemableArray(stylesArray).styleString, stylesArray);
    }
    else {
        _injectStylesWithCssText ?
            registerStylesIE(stylesArray, styleRecord) :
            registerStyles(stylesArray);
    }
}
/**
 * Registers a set theme tokens to find and replace. If styles were already registered, they will be
 * replaced.
 * @param {theme} theme JSON object of theme tokens to values.
 */
function loadTheme(theme) {
    _themeState.theme = theme;
    // reload styles.
    reloadStyles();
}
exports.loadTheme = loadTheme;
/**
 * Clear already registered style elements and style records in theme_State object
 * @option: specify which group of registered styles should be cleared.
 * Default to be both themable and non-themable styles will be cleared
 */
function clearStyles(option) {
    if (option === void 0) { option = 3 /* all */; }
    if (option === 3 /* all */ || option === 2 /* onlyNonThemable */) {
        clearStylesInternal(_themeState.registeredStyles);
        _themeState.registeredStyles = [];
    }
    if (option === 3 /* all */ || option === 1 /* onlyThemable */) {
        clearStylesInternal(_themeState.registeredThemableStyles);
        _themeState.registeredThemableStyles = [];
    }
}
exports.clearStyles = clearStyles;
function clearStylesInternal(records) {
    records.forEach((function (styleRecord) {
        var styleElement = styleRecord && styleRecord.styleElement;
        if (styleElement && styleElement.parentElement) {
            styleElement.parentElement.removeChild(styleElement);
        }
    }));
}
/**
 * Reloads styles.
 */
function reloadStyles() {
    if (_themeState.theme) {
        var themableStyles = [];
        for (var _i = 0, _a = _themeState.registeredThemableStyles; _i < _a.length; _i++) {
            var styleRecord = _a[_i];
            themableStyles.push(styleRecord.themableStyle);
        }
        if (themableStyles.length > 0) {
            clearStyles(1 /* onlyThemable */);
            applyThemableStyles([].concat.apply([], themableStyles));
        }
    }
}
/**
 * Find theme tokens and replaces them with provided theme values.
 * @param {string} styles Tokenized styles to fix.
 */
function detokenize(styles) {
    if (styles) {
        styles = resolveThemableArray(splitStyles(styles)).styleString;
    }
    return styles;
}
exports.detokenize = detokenize;
/**
 * Resolves ThemingInstruction objects in an array and joins the result into a string.
 * @param {ThemableArray} splitStyleArray ThemableArray to resolve and join.
 */
function resolveThemableArray(splitStyleArray) {
    var theme = _themeState.theme;
    var themable = false;
    // Resolve the array of theming instructions to an array of strings.
    // Then join the array to produce the final CSS string.
    var resolvedArray = (splitStyleArray || []).map((function (currentValue) {
        var themeSlot = currentValue.theme;
        if (themeSlot) {
            themable = true;
            // A theming annotation. Resolve it.
            var themedValue = theme ? theme[themeSlot] : undefined;
            var defaultValue = currentValue.defaultValue || 'inherit';
            // Warn to console if we hit an unthemed value even when themes are provided, but only if "DEBUG" is true.
            // Allow the themedValue to be undefined to explicitly request the default value.
            if (theme && !themedValue && console && !(themeSlot in theme) && "boolean" !== 'undefined' && true) {
                console.warn("Theming value not provided for \"" + themeSlot + "\". Falling back to \"" + defaultValue + "\".");
            }
            return themedValue || defaultValue;
        }
        else {
            // A non-themable string. Preserve it.
            return currentValue.rawString;
        }
    }));
    return {
        styleString: resolvedArray.join(''),
        themable: themable
    };
}
/**
 * Split tokenized CSS into an array of strings and theme specification objects
 * @param {string} styles Tokenized styles to split.
 */
function splitStyles(styles) {
    var result = [];
    if (styles) {
        var pos = 0; // Current position in styles.
        var tokenMatch = void 0; // tslint:disable-line:no-null-keyword
        while (tokenMatch = _themeTokenRegex.exec(styles)) {
            var matchIndex = tokenMatch.index;
            if (matchIndex > pos) {
                result.push({
                    rawString: styles.substring(pos, matchIndex)
                });
            }
            result.push({
                theme: tokenMatch[1],
                defaultValue: tokenMatch[2] // May be undefined
            });
            // index of the first character after the current match
            pos = _themeTokenRegex.lastIndex;
        }
        // Push the rest of the string after the last match.
        result.push({
            rawString: styles.substring(pos)
        });
    }
    return result;
}
exports.splitStyles = splitStyles;
/**
 * Registers a set of style text. If it is registered too early, we will register it when the
 * window.load event is fired.
 * @param {ThemableArray} styleArray Array of IThemingInstruction objects to register.
 * @param {IStyleRecord} styleRecord May specify a style Element to update.
 */
function registerStyles(styleArray) {
    var head = document.getElementsByTagName('head')[0];
    var styleElement = document.createElement('style');
    var _a = resolveThemableArray(styleArray), styleString = _a.styleString, themable = _a.themable;
    styleElement.type = 'text/css';
    styleElement.appendChild(document.createTextNode(styleString));
    _themeState.perf.count++;
    head.appendChild(styleElement);
    var record = {
        styleElement: styleElement,
        themableStyle: styleArray
    };
    if (themable) {
        _themeState.registeredThemableStyles.push(record);
    }
    else {
        _themeState.registeredStyles.push(record);
    }
}
/**
 * Registers a set of style text, for IE 9 and below, which has a ~30 style element limit so we need
 * to register slightly differently.
 * @param {ThemableArray} styleArray Array of IThemingInstruction objects to register.
 * @param {IStyleRecord} styleRecord May specify a style Element to update.
 */
function registerStylesIE(styleArray, styleRecord) {
    var head = document.getElementsByTagName('head')[0];
    var registeredStyles = _themeState.registeredStyles;
    var lastStyleElement = _themeState.lastStyleElement;
    var stylesheet = lastStyleElement ? lastStyleElement.styleSheet : undefined;
    var lastStyleContent = stylesheet ? stylesheet.cssText : '';
    var lastRegisteredStyle = registeredStyles[registeredStyles.length - 1];
    var resolvedStyleText = resolveThemableArray(styleArray).styleString;
    if (!lastStyleElement || (lastStyleContent.length + resolvedStyleText.length) > MAX_STYLE_CONTENT_SIZE) {
        lastStyleElement = document.createElement('style');
        lastStyleElement.type = 'text/css';
        if (styleRecord) {
            head.replaceChild(lastStyleElement, styleRecord.styleElement);
            styleRecord.styleElement = lastStyleElement;
        }
        else {
            head.appendChild(lastStyleElement);
        }
        if (!styleRecord) {
            lastRegisteredStyle = {
                styleElement: lastStyleElement,
                themableStyle: styleArray
            };
            registeredStyles.push(lastRegisteredStyle);
        }
    }
    lastStyleElement.styleSheet.cssText += detokenize(resolvedStyleText);
    Array.prototype.push.apply(lastRegisteredStyle.themableStyle, styleArray); // concat in-place
    // Preserve the theme state.
    _themeState.lastStyleElement = lastStyleElement;
}
/**
 * Checks to see if styleSheet exists as a property off of a style element.
 * This will determine if style registration should be done via cssText (<= IE9) or not
 */
function shouldUseCssText() {
    var useCSSText = false;
    if (typeof document !== 'undefined') {
        var emptyStyle = document.createElement('style');
        emptyStyle.type = 'text/css';
        useCSSText = !!emptyStyle.styleSheet;
    }
    return useCSSText;
}


/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(104)))

/***/ }),
/* 5 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_5__;

/***/ }),
/* 6 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_6__;

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var CanvasControlType;
(function (CanvasControlType) {
    CanvasControlType[CanvasControlType["WebPartZone"] = 3] = "WebPartZone";
    CanvasControlType[CanvasControlType["RTE"] = 4] = "RTE";
    CanvasControlType[CanvasControlType["TwoColumns"] = 5] = "TwoColumns";
    CanvasControlType[CanvasControlType["ThreeColumns"] = 6] = "ThreeColumns";
    CanvasControlType[CanvasControlType["OneThirdColumnRight"] = 7] = "OneThirdColumnRight";
    CanvasControlType[CanvasControlType["OneThirdColumnLeft"] = 8] = "OneThirdColumnLeft";
    CanvasControlType[CanvasControlType["FullWidth"] = 9] = "FullWidth";
    CanvasControlType[CanvasControlType["OneColumn"] = 10] = "OneColumn";
})(CanvasControlType || (CanvasControlType = {}));
exports.default = CanvasControlType;


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:CoverageThreshold(0)
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var EventBase_1 = __webpack_require__(24);
function logData(data, parent) {
    return new this(data, EventBase_1.ClonedEventType.Single, parent);
}
function logEmptyData(parent) {
    return new this(null, EventBase_1.ClonedEventType.Single, parent);
}
function createSingleEvent(props, metadata, baseClass) {
    var SingleEvent = (function (_super) {
        __extends(SingleEvent, _super);
        function SingleEvent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        SingleEvent.logData = metadata ? logData : logEmptyData;
        return SingleEvent;
    }(EventBase_1.EventBase));
    EventBase_1.addEventProps(SingleEvent.prototype, props, metadata || {}, baseClass);
    return SingleEvent;
}
exports.createSingleEvent = createSingleEvent;


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(149));
__export(__webpack_require__(163));


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var strings = ( false)
    ? require('../../resx-strings/en-us.json')
    : __webpack_require__(13);
exports.default = strings['_jP9TaPNRkCXWU4OplNcN+w'];


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Focus_1 = __webpack_require__(64);
exports.Focus = Focus_1.default;
var Keyboard_1 = __webpack_require__(65);
exports.Keyboard = Keyboard_1.default;
var ScreenReader_1 = __webpack_require__(66);
exports.ScreenReader = ScreenReader_1.default;
var A11yManager_1 = __webpack_require__(138);
exports.A11yManager = A11yManager_1.default;
var A11yAttribute_1 = __webpack_require__(67);
exports.A11yAttribute = A11yAttribute_1.default;
exports.A11yAttributeType = A11yAttribute_1.A11yAttributeType;
var FocusTransition_1 = __webpack_require__(68);
exports.FocusTransition = FocusTransition_1.default;


/***/ }),
/* 12 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_12__;

/***/ }),
/* 13 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_13__;

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var CaughtError_event_1 = __webpack_require__(52);
var QosError_event_1 = __webpack_require__(74);
var Verbose_event_1 = __webpack_require__(75);
var CircularBuffer_1 = __webpack_require__(151);
var ObjectUtil_1 = __webpack_require__(19);
var MAX_VERBOSE_LOGS = 50;
var ErrorHelper = (function () {
    function ErrorHelper() {
    }
    ErrorHelper.verbose = function (message, eventName) {
        ErrorHelper._verboseLogs.push({
            name: eventName,
            message: message
        });
    };
    ErrorHelper.logError = function (error, extraData, qosData) {
        if (!error || error._handled) {
            return;
        }
        var message = this.getErrorMessage(error);
        var stack = error && error.stack ? error.stack : "";
        var schema;
        while (Boolean(schema = ErrorHelper._verboseLogs.popOldest())) {
            Verbose_event_1.Verbose.logData(schema);
        }
        if (qosData && qosData.eventName) {
            QosError_event_1.QosError.logData({
                name: qosData.eventName,
                resultCode: qosData.resultCode,
                resultType: qosData.resultType,
                extraData: extraData || undefined,
                message: message,
                stack: stack
            });
        }
        else {
            CaughtError_event_1.CaughtError.logData({
                extraData: extraData || undefined,
                message: message,
                stack: stack
            });
        }
    };
    ErrorHelper.log = function (error, eventName, resultCode, resultType) {
        this.logError(error, null, { eventName: eventName, resultCode: resultCode, resultType: resultType });
    };
    /**
     * Extract the error message from the error
     */
    ErrorHelper.getErrorMessage = function (error) {
        var message = '';
        if (error) {
            if (error.message) {
                message = error.message;
            }
            else if (error.description) {
                message = error.description;
            }
            else if (typeof (error) === 'object') {
                message = ObjectUtil_1.safeSerialize(error);
            }
            else if (error.toString) {
                message = error.toString();
            }
        }
        return message;
    };
    ErrorHelper._verboseLogs = new CircularBuffer_1.default(MAX_VERBOSE_LOGS);
    return ErrorHelper;
}());
exports.default = ErrorHelper;


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var sp_telemetry_1 = __webpack_require__(6);
var sp_core_library_1 = __webpack_require__(5);
var sp_page_context_1 = __webpack_require__(47);
var sp_webpart_base_1 = __webpack_require__(16);
var sp_lodash_subset_1 = __webpack_require__(12);
var office_ui_fabric_react_1 = __webpack_require__(2);
var CreateEmptyZoneLayout_1 = __webpack_require__(59);
var CanvasControlType_1 = __webpack_require__(7);
var CanvasSectionPart_1 = __webpack_require__(110);
var CanvasZonePart_1 = __webpack_require__(60);
var CanvasWebPartHost_1 = __webpack_require__(245);
var CanvasLayout_1 = __webpack_require__(21);
var CanvasFullWidthSection_1 = __webpack_require__(43);
var CanvasA11yConstants_1 = __webpack_require__(44);
var Flights_1 = __webpack_require__(28);
var KillSwitches_1 = __webpack_require__(45);
var ToolboxSmall_1 = __webpack_require__(63);
var CanvasStrings_resx_1 = __webpack_require__(10);
var HTMLCleanupUtils_1 = __webpack_require__(305);
var odsp_utilities_bundle_1 = __webpack_require__(9);
var shouldExcludeFromToolbox_1 = __webpack_require__(306);
var CanvasStore = (function () {
    function CanvasStore(serviceScope, render, a11yManager, mode, serializedCanvas, handleCanvasChanged, scrollThreshold, onViewportRendered, shouldCenterAlign, mobileBrowser) {
        var _this = this;
        this._webPartsCount = 0;
        sp_core_library_1.Validate.isNotNullOrUndefined(serviceScope, 'serviceScope');
        sp_core_library_1.Validate.isNotNullOrUndefined(render, 'render');
        sp_core_library_1.Validate.isNotNullOrUndefined(mode, 'mode');
        sp_core_library_1.Validate.isNotNullOrUndefined(a11yManager, 'a11yManager');
        this._addReference = this._addReference.bind(this);
        this._notifyChanged = this._notifyChanged.bind(this);
        this.closeToolbox = this.closeToolbox.bind(this);
        this.createQosScope = this.createQosScope.bind(this);
        this.deleteControl = this.deleteControl.bind(this);
        this.handleConfigureButtonClicked = this.handleConfigureButtonClicked.bind(this);
        this.handleConfigureZoneButtonClicked = this.handleConfigureZoneButtonClicked.bind(this);
        this.handleDeleteControlButtonClicked = this.handleDeleteControlButtonClicked.bind(this);
        this.handleDeleteControlDialogConfirmation = this.handleDeleteControlDialogConfirmation.bind(this);
        this.handleDeleteControlDialogDismiss = this.handleDeleteControlDialogDismiss.bind(this);
        this.handleDeleteZoneButtonClicked = this.handleDeleteZoneButtonClicked.bind(this);
        this.handleDeleteZoneDialogConfirmation = this.handleDeleteZoneDialogConfirmation.bind(this);
        this.handleDeleteZoneDialogDismiss = this.handleDeleteZoneDialogDismiss.bind(this);
        this.reclaimFocus = this.reclaimFocus.bind(this);
        this.scrollIntoView = this.scrollIntoView.bind(this);
        this.openToolbox = this.openToolbox.bind(this);
        this._a11yManager = a11yManager;
        this._handleViewportRendered = onViewportRendered;
        this._render = render;
        this._controlComponentMap = new Map();
        this._controlsProps = [];
        this._displayMode = mode;
        this._shouldCenterAlign = shouldCenterAlign;
        this._handleCanvasChanged = handleCanvasChanged;
        this._pollActiveElement = this._pollActiveElement.bind(this);
        this._scrollThreshold = scrollThreshold || 0;
        this._webpartManager = sp_webpart_base_1.ClientSideWebPartManagerFactory.create(new CanvasWebPartHost_1.default(serviceScope, this.scrollIntoView.bind(this, 'full'), handleCanvasChanged, this.reclaimFocus, function (id) {
            _this._selectedControlIdInternal = id;
        }));
        this._serviceScope = serviceScope;
        this._isMobileBrowser = !!mobileBrowser;
        var defaultLayout = CanvasLayout_1.default.undefinedControlPosition;
        this._canvasLayout = new CanvasLayout_1.default(this._webpartManager, function () {
            _this._notifyChanged();
            _this._render();
        });
        this._dialogProps = {
            isOpen: false,
            message: undefined,
            onConfirmation: undefined,
            onDismiss: undefined,
            title: undefined
        };
        this._toolboxProps = {
            isLoading: true,
            isOpen: false,
            onItemClick: this.handleToolboxItemClick,
            onlyLayouts: false,
            toolboxItems: [],
            verticalPosition: undefined,
            controlPosition: defaultLayout
        };
        if (!KillSwitches_1.default.isExcludeSitesRequiringGroupsKillSwitchActivated) {
            this._serviceScope.whenFinished((function () {
                _this._pageContext = _this._serviceScope.consume(sp_page_context_1.PageContext.serviceKey);
            }));
        }
        if (!KillSwitches_1.default.isClientEncodeSearchablePlainTextKillSwitchActivated) {
            this._serializeDoc = new DOMParser().parseFromString('', 'text/html');
            if (!this._serializeDoc) {
                this._serializeDoc = document.implementation.createHTMLDocument('serializeDocument');
            }
        }
        this.fetchWebparts();
    }
    Object.defineProperty(CanvasStore, "_isCanvasJsonFlightEnabled", {
        get: function () {
            return sp_core_library_1._SPFlight.isEnabled(957 );
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore, "_isWebPartSerializationV1Enabled", {
        get: function () {
            return sp_core_library_1._SPFlight.isEnabled(974 );
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore, "isReorderingSupported", {
        get: function () {
            return CanvasStore.isPolarisMultiColumnEditEnabled;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore, "isPolarisMultiColumnEditEnabled", {
        get: function () {
            return sp_core_library_1._SPFlight.isEnabled(932 );
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore, "isRTESettingsFlightEnabled", {
        get: function () {
            return sp_core_library_1._SPFlight.isEnabled(789 );
        },
        enumerable: true,
        configurable: true
    });
    CanvasStore.isFullWidth = function (position) {
        return CanvasFullWidthSection_1.default.isFullWidth(position);
    };
    Object.defineProperty(CanvasStore, "isScrollAnimationsEnabled", {
        get: function () {
            return Flights_1.default.isScrollAnimationsEnabled &&
                !KillSwitches_1.default.isScrollAnimationsKillSwitchActivated &&
                !sp_webpart_base_1.ClientSideWebPartManager.isMaintenanceMode;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "toolbox", {
        set: function (value) {
            this._toolbox = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "addReference", {
        get: function () {
            return this._addReference;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "a11yManager", {
        get: function () {
            return this._a11yManager;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "canvasElement", {
        get: function () {
            return this._canvasElement;
        },
        set: function (elem) {
            this._canvasElement = elem;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "confirmationDialogProps", {
        get: function () {
            return this._dialogProps;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "controlsProps", {
        get: function () {
            return this._canvasControls;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "canvasLayout", {
        get: function () {
            return this._canvasLayout;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "deletedControlLayout", {
        get: function () {
            return this._canvasLayout.controlsState.deletedControlLayout;
        },
        set: function (layout) {
            this._canvasLayout.controlsState.deletedControlLayout = layout;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "displayMode", {
        get: function () {
            return this._displayMode;
        },
        set: function (newMode) {
            if (this._displayMode !== newMode) {
                this._displayMode = newMode;
                for (var _i = 0, _a = this._canvasControls; _i < _a.length; _i++) {
                    var control = _a[_i];
                    control.displayMode = newMode;
                    var controlComponent = this._getControlComponentById(control.id);
                    if (controlComponent) {
                        controlComponent.setDisplayMode(newMode);
                    }
                }
                if (this._displayMode === sp_core_library_1.DisplayMode.Read) {
                    this._selectedControlIdInternal = undefined;
                    this.webPartManager.setPropertyPaneState(undefined, sp_webpart_base_1.PropertyPaneState.Close);
                    this._toolboxProps.isOpen = false;
                    if (Flights_1.default.isToolboxLargeEnabled && this._toolbox && !this._toolboxProps.onlyLayouts) {
                        this._toolbox.closeToolbox();
                    }
                }
                this.fetchWebparts();
                this._render();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "isNarrowMode", {
        get: function () {
            return this._isNarrowMode;
        },
        set: function (value) {
            this._isNarrowMode = value;
            this._render();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "shouldCenterAlign", {
        get: function () {
            return this._shouldCenterAlign;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "siteSupportsFullWidth", {
        get: function () {
            return this._shouldCenterAlign;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "notifyChanged", {
        get: function () {
            return this._notifyChanged;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "scrollableParent", {
        get: function () {
            return this._scrollableParentElement;
        },
        set: function (elem) {
            this._scrollableParentElement = elem;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "scrollThreshold", {
        get: function () {
            return this._scrollThreshold;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "selectedZoneIndex", {
        get: function () {
            return this._canvasLayout.controlsState.selectedZoneIndex;
        },
        set: function (zoneIndex) {
            this._selectedControlIdInternal = undefined;
            this._canvasLayout.controlsState.selectedZoneIndex = zoneIndex;
            this._webpartManager.setPropertyPaneState(zoneIndex.toString());
            this._render();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "hoveredControlId", {
        get: function () {
            return this._canvasLayout.controlsState.hoveredControlId;
        },
        set: function (id) {
            this._canvasLayout.controlsState.hoveredControlId = id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "selectedControlId", {
        get: function () {
            return this._selectedControlIdInternal;
        },
        set: function (id) {
            if (this._selectedControlIdInternal !== id) {
                this._selectedControlIdInternal = id;
                var controlComponent = this._getControlComponentById(id);
                if (CanvasStore.isRTESettingsFlightEnabled ||
                    (controlComponent && controlComponent.props.controlType === CanvasControlType_1.default.WebPartZone)) {
                    this._webpartManager.setPropertyPaneState(id);
                }
                else {
                    this._webpartManager.setPropertyPaneState(undefined);
                }
                this._render();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "toolboxProps", {
        get: function () {
            return this._toolboxProps;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "webPartManager", {
        get: function () {
            return this._webpartManager;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "serviceScope", {
        get: function () {
            return this._serviceScope;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "isMobileBrowser", {
        get: function () {
            return this._isMobileBrowser;
        },
        enumerable: true,
        configurable: true
    });
    CanvasStore.prototype.handleToolboxItemClick = function (itemProps) {
        var qos = this.createQosScope('ToolboxItemClicked');
        var isZone = !(itemProps.controlType === CanvasControlType_1.default.RTE || itemProps.controlType === CanvasControlType_1.default.WebPartZone);
        if (this._displayMode === sp_core_library_1.DisplayMode.Edit) {
            if (!KillSwitches_1.default.isCanvasZoneContainerKillswitchEnabled && !isZone) {
                this._selectedControlIdInternal = itemProps.id = sp_core_library_1.Guid.newGuid().toString();
            }
            else {
                this._selectedControlIdInternal = itemProps.id = sp_core_library_1.Guid.newGuid().toString();
            }
            this.addControlToCanvas(itemProps);
            if (!KillSwitches_1.default.isCanvasZoneContainerKillswitchEnabled && isZone) {
                this.selectedZoneIndex = itemProps.position.zoneIndex;
            }
            if (Flights_1.default.isToolboxLargeEnabled && !this._toolboxProps.onlyLayouts) {
            }
            else {
                if (itemProps.controlType === CanvasControlType_1.default.WebPartZone) {
                    var webPartZoneProps = itemProps;
                    if (webPartZoneProps.webPartManifest) {
                        var logEntry = new sp_telemetry_1._LogEntry('CanvasStore', 'AddWebPart', sp_telemetry_1._LogType.Event, {
                            'manifestId': webPartZoneProps.webPartManifest.id
                        });
                        sp_telemetry_1._EngagementLogger.logEventWithLogEntry(logEntry);
                    }
                }
                else if (itemProps.controlType === CanvasControlType_1.default.RTE) {
                    sp_telemetry_1._EngagementLogger.logEvent('AddRTE.Click');
                }
                else {
                    var logEntry = new sp_telemetry_1._LogEntry('CanvasStore', 'AddZone', sp_telemetry_1._LogType.Event, {
                        'layout': itemProps.controlType && itemProps.controlType.toString()
                    });
                    sp_telemetry_1._EngagementLogger.logEventWithLogEntry(logEntry);
                }
            }
            this._render();
            this._notifyChanged();
            qos.writeSuccess();
        }
        else {
            qos.writeUnexpectedFailure('ReadMode');
        }
    };
    CanvasStore.prototype.deleteControl = function (layout) {
        this.deletedControlLayout = layout;
        var control = this._canvasLayout.fetchControl(this.deletedControlLayout);
        if (control && CanvasControlType_1.default.WebPartZone === control.controlType) {
            this._webPartsCount--;
        }
        this._canvasLayout.removeControl(this.deletedControlLayout);
        if (this._canvasControls.length === 0) {
            this._webpartManager.setPropertyPaneState(undefined, sp_webpart_base_1.PropertyPaneState.Close);
        }
        this._render();
        this._notifyChanged();
    };
    CanvasStore.prototype.getControl = function (id) {
        return this._getControlComponentById(id);
    };
    CanvasStore.prototype.openToolbox = function (position, verticalPosition, horizontalPosition, onClose) {
        var _this = this;
        if ((!Flights_1.default.isToolboxLargeEnabled || Flights_1.default.isHintDiscoverabilityEnabled) && this._toolboxProps.isOpen) {
            this.closeToolbox();
        }
        if (Flights_1.default.isHintDiscoverabilityEnabled && position.sectionIndex === undefined) {
            this.toolboxProps.onlyLayouts = true;
        }
        else {
            this.toolboxProps.onlyLayouts = false;
            this.fillToolboxItems();
        }
        if (!Flights_1.default.isToolboxLargeEnabled || Flights_1.default.isHintDiscoverabilityEnabled) {
            this._toolboxProps.isOpen = true;
        }
        if (Flights_1.default.isToolboxLargeEnabled && this._toolbox && !this.toolboxProps.onlyLayouts) {
            if (sp_core_library_1._SPKillSwitch.isActivated(sp_core_library_1.Guid.parse('aa887f7e-f136-4b9d-a527-ee618e2de99b'), '9/22/2017', 'Defer open toolbox after toolbox reference is updated')) {
                this._toolbox.openToolbox(position, verticalPosition, horizontalPosition);
            }
            else {
                setTimeout((function () { return _this._toolbox.openToolbox(position, verticalPosition, horizontalPosition); }));
            }
        }
        this._toolboxProps.verticalPosition = verticalPosition;
        this._toolboxProps.horizontalPosition = horizontalPosition;
        this._toolboxProps.onClose = onClose;
        this._toolboxProps.controlPosition = position;
        if (!Flights_1.default.isToolboxLargeEnabled || this.toolboxProps.onlyLayouts) {
            document.addEventListener('click', this.closeToolbox);
        }
        this._render();
    };
    CanvasStore.prototype.closeToolbox = function (ev) {
        if (ToolboxSmall_1.default.isEventFromSearchBox(ev)) {
            return;
        }
        if (Flights_1.default.isToolboxLargeEnabled && this._toolbox && !this._toolboxProps.onlyLayouts) {
            this._toolbox.closeToolbox();
        }
        if ((!Flights_1.default.isToolboxLargeEnabled || Flights_1.default.isHintDiscoverabilityEnabled) &&
            typeof this._toolboxProps.onClose === 'function') {
            this._toolboxProps.onClose();
        }
        this._toolboxProps.isOpen = false;
        this._toolboxProps.controlPosition = CanvasLayout_1.default.undefinedControlPosition;
        if (!Flights_1.default.isToolboxLargeEnabled || this.toolboxProps.onlyLayouts) {
            document.removeEventListener('click', this.closeToolbox);
        }
        this._render();
    };
    CanvasStore.prototype.createQosScope = function (scope) {
        return new sp_telemetry_1._QosMonitor("Canvas" + scope);
    };
    CanvasStore.prototype.handleConfigureButtonClicked = function (id) {
        var isCurrentlySelected = this._selectedControlIdInternal === id;
        var controlComponent = this._getControlComponentById(id);
        if (controlComponent) {
            controlComponent.handleConfigureButtonClicked(isCurrentlySelected);
            this._selectedControlIdInternal = id;
            this._render();
        }
    };
    CanvasStore.prototype.handleConfigureZoneButtonClicked = function (id, zoneFocusHandler) {
        sp_telemetry_1._EngagementLogger.logEvent('Canvas.ConfigureZone.Click');
        var isCurrentlySelected = this._editedZoneIndex === +id;
        this._webpartManager.setPropertyPaneState(id, isCurrentlySelected ? sp_webpart_base_1.PropertyPaneState.Toggle : sp_webpart_base_1.PropertyPaneState.Open);
        this._editedZoneIndex = +id;
        this._editedZoneFocusHandler = zoneFocusHandler;
    };
    CanvasStore.prototype.handleDeleteControlButtonClicked = function (layout) {
        this._positionCandidateForDeletion = layout;
        var selectedControl = this._canvasLayout.fetchControl(this._positionCandidateForDeletion);
        this._selectedControlIdInternal = selectedControl.id;
        this._webpartManager.setPropertyPaneState(selectedControl.controlType === CanvasControlType_1.default.WebPartZone ? this._selectedControlIdInternal : undefined);
        this._openDialogMessage(CanvasStrings_resx_1.default.DeleteConfirmationDialogTitle, CanvasStrings_resx_1.default.DeleteConfirmationDialogMessage, this.handleDeleteControlDialogConfirmation, this.handleDeleteControlDialogDismiss, true);
    };
    CanvasStore.prototype.handleDeleteControlDialogConfirmation = function () {
        var qos = this.createQosScope('DeleteWebPart');
        var selectedControl;
        try {
            selectedControl = this._canvasLayout.fetchControl(this._positionCandidateForDeletion);
            if (selectedControl.controlType === CanvasControlType_1.default.WebPartZone) {
                var controlComponent = this._getControlComponentById(selectedControl.id);
                controlComponent.handleDeleteButtonClicked();
            }
            this._closeDialogMessage(false, CanvasStrings_resx_1.default.WebPartAriaLabel);
            this.deleteControl(this._positionCandidateForDeletion);
            qos.writeSuccess();
        }
        catch (err) {
            this._handleMonitoredException(qos, err, selectedControl);
        }
    };
    CanvasStore.prototype.handleDeleteControlDialogDismiss = function () {
        this._positionCandidateForDeletion = CanvasLayout_1.default.undefinedControlPosition;
        this._closeDialogMessage(true);
    };
    CanvasStore.prototype.handleDeleteZoneButtonClicked = function (layout) {
        this._zoneDeleteQos = this.createQosScope('DeleteZone');
        this._selectedControlIdInternal = undefined;
        this._positionCandidateForDeletion = layout;
        this._openDialogMessage(CanvasStrings_resx_1.default.DeleteConfirmationDialogTitle, CanvasStrings_resx_1.default.DeleteZoneConfirmationDialogMessage, this.handleDeleteZoneDialogConfirmation, this.handleDeleteZoneDialogDismiss, true);
        sp_telemetry_1._EngagementLogger.logEvent('Canvas.DeleteZone.Click');
    };
    CanvasStore.prototype.handleDeleteZoneDialogConfirmation = function () {
        try {
            this._webpartManager.disposeWebparts(this._positionCandidateForDeletion.zoneIndex.toString());
            this._canvasLayout.removeZone(this._positionCandidateForDeletion.zoneIndex);
            this._closeDialogMessage(true, CanvasStrings_resx_1.default.SectionAriaLabel);
            this._zoneDeleteQos.writeSuccess();
        }
        catch (err) {
            this._handleMonitoredException(this._zoneDeleteQos, err);
        }
    };
    CanvasStore.prototype.handleDeleteZoneDialogDismiss = function () {
        try {
            this._positionCandidateForDeletion = CanvasLayout_1.default.undefinedControlPosition;
            this._closeDialogMessage(true);
            this._zoneDeleteQos.writeSuccess();
        }
        catch (err) {
            this._handleMonitoredException(this._zoneDeleteQos, err);
        }
    };
    CanvasStore.prototype.handleWindowBlur = function (e) {
        if (this.hoveredControlId && document.activeElement && document.activeElement.tagName === 'IFRAME') {
            this.selectedControlId = this.hoveredControlId;
            this._oldActiveElement = document.activeElement;
            window.clearInterval(this._pollId);
            this._pollId = window.setInterval(this._pollActiveElement, 250);
        }
    };
    CanvasStore.prototype.deserialize = function (displayMode, serializedCanvas) {
        var qos = this.createQosScope('Deserialize');
        var controlProps;
        try {
            this._controlsProps = [];
            this._controlComponentMap = new Map();
            this._canvasLayout.dispose();
            if (!KillSwitches_1.default.isScrollAnimationsKillSwitchActivated) {
                this.displayMode = displayMode;
            }
            if (serializedCanvas) {
                var controlAttribute = 'data-sp-canvascontrol';
                var tryJson = true;
                if (serializedCanvas.indexOf(controlAttribute) !== -1) {
                    var wrapper = document.createElement('div');
                    wrapper.innerHTML = this._replaceImageTagsInHtmlString(serializedCanvas);
                    if (!sp_core_library_1._SPKillSwitch.isActivated(sp_core_library_1.Guid.tryParse('6416768b-6758-49a1-9457-46b0265b8e55'), '1/23/2017', 'HTMLCleanup')) {
                        wrapper.innerHTML = HTMLCleanupUtils_1.StripOutNewLinesAndSpacesFromInnerHTML(wrapper.innerHTML);
                    }
                    var rows = wrapper.querySelectorAll("[" + controlAttribute + "]");
                    var rowLength = rows.length;
                    if (rowLength > 0) {
                        tryJson = false;
                        var lastZoneIndex = 1, lastSectionIndex = 1, lastControlIndex = 1;
                        var hasNonLayoutData = false, hasLayoutData = false;
                        for (var i = 0; i < rowLength; ++i) {
                            var row = rows[i];
                            var isLegacyHtml = !row.hasAttribute('data-sp-canvasdataversion');
                            if (isLegacyHtml) {
                                controlProps = this._deserializeLegacyCanvasControlHtml(row);
                            }
                            else {
                                controlProps = this._deserializeCanvasControlHtml(row);
                            }
                            if (controlProps) {
                                if (CanvasLayout_1.default.isPositionValid(controlProps.position)) {
                                    lastZoneIndex = controlProps.position.zoneIndex || lastZoneIndex;
                                    lastSectionIndex = controlProps.position.sectionIndex || lastSectionIndex;
                                    lastControlIndex = controlProps.position.controlIndex || lastControlIndex;
                                    hasLayoutData = true;
                                }
                                else {
                                    hasNonLayoutData = true;
                                    controlProps.position = CreateEmptyZoneLayout_1.CreateEmptyZoneLayout(lastZoneIndex, lastSectionIndex, ++lastControlIndex);
                                }
                                if (hasLayoutData === hasNonLayoutData) {
                                    sp_telemetry_1._TraceLogger.logVerbose(CanvasStore._logSource, "Canvas layout data mismatch is found");
                                }
                                this.addControlToCanvas(controlProps);
                            }
                        }
                    }
                }
                if (tryJson && CanvasStore._isCanvasJsonFlightEnabled) {
                    this._processCanvasContent(serializedCanvas);
                }
            }
            qos.writeSuccess();
        }
        catch (err) {
            this._handleMonitoredException(qos, err, controlProps);
        }
    };
    CanvasStore.prototype.dispose = function () {
        this._webpartManager.dispose();
        this._canvasLayout.dispose();
    };
    CanvasStore.prototype.reclaimFocus = function () {
        if (this._selectedControlIdInternal) {
            var controlComponent = this._getControlComponentById(this._selectedControlIdInternal);
            if (controlComponent) {
                controlComponent.focus();
            }
        }
        else if (this._editedZoneIndex && this._editedZoneFocusHandler) {
            this._editedZoneFocusHandler();
        }
    };
    CanvasStore.prototype.scrollIntoView = function (type, element, duration, margin, allowScrollUp) {
        if (margin === void 0) { margin = 0; }
        if (!this.scrollableParent || !element) {
            return;
        }
        var parentClientRect = this.scrollableParent.getBoundingClientRect();
        var viewportHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
        var frameBottom = Math.min(viewportHeight, parentClientRect.bottom);
        var elementClientRect = element.getBoundingClientRect();
        if ((type === 'partial' ? elementClientRect.bottom : elementClientRect.top) > frameBottom ||
            allowScrollUp && frameBottom > elementClientRect.top) {
            this._scrollElementIntoView(frameBottom, element, duration, margin, parentClientRect, elementClientRect);
        }
    };
    CanvasStore.prototype.serialize = function (toJson) {
        if (toJson) {
            return this._serializeAsJson();
        }
        return CanvasStore._isCanvasJsonFlightEnabled ?
            this._serializeAsJson() :
            this._serializeAsHtml();
    };
    CanvasStore.prototype.tryGeneratePreviewImageUrl = function () {
        var qos = this.createQosScope('GeneratePreviewImageUrl');
        try {
            var webpartIds = [];
            for (var _i = 0, _a = this._canvasControls; _i < _a.length; _i++) {
                var control = _a[_i];
                if (control.controlType === CanvasControlType_1.default.WebPartZone) {
                    webpartIds.push(control.id);
                }
            }
            var previewUrl = this.webPartManager.tryGeneratePreviewImageUrl(webpartIds);
            qos.writeSuccess();
            return previewUrl;
        }
        catch (err) {
            var pathLengthErrorKey = 'PathLengthError';
            if (err && err.message && err.message.indexOf(pathLengthErrorKey) > -1) {
                qos.writeExpectedFailure(pathLengthErrorKey, err);
                return undefined;
            }
            else {
                this._handleMonitoredException(qos, err);
            }
        }
    };
    CanvasStore.prototype.addControlToCanvas = function (control, shouldRender) {
        if (!control.id) {
            control.id = sp_core_library_1.Guid.newGuid().toString();
        }
        var isWebpartZone = control.controlType === CanvasControlType_1.default.WebPartZone;
        if (isWebpartZone) {
            this._webPartsCount++;
        }
        if (isWebpartZone && control.addedFromPersistedData) {
            var webPartProps = control;
            webPartProps.webPartManifest = this._getManifestMap().get(webPartProps.webPartId);
        }
        if (CanvasStore.isFullWidth(control.position) &&
            CanvasFullWidthSection_1.default.isFullWidthControl(control)) {
            if (this.siteSupportsFullWidth) {
                CanvasFullWidthSection_1.default.setFullWidthWebPartProperty(control, true);
            }
            else {
                var sectionFactor = CanvasZonePart_1.default.columnDefinitionMap.get(CanvasControlType_1.default.OneColumn).factor[0];
                var newPosition = CanvasLayout_1.default.cloneMergePosition(control.position, { sectionFactor: sectionFactor });
                control.position = newPosition;
                CanvasFullWidthSection_1.default.setFullWidthWebPartProperty(control, false);
            }
        }
        this._canvasLayout.addControl(control);
        if (shouldRender) {
            this._render();
            this._notifyChanged();
        }
    };
    CanvasStore.prototype.getToolBoxItem = function (id) {
        var toolboxItems = this._toolboxProps.toolboxItems;
        var currentIndex = sp_lodash_subset_1.findIndex(toolboxItems, (function (toolboxItem) {
            return id === toolboxItem.itemProps.webPartId;
        }));
        if (currentIndex !== -1) {
            return sp_lodash_subset_1.clone(toolboxItems[currentIndex].itemProps);
        }
        return undefined;
    };
    Object.defineProperty(CanvasStore.prototype, "webPartsCount", {
        get: function () {
            return this._webPartsCount;
        },
        enumerable: true,
        configurable: true
    });
    CanvasStore.prototype.onViewportWebPartsRendered = function (endTime) {
        if (this._handleViewportRendered) {
            this._handleViewportRendered(endTime);
        }
    };
    CanvasStore.prototype.fetchWebparts = function (force) {
        var _this = this;
        if (!this._fetchedWebparts && (sp_core_library_1.DisplayMode.Edit === this._displayMode || force)) {
            return this._webpartManager.fetchWebPartManifests().then((function () {
                _this._fetchedWebparts = true;
                _this._toolboxProps.errorMessage = undefined;
                _this.fillToolboxItems();
            }), (function (error) {
                _this._toolboxProps.errorMessage = CanvasStrings_resx_1.default.ToolboxErrorMessage;
                _this.fillToolboxItems();
            }));
        }
        else {
            return Promise.resolve();
        }
    };
    CanvasStore.prototype.fillToolboxItems = function (isFullWidth, newToolboxProps) {
        var _this = this;
        var qos = this.createQosScope('LoadWebPartsInToolbox');
        var toolboxProps = newToolboxProps || this._toolboxProps;
        try {
            toolboxProps.toolboxItems = [];
            this._getManifestMap().forEach((function (manifest, cid) {
                if (shouldExcludeFromToolbox_1.shouldExcludeFromToolbox(manifest, _this._pageContext)) {
                    return;
                }
                var i = 0;
                for (var _i = 0, _a = manifest.preconfiguredEntries; _i < _a.length; _i++) {
                    var entry = _a[_i];
                    var itemProps = {
                        controlType: CanvasControlType_1.default.WebPartZone,
                        displayMode: sp_core_library_1.DisplayMode.Edit,
                        id: undefined,
                        position: CanvasLayout_1.default.undefinedControlPosition,
                        webPartId: cid,
                        webPartData: _this._extractWebPartData(manifest, entry),
                        webPartManifest: manifest
                    };
                    var toolboxItem = {
                        itemProps: itemProps,
                        description: entry.description.default,
                        displayName: entry.title.default,
                        msIconName: entry.officeFabricIconFontName,
                        imageSrc: entry.iconImageUrl
                            ? sp_core_library_1.UrlUtilities.resolve(entry.iconImageUrl, manifest.loaderConfig.internalModuleBaseUrls[0])
                            : undefined,
                        key: manifest.id + "_" + i++,
                        groupId: entry.groupId
                    };
                    if ((isFullWidth && CanvasFullWidthSection_1.default.isFullWidthControl(itemProps)) || (!isFullWidth)) {
                        toolboxProps.toolboxItems.push(toolboxItem);
                    }
                }
            }));
            toolboxProps.isLoading = false;
            qos.writeSuccess();
        }
        catch (err) {
            this._handleMonitoredException(qos, err);
        }
        if (toolboxProps.isOpen) {
            this._render();
        }
    };
    CanvasStore.prototype._deserializeLegacyCanvasControlHtml = function (row) {
        var controlProps = JSON.parse(decodeURI(row.getAttribute('data-sp-controldata')));
        if (controlProps) {
            if (!KillSwitches_1.default.isXssFixApplied && !this._isValidControlType(controlProps)) {
                sp_telemetry_1._TraceLogger.logVerbose(CanvasStore._logSource, "Invalid Control Type");
                return undefined;
            }
            controlProps.displayMode = this._displayMode;
            controlProps.addedFromPersistedData = true;
            if (controlProps.controlType === CanvasControlType_1.default.RTE) {
                controlProps.innerHTML = row.innerHTML;
            }
            var webPartData = controlProps.webPartData;
            if (webPartData) {
                var htmlString = webPartData.htmlProperties; 
                var htmlPropsDiv = row.querySelector('[data-sp-htmlproperties]');
                if (htmlPropsDiv) {
                    htmlString = htmlPropsDiv.innerHTML;
                }
                if (htmlString) {
                    htmlString = this._replaceImageTagsInHtmlString(htmlString);
                }
                webPartData.serverProcessedContent = sp_webpart_base_1.WebPartDataConverter.convertServerProcessedHtmlToData(htmlString);
            }
        }
        return controlProps || undefined;
    };
    CanvasStore.prototype._deserializeCanvasControlHtml = function (row) {
        var controlProps = JSON.parse(row.getAttribute('data-sp-controldata'));
        if (!KillSwitches_1.default.isXssFixApplied && !this._isValidControlType(controlProps)) {
            sp_telemetry_1._TraceLogger.logVerbose(CanvasStore._logSource, "Invalid Control Type");
            return undefined;
        }
        controlProps.displayMode = this._displayMode;
        controlProps.addedFromPersistedData = true;
        var webPartDiv = row.querySelector('[data-sp-webpart]');
        if (webPartDiv) {
            var webPartDivWrapper = document.createElement('div');
            webPartDivWrapper.appendChild(webPartDiv);
            controlProps.webPartData =
                sp_webpart_base_1.WebPartDataConverter.convertHtmlToWebPartData(webPartDivWrapper.innerHTML);
        }
        else {
            var rteDiv = row.querySelector('[data-sp-rte]');
            if (!KillSwitches_1.default.isXssFixApplied && (rteDiv || controlProps.controlType === CanvasControlType_1.default.RTE)) {
                controlProps.innerHTML = rteDiv ? rteDiv.innerHTML : row.innerHTML;
            }
            else if (rteDiv) {
                controlProps.innerHTML = rteDiv.innerHTML;
            }
        }
        return controlProps;
    };
    CanvasStore.prototype._isValidControlType = function (controlProps) {
        return (controlProps.controlType >= 3 && controlProps.controlType <= 10) || !!controlProps.position;
    };
    CanvasStore.prototype._initializeHtmlDivs = function () {
        this._canvasControlDiv = document.createElement('div');
        this._canvasControlLegacyDiv = document.createElement('div');
        this._componentIdDiv = document.createElement('div');
        this._htmlPropsDiv = document.createElement('div');
        this._rteDiv = document.createElement('div');
        this._canvasControlDiv.setAttribute('data-sp-canvascontrol', '');
        this._canvasControlDiv.setAttribute('data-sp-canvasdataversion', '1.0');
        this._canvasControlLegacyDiv.setAttribute('data-sp-canvascontrol', '');
        this._componentIdDiv.setAttribute('data-sp-componentid', '');
        this._htmlPropsDiv.setAttribute('data-sp-htmlproperties', '');
        this._rteDiv.setAttribute('data-sp-rte', '');
    };
    CanvasStore.prototype._replaceImageTagsInHtmlString = function (htmlString) {
        return htmlString.replace(/<img((\s+[^\t\n\f \/>"'=]+(\s*=\s*(?:".*?"|'.*?'|[\^'">\s]+))?)+\s*|\s*)\/?>/gi, '<spimg$1></spimg>');
    };
    CanvasStore.prototype._serializeControlAsLegacyHtml = function (controlType, controlData) {
        if (!this._canvasControlLegacyDiv) {
            this._initializeHtmlDivs();
        }
        var row = this._canvasControlLegacyDiv.cloneNode();
        var componentIdElement = this._componentIdDiv.cloneNode();
        var htmlPropertiesElement = this._htmlPropsDiv.cloneNode();
        if (controlType === CanvasControlType_1.default.RTE) {
            row.innerHTML = controlData.innerHTML;
        }
        else if (controlType === CanvasControlType_1.default.WebPartZone) {
            var componentId = componentIdElement.cloneNode();
            componentId.textContent = controlData.webPartId;
            row.appendChild(componentId);
            var webPartData = controlData.webPartData;
            if (webPartData) {
                var htmlProperties = htmlPropertiesElement.cloneNode();
                htmlProperties.innerHTML =
                    sp_webpart_base_1.WebPartDataConverter.convertServerProcessedDataToHtml(webPartData.serverProcessedContent);
                row.appendChild(htmlProperties);
            }
        }
        row.setAttribute('data-sp-controldata', encodeURI(JSON.stringify(controlData)));
        return row;
    };
    CanvasStore.prototype._serializeControlAsHtml = function (controlType, controlData) {
        if (!this._canvasControlDiv) {
            this._initializeHtmlDivs();
        }
        var row = this._canvasControlDiv.cloneNode();
        if (controlType === CanvasControlType_1.default.RTE) {
            var rteHtmlDiv = this._rteDiv.cloneNode();
            rteHtmlDiv.innerHTML = controlData.innerHTML;
            controlData.innerHTML = undefined;
            row.appendChild(rteHtmlDiv);
        }
        else if (controlType === CanvasControlType_1.default.WebPartZone) {
            var wpdata = controlData.webPartData;
            row.innerHTML = sp_webpart_base_1.WebPartDataConverter.convertWebPartDataToHtml(wpdata);
            controlData.webPartData = undefined;
        }
        controlData.displayMode = undefined;
        row.setAttribute('data-sp-controldata', JSON.stringify(controlData));
        return row;
    };
    CanvasStore.prototype._getControlComponentById = function (id) {
        return this._canvasLayout.fetchControlComponentById(id);
    };
    CanvasStore.prototype._setControlComponentById = function (id, component) {
        this._canvasLayout.addControlComponent(id, component);
    };
    Object.defineProperty(CanvasStore.prototype, "_canvasControls", {
        get: function () {
            return this._canvasLayout.fetchAllControls();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "_selectedControlIdInternal", {
        get: function () {
            return this._canvasLayout.controlsState.selectedControlId;
        },
        set: function (id) {
            this._canvasLayout.controlsState.selectedControlId = id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "_positionCandidateForDeletion", {
        get: function () {
            return this._canvasLayout.controlsState.deleteCandidateControlLayout;
        },
        set: function (layout) {
            this._canvasLayout.controlsState.deleteCandidateControlLayout = layout;
        },
        enumerable: true,
        configurable: true
    });
    CanvasStore.prototype._serializeAsHtml = function () {
        var qos = this.createQosScope('Serialize');
        var controlData;
        var logEntry = new sp_telemetry_1._LogEntry('CanvasStore', 'SerializeContentHTML', sp_telemetry_1._LogType.Event, {});
        try {
            var body = document.createElement('div');
            for (var _i = 0, _a = this._canvasControls; _i < _a.length; _i++) {
                var control = _a[_i];
                if (control.id === CanvasSectionPart_1.default.emptySectionId) {
                    control.id = undefined;
                    controlData = control;
                }
                else {
                    var controlComponent = this._getControlComponentById(control.id);
                    controlData = controlComponent.serialize();
                    controlData.webPartManifest = undefined;
                }
                this._tryAddControlDataToLogEntry(controlData, logEntry);
                var row = CanvasStore._isWebPartSerializationV1Enabled ?
                    this._serializeControlAsHtml(control.controlType, controlData) :
                    this._serializeControlAsLegacyHtml(control.controlType, controlData);
                body.appendChild(row);
            }
            var wrapper = document.createElement('div');
            wrapper.appendChild(body);
            qos.writeSuccess(logEntry.logProperties);
            return wrapper.innerHTML;
        }
        catch (err) {
            this._handleMonitoredException(qos, err, controlData);
            throw err;
        }
    };
    CanvasStore.prototype._serializeAsJson = function () {
        var qos = this.createQosScope('SerializeAsJson');
        var controlDataCollection = [];
        var controlData;
        var logEntry = new sp_telemetry_1._LogEntry('CanvasStore', 'SerializeContentJSON', sp_telemetry_1._LogType.Event, {});
        try {
            var tempDiv_1;
            if (!KillSwitches_1.default.isClientEncodeSearchablePlainTextKillSwitchActivated) {
                tempDiv_1 = this._serializeDoc.createElement('div');
            }
            var _loop_1 = function (control) {
                if (control.id === CanvasSectionPart_1.default.emptySectionId) {
                    control.id = undefined;
                    controlData = control;
                }
                else {
                    var controlComponent = this_1._getControlComponentById(control.id);
                    controlData = controlComponent.serialize();
                    controlData.webPartManifest = undefined;
                }
                this_1._tryAddControlDataToLogEntry(controlData, logEntry);
                if (!KillSwitches_1.default.isClientEncodeSearchablePlainTextKillSwitchActivated &&
                    CanvasControlType_1.default.WebPartZone === controlData.controlType) {
                    var searchablePlainTexts_1 = controlData.webPartData.serverProcessedContent.searchablePlainTexts;
                    Object.keys(searchablePlainTexts_1).forEach((function (key) {
                        tempDiv_1.textContent = searchablePlainTexts_1[key];
                        searchablePlainTexts_1[key] = tempDiv_1.innerHTML;
                    }));
                }
                controlDataCollection.push(controlData);
            };
            var this_1 = this;
            for (var _i = 0, _a = this._canvasControls; _i < _a.length; _i++) {
                var control = _a[_i];
                _loop_1(control);
            }
            qos.writeSuccess(logEntry.logProperties);
        }
        catch (err) {
            this._handleMonitoredException(qos, err, controlData);
            throw err;
        }
        if (CanvasStore._isCanvasJsonFlightEnabled) {
            return JSON.stringify(controlDataCollection);
        }
        else {
            return encodeURI(JSON.stringify(controlDataCollection));
        }
    };
    CanvasStore.prototype._tryAddControlDataToLogEntry = function (controlData, logEntry) {
        if (!controlData.controlType) {
            return;
        }
        try {
            var position = controlData.position;
            var positionAsString = "Zone:" + position.zoneIndex + "|Section:" + position.sectionIndex + "|SectionFactor:" + position.sectionFactor + "|Index:" + position.controlIndex;
            var title = controlData.controlType === CanvasControlType_1.default.RTE ?
                CanvasControlType_1.default[controlData.controlType].toString() :
                controlData.webPartData.title;
            logEntry.logProperties[title + "_" + controlData.id] = positionAsString;
        }
        catch (ex) {
        }
    };
    CanvasStore.prototype._processCanvasContent = function (serializedCanvas) {
        var _this = this;
        var canvasControls = JSON.parse(serializedCanvas);
        if (canvasControls) {
            canvasControls.forEach((function (control, index) {
                var controlProp = control;
                if (controlProp) {
                    controlProp.displayMode = _this.displayMode;
                    controlProp.addedFromPersistedData = true;
                    if (!CanvasLayout_1.default.isPositionValid(controlProp.position)) {
                        controlProp.position = CreateEmptyZoneLayout_1.CreateEmptyZoneLayout(index + 1);
                    }
                    _this.addControlToCanvas(controlProp);
                }
            }));
        }
    };
    CanvasStore.prototype._addReference = function (ref) {
        if (ref) {
            this._setControlComponentById(ref.props.id, ref);
        }
    };
    CanvasStore.prototype._calculateEasing = function (time, start, diff, duration) {
        time /= duration / 2;
        if (time < 1) {
            return diff / 2 * time * time + start;
        }
        else {
            --time;
            return -diff / 2 * (time * (time - 2) - 1) + start;
        }
    };
    CanvasStore.prototype._extractWebPartData = function (manifest, entry) {
        var webPartData = {
            id: manifest.id,
            instanceId: undefined,
            title: entry.title.default,
            description: entry.description.default,
            dataVersion: entry.dataVersion,
            properties: entry.properties
        };
        return webPartData;
    };
    CanvasStore.prototype._getManifestMap = function () {
        var tempMap = new Map();
        var manifests = this._webpartManager.getWebPartManifests();
        for (var _i = 0, manifests_1 = manifests; _i < manifests_1.length; _i++) {
            var manifest = manifests_1[_i];
            tempMap.set(manifest.id, manifest);
        }
        return tempMap;
    };
    CanvasStore.prototype._pollActiveElement = function () {
        var activeElement = document.activeElement;
        if (activeElement.tagName !== 'IFRAME') {
            window.clearInterval(this._pollId);
        }
        else if (this._oldActiveElement !== activeElement && this.hoveredControlId) {
            this._oldActiveElement = activeElement;
            this._selectedControlIdInternal = this.hoveredControlId;
        }
    };
    CanvasStore.prototype._scroll = function (start, end, duration, time) {
        var _this = this;
        if (time === void 0) { time = 0; }
        var diff = end - start;
        var deltaTime = 20;
        if (time < duration) {
            requestAnimationFrame((function () {
                time += deltaTime;
                _this.scrollableParent.scrollTop = _this._calculateEasing(time, start, diff, duration);
                _this._scroll(start, end, duration, time);
            }));
        }
    };
    CanvasStore.prototype._scrollElementIntoView = function (frameBottom, element, duration, margin, parentClientRect, elementClientRect) {
        var scrollPosition = elementClientRect.bottom - this.canvasElement.getBoundingClientRect().top;
        var frameTop = Math.max(0, parentClientRect.top);
        var offset = frameTop - frameBottom + this._scrollThreshold + margin;
        var newScrollTop = scrollPosition + offset + this._scrollThreshold;
        this._scroll(this.scrollableParent.scrollTop, newScrollTop, duration);
    };
    CanvasStore.prototype._notifyChanged = function () {
        if (this._handleCanvasChanged) {
            this._handleCanvasChanged();
        }
    };
    CanvasStore.prototype._handleMonitoredException = function (qos, err, props) {
        var extraData; 
        if (props && props.controlType === CanvasControlType_1.default.WebPartZone) {
            extraData = { 'id': props.webPartId };
        }
        qos.writeUnexpectedFailure('Exception', err, extraData);
    };
    CanvasStore.prototype._closeDialogMessage = function (shouldRender, label) {
        this._dialogProps.isOpen = false;
        if (this._positionCandidateForDeletion &&
            this._positionCandidateForDeletion !== CanvasLayout_1.default.undefinedControlPosition) {
            this._dialogProps.elementToFocusOnDismiss = this._findHintBeforePosition(this._positionCandidateForDeletion);
        }
        if (shouldRender) {
            this._render();
        }
        if (label) {
            var confirmationMessage = odsp_utilities_bundle_1.StringHelper.format(CanvasStrings_resx_1.default.DeleteConfirmationLabel, label);
            this._a11yManager.alert(confirmationMessage);
        }
    };
    CanvasStore.prototype._findHintBeforePosition = function (position) {
        var isZone = position.controlIndex === undefined && position.zoneIndex !== undefined;
        var elementToDelete;
        if (isZone) {
            elementToDelete = this._a11yManager.getElementByA11yId(CanvasA11yConstants_1.getCanvasZoneA11yId(position.zoneIndex.toString()));
        }
        else {
            var control = this._canvasLayout.fetchControl(position);
            elementToDelete = control ? this._a11yManager.getElementByA11yId(CanvasA11yConstants_1.getControlZoneA11yId(control.id)) : undefined;
        }
        if (elementToDelete) {
            var hints = this._a11yManager.getElementsByA11yClass(CanvasA11yConstants_1.canvasA11yClasses.toolboxHint);
            for (var i = 0; i < hints.length - 1; i++) {
                var isHintBeforeZone = (elementToDelete.compareDocumentPosition(hints[i]) & Node.DOCUMENT_POSITION_PRECEDING) !== 0;
                var isNextHintAfterZone = (elementToDelete.compareDocumentPosition(hints[i + 1]) &
                    (Node.DOCUMENT_POSITION_FOLLOWING | Node.DOCUMENT_POSITION_CONTAINED_BY)) !== 0;
                if (isHintBeforeZone && isNextHintAfterZone) {
                    return hints[i];
                }
            }
        }
        return undefined;
    };
    CanvasStore.prototype._openDialogMessage = function (title, message, onConfirmation, onDismiss, shouldRender) {
        this._dialogProps = {
            message: message,
            onConfirmation: onConfirmation,
            onDismiss: onDismiss,
            title: title,
            isOpen: true
        };
        if (shouldRender) {
            this._render();
        }
    };
    CanvasStore._logSource = sp_telemetry_1._LogSource.create('CanvasStore');
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], CanvasStore.prototype, "handleToolboxItemClick", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], CanvasStore.prototype, "addControlToCanvas", null);
    return CanvasStore;
}());
exports.default = CanvasStore;


/***/ }),
/* 16 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_16__;

/***/ }),
/* 17 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_17__;

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:CoverageThreshold(75)
Object.defineProperty(exports, "__esModule", { value: true });
var ObjectUtil_1 = __webpack_require__(19);
var handlers = [];
var buffer = [];
var maxBufferSize = 100;
function getStartDate() {
    'use strict';
    if (window.performance && window.performance.timing && window.performance.timing.navigationStart) {
        return new Date(window.performance.timing.navigationStart);
    }
    else {
        return new Date();
    }
}
var startDate = getStartDate();
var Manager = (function () {
    function Manager() {
    }
    Manager.getTime = function () {
        return (new Date()).getTime();
    };
    /** This is the overrideable clean string function */
    Manager.cleanString = function (str) {
        return str;
    };
    Manager.addLogHandler = function (handler) {
        handlers.push(handler);
        // Return the buffer so the handler can get missed events
        return buffer;
    };
    Manager.removeLogHandler = function (handler) {
        for (var x = 0; x < handlers.length; x++) {
            if (handlers[x] === handler) {
                // Remove the handler
                handlers.splice(x, 1);
                break;
            }
        }
    };
    Manager.logEvent = function (event, eventType) {
        // Clone the object (do it natively because the browser can mark it as a type)
        var clonedEvent = Object.freeze({
            data: ObjectUtil_1.deepCopy(event.data),
            id: event.id,
            enabled: event.enabled,
            critical: event.critical,
            endTime: event.endTime,
            eventName: event.eventName,
            shortEventName: event.shortEventName,
            parentId: event.parentId,
            startTime: event.startTime,
            eventType: eventType,
            metadata: event.metadata,
            vector: event.vector,
            validationErrors: event.validationErrors
        });
        // Add to the buffer
        buffer.push(clonedEvent);
        if (buffer.length > maxBufferSize) {
            buffer = buffer.slice(1);
            // Make sure we have a handler before the buffer is overrun
            if (handlers.length === 0) {
                this.handleBaseLoggingError(new Error("Logging buffer overflow hit before any logging handler was registered"));
            }
        }
        // Let handlers know the log event has completed
        for (var x = 0; x < handlers.length; x++) {
            try {
                handlers[x](clonedEvent);
            }
            catch (e) {
                this.handleBaseLoggingError(e);
            }
        }
    };
    Manager.logValidationError = function (event, type) {
        // Do nothing so that we can intialize around circular reference issue
    };
    Manager.getStack = function () {
        var error;
        try {
            var w = window;
            w["______ExpectedError______"]();
        }
        catch (e) {
            error = e;
        }
        return error.stack;
    };
    Manager.handleBaseLoggingError = function (error) {
        // TODO: Log somewhere
    };
    Manager.startDate = startDate;
    Manager.startTime = startDate.getTime();
    return Manager;
}());
exports.Manager = Manager;
exports.default = Manager;


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var UriEncoding_1 = __webpack_require__(38);
exports.DEFAULT_DELIMITER = '&';
exports.KEYVALUE_DELIMITER = '=';
// Returns a copy of the specified object by deeply cloning all of its properties.
function deepCopy(object) {
    var refsCopied = [];
    var copyRecurse = function (obj) {
        var result = null;
        if (obj) {
            if (Array.isArray(obj)) {
                result = [];
            }
            else {
                // create clone of the object with same prototype chain
                result = Object.create(Object.getPrototypeOf(obj));
            }
            // iterate over all the properties in the object
            Object.keys(obj).forEach((function (key) {
                // recursively copy the object's properties if the property is an object
                var value = obj[key];
                if (typeof value === "object") {
                    if (refsCopied.indexOf(value) !== -1) {
                        throw new Error("Cannot perform DeepCopy() because a circular reference was encountered, object: " + String(obj) + ", property: " + String(key));
                    }
                    refsCopied.push(value);
                    result[key] = copyRecurse(value);
                    refsCopied.pop();
                }
                else {
                    result[key] = value;
                }
            }));
        }
        return result;
    };
    return copyRecurse(object);
}
exports.deepCopy = deepCopy;
// Deeply compares the objects by recursively comparing all their properties, objects with circular references are not supported, prototype members and functions are ignored
function deepCompare(objA, objB, equivalent) {
    // keep track of references that have been compared to find circular references while walking down either object
    var refsComparedA = [];
    var refsComparedB = [];
    var compare = Boolean(equivalent) ? equivalent : function (a, b) { return (a === b); };
    var equals = function (a, b) {
        // try a simple equality test first
        if (a === b) {
            return true;
        }
        if ((a === null) || (b === null)) {
            return false;
        }
        // if both are objects, then further comparison is required
        if ((typeof (a) === "object") && (typeof (b) === "object")) {
            // perform deep comparison over object's properties
            var aKeys = Object.keys(a).sort();
            var bKeys_1 = Object.keys(b).sort();
            // does one object have a different number of properties?
            if (aKeys.length !== bKeys_1.length) {
                return false;
            }
            var keysMatch = aKeys.every((function (key, index) {
                // key names should match
                if (key !== bKeys_1[index]) {
                    return false;
                }
                else if (typeof (a[key]) === 'function' || typeof (b[key]) === 'function') {
                    //skip comparison of function properties
                    return true;
                }
                else if (!compare(a[key], b[key])) {
                    // if this is an Object then recursive testing is needed on its properties
                    if (typeof a[key] === "object") {
                        // if this property was encountered before then we're going in circles, give up
                        if (refsComparedA.indexOf(a[key]) !== -1) {
                            throw new Error("Cannot perform DeepCompare() because a circular reference was encountered, object: " + String(a) + ", property: " + key);
                        }
                        refsComparedA.push(a[key]);
                        if (refsComparedB.indexOf(b[key]) !== -1) {
                            throw new Error("Cannot perform DeepCompare() because a circular reference was encountered, object: " + String(b) + ", property: " + key);
                        }
                        refsComparedB.push(b[key]);
                        // recursive compare object's properties
                        if (!equals(a[key], b[key])) {
                            return false;
                        }
                        refsComparedA.pop();
                        refsComparedB.pop();
                        return true;
                    }
                    else {
                        // properties don't match
                        return false;
                    }
                }
                else {
                    return true;
                }
            }));
            if (!keysMatch) {
                return false;
            }
        }
        else {
            // parameters aren't equal, and at least one is not an Object
            return false;
        }
        // everything is equal
        return true;
    };
    return equals(objA, objB);
}
exports.deepCompare = deepCompare;
/**
 * This is a function you can call to safely serialize anything to JSON.
 * The built-in JSON.stringify() throws an exception for circular references and can't handle
 * many built-ins such as HTMLElements and the global window object.
 */
function safeSerialize(obj) {
    var str;
    try {
        var seenObjects_1 = [];
        str = JSON.stringify(obj, (function (key, value) {
            if (value === window) {
                return "[window]";
            }
            else if (value instanceof HTMLElement) {
                return "[HTMLElement]";
            }
            else if (typeof value === "function") {
                return "[function]";
            }
            else if (typeof value === "object") {
                if (value === null) {
                    return value;
                }
                else if (seenObjects_1.indexOf(value) === -1) {
                    seenObjects_1.push(value);
                    return value;
                }
                else {
                    return "[circular]";
                }
            }
            else {
                return value;
            }
        }));
    }
    catch (err) {
        // Note: we make this be a JSON string, so that consumers
        // can always call JSON.parse.
        str = JSON.stringify("[object]");
    }
    return str;
}
exports.safeSerialize = safeSerialize;
/**
 * Serializes the object Name Values Pairs (Depth of 1).
 * Used for Query Strings and Cookie Values
 * @param {any} obj Object with name value pairs
 * @param {string} delimeter  Delimiter seperates the pairs
 * @param {boolean} skipEncoding True to skip encoding
 */
function serialize(obj, delimiter, skipEncoding) {
    delimiter = delimiter || exports.DEFAULT_DELIMITER;
    var values = Object.keys(obj).map((function (name) {
        // Get the value and convert it to a string
        var value = obj[name];
        value = value ? value.toString() : "";
        if (!skipEncoding) {
            value = UriEncoding_1.default.encodeURIComponent(value);
        }
        // Add the encoded value to the array
        return name + exports.KEYVALUE_DELIMITER + value;
    }));
    return values.join(delimiter);
}
exports.serialize = serialize;
/**
 * Copy the values of all enumerable own properties from one or more source objects to a target object.
 */
function extend(target, source) {
    if (source) {
        for (var _i = 0, _a = Object.keys(source); _i < _a.length; _i++) {
            var prop = _a[_i];
            target[prop] = source[prop];
        }
    }
    return target;
}
exports.extend = extend;


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * This file was originally ported from WinJS.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Events = __webpack_require__(87);
function doneHandler(value) {
    /* tslint:disable-next-line:ban-native-functions */
    window.setTimeout((function () {
        Events.raise(CancelablePromiseImplementation, errorET, { error: value });
    }), 0);
}
var errorET = "error";
var canceledName = "Canceled";
//
// Global error counter, for each error which enters the system we increment this once and then
// the error number travels with the error as it traverses the tree of potential handlers.
//
// When someone has registered to be told about error [using EventGroup.on(Promise, 'error')] promises
// which are in error will get tagged with a ._errorId field. This tagged field is the
// contract by which nested promises with errors will be identified as chaining for the
// purposes of the callonerror semantics. If a nested promise in error is encountered without
// a ._errorId it will be assumed to be foreign and treated as an interop boundary and
// a new error id will be minted.
//
var error_number = 1;
var state_created; // -> working
var state_working; // -> error | error_notify | success | success_notify | canceled | waiting
var state_waiting; // -> error | error_notify | success | success_notify | waiting_canceled
var state_waiting_canceled; // -> error | error_notify | success | success_notify | canceling
var state_canceled; // -> error | error_notify | success | success_notify | canceling
var state_canceling; // -> error_notify
var state_success_notify; // -> success
var state_success; // -> .
var state_error_notify; // -> error
var state_error; // -> .
// Noop function, used in the various states to indicate that they don't support a given
// message. Named with the somewhat cute name '_' because it reads really well in the states.
function _() { }
// Initial state
//
state_created = {
    name: "created",
    enter: function (promise) {
        promise._setState(state_working);
    },
    cancel: _,
    done: _,
    then: _,
    _completed: _,
    _error: _,
    _notify: _,
    _setCompleteValue: _,
    _setErrorValue: _
};
// Ready state, waiting for a message (completed/error), able to be canceled
//
state_working = {
    name: "working",
    enter: _,
    cancel: function (promise) {
        promise._setState(state_canceled);
    },
    done: done,
    then: then,
    _completed: completed,
    _error: error,
    _notify: _,
    _setCompleteValue: setCompleteValue,
    _setErrorValue: setErrorValue
};
// Waiting state, if a promise is completed with a value which is itself a promise
// (has a then() method) it signs up to be informed when that child promise is
// fulfilled at which point it will be fulfilled with that value.
//
state_waiting = {
    name: "waiting",
    enter: function (promise) {
        var waitedUpon = promise._value;
        // We can special case our own intermediate promises which are not in a
        //  terminal state by just pushing this promise as a listener without
        //  having to create new indirection functions
        if (waitedUpon instanceof ThenPromise &&
            waitedUpon._state !== state_error &&
            waitedUpon._state !== state_success) {
            pushListener(waitedUpon, { promise: promise });
        }
        else {
            var error_1 = function (value) {
                if (waitedUpon._errorId) {
                    promise._chainedError(value, waitedUpon);
                }
                else {
                    // Because this is an interop boundary we want to indicate that this
                    //  error has been handled by the promise infrastructure before we
                    //  begin a new handling chain.
                    //
                    callonerror(promise, value, detailsForHandledError, waitedUpon, error_1);
                    promise._error(value);
                }
            };
            error_1.handlesOnError = true;
            waitedUpon.then(promise._completed.bind(promise), error_1);
        }
    },
    cancel: function (promise) {
        promise._setState(state_waiting_canceled);
    },
    done: done,
    then: then,
    _completed: completed,
    _error: error,
    _notify: _,
    _setCompleteValue: setCompleteValue,
    _setErrorValue: setErrorValue
};
// Waiting canceled state, when a promise has been in a waiting state and receives a
// request to cancel its pending work it will forward that request to the child promise
// and then waits to be informed of the result. This promise moves itself into the
// canceling state but understands that the child promise may instead push it to a
// different state.
//
state_waiting_canceled = {
    name: "waiting_canceled",
    enter: function (promise) {
        // Initiate a transition to canceling. Triggering a cancel on the promise
        // that we are waiting upon may result in a different state transition
        // before the state machine pump runs again.
        promise._setState(state_canceling);
        var waitedUpon = promise._value;
        if (CancelablePromiseImplementation.is(waitedUpon)) {
            waitedUpon.cancel();
        }
    },
    cancel: _,
    done: done,
    then: then,
    _completed: completed,
    _error: error,
    _notify: _,
    _setCompleteValue: setCompleteValue,
    _setErrorValue: setErrorValue
};
// Canceled state, moves to the canceling state and then tells the promise to do
// whatever it might need to do on cancelation.
//
state_canceled = {
    name: "canceled",
    enter: function (promise) {
        // Initiate a transition to canceling. The _cancelAction may change the state
        // before the state machine pump runs again.
        promise._setState(state_canceling);
        promise._cancelAction();
    },
    cancel: _,
    done: done,
    then: then,
    _completed: completed,
    _error: error,
    _notify: _,
    _setCompleteValue: setCompleteValue,
    _setErrorValue: setErrorValue
};
// Canceling state, commits to the promise moving to an error state with an error
// object whose 'name' and 'message' properties contain the string "Canceled"
//
state_canceling = {
    name: "canceling",
    enter: function (promise) {
        var error = new Error(canceledName);
        error.name = error.message;
        error["_handled"] = true;
        promise._value = error;
        promise._setState(state_error_notify);
    },
    cancel: _,
    done: _,
    then: _,
    _completed: _,
    _error: _,
    _notify: _,
    _setCompleteValue: _,
    _setErrorValue: _
};
// Success notify state, moves a promise to the success state and notifies all children
//
state_success_notify = {
    name: "complete_notify",
    enter: function (promise) {
        promise.done = CompletePromise.prototype.done;
        promise.then = CompletePromise.prototype.then;
        if (promise._listeners) {
            var queue = [promise];
            var p = void 0;
            while (queue.length) {
                p = queue.shift();
                p._state._notify(p, queue);
            }
        }
        promise._setState(state_success);
    },
    cancel: _,
    done: null,
    then: null,
    _completed: _,
    _error: _,
    _notify: notifySuccess,
    _setCompleteValue: _,
    _setErrorValue: _
};
// Success state, moves a promise to the success state and does NOT notify any children.
// Some upstream promise is owning the notification pass.
//
state_success = {
    name: "success",
    enter: function (promise) {
        promise.done = CompletePromise.prototype.done;
        promise.then = CompletePromise.prototype.then;
        promise._cleanupAction();
    },
    cancel: _,
    done: null,
    then: null,
    _completed: _,
    _error: _,
    _notify: notifySuccess,
    _setCompleteValue: _,
    _setErrorValue: _
};
// Error notify state, moves a promise to the error state and notifies all children
//
state_error_notify = {
    name: "error_notify",
    enter: function (promise) {
        promise.done = ErrorPromise.prototype.done;
        promise.then = ErrorPromise.prototype.then;
        if (promise._listeners) {
            var queue = [promise];
            var p = void 0;
            while (queue.length) {
                p = queue.shift();
                p._state._notify(p, queue);
            }
        }
        promise._setState(state_error);
    },
    cancel: _,
    done: null,
    then: null,
    _completed: _,
    _error: _,
    _notify: notifyError,
    _setCompleteValue: _,
    _setErrorValue: _
};
// Error state, moves a promise to the error state and does NOT notify any children.
// Some upstream promise is owning the notification pass.
//
state_error = {
    name: "error",
    enter: function (promise) {
        promise.done = ErrorPromise.prototype.done;
        promise.then = ErrorPromise.prototype.then;
        promise._cleanupAction();
    },
    cancel: _,
    done: null,
    then: null,
    _completed: _,
    _error: _,
    _notify: notifyError,
    _setCompleteValue: _,
    _setErrorValue: _
};
//
// The statemachine implementation follows a very particular pattern, the states are specified
// as static stateless bags of functions which are then indirected through the state machine
// instance (a Promise). As such all of the functions on each state have the promise instance
// passed to them explicitly as a parameter and the Promise instance members do a little
// dance where they indirect through the state and insert themselves in the argument list.
//
// We could instead call directly through the promise states however then every caller
// would have to remember to do things like pumping the state machine to catch state transitions.
//
//
// Implementations of shared state machine code.
//
function completed(promise, value) {
    promise._value = value;
    promise._setState(CancelablePromiseImplementation.isPromise(value) ? state_waiting : state_success_notify);
}
function createErrorDetails(exception, error, promise, id, parent, handler) {
    return {
        exception: exception,
        error: error,
        promise: promise,
        handler: handler,
        id: id,
        parent: parent
    };
}
function detailsForHandledError(promise, errorValue, context, handler) {
    var exception = context._isException;
    var errorId = context._errorId;
    return createErrorDetails(exception ? errorValue : null, exception ? null : errorValue, promise, errorId, context, handler);
}
function detailsForChainedError(promise, errorValue, context) {
    var exception = context._isException;
    var errorId = context._errorId;
    setErrorInfo(promise, errorId, exception);
    return createErrorDetails(exception ? errorValue : null, exception ? null : errorValue, promise, errorId, context);
}
function detailsForError(promise, errorValue) {
    var errorId = ++error_number;
    setErrorInfo(promise, errorId);
    return createErrorDetails(null, errorValue, promise, errorId);
}
function detailsForException(promise, exceptionValue) {
    var errorId = ++error_number;
    setErrorInfo(promise, errorId, true);
    return createErrorDetails(exceptionValue, null, promise, errorId);
}
function done(promise, onComplete, onError) {
    pushListener(promise, { c: onComplete, e: onError });
}
function error(promise, value, onerrorDetails, context) {
    promise._value = value;
    callonerror(promise, value, onerrorDetails, context);
    promise._setState(state_error_notify);
}
function notifySuccess(promise, queue) {
    var value = promise._value;
    var listeners = promise._listeners;
    if (!listeners) {
        return;
    }
    promise._listeners = null;
    var i;
    var len;
    for (i = 0, len = listeners.length; i < len; i++) {
        var listener = listeners[i];
        var onComplete = listener.c;
        var target = listener.promise;
        if (target) {
            try {
                target._setCompleteValue(onComplete ? onComplete(value) : value);
            }
            catch (ex) {
                target._setExceptionValue(ex);
            }
            if (target._state !== state_waiting && target._listeners) {
                queue.push(target);
            }
        }
        else {
            CompletePromise.prototype.done.call(promise, onComplete);
        }
    }
}
function notifyError(promise, queue) {
    var value = promise._value;
    var listeners = promise._listeners;
    if (!listeners) {
        return;
    }
    promise._listeners = null;
    var i;
    var len;
    for (i = 0, len = listeners.length; i < len; i++) {
        var listener = listeners[i];
        var onError = listener.e;
        var target = listener.promise;
        if (target) {
            var asyncCallbackStarted = false;
            try {
                if (onError) {
                    asyncCallbackStarted = true;
                    if (!onError.handlesOnError) {
                        callonerror(target, value, detailsForHandledError, promise, onError);
                    }
                    target._setCompleteValue(onError(value));
                }
                else {
                    target._setChainedErrorValue(value, promise);
                }
            }
            catch (ex) {
                target._setExceptionValue(ex);
            }
            if (target._state !== state_waiting && target._listeners) {
                queue.push(target);
            }
        }
        else {
            ErrorPromise.prototype.done.call(promise, null, onError);
        }
    }
}
function callonerror(promise, value, onerrorDetailsGenerator, context, handler) {
    if (value instanceof Error && value.message === canceledName) {
        return;
    }
    Events.raise(CancelablePromiseImplementation, errorET, onerrorDetailsGenerator(promise, value, context, handler));
}
function pushListener(promise, listener) {
    var listeners = promise._listeners;
    if (listeners) {
        listeners.push(listener);
    }
    else {
        listeners = [listener];
    }
    promise._listeners = listeners;
}
// The difference beween setCompleteValue()/setErrorValue() and complete()/error() is that setXXXValue() moves
// a promise directly to the success/error state without starting another notification pass (because one
// is already ongoing).
function setErrorInfo(promise, errorId, isException) {
    promise._isException = isException || false;
    promise._errorId = errorId;
}
function setErrorValue(promise, value, onerrorDetails, context) {
    promise._value = value;
    callonerror(promise, value, onerrorDetails, context);
    promise._setState(state_error);
}
function setCompleteValue(promise, value) {
    var targetState;
    if (CancelablePromiseImplementation.isPromise(value)) {
        targetState = state_waiting;
    }
    else {
        targetState = state_success;
    }
    promise._value = value;
    promise._setState(targetState);
}
function then(promise, onComplete, onError) {
    var result = new ThenPromise(promise);
    pushListener(promise, { promise: result, c: onComplete, e: onError });
    return result;
}
//
// Slim promise implementations for already completed promises, these are created
// under the hood on synchronous completion paths as well as by Promise.wrap
// and Promise.wrapError.
//
var ErrorPromise = (function () {
    function ErrorPromise(value, errorFunc) {
        if (errorFunc === void 0) { errorFunc = detailsForError; }
        this._value = value;
        callonerror(this, value, errorFunc);
    }
    ErrorPromise.prototype.cancel = function () {
        /* No-op */
    };
    ErrorPromise.prototype.done = function (unused, onError) {
        var value = this._value;
        if (onError) {
            try {
                if (!onError.handlesOnError) {
                    callonerror(null, value, detailsForHandledError, this, onError);
                }
                var result = onError(value);
                if (CancelablePromiseImplementation.is(result)) {
                    // If a promise is returned we need to wait on it.
                    result.done();
                }
                return;
            }
            catch (ex) {
                value = ex;
            }
        }
        if (value instanceof Error && value.message === canceledName) {
            // suppress cancel
            return;
        }
        // force the exception to be thrown asyncronously to avoid any try/catch blocks
        //
        doneHandler(value);
    };
    ErrorPromise.prototype.then = function (unused, onError) {
        // If the promise is already in a error state and no error handler is provided
        // we optimize by simply returning the promise instead of creating a new one.
        //
        if (!onError) {
            return this;
        }
        var result;
        var value = this._value;
        try {
            if (!onError.handlesOnError) {
                callonerror(null, value, detailsForHandledError, this, onError);
            }
            result = new CompletePromise(onError(value));
        }
        catch (ex) {
            // If the value throw from the error handler is the same as the value
            // provided to the error handler then there is no need for a new promise.
            //
            if (ex === value) {
                result = this;
            }
            else {
                result = new ExceptionPromise(ex);
            }
        }
        return result;
    };
    ErrorPromise.prototype.catch = function (onError) {
        return this.then(undefined, onError);
    };
    return ErrorPromise;
}());
var ExceptionPromise = (function (_super) {
    __extends(ExceptionPromise, _super);
    function ExceptionPromise(value) {
        return _super.call(this, value, detailsForException) || this;
    }
    return ExceptionPromise;
}(ErrorPromise));
var CompletePromise = (function () {
    function CompletePromise(value) {
        if (CancelablePromiseImplementation.isPromise(value)) {
            var result = new ThenPromise(undefined);
            result._setCompleteValue(value);
            return result;
        }
        this._value = value;
    }
    CompletePromise.prototype.cancel = function () {
        /* No-op */
    };
    CompletePromise.prototype.done = function (onComplete) {
        if (!onComplete) {
            return;
        }
        try {
            var result = onComplete(this._value);
            if (CancelablePromiseImplementation.is(result)) {
                result.done();
            }
        }
        catch (ex) {
            // force the exception to be thrown asynchronously to avoid any try/catch blocks
            doneHandler(ex);
        }
    };
    CompletePromise.prototype.then = function (onComplete) {
        var resultPromise;
        try {
            // If the value returned from the completion handler is the same as the value
            // provided to the completion handler then there is no need for a new promise.
            //
            var newValue = onComplete ? onComplete(this._value) : this._value;
            resultPromise = this._isSameValue(newValue) ? this : new CompletePromise(newValue);
        }
        catch (ex) {
            resultPromise = new ExceptionPromise(ex);
        }
        return resultPromise;
    };
    CompletePromise.prototype.catch = function (onError) {
        return this.then(undefined);
    };
    CompletePromise.prototype._isSameValue = function (value) {
        return value === this._value;
    };
    return CompletePromise;
}());
function timeout(timeoutMS) {
    var id;
    return new CancelablePromiseImplementation(function (c) {
        /* tslint:disable-next-line:ban-native-functions */
        id = window.setTimeout(c, timeoutMS);
    }, function () {
        if (id) {
            /* tslint:disable-next-line:ban-native-functions */
            window.clearTimeout(id);
        }
    });
}
function timeoutWithPromise(timeout, promise) {
    var cancelPromise = function () { promise.cancel(); };
    var cancelTimeout = function () { timeout.cancel(); };
    timeout.then(cancelPromise);
    promise.then(cancelTimeout, cancelTimeout);
    return promise;
}
function getCancelAll(values) {
    return function () {
        for (var _i = 0, _a = Object.keys(values); _i < _a.length; _i++) {
            var key = _a[_i];
            var promise = CancelablePromiseImplementation.as(values[key]);
            promise.cancel();
        }
    };
}
var staticCanceledPromise;
var CancelablePromiseImplementation = (function () {
    function CancelablePromiseImplementation(init, oncancel) {
        this._init(init, oncancel);
    }
    Object.defineProperty(CancelablePromiseImplementation, "cancel", {
        get: function () {
            return staticCanceledPromise || (staticCanceledPromise = new ErrorPromise(new Error(canceledName)));
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is fulfilled when one of the input promises
     * has been fulfilled.
     */
    CancelablePromiseImplementation.any = function (values) {
        return new CancelablePromiseImplementation(function (complete, error) {
            var keys = Object.keys(values);
            var pending = keys.length;
            if (pending === 0) {
                complete();
            }
            var _loop_1 = function (key) {
                CancelablePromiseImplementation.as(values[key]).then((function () { complete({ key: key, value: values[key] }); }), (function (e) {
                    if (e instanceof Error && e.name === canceledName) {
                        if (--pending === 0) {
                            complete(CancelablePromiseImplementation.cancel);
                        }
                        return;
                    }
                    error({ key: key, value: values[key] });
                }));
            };
            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
                var key = keys_1[_i];
                _loop_1(key);
            }
        }, getCancelAll(values));
    };
    CancelablePromiseImplementation.race = function (values) {
        return new CancelablePromiseImplementation(function (complete, error) {
            var keys = Object.keys(values);
            var pending = keys.length;
            if (pending === 0) {
                complete();
            }
            for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {
                var key = keys_2[_i];
                CancelablePromiseImplementation.as(values[key]).then(complete, (function (e) {
                    if (e instanceof Error && e.name === canceledName) {
                        if (--pending === 0) {
                            complete(CancelablePromiseImplementation.cancel);
                        }
                        return;
                    }
                    error(e);
                }));
            }
        }, getCancelAll(values));
    };
    /**
     * Returns a promise. If the object is already a promise it is returned;
     * otherwise the object is wrapped in a promise.
     */
    CancelablePromiseImplementation.as = function (value) {
        return CancelablePromiseImplementation.is(value) ? value : new CompletePromise(value);
    };
    /**
     * Determines whether a value fulfills the promise contract.
     */
    CancelablePromiseImplementation.is = function (value) {
        return CancelablePromiseImplementation.isPromise(value) && typeof value.cancel === 'function';
    };
    CancelablePromiseImplementation.isPromise = function (value) {
        return value && typeof value === "object" && typeof value.then === "function";
    };
    /**
     * Determines whether an error value represents a promise cancellation.
     */
    CancelablePromiseImplementation.isCanceled = function (e) {
        return (e instanceof Error && e.name === canceledName);
    };
    CancelablePromiseImplementation.all = function (values) {
        return new CancelablePromiseImplementation(function (complete, error) {
            var keys = Object.keys(values);
            var errors = Array.isArray(values) ? [] : {};
            var results = Array.isArray(values) ? [] : {};
            var pending = keys.length;
            var argDone = function () {
                if ((--pending) === 0) {
                    var errorKeys = Object.keys(errors);
                    var errorCount = errorKeys.length;
                    if (errorCount === 0) {
                        complete(results);
                    }
                    else {
                        if (errorKeys.every((function (key) { return CancelablePromiseImplementation.isCanceled(errors[key]); }))) {
                            complete(CancelablePromiseImplementation.cancel);
                        }
                        else {
                            error(errors);
                        }
                    }
                }
            };
            var _loop_2 = function (key) {
                var value = values[key];
                if (value === undefined) {
                    pending--;
                }
                else {
                    CancelablePromiseImplementation.then(value, (function (result) { results[key] = result; argDone(); }), (function (error) { errors[key] = error; argDone(); }));
                }
            };
            for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {
                var key = keys_3[_i];
                _loop_2(key);
            }
            if (pending === 0) {
                complete(results);
            }
        }, getCancelAll(values));
    };
    CancelablePromiseImplementation.then = function (value, onComplete, onError) {
        return CancelablePromiseImplementation.as(value).then(onComplete, onError);
    };
    CancelablePromiseImplementation.thenEach = function (values, onComplete, onError) {
        var result = Array.isArray(values) ? [] : {};
        for (var _i = 0, _a = Object.keys(values); _i < _a.length; _i++) {
            var key = _a[_i];
            result[key] = CancelablePromiseImplementation.then(values[key], onComplete, onError);
        }
        return CancelablePromiseImplementation.all(result);
    };
    CancelablePromiseImplementation.serial = function (tasks) {
        return tasks.reduce((function (previous, task) {
            return previous.then(task);
        }), CancelablePromiseImplementation.wrap());
    };
    CancelablePromiseImplementation.timeout = function (time, promise) {
        var to = timeout(time);
        return promise ? timeoutWithPromise(to, promise) : to;
    };
    /**
     * Wraps a non-promise value in a promise. You can use this function if you need
     * to pass a value to a function that requires a promise.
     */
    CancelablePromiseImplementation.wrap = function (value) {
        return new CompletePromise(value);
    };
    CancelablePromiseImplementation.resolve = function (value) {
        return CancelablePromiseImplementation.wrap(value);
    };
    /**
     * Wraps a non-promise error value in a promise. You can use this function if you need
     * to pass an error to a function that requires a promise.
     */
    CancelablePromiseImplementation.wrapError = function (error) {
        return new ErrorPromise(error);
    };
    CancelablePromiseImplementation.reject = function (error) {
        return CancelablePromiseImplementation.wrapError(error);
    };
    /**
     * Attempts to cancel the fulfillment of a promised value. If the promise hasn't
     * already been fulfilled and cancellation is supported, the promise enters
     * the error state with a value of Error("Canceled").
     */
    CancelablePromiseImplementation.prototype.cancel = function () {
        this._state.cancel(this);
        this._run();
    };
    /**
     * Allows you to specify the work to be done on the fulfillment of the promised value,
     * the error handling to be performed if the promise fails to fulfill
     * a value.
     *
     * After the handlers have finished executing, this function throws any error that would have been returned
     * from then() as a promise in the error state.
     *
     * @param onComplete The function to be called if the promise is fulfilled successfully with a value. The fulfilled value is passed as the single argument. If the value is null, the fulfilled value is returned. The value returned from the function becomes the fulfilled value of the promise returned by then. If an exception is thrown while executing the function, the promise returned by then moves into the error state.
     * @param onError The function to be called if the promise is fulfilled with an error. The error is passed as the single argument. If it is null, the error is forwarded. The value returned from the function is the fulfilled value of the promise returned by then.
     */
    CancelablePromiseImplementation.prototype.done = function (onComplete, onError) {
        this._state.done(this, onComplete, onError);
    };
    /**
     * Allows you to specify the work to be done on the fulfillment of the promised value,
     * the error handling to be performed if the promise fails to fulfill
     * a value.
     *
     * @param onComplete The function to be called if the promise is fulfilled successfully with a value. The value is passed as the single argument. If the value is null, the value is returned. The value returned from the function becomes the fulfilled value of the promise returned by then. If an exception is thrown while this function is being executed, the promise returned by then moves into the error state.
     * @param onError The function to be called if the promise is fulfilled with an error. The error is passed as the single argument. In different cases this object may be of different types, so it is necessary to test the object for the properties you expect. If the error is null, it is forwarded. The value returned from the function becomes the value of the promise returned by the then function.
     * @returns The promise whose value is the result of executing the complete or error function.
     */
    CancelablePromiseImplementation.prototype.then = function (onComplete, onError) {
        return this._state.then(this, onComplete, onError);
    };
    CancelablePromiseImplementation.prototype.catch = function (onError) {
        return this.then(undefined, onError);
    };
    CancelablePromiseImplementation.prototype._init = function (init, oncancel) {
        this._oncancel = oncancel;
        this._setState(state_created);
        this._run();
        try {
            init(this._completed.bind(this), this._error.bind(this));
        }
        catch (ex) {
            this._setExceptionValue(ex);
        }
    };
    CancelablePromiseImplementation.prototype._cancelAction = function () {
        if (this._oncancel) {
            try {
                this._oncancel();
            }
            catch (ex) { }
        }
    };
    CancelablePromiseImplementation.prototype._cleanupAction = function () {
        this._oncancel = null;
    };
    CancelablePromiseImplementation.prototype._chainedError = function (value, context) {
        var result = this._state._error(this, value, detailsForChainedError, context);
        this._run();
        return result;
    };
    CancelablePromiseImplementation.prototype._completed = function (value) {
        var result = this._state._completed(this, value);
        this._run();
        return result;
    };
    CancelablePromiseImplementation.prototype._error = function (value) {
        var result = this._state._error(this, value, detailsForError);
        this._run();
        return result;
    };
    CancelablePromiseImplementation.prototype._setState = function (state) {
        this._nextState = state;
    };
    CancelablePromiseImplementation.prototype._setCompleteValue = function (value) {
        this._state._setCompleteValue(this, value);
        this._run();
    };
    CancelablePromiseImplementation.prototype._setChainedErrorValue = function (value, context) {
        var result = this._state._setErrorValue(this, value, detailsForChainedError, context);
        this._run();
        return result;
    };
    CancelablePromiseImplementation.prototype._setExceptionValue = function (value) {
        var result = this._state._setErrorValue(this, value, detailsForException);
        this._run();
        return result;
    };
    CancelablePromiseImplementation.prototype._run = function () {
        while (this._nextState) {
            this._state = this._nextState;
            this._nextState = null;
            this._state.enter(this);
        }
    };
    CancelablePromiseImplementation.prototype._isSameValue = function (value) {
        return value === this._value;
    };
    return CancelablePromiseImplementation;
}());
Events.declare(CancelablePromiseImplementation, errorET);
//
// Internal implementation detail promise, ThenPromise is created when a promise needs
// to be returned from a then() method.
//
var ThenPromise = (function (_super) {
    __extends(ThenPromise, _super);
    function ThenPromise(creator) {
        var _this = _super.call(this) || this;
        _this._creator = creator;
        _this._initThen();
        return _this;
    }
    ThenPromise.prototype._init = function () {
        // Override to do nothing.
    };
    ThenPromise.prototype._cancelAction = function () {
        if (this._creator) {
            this._creator.cancel();
        }
    };
    ThenPromise.prototype._cleanupAction = function () {
        this._creator = null;
    };
    ThenPromise.prototype._initThen = function () {
        this._setState(state_created);
        this._run();
    };
    return ThenPromise;
}(CancelablePromiseImplementation));
var SignalPromiseImplementation = (function (_super) {
    __extends(SignalPromiseImplementation, _super);
    function SignalPromiseImplementation(cancel) {
        var _this = _super.call(this) || this;
        _this._oncancel = cancel;
        _this._initSignal();
        return _this;
    }
    SignalPromiseImplementation.prototype._init = function () {
        // Override to do nothing.
    };
    SignalPromiseImplementation.prototype._cancelAction = function () {
        if (this._oncancel) {
            this._oncancel();
        }
    };
    SignalPromiseImplementation.prototype._cleanupAction = function () {
        this._oncancel = null;
    };
    SignalPromiseImplementation.prototype._initSignal = function () {
        this._setState(state_created);
        this._run();
    };
    return SignalPromiseImplementation;
}(CancelablePromiseImplementation));
/**
 * Represents a singal promise type and constructor.
 * This type is for legacy use only, and should not be used outside this source package.
 */
exports.SignalPromise = SignalPromiseImplementation;
/**
 * Represents a cancelable promise type and constructor.
 * This type is intended to be assignable to the ES6 `Promise` type for compatibility,
 * so that `CancelablePromise` may be a used as a polyfill for `Promise`.
 */
exports.CancelablePromise = CancelablePromiseImplementation;
exports.default = exports.CancelablePromise;


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var CanvasZonePropertyPaneControl_1 = __webpack_require__(244);
var sp_core_library_1 = __webpack_require__(5);
var sp_lodash_subset_1 = __webpack_require__(12);
var sp_telemetry_1 = __webpack_require__(6);
var CanvasZonePart_1 = __webpack_require__(60);
var CanvasControlType_1 = __webpack_require__(7);
var CanvasFullWidthSection_1 = __webpack_require__(43);
var CanvasLayout = (function () {
    function CanvasLayout(webPartManager, renderCallBack) {
        this._webPartManager = webPartManager;
        this._render = renderCallBack;
        this._initialize();
    }
    CanvasLayout.generateNewLayoutIndex = function (sortedChildren, currentIdx) {
        if (!sortedChildren) {
            return undefined;
        }
        var sortedIndexes = sortedChildren.map((function (child) {
            return child.index;
        })).filter((function (item) {
            return item < currentIdx;
        }));
        var newIdx = currentIdx;
        if (sortedIndexes.length > 0) {
            newIdx += sortedIndexes[sortedIndexes.length - 1];
        }
        return newIdx / 2;
    };
    CanvasLayout.cloneMergePosition = function (position1, position2) {
        return sp_lodash_subset_1.merge({}, position1, position2);
    };
    CanvasLayout.isPositionValid = function (position) {
        return Boolean(position && position.zoneIndex);
    };
    Object.defineProperty(CanvasLayout.prototype, "zones", {
        get: function () {
            var canvasZones = [];
            this._zonePartMap.forEach((function (zone) {
                canvasZones.push(zone);
            }));
            return canvasZones.sort((function (zone1, zone2) {
                return zone1.index - zone2.index;
            }));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasLayout.prototype, "controlsState", {
        get: function () {
            return this._activeControlsState;
        },
        enumerable: true,
        configurable: true
    });
    CanvasLayout.prototype.fetchControlComponentById = function (controlId) {
        var componentValue = this._controlComponentMap.get(controlId);
        return componentValue && componentValue.component;
    };
    CanvasLayout.prototype.fetchCurrentSelection = function () {
        if (this._activeControlsState.selectedControlId) {
            var componentValue = this._controlComponentMap.get(this._activeControlsState.selectedControlId);
            if (componentValue) {
                return componentValue.position;
            }
            return CanvasLayout.undefinedControlPosition;
        }
        else {
            return {
                sectionIndex: undefined,
                zoneIndex: this._activeControlsState.selectedZoneIndex,
                controlIndex: undefined
            };
        }
    };
    CanvasLayout.prototype.fetchControlPositionById = function (controlId) {
        if (!controlId) {
            return CanvasLayout.undefinedControlPosition;
        }
        var componentValue = this._controlComponentMap.get(controlId);
        if (componentValue) {
            return componentValue.position;
        }
        return CanvasLayout.undefinedControlPosition;
    };
    CanvasLayout.prototype.fetchZone = function (index) {
        return this._zonePartMap.get(index);
    };
    CanvasLayout.prototype.addControlComponent = function (controlId, controlComponent) {
        var componentValue = this._controlComponentMap.get(controlId);
        sp_core_library_1.Validate.isNotNullOrUndefined(componentValue, 'componentValue');
        componentValue.component = controlComponent;
        this._controlComponentMap.set(controlId, componentValue);
    };
    CanvasLayout.prototype.addControl = function (canvasControl) {
        var qos = this._createQosScope('AddControl');
        if (!canvasControl ||
            !canvasControl.position ||
            canvasControl.position.zoneIndex === undefined) {
            this._handleMonitoredException(qos, 'InvalidControl', new Error('Could not add control as there is no control, no position, or a zone'), canvasControl);
            return undefined;
        }
        try {
            var curZoneIndex = canvasControl.position.zoneIndex;
            var controlId = void 0;
            var zone = this._zonePartMap.get(curZoneIndex);
            if (!zone) {
                var newCanvasZone = new CanvasZonePart_1.default(curZoneIndex, this._controlComponentMap, this._webPartManager);
                if (canvasControl.position.sectionIndex === undefined) {
                    canvasControl.position =
                        CanvasLayout.cloneMergePosition(canvasControl.position, { sectionIndex: CanvasLayout.firstLayoutIndex });
                }
                controlId = newCanvasZone.addControl(canvasControl);
                if (controlId) {
                    this._zonePartMap.set(curZoneIndex, newCanvasZone);
                }
                this._webPartManager.setPropertyPaneControl(newCanvasZone.index.toString(), new CanvasZonePropertyPaneControl_1.default(newCanvasZone, this._render));
            }
            else {
                if (canvasControl.position.sectionIndex !== undefined) {
                    controlId = zone.addControl(canvasControl);
                }
                else {
                    canvasControl.position = CanvasLayout.cloneMergePosition(canvasControl.position, {
                        zoneIndex: CanvasLayout.generateNewLayoutIndex(this.zones, curZoneIndex)
                    });
                    if (canvasControl.position.zoneIndex === undefined) {
                        this._handleMonitoredException(qos, 'ControlIndex', new Error('Could not generate a new control index'), canvasControl);
                        return undefined;
                    }
                    var newSecondaryZone = new CanvasZonePart_1.default(canvasControl.position.zoneIndex, this._controlComponentMap, this._webPartManager);
                    canvasControl.position =
                        CanvasLayout.cloneMergePosition(canvasControl.position, { sectionIndex: CanvasLayout.firstLayoutIndex });
                    controlId = newSecondaryZone.addControl(canvasControl);
                    if (controlId) {
                        this._zonePartMap.set(canvasControl.position.zoneIndex, newSecondaryZone);
                    }
                    this._webPartManager.setPropertyPaneControl(newSecondaryZone.index.toString(), new CanvasZonePropertyPaneControl_1.default(newSecondaryZone, this._render));
                }
            }
            if (controlId) {
                var componentValue = {
                    component: undefined,
                    position: canvasControl.position
                };
                this._controlComponentMap.set(controlId, componentValue);
            }
            qos.writeSuccess();
            return controlId;
        }
        catch (err) {
            this._handleMonitoredException(qos, 'Exception', err, canvasControl);
            return undefined;
        }
    };
    CanvasLayout.prototype.moveControl = function (control, newControlPosition) {
        if (!control || !newControlPosition) {
            return;
        }
        var zoneIndex = control.position.zoneIndex;
        if (zoneIndex === newControlPosition.zoneIndex) {
            var zone = this._zonePartMap.get(zoneIndex);
            zone.moveControl(control, newControlPosition);
        }
        else {
            var isFullWidth = CanvasFullWidthSection_1.default.isFullWidth(newControlPosition);
            var newControl = this._controlComponentMap.get(control.id).component.serialize();
            this._checkControlFullWidthProperty(newControlPosition, newControl);
            newControl.position = newControlPosition;
            newControl.addedFromPersistedData = true;
            this.removeControl(control.position);
            this._webPartManager.disposeWebparts(control.id);
            if (isFullWidth && !this._isZoneSectionEmpty(newControlPosition, 0)) {
                var curZoneIndex = newControl.position.zoneIndex;
                newControl.position = CanvasLayout.cloneMergePosition(newControl.position, {
                    zoneIndex: CanvasLayout.generateNewLayoutIndex(this.zones, curZoneIndex),
                    sectionIndex: CanvasLayout.firstLayoutIndex,
                    controlIndex: 1
                });
            }
            this.addControl(newControl);
        }
        this._render();
    };
    CanvasLayout.prototype.moveZone = function (zone, newZoneIndex) {
        if (!zone || !newZoneIndex) {
            return false;
        }
        this._zonePartMap.delete(zone.index);
        zone.changeZoneIndex(CanvasLayout.generateNewLayoutIndex(this.zones, newZoneIndex));
        this._zonePartMap.set(zone.index, zone);
        this._webPartManager.setPropertyPaneControl(zone.index.toString(), new CanvasZonePropertyPaneControl_1.default(zone, this._render));
        this._render();
        return true;
    };
    CanvasLayout.prototype.removeControl = function (controlPosition) {
        var qos = this._createQosScope('RemoveControl');
        if (!controlPosition) {
            this._handleMonitoredException(qos, 'InvalidPosition', new Error('Failed to remove control because control position is undefined'), controlPosition);
            return undefined;
        }
        try {
            var zone = this._zonePartMap.get(controlPosition.zoneIndex);
            if (!zone) {
                this._handleMonitoredException(qos, 'InvalidZone', new Error('Failed to remove control because zone does not exist'), controlPosition);
                return undefined;
            }
            var controlId = zone.removeControl(controlPosition);
            if (controlId) {
                this._controlComponentMap.delete(controlId);
            }
            qos.writeSuccess();
            return controlId;
        }
        catch (err) {
            this._handleMonitoredException(qos, 'Exception', err, controlPosition);
            return undefined;
        }
    };
    CanvasLayout.prototype.removeZone = function (index) {
        this._zonePartMap.delete(index);
    };
    CanvasLayout.prototype.fetchControl = function (controlPosition) {
        var qos = this._createQosScope('FetchControl');
        if (!controlPosition) {
            this._handleMonitoredException(qos, 'InvalidPosition', new Error('Failed to fetch control because control position is undefined'), controlPosition);
            return undefined;
        }
        try {
            var zone = this._zonePartMap.get(controlPosition.zoneIndex);
            if (!zone) {
                this._handleMonitoredException(qos, 'InvalidZone', new Error('Failed to fetch control because zone does not exist'), controlPosition);
                return undefined;
            }
            qos.writeSuccess();
            return zone.fetchControl(controlPosition);
        }
        catch (err) {
            this._handleMonitoredException(qos, 'Exception', err, controlPosition);
            return undefined;
        }
    };
    CanvasLayout.prototype.fetchAllControls = function () {
        var canvasControls = [];
        this.zones.forEach((function (zone) {
            var controls = zone.fetchAllControls();
            canvasControls = canvasControls.concat(controls);
        }));
        return canvasControls;
    };
    CanvasLayout.prototype.isEmpty = function () {
        return this.fetchAllControls().length === 0;
    };
    CanvasLayout.prototype.dispose = function () {
        this._zonePartMap.clear();
        this._controlComponentMap.clear();
        this._resetActiveControlState();
    };
    CanvasLayout.prototype._isZoneSectionEmpty = function (position, index) {
        var zone = this._zonePartMap.get(position.zoneIndex);
        var sections = zone && zone.sections;
        return sections && sections[index] && sections[index].isEmpty();
    };
    CanvasLayout.prototype._checkControlFullWidthProperty = function (newCanvasPosition, control) {
        if (CanvasFullWidthSection_1.default.isFullWidthControl(control)) {
            if (CanvasFullWidthSection_1.default.isFullWidth(newCanvasPosition)) {
                CanvasFullWidthSection_1.default.setFullWidthWebPartProperty(control, true);
            }
            else if (!CanvasFullWidthSection_1.default.isFullWidth(newCanvasPosition)) {
                CanvasFullWidthSection_1.default.setFullWidthWebPartProperty(control, false);
            }
        }
    };
    CanvasLayout.prototype._initialize = function () {
        this._zonePartMap = new Map();
        this._controlComponentMap = new Map();
        this._resetActiveControlState();
    };
    CanvasLayout.prototype._createQosScope = function (scope) {
        return new sp_telemetry_1._QosMonitor("Canvas" + scope);
    };
    CanvasLayout.prototype._resetActiveControlState = function () {
        this._activeControlsState = {
            hoveredControlId: undefined,
            selectedControlId: undefined,
            selectedZoneIndex: undefined,
            deletedControlLayout: CanvasLayout.undefinedControlPosition,
            deleteCandidateControlLayout: CanvasLayout.undefinedControlPosition
        };
    };
    CanvasLayout.prototype._handleMonitoredException = function (qos, failureTag, err, props) {
        var extraData; 
        if (props && props.controlType) {
            props = props;
            if (props &&
                props.controlType !== CanvasControlType_1.default.RTE &&
                props.controlType !== CanvasControlType_1.default.WebPartZone) {
                extraData = { 'ControlPosition': props.position };
            }
            if (props && props.controlType === CanvasControlType_1.default.WebPartZone) {
                extraData = {
                    'id': props.webPartId,
                    'alias': props.webPartManifest.alias
                };
            }
        }
        else {
            extraData = { 'ControlPosition': props };
        }
        qos.writeUnexpectedFailure(failureTag, err, extraData);
    };
    CanvasLayout.firstLayoutIndex = 1;
    CanvasLayout.undefinedControlPosition = {
        zoneIndex: undefined,
        sectionIndex: undefined,
        controlIndex: undefined
    };
    return CanvasLayout;
}());
exports.default = CanvasLayout;


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var strings = ( false)
    ? require('../../resx-strings/en-us.json')
    : __webpack_require__(13);
exports.default = strings['_yMeGkKybrchrRl4dKHORJw'];


/***/ }),
/* 23 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_23__;

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:CoverageThreshold(92)
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var Manager_1 = __webpack_require__(18);
var CorrelationVector_1 = __webpack_require__(70);
var ObjectUtil_1 = __webpack_require__(19);
var Features_1 = __webpack_require__(50);
var _id = 0;
var ClonedEventType;
(function (ClonedEventType) {
    ClonedEventType[ClonedEventType["Single"] = 0] = "Single";
    ClonedEventType[ClonedEventType["Start"] = 1] = "Start";
    ClonedEventType[ClonedEventType["End"] = 2] = "End";
})(ClonedEventType = exports.ClonedEventType || (exports.ClonedEventType = {}));
var ValidationErrorType;
(function (ValidationErrorType) {
    ValidationErrorType[ValidationErrorType["NoParent"] = 1] = "NoParent";
})(ValidationErrorType = exports.ValidationErrorType || (exports.ValidationErrorType = {}));
var AccountType;
(function (AccountType) {
    AccountType[AccountType["Consumer"] = 0] = "Consumer";
    AccountType[AccountType["ConsumerAnonymous"] = 1] = "ConsumerAnonymous";
    AccountType[AccountType["Business"] = 2] = "Business";
    AccountType[AccountType["BusinessAnonymous"] = 3] = "BusinessAnonymous";
    AccountType[AccountType["Unknown"] = 4] = "Unknown";
})(AccountType = exports.AccountType || (exports.AccountType = {}));
function addEventProps(eventPrototype, props, metadata, baseClass) {
    ObjectUtil_1.extend(eventPrototype, props);
    var resultMetadata = {};
    for (var key in metadata) {
        var item = metadata[key];
        var result = resultMetadata[key] = (typeof item === 'number' ? { type: item } : item);
        result.definedInName = props.shortEventName;
        if (result.type === 2 /* Number */) {
            result.isMetric = true;
        }
    }
    eventPrototype.metadata = baseClass ? __assign({}, baseClass.prototype.metadata, resultMetadata) : resultMetadata;
}
exports.addEventProps = addEventProps;
var EventBase = (function () {
    function EventBase(data, startType, parent) {
        this.validationErrors = 0;
        this.data = {};
        this.id = _id++;
        this.enabled = this._isEnabled();
        // Set the parent id if needed
        if (parent) {
            this.parentId = parent.id;
        }
        else if (this.requiresParent) {
            this.addValidationError(ValidationErrorType.NoParent);
        }
        // Set the start time
        this.startTime = (data && data.startTimeOverride) || Manager_1.Manager.getTime();
        this.vector = new CorrelationVector_1.default(parent ? parent.vector : CorrelationVector_1.default.RootVector);
        // Set the data if we have it
        if (data) {
            this._setData(data);
        }
        // Send the start event
        this._logEvent(startType);
    }
    /**
     * This will return true if the event is enabled
     */
    EventBase.enabled = function () {
        return this.prototype._isEnabled();
    };
    /**
     * This will return true if the event is of this type
     * @param event {IEvent} The event to compare
     */
    EventBase.isTypeOf = function (event) {
        return event.eventName.indexOf(this.prototype.shortEventName + ',') >= 0;
    };
    EventBase.prototype._isEnabled = function () {
        // All events are enabled by default
        return !this.samplingFeature || Features_1.default.isFeatureEnabled(this.samplingFeature);
    };
    EventBase.prototype._setData = function (data) {
        var stored = this.data;
        for (var _i = 0, _a = Object.keys(data); _i < _a.length; _i++) {
            var key = _a[_i];
            if (key in this.metadata) {
                var value = data[key];
                switch (typeof value) {
                    case 'string':
                        stored[key] = Manager_1.Manager.cleanString(value);
                        break;
                    case 'undefined':
                        break;
                    default:
                        stored[key] = value;
                        break;
                }
            }
        }
    };
    EventBase.prototype._logEvent = function (eventType) {
        Manager_1.Manager.logEvent(this, eventType);
    };
    EventBase.prototype.addValidationError = function (type) {
        this.validationErrors = this.validationErrors | type;
        Manager_1.Manager.logValidationError(this, type);
    };
    return EventBase;
}());
exports.EventBase = EventBase;
var proto = EventBase.prototype;
proto.eventName = 'EventBase,';
proto.shortEventName = 'EventBase';
// All events are not critical by default
proto.critical = false;
// All events require parents by default
proto.requiresParent = true;


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Bugs often appear in async code when stuff gets disposed, but async operations don't get canceled.
 * This Async helper class solves these issues by tying async code to the lifetime of a disposable object.
 *
 * Usage: Anything class extending from BaseModel can access this helper via this.async. Otherwise create a
 * new instance of the class and remember to call dispose() during your code's dispose handler.
 */
Object.defineProperty(exports, "__esModule", { value: true });
function noop() {
    // Do nothing.
}
var Async = (function () {
    function Async(parent, onError) {
        this._isDisposed = false;
        this._parent = parent || null;
        this._onErrorHandler = onError;
        this._timeoutIds = null;
        this._immediateIds = null;
        this._animationFrameIds = null;
        this._intervalIds = null;
    }
    /**
     * Dispose function, clears all async operations.
     */
    Async.prototype.dispose = function () {
        if (this._isDisposed) {
            return;
        }
        this._isDisposed = true;
        this._parent = null;
        // Clear timeouts.
        if (this._timeoutIds) {
            for (var _i = 0, _a = Object.keys(this._timeoutIds); _i < _a.length; _i++) {
                var id = _a[_i];
                this.clearTimeout(Number(id));
            }
            this._timeoutIds = null;
        }
        // Clear immediates.
        if (this._immediateIds) {
            for (var _b = 0, _c = Object.keys(this._immediateIds); _b < _c.length; _b++) {
                var id = _c[_b];
                this.clearImmediate(Number(id));
            }
            this._immediateIds = null;
        }
        // Clear intervals.
        if (this._intervalIds) {
            for (var _d = 0, _e = Object.keys(this._intervalIds); _d < _e.length; _d++) {
                var id = _e[_d];
                this.clearInterval(Number(id));
            }
            this._intervalIds = null;
        }
        // Clear animation frames.
        if (this._animationFrameIds) {
            for (var _f = 0, _g = Object.keys(this._animationFrameIds); _f < _g.length; _f++) {
                var id = _g[_f];
                this.cancelAnimationFrame(Number(id));
            }
            this._animationFrameIds = null;
        }
    };
    /**
     * SetTimeout override, which will auto cancel the timeout during dispose.
     * @param callback Callback to execute.
     * @param duration Duration in milliseconds.
     * @return The setTimeout id.
     */
    Async.prototype.setTimeout = function (callback, duration) {
        var _this = this;
        var timeoutId = 0;
        if (!this._isDisposed) {
            var timeoutIds_1 = this._timeoutIds || (this._timeoutIds = {});
            /* tslint:disable:ban-native-functions */
            timeoutId = setTimeout((function () {
                // Time to execute the timeout, enqueue it as a foreground task to be executed.
                try {
                    // Now delete the record and call the callback.
                    delete timeoutIds_1[timeoutId];
                    callback.apply(_this._parent);
                }
                catch (e) {
                    _this._logError(e);
                }
            }), duration);
            /* tslint:enable:ban-native-functions */
            timeoutIds_1[timeoutId] = true;
        }
        return timeoutId;
    };
    /**
     * Clears the timeout.
     * @param id Id to cancel.
     */
    Async.prototype.clearTimeout = function (id) {
        var timeoutIds = this._timeoutIds;
        if (timeoutIds && timeoutIds[id]) {
            /* tslint:disable:ban-native-functions */
            clearTimeout(id);
            /* tslint:enable:ban-native-functions */
            delete timeoutIds[id];
        }
    };
    /**
     * SetImmediate override, which will auto cancel the immediate during dispose.
     * @param callback Callback to execute.
     * @return The setTimeout id.
     */
    Async.prototype.setImmediate = function (callback) {
        var _this = this;
        var immediateId = 0;
        if (!this._isDisposed) {
            var immediateIds_1 = this._immediateIds || (this._immediateIds = {});
            var setImmediateCallback = function () {
                // Time to execute the timeout, enqueue it as a foreground task to be executed.
                try {
                    // Now delete the record and call the callback.
                    delete immediateIds_1[immediateId];
                    callback.apply(_this._parent);
                }
                catch (e) {
                    _this._logError(e);
                }
            };
            /* tslint:disable:ban-native-functions */
            immediateId = window.setImmediate ? window.setImmediate(setImmediateCallback) : window.setTimeout(setImmediateCallback, 0);
            /* tslint:enable:ban-native-functions */
            immediateIds_1[immediateId] = true;
        }
        return immediateId;
    };
    /**
     * Clears the immediate.
     * @param id Id to cancel.
     */
    Async.prototype.clearImmediate = function (id) {
        var immediateIds = this._immediateIds;
        if (immediateIds && immediateIds[id]) {
            /* tslint:disable:ban-native-functions */
            window.clearImmediate ? window.clearImmediate(id) : window.clearTimeout(id);
            delete immediateIds[id];
            /* tslint:enable:ban-native-functions */
        }
    };
    /**
     * SetInterval override, which will auto cancel the timeout during dispose.
     * @param callback Callback to execute.
     * @param duration Duration in milliseconds.
     * @return The setTimeout id.
     */
    Async.prototype.setInterval = function (callback, duration) {
        var _this = this;
        var intervalId = 0;
        if (!this._isDisposed) {
            if (!this._intervalIds) {
                this._intervalIds = {};
            }
            /* tslint:disable:ban-native-functions */
            intervalId = setInterval((function () {
                // Time to execute the interval callback, enqueue it as a foreground task to be executed.
                try {
                    callback.apply(_this._parent);
                }
                catch (e) {
                    _this._logError(e);
                }
            }), duration);
            /* tslint:enable:ban-native-functions */
            this._intervalIds[intervalId] = true;
        }
        return intervalId;
    };
    /**
     * Clears the interval.
     * @param id Id to cancel.
     */
    Async.prototype.clearInterval = function (id) {
        if (this._intervalIds && this._intervalIds[id]) {
            /* tslint:disable:ban-native-functions */
            clearInterval(id);
            delete this._intervalIds[id];
            /* tslint:enable:ban-native-functions */
        }
    };
    /**
     * Creates a function that, when executed, will only call the func function at most once per
     * every wait milliseconds. Provide an options object to indicate that func should be invoked
     * on the leading and/or trailing edge of the wait timeout. Subsequent calls to the throttled
     * function will return the result of the last func call.
     *
     * Note: If leading and trailing options are true func will be called on the trailing edge of
     * the timeout only if the the throttled function is invoked more than once during the wait timeout.
     *
     * @param func The function to throttle.
     * @param wait The number of milliseconds to throttle executions to. Defaults to 0.
     * @param options The options object.
     * @param options.leading Specify execution on the leading edge of the timeout.
     * @param options.trailing Specify execution on the trailing edge of the timeout.
     * @return The new throttled function.
     */
    Async.prototype.throttle = function (func, wait, options) {
        var _this = this;
        if (options === void 0) { options = {}; }
        if (this._isDisposed) {
            return noop;
        }
        var waitMS = wait || 0;
        var _a = options.leading, leading = _a === void 0 ? true : _a, _b = options.trailing, trailing = _b === void 0 ? true : _b;
        var lastExecuteTime = 0;
        var lastResult;
        var lastArgs;
        var timeoutId = null;
        var callback = function (userCall) {
            var now = (new Date()).getTime();
            var delta = now - lastExecuteTime;
            var waitLength = leading ? waitMS - delta : waitMS;
            if (delta >= waitMS && (!userCall || leading)) {
                lastExecuteTime = now;
                if (timeoutId) {
                    _this.clearTimeout(timeoutId);
                    timeoutId = null;
                }
                lastResult = func.apply(_this._parent, lastArgs);
            }
            else if (timeoutId === null && trailing) {
                timeoutId = _this.setTimeout(callback, waitLength);
            }
            return lastResult;
        };
        var resultFunction = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            lastArgs = args;
            return callback(true);
        };
        return resultFunction;
    };
    /**
     * Creates a function that will delay the execution of func until after wait milliseconds have
     * elapsed since the last time it was invoked. Provide an options object to indicate that func
     * should be invoked on the leading and/or trailing edge of the wait timeout. Subsequent calls
     * to the debounced function will return the result of the last func call.
     *
     * Note: If leading and trailing options are true func will be called on the trailing edge of
     * the timeout only if the the debounced function is invoked more than once during the wait
     * timeout.
     *
     * @param func The function to debounce.
     * @param wait The number of milliseconds to delay.
     * @param options The options object.
     * @param options.leading Specify execution on the leading edge of the timeout.
     * @param options.maxWait The maximum time func is allowed to be delayed before it's called.
     * @param options.trailing Specify execution on the trailing edge of the timeout.
     * @return The new debounced function.
     */
    Async.prototype.debounce = function (func, wait, options) {
        var _this = this;
        if (options === void 0) { options = {}; }
        if (this._isDisposed) {
            return noop;
        }
        var waitMS = wait || 0;
        var _a = options.leading, leading = _a === void 0 ? false : _a, _b = options.trailing, trailing = _b === void 0 ? true : _b, _c = options.maxWait, maxWait = _c === void 0 ? NaN : _c;
        var lastCallTime = 0;
        var lastExecuteTime = (new Date()).getTime();
        var lastResult;
        var lastArgs;
        var timeoutId = null;
        var callback = function (userCall) {
            var now = (new Date()).getTime();
            var executeImmediately = false;
            if (userCall) {
                if (leading && now - lastCallTime >= waitMS) {
                    executeImmediately = true;
                }
                lastCallTime = now;
            }
            var delta = now - lastCallTime;
            var waitLength = waitMS - delta;
            var maxWaitDelta = now - lastExecuteTime;
            var maxWaitExpired = false;
            if (!isNaN(maxWait)) {
                // maxWait only matters when there is a pending callback
                if (maxWaitDelta >= maxWait && timeoutId) {
                    maxWaitExpired = true;
                }
                else {
                    waitLength = Math.min(waitLength, maxWait - maxWaitDelta);
                }
            }
            if (delta >= waitMS || maxWaitExpired || executeImmediately) {
                if (timeoutId) {
                    _this.clearTimeout(timeoutId);
                    timeoutId = null;
                }
                lastExecuteTime = now;
                lastResult = func.apply(_this._parent, lastArgs);
            }
            else if ((timeoutId === null || !userCall) && trailing) {
                timeoutId = _this.setTimeout(callback, waitLength);
            }
            return lastResult;
        };
        var resultFunction = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            lastArgs = args;
            return callback(true);
        };
        return resultFunction;
    };
    Async.prototype.requestAnimationFrame = function (callback) {
        var _this = this;
        var animationFrameId = 0;
        if (!this._isDisposed) {
            var animationFrameIds_1 = this._animationFrameIds || (this._animationFrameIds = {});
            var animationFrameCallback = function () {
                try {
                    // Now delete the record and call the callback.
                    delete animationFrameIds_1[animationFrameId];
                    callback.apply(_this._parent);
                }
                catch (e) {
                    _this._logError(e);
                }
            };
            /* tslint:disable:ban-native-functions */
            animationFrameId = window.requestAnimationFrame ? window.requestAnimationFrame(animationFrameCallback) : window.setTimeout(animationFrameCallback, 0);
            /* tslint:enable:ban-native-functions */
            animationFrameIds_1[animationFrameId] = true;
        }
        return animationFrameId;
    };
    Async.prototype.cancelAnimationFrame = function (id) {
        var animationFrameIds = this._animationFrameIds;
        if (animationFrameIds && animationFrameIds[id]) {
            /* tslint:disable:ban-native-functions */
            window.cancelAnimationFrame ? window.cancelAnimationFrame(id) : window.clearTimeout(id);
            /* tslint:enable:ban-native-functions */
            delete animationFrameIds[id];
        }
    };
    Async.prototype._logError = function (e) {
        if (this._onErrorHandler) {
            this._onErrorHandler(e);
        }
    };
    return Async;
}());
exports.default = Async;


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * A color represented by red, green, blue, and alpha (opacity) components.
 */
var RgbaColor = (function () {
    /** Constructs a default RgbaColor. Use RgbaColor.fromRgba to specify components. */
    function RgbaColor() {
        this.R = 0;
        this.G = 0;
        this.B = 0;
        this.A = RgbaColor.maxComponent; // Default to fully opaque.
    }
    /**
     * Creates a copy of the given color.
     * @param {RgbaColor} c The color to clone.
     */
    RgbaColor.clone = function (c) {
        return RgbaColor.fromRgba(c.R, c.G, c.B, c.A);
    };
    /**
     * Returns true if the colors have identical component values of R, G, B, and A.
     * @param {RgbaColor} c1 The first color to compare.
     * @param {RgbaColor} c2 The second color to compare.
     */
    RgbaColor.equals = function (c1, c2) {
        var c1IsNull = !c1;
        var c2IsNull = !c2;
        if (c1IsNull || c2IsNull) {
            return c1IsNull && c2IsNull;
        }
        else {
            return c1.R === c2.R && c1.G === c2.G && c1.B === c2.B && c1.A === c2.A;
        }
    };
    /**
     * Creates an RgbaColor from red, green, blue, and alpha component values.
     * @param {number} r The red component value (between 0 and 255).
     * @param {number} g The green component value (between 0 and 255).
     * @param {number} b The blue component value (between 0 and 255).
     * @param {number} a The alpha component value (between 0 and 255).
     */
    RgbaColor.fromRgba = function (r, g, b, a) {
        var colorObj = new RgbaColor;
        colorObj.R = Math.round(r);
        colorObj.G = Math.round(g);
        colorObj.B = Math.round(b);
        colorObj.A = a != null ? Math.round(a) : RgbaColor.maxComponent;
        return colorObj;
    };
    /**
     * Parses an HTML color string in the formats #AARRGGBB, #RRGGBB, or #RGB.
     * @param {string} htmlColor The HTML color string to parse.
     */
    RgbaColor.fromHtmlColor = function (htmlColor) {
        function TwoHexCharsToNumber(str, index1, index2) {
            return parseInt(str.charAt(index1) + str.charAt(index2), 16);
        }
        var resultColor = new RgbaColor;
        if (typeof htmlColor === "string" && htmlColor.charAt(0) === "#") {
            switch (htmlColor.length) {
                case 9:// #AARRGGBB
                    resultColor.A = TwoHexCharsToNumber(htmlColor, 1, 2);
                    resultColor.R = TwoHexCharsToNumber(htmlColor, 3, 4);
                    resultColor.G = TwoHexCharsToNumber(htmlColor, 5, 6);
                    resultColor.B = TwoHexCharsToNumber(htmlColor, 7, 8);
                    break;
                case 7:// #RRGGBB
                    resultColor.R = TwoHexCharsToNumber(htmlColor, 1, 2);
                    resultColor.G = TwoHexCharsToNumber(htmlColor, 3, 4);
                    resultColor.B = TwoHexCharsToNumber(htmlColor, 5, 6);
                    break;
                case 4:// #RGB
                    resultColor.R = TwoHexCharsToNumber(htmlColor, 1, 1);
                    resultColor.G = TwoHexCharsToNumber(htmlColor, 2, 2);
                    resultColor.B = TwoHexCharsToNumber(htmlColor, 3, 3);
                    break;
            }
        }
        return resultColor;
    };
    /**
     * Converts an RgbaColor into an HTML string suitable for use as a CSS color value.
     * @param {RgbaColor} c The color to convert.
     * @param {boolean} bFilterValue If true, this produces a string to in the #AARRGGBB format.
     */
    RgbaColor.toHtmlString = function (c, bFilterValue) {
        function ByteToHexString(b) {
            var byte = Number(b);
            if (!(byte >= 0 && byte <= RgbaColor.maxComponent)) {
                throw new Error("Argument must be a Number in [0, 255]");
            }
            var hex = byte.toString(16);
            if (byte < 16) {
                hex = "0" + hex;
            }
            return hex;
        }
        if (c.A < RgbaColor.maxComponent && !bFilterValue) {
            return "rgba(" +
                c.R.toString(10) + ", " +
                c.G.toString(10) + ", " +
                c.B.toString(10) + ", " +
                (c.A / RgbaColor.maxComponent).toFixed(2) + ")";
        }
        else {
            return "#" +
                (bFilterValue ? ByteToHexString(c.A) : "") +
                ByteToHexString(c.R) +
                ByteToHexString(c.G) +
                ByteToHexString(c.B);
        }
    };
    /**
     * The maximum value of an R, G, B, or A component in an RgbaColor.
     */
    RgbaColor.maxComponent = 255;
    return RgbaColor;
}());
exports.default = RgbaColor;


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var CanvasDragZoneConstants = (function () {
    function CanvasDragZoneConstants() {
    }
    CanvasDragZoneConstants.LINE_OFFSET_BOTTOM = 10;
    CanvasDragZoneConstants.LINE_OFFSET_TOP = 13;
    CanvasDragZoneConstants.controlZoneDragTag = 'ControlZone';
    CanvasDragZoneConstants.sectionDragTag = 'CanvasSection';
    CanvasDragZoneConstants.zoneDragTag = 'CanvasZone';
    CanvasDragZoneConstants.webpartDragHandleTag = 'WebpartHandle';
    CanvasDragZoneConstants.zoneDragHandleTag = 'ZoneHandle';
    CanvasDragZoneConstants.fullWidthSectionTag = 'CanvasFullWidth';
    return CanvasDragZoneConstants;
}());
exports.default = CanvasDragZoneConstants;


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_core_library_1 = __webpack_require__(5);
var Flights = (function () {
    function Flights() {
    }
    Object.defineProperty(Flights, "isToolboxLargeEnabled", {
        get: function () {
            return sp_core_library_1._SPFlight.isEnabled(960 ) || sp_core_library_1.Environment.type === sp_core_library_1.EnvironmentType.Local;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Flights, "isScrollAnimationsEnabled", {
        get: function () {
            return sp_core_library_1._SPFlight.isEnabled(411 ) &&
                !sp_core_library_1._SPKillSwitch.isActivated(sp_core_library_1.Guid.parse('B73BC029-2F91-4FA2-9973-45065C72D1E7'), '9/19/2017', 'ScrollRevealAnimation');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Flights, "isHintDiscoverabilityEnabled", {
        get: function () {
            return sp_core_library_1._SPFlight.isEnabled(419 );
        },
        enumerable: true,
        configurable: true
    });
    return Flights;
}());
exports.default = Flights;


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var PairedEventBase_1 = __webpack_require__(51);
var ResultTypeEnum_1 = __webpack_require__(30);
exports.ResultTypeEnum = ResultTypeEnum_1.ResultTypeEnum;
exports.Qos = PairedEventBase_1.createPairedEvent({
    eventName: 'Qos,',
    shortEventName: 'Qos'
}, {
    name: {
        isKey: true,
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    startTimeOverride: {
        isPrefixingDisabled: true,
        type: 2 /* Number */
    },
    resultCode: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    resultType: {
        typeRef: ResultTypeEnum_1.ResultTypeEnum,
        isPrefixingDisabled: true,
        type: 6 /* Enum */
    },
    error: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    extraData: 4 /* Object */,
    extraMetrics: {
        isPrefixingDisabled: true,
        type: 4 /* Object */
    }
});
exports.default = exports.Qos;


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ResultTypeEnum;
(function (ResultTypeEnum) {
    ResultTypeEnum[ResultTypeEnum["Success"] = 0] = "Success";
    ResultTypeEnum[ResultTypeEnum["Failure"] = 1] = "Failure";
    ResultTypeEnum[ResultTypeEnum["ExpectedFailure"] = 2] = "ExpectedFailure";
})(ResultTypeEnum = exports.ResultTypeEnum || (exports.ResultTypeEnum = {}));


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
// Regex that finds {#} so it can be replaced by the arguments in string format
var FORMAT_REGEX = /\{(\d+)\}/g;
/**
 * String Format is like C# string format. Use template strings instead unless the string is dynamic.
 * Usage Example: "hello {0}!".format("mike") will return "hello mike!"
 * Calling format on a string with less arguments than specified in the format will substitute "undefined"
 */
function format(template) {
    var values = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        values[_i - 1] = arguments[_i];
    }
    return template.replace(FORMAT_REGEX, (function (match, valueIndex) {
        var value = values[valueIndex];
        // Checking null for consistency with old behavior, all other values pass through.
        return value === null ? '' : value;
    }));
}
exports.format = format;
/**
 * Returns an array made of replacemant values and string literal values, in order.
 * @param template Base string with replacement tokens.
 * @param values Array of values to insert into corresponding replacement token.
 */
function formatToArray(template) {
    var values = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        values[_i - 1] = arguments[_i];
    }
    var parts = [];
    var regexResult;
    var lastIndex = 0;
    while ((regexResult = FORMAT_REGEX.exec(template))) {
        // The full string of characters matched.
        var match = regexResult[0];
        // Get replacement value.
        var valueIndex = parseInt(match.replace(/\{|\}+/g, ''), 10);
        var replacementValue = values[valueIndex];
        // Get text between tokens and add to our array.
        if (regexResult.index > lastIndex) {
            parts.push(template.substring(lastIndex, regexResult.index));
        }
        // Save last index.
        lastIndex = FORMAT_REGEX.lastIndex;
        // Add replacement value to our array.
        parts.push(replacementValue);
    }
    // Grab any remaining text after the last match.
    if (lastIndex !== template.length) {
        parts.push(template.substring(lastIndex, template.length));
    }
    return parts;
}
exports.formatToArray = formatToArray;
/**
 * Returns true if s ends with suffix.
 */
function doesStringEndWith(s, suffix) {
    return s.substr(s.length - suffix.length) === suffix;
}
exports.doesStringEndWith = doesStringEndWith;
/**
 * Returns true if s starts with prefix.
 */
function doesStringStartWith(s, prefix) {
    return s.substr(0, prefix.length) === prefix;
}
exports.doesStringStartWith = doesStringStartWith;
/**
 * Return a string of the given length, using 0s to pad in from the right.
 */
function rightPad(data, length) {
    var result = data.toString();
    while (result.length < length) {
        result = result + "0";
    }
    return result;
}
exports.rightPad = rightPad;
/**
 * Look for any of the chars in searchValues in str.
 * Returns the index of the char found or -1 if nothing is found.
 */
function findOneOf(str, searchValues) {
    for (var idx = 0; idx < str.length; idx++) {
        if (searchValues.indexOf(str[idx]) >= 0) {
            return idx;
        }
    }
    return -1; //none of the searchValues exist in string
}
exports.findOneOf = findOneOf;
/**
 * Determines if two strings are equal when both converted to uppercase.
 */
function equalsCaseInsensitive(a, b) {
    if (a && b) {
        return a.toUpperCase() === b.toUpperCase();
    }
    return a === b;
}
exports.equalsCaseInsensitive = equalsCaseInsensitive;
/**
 * Capitalizes the first letter of str.
 */
function capitalize(str) {
    if (str) {
        return str[0].toUpperCase() + str.substr(1);
    }
    return str;
}
exports.capitalize = capitalize;
/**
 * De-capitalizes the first letter of str.
 */
function decapitalize(str) {
    if (str) {
        return str[0].toLowerCase() + str.substr(1);
    }
    return str;
}
exports.decapitalize = decapitalize;
/**
 * Selects a string based on plurality.
 *
 * @param count - The value to base selection on
 * @param single - The string to select when it's a singular value
 * @param multiple - The string to select when it's a plural value
 *
 * @deprecated This method does NOT give accurate results for many languages!!
 *             Use getLocalizedCountValue instead.
 */
function pluralSelect(count, single, plural) {
    return count === 1 ? single : plural;
}
exports.pluralSelect = pluralSelect;
/**
 * Given a specially formatted localized text, a set of intervals, and a count,
 * return the localized text which corresponds to the first interval the
 * count falls into.
 *
 * Please see https://microsoft.sharepoint.com/teams/OISGPortal/LocKits/_layouts/15/start.aspx#/Lockit%20Instructions/SharePoint%20Core%20Localization.aspx
 * for more details.
 *
 * @param {string} locText - || deliminated blocks of localized texts, representing
 *  the various singular and plural forms of the string  being localized
 * @param {string} intervals - || deliminated blocks of numeric intervals, defining the ranges
 *  of that interval. Has special support for , * and -.
 * @param {number} count - The count used to determine which interval to return.
 *
 * @return
 * The localized block which corresponds to the first interval the count falls into.
 *
 * @example
 * StringHelper.getLocalizedCountValue('items||item||items', '0||1||2-', 0)
 *   returns items
 * StringHelper.getLocalizedCountValue('items||item||items', '0||1||2-', 1)
 *   returns item
 * StringHelper.getLocalizedCountValue('items||item||items', '0||1||2-', 2)
 *   returns items
 */
function getLocalizedCountValue(locText, intervals, count) {
    'use strict';
    count = Number(count); // defensively make sure count is a number
    // !!!IMPORTANT!!! changes in this function need to be in sync with
    // the methods with the same name located at:
    // otools/inc/sts/stsom/utilities/SPLocUtility.cs
    // sts/Client/Script/Init/LocUtility.cs
    if (locText === undefined || intervals === undefined || count === undefined) {
        return null;
    }
    var ret = '';
    var locIndex = -1;
    var intervalsArray = intervals.split('||');
    for (var i = 0, length_1 = intervalsArray.length; i < length_1; i++) {
        var interval = intervalsArray[i];
        if (!interval) {
            continue;
        }
        var subIntervalsArray = interval.split(',');
        for (var _i = 0, subIntervalsArray_1 = subIntervalsArray; _i < subIntervalsArray_1.length; _i++) {
            var subInterval = subIntervalsArray_1[_i];
            if (!subInterval) {
                continue;
            }
            // there are three possiblities, wildcard, interval, or number
            if (isNaN(Number(subInterval))) {
                if (subInterval.indexOf('-') !== -1) {
                    // if it's an interval the format is Number-Number
                    var range = subInterval.split('-');
                    if (range.length !== 2) {
                        continue;
                    }
                    var min = void 0;
                    var max = void 0;
                    if (range[0] === '') {
                        min = 0;
                    }
                    else {
                        if (isNaN(Number(range[0]))) {
                            continue;
                        }
                        else {
                            min = parseInt(range[0], 10);
                        }
                    }
                    if (count >= min) {
                        if (range[1] === '') {
                            locIndex = i;
                            break;
                        }
                        else {
                            if (isNaN(Number(range[1]))) {
                                continue;
                            }
                            else {
                                max = parseInt(range[1], 10);
                            }
                        }
                        if (count <= max) {
                            locIndex = i;
                            break;
                        }
                    }
                }
                else if (subInterval.indexOf('*') !== -1) {
                    // Wildcard
                    var regexExpr = subInterval.trim().replace(/\*/g, '[0-9]*');
                    var regex = new RegExp("^" + regexExpr + "$");
                    if (regex.test(count.toString())) {
                        locIndex = i;
                        break;
                    }
                }
            }
            else {
                var exactNumber = parseInt(subInterval, 10);
                if (count === exactNumber) {
                    locIndex = i;
                    break;
                }
            }
        }
        if (locIndex !== -1) {
            break;
        }
    }
    if (locIndex !== -1) {
        var locValues = locText.split('||');
        if (locValues[locIndex]) {
            ret = locValues[locIndex];
        }
    }
    return ret;
}
exports.getLocalizedCountValue = getLocalizedCountValue;
/**
 * Format the locText with the localized count value.
 */
function formatWithLocalizedCountValue(locText, intervals, count) {
    'use strict';
    var template = getLocalizedCountValue(locText, intervals, count);
    var result = format(template, count.toString());
    return result;
}
exports.formatWithLocalizedCountValue = formatWithLocalizedCountValue;


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DataStoreCachingType;
(function (DataStoreCachingType) {
    DataStoreCachingType[DataStoreCachingType["none"] = 0] = "none";
    DataStoreCachingType[DataStoreCachingType["session"] = 1] = "session";
    DataStoreCachingType[DataStoreCachingType["local"] = 2] = "local";
    DataStoreCachingType[DataStoreCachingType["sharedMemory"] = 3] = "sharedMemory";
})(DataStoreCachingType || (DataStoreCachingType = {}));
exports.default = DataStoreCachingType;


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// OneDrive:IgnoreCodeCoverage
var Promise_1 = __webpack_require__(20);
/**
 * Signal is used to manage a promise without having to pass a function to the Promise constructor.
 * Example:
 * var s = new Signal<boolean>();
 * setTimeout(() => {
 *    s.complete(true);
 * }, 1000);
 * return s.promise;
 */
var Signal = (function () {
    /**
     * Create a new Signal (also known as a Deferred in some circles.)
     * @param: oncancel A function to be called when the promise is cancelled.
     */
    function Signal(oncancel) {
        this._promise = new Promise_1.SignalPromise(oncancel);
    }
    /**
     * The underlying promise that the Signal manages.
     */
    Signal.prototype.getPromise = function () {
        return this._promise;
    };
    /**
     * Cancel the underlying promise.
     */
    Signal.prototype.cancel = function () {
        this._promise.cancel();
    };
    /**
     * Complete the underlying promise with the given value.
     */
    Signal.prototype.complete = function (value) {
        this._promise._completed(value);
    };
    /**
     * Put the underlying promise into the error state with the given value.
     */
    Signal.prototype.error = function (value) {
        this._promise._error(value);
    };
    return Signal;
}());
exports.default = Signal;


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var office_ui_fabric_react_1 = __webpack_require__(2);
var React = __webpack_require__(1);
__webpack_require__(263);
var Utilities_1 = __webpack_require__(114);
var ButtonState;
(function (ButtonState) {
    ButtonState[ButtonState["Active"] = 0] = "Active";
    ButtonState[ButtonState["Disabled"] = 1] = "Disabled";
    ButtonState[ButtonState["Normal"] = 2] = "Normal";
})(ButtonState = exports.ButtonState || (exports.ButtonState = {}));
var ToolbarButton = (function (_super) {
    tslib_1.__extends(ToolbarButton, _super);
    function ToolbarButton(props) {
        return _super.call(this, props) || this;
    }
    ToolbarButton.prototype.render = function () {
        var buttonClassName = office_ui_fabric_react_1.css('ToolbarButton', this.props.className, {
            'ToolbarButton--disabled': this.props.disabled,
            'ToolbarButton--active': this.props.isActive
        });
        var isTouchDevice = Utilities_1.default.isTouchEnabled();
        var onClick = isTouchDevice ? undefined : this.props.onClick;
        var onMouseDown = isTouchDevice ? this.props.onClick : undefined;
        return (React.createElement("button", { type: 'button', "aria-disabled": this.props.disabled ? true : undefined, "aria-pressed": this.props.canBeActive && !!this.props.isActive ? this.props.isActive : undefined, className: buttonClassName, onClick: onClick, onMouseDown: onMouseDown, title: this.props.title, tabIndex: this.props.tabIndex, "data-automation-id": this.props.automationId, onKeyDown: this.props.onKeyDown ? this.props.onKeyDown : undefined, onBlur: this.props.onBlur, "data-drag-handle": this.props.dragHandleTag },
            this._getButtonImage(),
            this.props.label));
    };
    ToolbarButton.prototype._getButtonImage = function () {
        if (this.props.imageIconUrl) {
            return (React.createElement("img", { src: this.props.imageIconUrl, height: 16, width: 16, alt: this.props.imageIconAltText }));
        }
        else if (this.props.svgIcon) {
            return this.props.svgIcon;
        }
        else {
            var iconClass = void 0;
            if (this.props.fabricIconKey) {
                iconClass = office_ui_fabric_react_1.getIconClassName(this.props.fabricIconKey);
                if (!iconClass) {
                    iconClass = "ms-Icon--" + this.props.fabricIconKey;
                }
                iconClass = "ms-Icon " + iconClass;
            }
            return (React.createElement("i", { className: iconClass || this.props.iconClassName }));
        }
    };
    ToolbarButton.defaultProps = {
        key: undefined,
        fabricIconKey: undefined,
        onClick: undefined,
        canBeActive: true,
        className: 'CanvasControlToolbar-item',
        disabled: false,
        isActive: false
    };
    return ToolbarButton;
}(React.Component));
exports.default = ToolbarButton;


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(2);
var MobilePreviewDevices_1 = __webpack_require__(324);
var MobilePreviewClickStopBar_1 = __webpack_require__(325);
var MobilePreviewHeaderBar_1 = __webpack_require__(333);
var MobilePreviewDeviceView_1 = __webpack_require__(345);
var MobilePreviewDimensionInput_1 = __webpack_require__(349);
var MobilePreviewRotate_1 = __webpack_require__(353);
var MobilePreview_module_scss_1 = __webpack_require__(357);
var MobilePreview_resx_1 = __webpack_require__(36);
var DeviceType;
(function (DeviceType) {
    DeviceType[DeviceType["Phone"] = 0] = "Phone";
    DeviceType[DeviceType["Tablet"] = 1] = "Tablet";
})(DeviceType = exports.DeviceType || (exports.DeviceType = {}));
var DeviceOrientation;
(function (DeviceOrientation) {
    DeviceOrientation[DeviceOrientation["Portrait"] = 0] = "Portrait";
    DeviceOrientation[DeviceOrientation["Landscape"] = 1] = "Landscape";
})(DeviceOrientation = exports.DeviceOrientation || (exports.DeviceOrientation = {}));
var MobilePreview = (function (_super) {
    tslib_1.__extends(MobilePreview, _super);
    function MobilePreview(props) {
        var _this = _super.call(this, props) || this;
        _this.inProgressURL = '';
        if (!_this.props.devices) {
            _this.devices = MobilePreviewDevices_1.mobilePreviewDevices;
        }
        else {
            _this.devices = _this.props.devices;
        }
        var deviceType = _this.props.deviceType || DeviceType.Phone;
        _this.defaultPhone = _this.devices.phones[_this.devices.phones.length - 1];
        _this.defaultTablet = _this.devices.tablets[_this.devices.tablets.length - 1];
        _this.state = {
            currentOrientation: deviceType === DeviceType.Phone ?
                DeviceOrientation.Portrait : DeviceOrientation.Landscape,
            currentDevice: deviceType === DeviceType.Phone ? _this.defaultPhone : _this.defaultTablet,
            deviceType: deviceType,
            url: window.location.href + '?Mode=Read'
        };
        _this._sortDevices();
        return _this;
    }
    MobilePreview.prototype.render = function () {
        var _this = this;
        this._sortDevices();
        var mobilePreviewClickStopBar = React.createElement(MobilePreviewClickStopBar_1.default, { currentDevice: this.state.currentDevice, currentOrientation: this.state.currentOrientation, devices: this.state.deviceType === DeviceType.Phone ? this.devices.phones : this.devices.tablets, deviceType: this.state.deviceType, onSelectClickStop: this._onClickstopChangeForm });
        var mobilePreviewHeaderBar = React.createElement(MobilePreviewHeaderBar_1.default, { onChangeURL: this._onChangedURLField, onExit: this.props.onExit, onClickURLSubmit: this._onClickURL, onChangeDeviceType: this._onClickChangeDeviceType });
        var mobilePreviewDeviceView = React.createElement(MobilePreviewDeviceView_1.default, { currentDevice: this.state.currentDevice, currentOrientation: this.state.currentOrientation, deviceType: this.state.deviceType, url: this.state.url });
        var mobilePreviewDimensionInput = React.createElement(MobilePreviewDimensionInput_1.default, { currentDevice: this.state.currentDevice, onChangedX: this._onChangedX, onChangedY: this._onChangedY });
        var mobilePreviewRotate = React.createElement(MobilePreviewRotate_1.default, { onRotate: this._onClickRotate, currentOrientation: this.state.currentOrientation });
        var containerClass = office_ui_fabric_react_1.css(MobilePreview_module_scss_1.default.mobilePreviewContainer, 'ms-Grid');
        return (React.createElement(office_ui_fabric_react_1.FocusTrapZone, null,
            React.createElement("div", { "data-sp-a11y-zone": '1', "data-sp-a11y-alertonfocusin": MobilePreview_resx_1.default.ScreenReaderMobilePreviewEntered, className: containerClass, ref: function (c) { return _this._mainDiv = c; } },
                mobilePreviewHeaderBar,
                mobilePreviewClickStopBar,
                React.createElement("div", { className: MobilePreview_module_scss_1.default.mobilePreviewDeviceContainer },
                    mobilePreviewDimensionInput,
                    mobilePreviewRotate,
                    mobilePreviewDeviceView))));
    };
    MobilePreview.prototype.componentDidMount = function () {
        if (this._mainDiv) {
            this._mainDiv.addEventListener('keydown', this._handleKeyDown, true);
        }
    };
    MobilePreview.prototype._onClickstopChangeForm = function (device) {
        this.setState({
            currentDevice: device,
            currentOrientation: this.state.currentOrientation,
            deviceType: this.state.deviceType,
            url: this.state.url
        });
    };
    MobilePreview.prototype._onClickRotate = function (orientation) {
        this.setState({
            currentDevice: this.state.currentDevice,
            currentOrientation: orientation,
            deviceType: this.state.deviceType,
            url: this.state.url
        });
    };
    MobilePreview.prototype._onClickChangeDeviceType = function (type) {
        this.setState({
            currentDevice: type === DeviceType.Phone ? this.defaultPhone : this.defaultTablet,
            currentOrientation: type === DeviceType.Phone ? DeviceOrientation.Portrait : DeviceOrientation.Landscape,
            deviceType: type,
            url: this.state.url
        });
    };
    MobilePreview.prototype._onChangedX = function (event) {
        var heightTarget = event.target;
        var customDevice = {
            name: 'Custom Device',
            width: +heightTarget.value,
            height: this.state.currentDevice.height
        };
        this.setState({
            currentDevice: customDevice,
            currentOrientation: this.state.currentOrientation,
            deviceType: this.state.deviceType,
            url: this.state.url
        });
    };
    MobilePreview.prototype._onChangedY = function (event) {
        var heightTarget = event.target;
        var customDevice = {
            name: 'Custom Device',
            height: +heightTarget.value,
            width: this.state.currentDevice.width
        };
        this.setState({
            currentDevice: customDevice,
            currentOrientation: this.state.currentOrientation,
            deviceType: this.state.deviceType,
            url: this.state.url
        });
    };
    MobilePreview.prototype._onChangedURLField = function (value) {
        this.inProgressURL = value;
    };
    MobilePreview.prototype._onClickURL = function () {
        if (this.inProgressURL === '' || this.inProgressURL === undefined) {
            return;
        }
        this.setState({
            currentDevice: this.state.currentDevice,
            currentOrientation: this.state.currentOrientation,
            deviceType: this.state.deviceType,
            url: this.inProgressURL
        });
    };
    MobilePreview.prototype._handleKeyDown = function (evt) {
        if (evt.keyCode === 27) {
            this.props.onExit();
        }
    };
    MobilePreview.prototype._sortDevices = function () {
        if (this.state.deviceType === DeviceType.Phone) {
            this.devices.phones.sort(this._comparePhones);
            this.defaultPhone = this.devices.phones[this.devices.phones.length - 1];
        }
        else {
            this.devices.tablets.sort(this._compareTablets);
            this.defaultTablet = this.devices.tablets[this.devices.tablets.length - 1];
        }
    };
    MobilePreview.prototype._comparePhones = function (deviceA, deviceB) {
        var aMeasure = deviceA.width;
        var bMeasure = deviceB.width;
        if (this.state.currentOrientation === DeviceOrientation.Landscape) {
            aMeasure = deviceA.height;
            bMeasure = deviceB.height;
        }
        return bMeasure - aMeasure;
    };
    MobilePreview.prototype._compareTablets = function (deviceA, deviceB) {
        var aMeasure = deviceA.height;
        var bMeasure = deviceB.height;
        if (this.state.currentOrientation === DeviceOrientation.Landscape) {
            aMeasure = deviceA.width;
            bMeasure = deviceB.width;
        }
        return bMeasure - aMeasure;
    };
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], MobilePreview.prototype, "_onClickstopChangeForm", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], MobilePreview.prototype, "_onClickRotate", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], MobilePreview.prototype, "_onClickChangeDeviceType", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], MobilePreview.prototype, "_onChangedX", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], MobilePreview.prototype, "_onChangedY", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], MobilePreview.prototype, "_onChangedURLField", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], MobilePreview.prototype, "_onClickURL", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], MobilePreview.prototype, "_handleKeyDown", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], MobilePreview.prototype, "_sortDevices", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], MobilePreview.prototype, "_comparePhones", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], MobilePreview.prototype, "_compareTablets", null);
    return MobilePreview;
}(React.Component));
exports.default = MobilePreview;


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var strings = ( false)
    ? require('../../resx-strings/en-us.json')
    : __webpack_require__(13);
exports.default = strings['_1JArBGDet5Uj9pJOV/9sFw'];


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DomTraversal = (function () {
    function DomTraversal() {
    }
    DomTraversal.contains = function (parent, child) {
        return (child.compareDocumentPosition(parent) & Node.DOCUMENT_POSITION_CONTAINS) !== 0;
    };
    DomTraversal.getElementPath = function (parent, child, root) {
        root = root || document.body;
        var path = [];
        var pathElem = child;
        while (pathElem) {
            path.unshift(pathElem);
            if (pathElem === parent || pathElem === root || pathElem === document.body) {
                break;
            }
            pathElem = pathElem.parentElement;
        }
        return path[0] === parent ? path : undefined;
    };
    DomTraversal.getLowestCommonAncestor = function (element1, element2, root) {
        root = root || document.body;
        var path1 = DomTraversal.getElementPath(root, element1);
        var path2 = DomTraversal.getElementPath(root, element2);
        if (path1 && path2 && path1[0] === path2[0]) {
            for (var i = 1; i < path1.length; i++) {
                if (path1[i] !== path2[i]) {
                    return path1[i - 1];
                }
            }
        }
        return undefined;
    };
    DomTraversal.getFirstMatchingParent = function (element, matcher, root, includeSelf) {
        if (includeSelf === void 0) { includeSelf = true; }
        root = root || document.body;
        if (!includeSelf && element) {
            element = element.parentElement;
        }
        while (element && element !== document.body) {
            if (matcher(element)) {
                return element;
            }
            if (element === root) {
                break;
            }
            element = element.parentElement;
        }
        return undefined;
    };
    DomTraversal.forEachElementInPath = function (src, dest, callback, root) {
        root = root || document.body;
        var outwardPath;
        var inwardPath;
        if (!src && dest) {
            inwardPath = DomTraversal.getElementPath(root, dest);
        }
        else if (src && !dest) {
            outwardPath = DomTraversal.getElementPath(root, src);
        }
        else if (src && dest) {
            inwardPath = DomTraversal.getElementPath(src, dest);
            if (!inwardPath) {
                outwardPath = DomTraversal.getElementPath(dest, src);
            }
            if (!inwardPath && !outwardPath) {
                var lca = DomTraversal.getLowestCommonAncestor(src, dest, root);
                outwardPath = DomTraversal.getElementPath(lca, src);
                inwardPath = DomTraversal.getElementPath(lca, dest);
            }
        }
        if (inwardPath) {
            inwardPath.shift();
        }
        if (outwardPath) {
            outwardPath.shift();
        }
        outwardPath = outwardPath ? outwardPath.reverse() : undefined;
        if (outwardPath) {
            for (var _i = 0, outwardPath_1 = outwardPath; _i < outwardPath_1.length; _i++) {
                var elem = outwardPath_1[_i];
                callback(elem, true);
            }
        }
        if (inwardPath) {
            for (var _a = 0, inwardPath_1 = inwardPath; _a < inwardPath_1.length; _a++) {
                var elem = inwardPath_1[_a];
                callback(elem, false);
            }
        }
    };
    return DomTraversal;
}());
exports.default = DomTraversal;


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var UriEncoding = (function () {
    function UriEncoding() {
    }
    /////////////////////////////
    // This file is more clean of all unneeded pollutants. It only contains the minimum amount of code required for someone to use the URI class.
    // You should think twice before adding anything else into this file because you will be causing unneeded bloat from someone else.
    /////////////////////////////
    /**
     * This function performs an aggressive unicode URL-encoding.
     * Convert non alphanum character into UTF-8 code string in format %XX%XX%XX.
     *
     * Escape unsafe characters
     *   CTL | SP | <"> | "#" | "%" | "<" | ">" | "'" | "&"
     * in the URL path (before "?", "#")
     * No encoding on query string.
     *
     * @param {string} str - String to encode
     * @param {boolean} bAsUrl - Encode in the same way as the code in unmanaged (Url::UrlEncode) code and
     *                           SP OM (SPHttpUtility.UrlKeyValueEncode and SPHttpUtility.UrlPathEncode).
     * @param {boolean} bForFilterQuery
     * @param {boolean} bForCallback - Only escape the characters after 0x7F to workaround bug O12: 452191
     */
    UriEncoding.encodeURIComponent = function (str, bAsUrl, bForFilterQuery, bForCallback) {
        var strOut = "";
        var strByte;
        var ix = 0;
        var strEscaped = " \"%<>\'&";
        if (!str) {
            return "";
        }
        var len = str.length;
        for (ix = 0; ix < len; ix++) {
            var charCode = str.charCodeAt(ix);
            var curChar = str.charAt(ix);
            if (bAsUrl && (curChar === '#' || curChar === '?')) {
                strOut += str.substr(ix);
                break;
            }
            if (bForFilterQuery && curChar === '&') {
                strOut += curChar;
                continue;
            }
            if (charCode <= 0x7f) {
                if (bForCallback) {
                    strOut += curChar;
                }
                else {
                    if ((charCode >= 97 && charCode <= 122) ||
                        (charCode >= 65 && charCode <= 90) ||
                        (charCode >= 48 && charCode <= 57) ||
                        (bAsUrl && (charCode >= 32 && charCode <= 95) && strEscaped.indexOf(curChar) < 0)) {
                        strOut += curChar;
                    }
                    else if (charCode <= 0x0f) {
                        strOut += "%0" + charCode.toString(16).toUpperCase();
                    }
                    else if (charCode <= 0x7f) {
                        strOut += "%" + charCode.toString(16).toUpperCase();
                    }
                }
            }
            else if (charCode <= 0x07ff) {
                strByte = 0xc0 | (charCode >> 6);
                strOut += "%" + strByte.toString(16).toUpperCase();
                strByte = 0x80 | (charCode & 0x003f);
                strOut += "%" + strByte.toString(16).toUpperCase();
            }
            else if ((charCode & 0xFC00) !== 0xD800) {
                strByte = 0xe0 | (charCode >> 12);
                strOut += "%" + strByte.toString(16).toUpperCase();
                strByte = 0x80 | ((charCode & 0x0fc0) >> 6); // middle 6 bits
                strOut += "%" + strByte.toString(16).toUpperCase();
                strByte = 0x80 | (charCode & 0x003f); // lower 6 bits
                strOut += "%" + strByte.toString(16).toUpperCase();
            }
            else if (ix < str.length - 1) {
                charCode = (charCode & 0x03FF) << 10; // lower 10 bits of first char
                ix++;
                var nextCharCode = str.charCodeAt(ix);
                charCode |= nextCharCode & 0x03FF; // lower 10 bits of second char
                charCode += 0x10000;
                strByte = 0xf0 | (charCode >> 18);
                strOut += "%" + strByte.toString(16).toUpperCase();
                strByte = 0x80 | ((charCode & 0x3f000) >> 12); // upper 6 bits
                strOut += "%" + strByte.toString(16).toUpperCase();
                strByte = 0x80 | ((charCode & 0x0fc0) >> 6); // middle 6 bits
                strOut += "%" + strByte.toString(16).toUpperCase();
                strByte = 0x80 | (charCode & 0x003f); // lower 6 bits
                strOut += "%" + strByte.toString(16).toUpperCase();
            }
        }
        return strOut;
    };
    /**
     * Callbacks do not work if a #bookmark is in the URL. If there is a bookmark then we need to remove it. We also need to
     * deal with the scenario where there is not a bookmark but there is an unencoded # as a part of a name/value after the '?'.
     * This is how things should work here:
     * .../foo.aspx -> .../foo.aspx (unchanged)
     * .../foo.aspx#bookmark -> .../foo.aspx (bookmark is removed)
     * .../foo.aspx#bookmark?name=value -> .../foo.aspx?name=value (bookmark is removed)
     * .../foo.aspx#bookmark?name1=value#extra1&name2=value2 -> .../foo.aspx?name1=value#extra1&name2=value2 (only the bookmark # is removed)
     * .../foo.aspx?name1=value#extra1&name2=value2 -> .../foo.aspx?name1=value#extra1&name2=value2 (unchanged)
     */
    UriEncoding.escapeUrlForCallback = function (str) {
        var iPound = str.indexOf("#");
        var iQues = str.indexOf("?");
        if ((iPound > 0) && ((iQues === -1) || (iPound < iQues))) {
            var strNew = str.substr(0, iPound);
            if (iQues > 0) {
                strNew += str.substr(iQues); // Need to include the '?' along with the "name=value" pairs.
            }
            str = strNew;
        }
        return UriEncoding.encodeURIComponent(str, true, false, true);
    };
    /**
     * SharePoint REST processor expect single quote ' to be escaped to '' in tokens (this applies to %27 too).
     * See example for usage.
     * @example
     * "getFolderByServerRelativeUrl('"+encodeRestUriStringToken("don't know.txt")+"')" should became "getFolderByServerRelativeUrl('don''t know.txt')""
     */
    UriEncoding.encodeRestUriStringToken = function (stringToken) {
        if (stringToken) {
            stringToken = stringToken.replace(/'/g, "''");
            stringToken = stringToken.replace(/%27/g, "%27%27");
            stringToken = UriEncoding.encodeURIComponent(stringToken);
        }
        return stringToken;
    };
    return UriEncoding;
}());
exports.default = UriEncoding;


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var SingleEventBase_1 = __webpack_require__(8);
exports.Engagement = SingleEventBase_1.createSingleEvent({
    eventName: 'Engagement,',
    shortEventName: 'Engagement'
}, {
    name: {
        isKey: true,
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    isIntentional: {
        isPrefixingDisabled: true,
        type: 3 /* Boolean */
    },
    scenario: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    location: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    usageType: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    currentPage: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    previousPage: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    experiment: {
        isPrefixingDisabled: true,
        type: 4 /* Object */
    },
    siteId: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    webId: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    listId: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    groupId: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    docId: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    webTemplateId: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    listTemplateId: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    siteType: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    feature: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    component: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    extraData: 4 /* Object */
});
exports.default = exports.Engagement;


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Use PlatformDetection to evaluate which user experience makes sense for the user's
 * platform. NOTE: This class is NOT COMPLETE! Meaning not all values are parsed out of
 * the user agent. If something is missing that you need, add it and add unit tests.
 * WARNING: Avoid using browser checks when you can use detection techniques for caps checking.
 */
var PlatformDetection = (function () {
    function PlatformDetection(agent) {
        if (!agent) {
            agent = (window && window.navigator && navigator.userAgent) || '';
        }
        var userAgent = agent;
        agent = agent.toLowerCase();
        // We want to figure out which ONE browser the user is most likely on.
        // The order of the checks is important so we're not deceived by (for example)
        // Chrome saying that it's Safari.
        // (Each regular expression captures the version number so we can parse it later.)
        var match;
        var isIE;
        var isIE9;
        var isEdge;
        var isFirefox;
        var isChrome;
        var isSafari;
        function testBrowserVersion(pattern) {
            return match = RegExp(pattern + "(\\d+)([\\d.]*)").exec(agent);
        }
        if (testBrowserVersion('msie ')) {
            // IE <= 10 has something like "MSIE 9" in the user agent.
            // This is also what newer versions do in compatibility mode.
            isIE = true;
            isIE9 = match[1] === '9';
        }
        else if (testBrowserVersion('trident.*rv:')) {
            // This is IE 11. Sample user agent contains:
            // Trident/7.0; other stuff... rv:11.0
            isIE = true;
        }
        else if (testBrowserVersion('edge/')) {
            // This is Edge (it pretends to be Chrome and Safari).
            isEdge = true;
        }
        else if (testBrowserVersion('fxios|firefox/')) {
            isFirefox = true;
        }
        else if (testBrowserVersion('(?:chrome|crios)/')) {
            // Note: lots of random browsers say they're Chrome and will end up in this bucket
            isChrome = true;
        }
        else if (/safari\/(\d+)/.test(agent)) {
            isSafari = true;
            testBrowserVersion('version/');
        }
        // Some other browser categories:
        //   IE Mobile: /iemobile\/(\d+)/
        //   IE Mobile in desktop mode: contains WPDesktop; get version from Trident version
        //   Opera (currently goes into Chrome bucket): /opr\/(\d+)/
        // Parse the captured version number for user's browser.
        var browserMajor = match && parseInt(match[1], 10) || 0;
        var browserMinor = match && match[2] && match[2].substr(1) || '0';
        // Parse device which gives hints about os / mobile state.
        // Windows Phone IE sometimes pretends to be Android, so explicitly check for Windows Phone first.
        // (wpdesktop is used by Windows Phone in desktop mode.)
        var isWinPhone = /windows phone|wpdesktop/.test(agent);
        var deviceMatch = isWinPhone || /ipad|iphone|ipod|android/.exec(agent);
        var device = deviceMatch && deviceMatch[0];
        var isAndroid = device === 'android';
        var isIPad = device === 'ipad';
        var isIOS = !!device && !isAndroid;
        var isMac = !deviceMatch && agent.indexOf('macintosh') > -1;
        var isWindows = !deviceMatch && agent.indexOf('windows nt') > -1;
        // Other operating systems:
        //   Chrome OS: /cros/
        //   Linux: /linux/ (Android can also say it's Linux, so check for Android first)
        // WARNING: Avoid using browser checks when you can use detection techniques for caps checking.
        var input = document.createElement("input");
        input.type = "file";
        var file = window['File'];
        var fileProto = file && file.prototype;
        /**
         * Checks to see if styleSheet exists as a property off of a style element.
         * This will determine if style registration should be done via cssText (<= IE9) or not
         */
        var emptyStyle = document.createElement("style");
        emptyStyle.type = "text/css";
        var osVersionMatch = /[\s\(](os|os x|windows (?:phone|nt)|android) ([\d._]+)/.exec(agent);
        return {
            // Browser identification
            isChrome: !!isChrome,
            isEdge: !!isEdge,
            isFirefox: !!isFirefox,
            isIE: !!isIE,
            isIE9: !!isIE9,
            isSafari: !!isSafari,
            browserName: isIE ? 'IE' : isEdge ? 'Edge' : isChrome ? 'Chrome' : isFirefox ? 'Firefox' : isSafari ? 'Safari' : 'NA',
            browserMajor: browserMajor,
            browserMinor: browserMinor,
            // OS Identification
            isAndroid: isAndroid,
            isIOS: isIOS,
            isMac: isMac,
            isWindows: isWindows,
            isWinPhone: isWinPhone,
            osVersion: osVersionMatch ? osVersionMatch[2] : "NA",
            osName: isWindows ? 'Windows' : isWinPhone ? 'Windows Phone' : isMac ? 'OSX' : isIOS ? 'IOS' : isAndroid ? 'Android' : 'NA',
            isWindows81: !deviceMatch && /windows (?:8\.1|nt 6\.3)/.test(agent),
            isWindows10: !deviceMatch && agent.indexOf('windows nt 10') > -1,
            isWindows7: !deviceMatch && agent.indexOf('windows nt 6.1') > -1,
            // Device identification
            isMobile: !!deviceMatch,
            isIPad: isIPad,
            // Capabilities
            areCSS3TransitionsSupported: !isIE || browserMajor > 9,
            areTouchEventsSupported: 'ontouchstart' in window,
            isFolderUploadSupported: "webkitdirectory" in input,
            isHtml5FileUploadSupported: !!(fileProto && (fileProto.slice || fileProto.mozSlice || fileProto.webkitSlice)),
            isRetinaSupported: window.devicePixelRatio > 1,
            isUnlimitedStyleSheetsSupported: !emptyStyle["styleSheet"],
            isWebDavSupported: 'addBehavior' in document.createElement('div'),
            // Raw user agent
            userAgent: userAgent
        };
    }
    return PlatformDetection;
}());
exports.default = PlatformDetection;


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var PairedEventBase_1 = __webpack_require__(51);
exports.Beacon = PairedEventBase_1.createPairedEvent({
    eventName: 'Beacon,',
    shortEventName: 'Beacon',
    requiresParent: false
}, {
    name: 1 /* String */,
    status: 1 /* String */,
    success: 3 /* Boolean */,
    retryCount: 2 /* Number */,
    totalRetries: 2 /* Number */,
    eventCount: 2 /* Number */
});
exports.default = exports.Beacon;


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DataStoreCachingType_1 = __webpack_require__(32);
// DataStore class is used for transparent caching of data in memory and/or browser storage
// - Parameter defaultCachingType defines whether you want to use browser storage for all operations
// and which type of storage - session or local
// - Parameter dataStoreKey is used to prefix every key in browser storage. Actual key for browser storage
// will be dataStoreKey + key used in setValue method.
// - If DataStore is instantiated with some type of browser caching enabled - it will test if browser storage
// is available and use it. If it's not it will fall back to in-memory cache.
// - If DataStore is instantiated from two different places with same dataStoreKey and some type of
// browser storage caching, the memory storage will be shared as well as browser storage.
var DataStore = (function () {
    function DataStore(dataStoreKey, defaultCachingType) {
        if (defaultCachingType === void 0) { defaultCachingType = DataStoreCachingType_1.default.none; }
        DataStore.init();
        this.dataStoreKey = dataStoreKey;
        this.defaultCachingType = defaultCachingType;
        if (defaultCachingType === DataStoreCachingType_1.default.none) {
            this.dataStore = {};
        }
        else {
            var store = DataStore._dataStore[this.dataStoreKey];
            if (store === undefined) {
                DataStore._dataStore[this.dataStoreKey] = {};
            }
            this.dataStore = DataStore._dataStore[this.dataStoreKey];
        }
    }
    DataStore.hasStorageType = function (storageType) {
        DataStore.init();
        switch (storageType) {
            case DataStoreCachingType_1.default.none: return true;
            case DataStoreCachingType_1.default.sharedMemory: return true;
            case DataStoreCachingType_1.default.session: return !!DataStore._sessionStorage;
            case DataStoreCachingType_1.default.local: return !!DataStore._localStorage;
        }
        return false;
    };
    DataStore.init = function () {
        if (DataStore._initialized) {
            return;
        }
        // Need a try/catch since window.localStorage can throw.
        try {
            if ('localStorage' in window && window.localStorage && DataStore.testStorage(window.localStorage)) {
                DataStore._localStorage = window.localStorage;
            }
        }
        catch (exUsingLocalStorage) {
            // do nothing
        }
        try {
            if ('sessionStorage' in window && window.sessionStorage && DataStore.testStorage(window.sessionStorage)) {
                DataStore._sessionStorage = window.sessionStorage;
            }
        }
        catch (exUsingSessionStorage) {
            // do nothing
        }
        // Fallback logic
        if (DataStore._localStorage == null) {
            DataStore._localStorage = DataStore._sessionStorage;
        }
        DataStore._initialized = true;
    };
    /** Need to check whether the value in localStorage is of the correct type.
     * In Private Browsing in Safari, for example, localStorage is accessible,
     * but all of the non-built-in properties return undefined, and setting
     * such a property causes an exception.
     */
    DataStore.testStorage = function (storage) {
        var _testKey = "BrowserStorageTest";
        var _testValue = "1";
        var result = false;
        try {
            storage.setItem(_testKey, _testValue);
            if (storage.getItem(_testKey) === _testValue) {
                result = true;
            }
            storage.removeItem(_testKey);
        }
        catch (e) { }
        return result;
    };
    DataStore.prototype.setValue = function (key, value, cachingTypeOverride, normalizeKey) {
        if (normalizeKey === void 0) { normalizeKey = true; }
        key = normalizeKey ? this.normalizeKey(key) : key;
        this.dataStore[key] = value;
        var storage = this.getStorage(cachingTypeOverride);
        if (storage) {
            try {
                var objectsFound = [];
                var s = JSON.stringify(value, (function (key, value) {
                    if (typeof value === 'object' && value !== null) {
                        if (objectsFound.indexOf(value) !== -1) {
                            // discard the key if circular dependency was found
                            return;
                        }
                        // Otherwise store value in the cache
                        objectsFound.push(value);
                    }
                    return value;
                }));
                // empty cache
                objectsFound = null;
                storage.setItem(this.dataStoreKey + key, s);
            }
            catch (e) {
                // do nothing
            }
        }
    };
    DataStore.prototype.getValue = function (key, cachingTypeOverride, normalizeKey) {
        if (normalizeKey === void 0) { normalizeKey = true; }
        key = normalizeKey ? this.normalizeKey(key) : key;
        var value = this.dataStore[key];
        var storage = this.getStorage(cachingTypeOverride);
        if (value === undefined && storage) {
            var s = storage.getItem(this.dataStoreKey + key);
            if (s) {
                try {
                    value = JSON.parse(s);
                    this.dataStore[key] = value;
                }
                catch (e) {
                    value = undefined;
                }
            }
        }
        return value;
    };
    DataStore.prototype.remove = function (key, cachingTypeOverride, normalizeKey) {
        if (normalizeKey === void 0) { normalizeKey = true; }
        key = normalizeKey ? this.normalizeKey(key) : key;
        var storage = this.getStorage(cachingTypeOverride);
        if (storage) {
            storage.removeItem(this.dataStoreKey + key);
        }
        delete this.dataStore[key];
    };
    DataStore.prototype.getStorage = function (cachingTypeOverride) {
        var cachingType = cachingTypeOverride ? cachingTypeOverride : this.defaultCachingType;
        switch (cachingType) {
            case DataStoreCachingType_1.default.none:
                return null;
            case DataStoreCachingType_1.default.sharedMemory:
                return null;
            case DataStoreCachingType_1.default.session:
                return DataStore._sessionStorage;
            case DataStoreCachingType_1.default.local:
                return DataStore._localStorage;
        }
        return null;
    };
    DataStore.prototype.normalizeKey = function (key) {
        return key && key.toLowerCase() || '';
    };
    DataStore._sessionStorage = null;
    DataStore._localStorage = null;
    DataStore._dataStore = {};
    DataStore._initialized = false;
    return DataStore;
}());
exports.default = DataStore;


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(2);
var sp_core_library_1 = __webpack_require__(5);
var sp_canvas_toolbox_1 = __webpack_require__(102);
var CanvasSection_1 = __webpack_require__(111);
__webpack_require__(120);
var CanvasControlType_1 = __webpack_require__(7);
var EmbeddedToolbox_1 = __webpack_require__(296);
var CanvasLayout_1 = __webpack_require__(21);
var CanvasDragZoneConstants_1 = __webpack_require__(27);
var FULL_WIDTH_ITEM_IDS = [
    'd1d91016-032f-456d-98a4-721247c305e8',
    'c4bd7b2f-7b6e-4599-8485-16504575f590' 
];
var CanvasFullWidthSection = (function (_super) {
    tslib_1.__extends(CanvasFullWidthSection, _super);
    function CanvasFullWidthSection(props, context) {
        var _this = _super.call(this, props, context) || this;
        var store = _this.context.store;
        _this._toolboxProps = {
            isLoading: true,
            isOpen: true,
            controlPosition: CanvasLayout_1.default.undefinedControlPosition,
            onItemClick: store.handleToolboxItemClick,
            onlyLayouts: false,
            toolboxItems: [],
            verticalPosition: undefined
        };
        return _this;
    }
    Object.defineProperty(CanvasFullWidthSection, "isMigratingEmbedToolboxKillSwitchActivated", {
        get: function () {
            return sp_core_library_1._SPKillSwitch.isActivated(sp_core_library_1.Guid.parse('4aed027f-006b-4bd4-9bb1-d88eb10c5474'), '9/15/2017', 'MigrateEmbedToolboxToSPCanvasToolboxProject');
        },
        enumerable: true,
        configurable: true
    });
    CanvasFullWidthSection.isFullWidth = function (position) {
        return position && position.sectionFactor === 0;
    };
    CanvasFullWidthSection.isFullWidthControl = function (control) {
        if (control && control.controlType === CanvasControlType_1.default.WebPartZone) {
            var webPartProps = control;
            return (webPartProps.webPartManifest && webPartProps.webPartManifest.supportsFullBleed) ||
                FULL_WIDTH_ITEM_IDS.indexOf(webPartProps.webPartId) !== -1;
        }
        return false;
    };
    CanvasFullWidthSection.setFullWidthWebPartProperty = function (control, value) {
        var webPartProps = control;
        if (webPartProps.webPartData) {
            webPartProps.webPartData.properties.isFullWidth = value;
        }
    };
    CanvasFullWidthSection.prototype.componentDidMount = function () {
        var _a = this.props, zoneIndex = _a.zoneIndex, section = _a.section;
        var firstControlLayout = {
            zoneIndex: zoneIndex,
            sectionIndex: section.index,
            controlIndex: this._firstControlIdx,
            sectionFactor: section.factor
        };
        this._openFullWidthToolbox(firstControlLayout);
    };
    CanvasFullWidthSection.prototype._addToolBoxHint = function (nextCtrlPosition) {
    };
    CanvasFullWidthSection.prototype._getLayoutSectionClassName = function (isReadMode, isSectionSelected) {
        var layoutSectionClassName = _super.prototype._getLayoutSectionClassName.call(this, isReadMode, isSectionSelected);
        layoutSectionClassName +=
            office_ui_fabric_react_1.css({
                ' CanvasSectionFullWidth--read': isReadMode,
                ' CanvasSection--fullWidth': this.props.section.controls.length !== 0
            });
        return layoutSectionClassName;
    };
    CanvasFullWidthSection.prototype._shouldCenterAlignHint = function () {
        var store = this.context.store;
        return store.shouldCenterAlign;
    };
    CanvasFullWidthSection.prototype._getContentSelectionMechanism = function (firstControlLayout) {
        var store = this.context.store;
        return this.props.section.controls.length === 0 &&
            store.displayMode === sp_core_library_1.DisplayMode.Edit &&
            (CanvasFullWidthSection.isMigratingEmbedToolboxKillSwitchActivated
                ? React.createElement(EmbeddedToolbox_1.default, tslib_1.__assign({}, this._toolboxProps))
                : React.createElement(sp_canvas_toolbox_1.ToolboxFullBleed, { toolboxItems: this._toolboxProps.toolboxItems, controlPosition: this._toolboxProps.controlPosition, clickItem: function (control) { return store.addControlToCanvas(control, true ); } }));
    };
    Object.defineProperty(CanvasFullWidthSection.prototype, "_dragDisallowedAreaTag", {
        get: function () {
            return CanvasDragZoneConstants_1.default.fullWidthSectionTag;
        },
        enumerable: true,
        configurable: true
    });
    CanvasFullWidthSection.prototype._openFullWidthToolbox = function (position) {
        var store = this.context.store;
        store.fillToolboxItems(true, this._toolboxProps);
        this._toolboxProps.isOpen = true;
        this._toolboxProps.controlPosition = position;
    };
    return CanvasFullWidthSection;
}(CanvasSection_1.default));
exports.default = CanvasFullWidthSection;


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var KeyCodes;
(function (KeyCodes) {
    KeyCodes[KeyCodes["Enter"] = 13] = "Enter";
    KeyCodes[KeyCodes["Escape"] = 27] = "Escape";
    KeyCodes[KeyCodes["Tab"] = 9] = "Tab";
    KeyCodes[KeyCodes["F10"] = 121] = "F10";
    KeyCodes[KeyCodes["P"] = 80] = "P";
})(KeyCodes = exports.KeyCodes || (exports.KeyCodes = {}));
exports.canvasA11yClasses = {
    toolboxHint: 'ToolboxHint'
};
function getControlZoneA11yId(controlId) {
    return "ControlZone_" + controlId;
}
exports.getControlZoneA11yId = getControlZoneA11yId;
function getCanvasZoneA11yId(zoneIndex) {
    return "CanvasZone_" + zoneIndex;
}
exports.getCanvasZoneA11yId = getCanvasZoneA11yId;


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_core_library_1 = __webpack_require__(5);
var KillSwitches = (function () {
    function KillSwitches() {
    }
    Object.defineProperty(KillSwitches, "isExcludeSitesRequiringGroupsKillSwitchActivated", {
        get: function () {
            return sp_core_library_1._SPKillSwitch.isActivated(sp_core_library_1.Guid.parse('134039df-ee65-4522-b72f-1dedb9a0a3db'), '09/01/2017', 'Exclude webparts requiring groups from non-group site toolbox');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KillSwitches, "isExcludeOnPremWebPartKillSwitchActivated", {
        get: function () {
            return sp_core_library_1._SPKillSwitch.isActivated(sp_core_library_1.Guid.parse('FD189E2B-B657-40DE-B89F-F900503CBFAF'), '11/20/2017', 'Exclude webparts at onprem from toolbox');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KillSwitches, "isExcludeOpenIdConnectPartsKillSwitchActivated", {
        get: function () {
            return sp_core_library_1._SPKillSwitch.isActivated(sp_core_library_1.Guid.parse('0e62afbf-b5ff-4da3-beb9-35475c703a70'), '10/13/2017', 'Exclude webparts requiring OpenID Connect from toolbox');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KillSwitches, "isScrollAnimationsKillSwitchActivated", {
        get: function () {
            return sp_core_library_1._SPKillSwitch.isActivated(sp_core_library_1.Guid.parse('B73BC029-2F91-4FA2-9973-45065C72D1E7'), '9/19/2017', 'ScrollRevealAnimation');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KillSwitches, "isXssFixApplied", {
        get: function () {
            return sp_core_library_1._SPKillSwitch.isActivated(sp_core_library_1.Guid.parse('508d7051-0835-4bdc-a115-0ec17500fb71'), '10/10/2017', 'XSS fix applied');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KillSwitches, "isCanvasZoneContainerKillswitchEnabled", {
        get: function () {
            return sp_core_library_1._SPKillSwitch.isActivated(sp_core_library_1.Guid.parse('3f4504c2-c421-4d72-8481-944194ea0e68'), '10/23/2017', 'Parent container for WexCanvasHintDiscoverability');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KillSwitches, "isClientEncodeSearchablePlainTextKillSwitchActivated", {
        get: function () {
            return sp_core_library_1._SPKillSwitch.isActivated(sp_core_library_1.Guid.parse('37658a49-2bb4-4997-9268-91c89ee24a91'), '11/21/2017', 'ClientEncodeSearchablePlainText');
        },
        enumerable: true,
        configurable: true
    });
    return KillSwitches;
}());
exports.default = KillSwitches;


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var animation_1 = __webpack_require__(200);
exports.animation = animation_1.animation;
var animation_module_scss_1 = __webpack_require__(103);
exports.animationStyles = animation_module_scss_1.default;


/***/ }),
/* 47 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_47__;

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var office_ui_fabric_react_1 = __webpack_require__(2);
var sp_telemetry_1 = __webpack_require__(6);
var sp_pagepicker_1 = __webpack_require__(113);
var sp_core_library_1 = __webpack_require__(5);
var sp_safehtml_1 = __webpack_require__(248);
var CKLoader_1 = __webpack_require__(251);
__webpack_require__(259);
var ImageUtilities_1 = __webpack_require__(262);
var CanvasStore_1 = __webpack_require__(15);
var FontSizeInPixels;
(function (FontSizeInPixels) {
    FontSizeInPixels["Small"] = "12";
    FontSizeInPixels["Medium"] = "14";
    FontSizeInPixels["MediumPlus"] = "15";
    FontSizeInPixels["Large"] = "17";
    FontSizeInPixels["XLarge"] = "21";
    FontSizeInPixels["XLargePlus"] = "24";
    FontSizeInPixels["XxLarge"] = "28";
    FontSizeInPixels["XxxLarge"] = "32";
    FontSizeInPixels["XxLargePlus"] = "36";
    FontSizeInPixels["Super"] = "42";
})(FontSizeInPixels = exports.FontSizeInPixels || (exports.FontSizeInPixels = {}));
var CKTextEditor = (function () {
    function CKTextEditor(config, currentHTML, editorElement, selectionChangeCallback, textChangeCallback, startUpFocus, onReadyCallback, onImagePasteCallBack, onPasteCallback, onContextMenuCallBack) {
        this._config = config;
        this._editorElement = editorElement;
        this._handleSelectionChange = selectionChangeCallback;
        this._handleTextChange = textChangeCallback;
        this._onReadyCallback = onReadyCallback;
        this._startupFocus = startUpFocus;
        this._onImagePasteCallBack = onImagePasteCallBack;
        this._onPasteCallback = onPasteCallback;
        this._onContextMenuCallBack = onContextMenuCallBack;
        this._extraPlugins = 'justify,tableresize';
        if (CanvasStore_1.default.isRTESettingsFlightEnabled) {
            this._extraPlugins += ',indentblock';
        }
        this._initialize(currentHTML);
        this._blockStyles =
            this._config.supportedFormatsArray.filter((function (format) { return format.isBlockStyle; }));
        this._async = new office_ui_fabric_react_1.Async(this);
    }
    CKTextEditor.preloadEditor = function (config) {
        try {
            CKTextEditor.moduleLoader.loadModule(config.editorSource);
        }
        catch (error) {
            sp_telemetry_1._TraceLogger.logError(CKTextEditor.logSource, error);
        }
    };
    Object.defineProperty(CKTextEditor, "isSanitizePastedHTMLKillSwitchActivated", {
        get: function () {
            return sp_core_library_1._SPKillSwitch.isActivated(sp_core_library_1.Guid.parse('7253307f-d859-4967-8474-e31f66335008'), '10/16/2017', 'SanitizePastedHTML');
        },
        enumerable: true,
        configurable: true
    });
    CKTextEditor.createNewEditor = function (config, currentHTML, editorElement, selectionChangeCallback, textChangeCallback, startupFocus, onImagePasteCallBack, onPasteCallback, onContextMenuCallBack) {
        return new Promise(function (resolve) {
            CKTextEditor.moduleLoader.loadModule(config.editorSource).then((function () {
                var editor = new CKTextEditor(config, currentHTML, editorElement, selectionChangeCallback, textChangeCallback, startupFocus, function () { resolve(editor); }, onImagePasteCallBack, onPasteCallback, onContextMenuCallBack);
            })).catch((function (error) {
                sp_telemetry_1._TraceLogger.logError(CKTextEditor.logSource, error);
            }));
        });
    };
    CKTextEditor._getSelectedLink = function (editor) {
        var selection = editor.getSelection();
        var selectedElement = selection.getSelectedElement();
        if (!selectedElement || !selectedElement.is('a')) {
            var ranges = selection.getRanges();
            if (ranges && ranges.length) {
                ranges[0].shrink(CKEDITOR.SHRINK_TEXT);
                selectedElement = editor.elementPath(ranges[0].getCommonAncestor()).contains('a', true);
            }
        }
        return selectedElement;
    };
    CKTextEditor._getSelectedText = function (editor) {
        var sel = editor.getSelection();
        if (sel) {
            var startElement = sel.getStartElement();
            if (startElement) {
                var startElementValue = startElement.$;
                if (startElement && startElement.getName() === 'a') {
                    return startElementValue.innerText;
                }
            }
            return sel.getSelectedText();
        }
    };
    CKTextEditor.prototype.clearFormatting = function (start, end) {
        this.format(start, end, { removeFormat: true });
        var sel = this._editor.getSelection();
        if (sel) {
            var ckRange = sel.getRanges();
            var range = { start: 0, end: 0 };
            if (ckRange && ckRange.length > 0) {
                range.start = ckRange[0].startOffset;
                range.end = ckRange[0].endOffset;
                range.text = CKTextEditor._getSelectedText(this._editor);
                var formatsToClear = {};
                for (var _i = 0, _a = this._blockStyles; _i < _a.length; _i++) {
                    var format = _a[_i];
                    formatsToClear[format.editorKey] = false;
                }
                this.format(start, end, formatsToClear, true);
            }
        }
    };
    CKTextEditor.prototype.destroy = function () {
        this._editorElement.removeEventListener('keyup', this._fakeSelectionChange);
        this._editorElement.removeEventListener('mouseup', this._fakeSelectionChange);
        var data = this._editor.getData();
        this._editor.destroy();
        return data;
    };
    CKTextEditor.prototype.focus = function () {
        this._editor.focus();
    };
    CKTextEditor.prototype.getSelectedLink = function () {
        var selectedLink = CKTextEditor._getSelectedLink(this._editor);
        if (selectedLink && selectedLink.$) {
            return selectedLink.$.getAttribute('href');
        }
        else {
            return '';
        }
    };
    CKTextEditor.prototype.getSelectedLinkAttribute = function (attribute) {
        var selectedLink = CKTextEditor._getSelectedLink(this._editor);
        if (selectedLink && selectedLink.$) {
            return selectedLink.$.getAttribute(attribute);
        }
        else {
            return null; 
        }
    };
    Object.defineProperty(CKTextEditor.prototype, "isTableSelected", {
        get: function () {
            var sel = this._editor.getSelection();
            var startElement = sel && sel.getStartElement();
            if (startElement && startElement.getAscendant('table')) {
                return true;
            }
            return false;
        },
        enumerable: true,
        configurable: true
    });
    CKTextEditor.prototype.format = function (start, end, formats, applyAllFormatsToLine) {
        for (var formatKey in formats) {
            var command = this._editor.getCommand(formatKey);
            if (command) {
                if (formats[formatKey] !== (command.state === CKEDITOR.TRISTATE_ON)) {
                    if (formatKey === 'link') {
                        if (formats[formatKey] === false) {
                            this._editor.execCommand(formatKey, formats[formatKey]);
                        }
                        else {
                            this._editor.execCommand(formatKey, {
                                linkValue: formats[formatKey],
                                linkText: formats[CKTextEditor._TEXT_FORMAT_KEY],
                                shouldOpenInNewTab: formats[CKTextEditor._TAB_FORMAT_KEY]
                            });
                        }
                    }
                    else {
                        this._editor.execCommand(formatKey, formats[formatKey]);
                    }
                }
            }
        }
    };
    CKTextEditor.prototype.formatTable = function (format, target) {
        var command = this._editor.getCommand(format);
        var sel = this._editor.getSelection();
        var temp = CKEDITOR.dom.element.get(target);
        if (sel) {
            sel.selectElement(temp);
            this._editor.selectionChange(true);
            if (!(sel.getStartElement() && sel.getStartElement().getAscendant('table'))) {
                return;
            }
        }
        if (command) {
            command.enable();
            command.exec(format);
        }
    };
    CKTextEditor.prototype.getBounds = function (position) {
        var left = 0, top = 0;
        var selection = window.getSelection();
        if (selection && selection.rangeCount > 0) {
            var range = selection.getRangeAt(0);
            var selectionRect = range && range.getBoundingClientRect();
            if (selectionRect) {
                var editorRect = this._editorElement.getBoundingClientRect();
                left = selectionRect.left - editorRect.left;
                top = selectionRect.top - editorRect.top;
            }
        }
        return { left: left, top: top };
    };
    CKTextEditor.prototype.getFormatValue = function (start, end, format) {
        if (format.key === 'link') {
            var selectedLink = CKTextEditor._getSelectedLink(this._editor);
            return selectedLink ? selectedLink.getAttribute('href') : false;
        }
        return false;
    };
    CKTextEditor.prototype.getSelection = function () {
        var sel = this._editor.getSelection();
        if (sel) {
            var ranges = sel ? sel.getRanges() : undefined;
            if (ranges && ranges.length) {
                if (this._editor.element.contains(ranges[0].getCommonAncestor())) {
                    this._lastSelectedRanges = ranges;
                }
                return {
                    start: ranges[0].startOffset,
                    end: ranges[0].endOffset,
                    text: CKTextEditor._getSelectedText(this._editor)
                };
            }
        }
        return undefined;
    };
    CKTextEditor.prototype.getText = function (range) {
        return this._editor.getData();
    };
    CKTextEditor.prototype.getHTML = function () {
        return this._editor.getData();
    };
    CKTextEditor.prototype.getEditorType = function () {
        return 'CKEditor';
    };
    CKTextEditor.prototype.isFormatAppliedToRange = function (start, end, format) {
        var command = this._editor.getCommand(format.editorKey);
        return command && (command.state === CKEDITOR.TRISTATE_ON);
    };
    CKTextEditor.prototype.onReady = function (callback) {
        this._onReadyCallback = callback;
    };
    CKTextEditor.prototype.setSelection = function (range) {
        this.focus();
        var sel = this._editor.getSelection();
        if (sel) {
            if (this._lastSelectedRanges) {
                sel.selectRanges(this._lastSelectedRanges);
            }
            else {
                var ckRange = sel.getRanges();
                if (ckRange && ckRange.length > 0 && range.start !== -1) {
                    ckRange[0].startOffset = range.start;
                    ckRange[0].endOffset = range.end;
                    try {
                        sel.selectRanges(ckRange);
                    }
                    catch (error) {
                        sp_telemetry_1._TraceLogger.logError(CKTextEditor.logSource, error);
                    }
                }
            }
        }
    };
    Object.defineProperty(CKTextEditor.prototype, "appliedFontSize", {
        get: function () {
            var fontSizeStr = this._getCssPropertyValue('font-size');
            if (fontSizeStr) {
                var fontArr = fontSizeStr && fontSizeStr.split('px');
                if (fontArr) {
                    return fontArr[0];
                }
            }
            return undefined;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CKTextEditor.prototype, "appliedFontColor", {
        get: function () {
            return this._appliedPropertyValue('color');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CKTextEditor.prototype, "noColor", {
        get: function () {
            return 'noColor';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CKTextEditor.prototype, "appliedHighlightColor", {
        get: function () {
            return this._appliedPropertyValue('background-color');
        },
        enumerable: true,
        configurable: true
    });
    CKTextEditor.prototype._initialize = function (currentHTML) {
        this._editorElement.contentEditable = 'true';
        var pluginsToBeRemoved = 'menubutton,scayt,liststyle,magicline,link,tableselection';
        var config = {
            allowedContent: 'strong b em i u h2 h3 h4 blockquote ul ol li a[href, target, data-interception];\
        p h2 h3 h4 li(ql-align-*,ql-indent-*,quote-true); *{text-align}',
            on: {
                change: this._handleTextChange,
                selectionChange: this._handleSelectionChangeConvert
            },
            removePlugins: pluginsToBeRemoved,
            extraPlugins: 'justify',
            removeButtons: '',
            stylesSet: false,
            toolbar: [],
            startupFocus: this._startupFocus
        };
        if (CanvasStore_1.default.isRTESettingsFlightEnabled) {
            config.allowedContent = {
                'strong b em i u s sub sup': true,
                'p h2 h3 h4 blockquote ul ol li': {
                    styles: 'text-align, margin-left, margin-right'
                },
                'a': {
                    attributes: 'href, target, data-interception'
                },
                'span': {
                    classes: 'fontSizeSmall, fontSizeMedium, fontSizeMediumPlus, fontSizeLarge, fontSizeXLarge,\
          fontSizeXlargePlus, fontSizeXxLarge, fontSizeXxxLarge, fontSizeXxLargePlus, fontSizeSuper,\
          fontColorRedDark, fontColorRed, fontColorYellow, fontColorYellowLight, fontColorGreenLight,\
          fontColorGreen, fontColorBlueLight, fontColorBlue, fontColorBlueDark, fontColorPurple,\
          fontColorNeutralDark, fontColorNeutralPrimary, fontColorNeutralPrimaryAlt, fontColorNeutralSecondary,\
          fontColorNeutralTertiary, fontColorThemeDarker, fontColorThemeDark,\
          fontColorThemeDarkAlt, fontColorThemePrimary, fontColorThemeSecondary,\
          highlightColorYellow, highlightColorGreen, highlightColorAqua, highlightColorMagenta,\
          highlightColorBlue, highlightColorRed, highlightColorDarkBlue, highlightColorTeal,\
          highlightColorDarkGreen, highlightColorPurple, highlightColorMaroon, highlightColorGold,\
          highlightColorDarkGrey, highlightColorGrey, highlightColorBlack'
                }
            };
        }
        var allowedStyles = 'width,border,line-height,margin-bottom,margin-top;\
          ,margin-left,margin-right,font-size,border-bottom,border-left;\
          border-top,border-right,text-align';
        config.extraAllowedContent = {
            'tbody thead tfoot tr th td caption col colgroup footer': true,
            'table': {
                attributes: 'width,border,cellpadding,cellspacing,align',
                styles: '*'
            },
            'tr': {
                attributes: 'height,rowspan,colspan,align',
                styles: allowedStyles
            },
            'td': {
                attributes: 'width,colspan,rowspan,align,valign',
                styles: allowedStyles
            },
            'th': {
                attributes: 'align,valign',
                styles: allowedStyles
            },
            'td p': {
                attributes: 'align',
                styles: 'text-align'
            },
            'th p': {
                attributes: 'align',
                styles: 'text-align'
            },
            'div': {
                classes: 'canvasRteResponsiveTable'
            }
        };
        config.keystrokes = [
            [CKEDITOR.CTRL + CKEDITOR.SHIFT + 68, 'rowDelete'],
            [CKEDITOR.CTRL + CKEDITOR.SHIFT + 65, 'rowInsertBefore'],
            [CKEDITOR.CTRL + CKEDITOR.SHIFT + 90, 'rowInsertAfter'] 
        ];
        config.enableContextMenu = false;
        config.disallowedContent = 'script; *[on*]';
        config.extraPlugins = this._extraPlugins;
        config.disableNativeSpellChecker = false;
        this._editor = CKEDITOR.inline(this._editorElement, config);
        this._editor.setData(currentHTML);
        this._addCustomToolbarCommands();
    };
    CKTextEditor.prototype._addCustomToolbarCommands = function () {
        var _this = this;
        this._editor.addCommand('unlink', {
            exec: function (editor) {
                var linkStyle = new CKEDITOR.style({
                    element: 'a',
                    type: CKEDITOR.STYLE_INLINE,
                    alwaysRemoveElement: 1
                });
                editor.removeStyle(linkStyle);
                return true;
            }
        });
        this._editor.addCommand('link', {
            contextSensitive: true,
            exec: function (editor, data) {
                if (!data || (!data.linkText && !data.linkValue)) {
                    editor.execCommand('unlink');
                }
                else {
                    var elem = CKTextEditor._getSelectedLink(editor);
                    if (elem) {
                        elem.setAttribute('href', data.linkValue);
                        elem.setAttribute('data-cke-saved-href', data.linkValue);
                        elem.setText(data.linkText);
                        elem.setAttribute('target', '_blank');
                        if (sp_pagepicker_1.PagePicker.isEnabled) {
                            elem.setAttribute('data-interception', data.shouldOpenInNewTab ? 'off' : 'on');
                            elem.setAttribute('target', data.shouldOpenInNewTab ? '_blank' : '_self');
                        }
                    }
                    else {
                        var shouldOpenInNewTabProps = {};
                        if (sp_pagepicker_1.PagePicker.isEnabled) {
                            shouldOpenInNewTabProps = {
                                'target': data.shouldOpenInNewTab ? '_blank' : '_self',
                                'data-interception': data.shouldOpenInNewTab ? 'off' : 'on'
                            };
                        }
                        var linkStyle = new CKEDITOR.style({
                            name: 'link',
                            element: 'a',
                            type: CKEDITOR.STYLE_INLINE,
                            attributes: tslib_1.__assign({ 'href': data.linkValue, 'target': '_blank' }, shouldOpenInNewTabProps)
                        });
                        if (CKTextEditor._getSelectedText(editor) !== data.linkText || data.linkText === '') {
                            var element = new CKEDITOR.dom.element('a');
                            if (data.linkText && data.linkText !== '') {
                                element.setText(data.linkText);
                            }
                            else {
                                element.setText(data.linkValue);
                            }
                            element.setAttributes(tslib_1.__assign({ 'href': data.linkValue, 'target': '_blank' }, shouldOpenInNewTabProps));
                            editor.insertElement(element);
                        }
                        else {
                            editor.applyStyle(linkStyle);
                        }
                    }
                }
                return true;
            },
            refresh: function (editor, path) {
                var element = path.lastElement && path.lastElement.getAscendant('a', true);
                if (element && element.getName() === 'a' && element.getAttribute('href') && element.getChildCount()) {
                    this.setState(CKEDITOR.TRISTATE_ON);
                }
                else {
                    this.setState(CKEDITOR.TRISTATE_OFF);
                }
            }
        });
        this._editor.addCommand('fontSize', {
            contextSensitive: true,
            exec: function (editor, size) {
                var mappedValue = CKTextEditor._fontSizeMap.get(size);
                var sizeStyle = new CKEDITOR.style({
                    element: 'span',
                    attributes: { 'class': "fontSize" + mappedValue },
                    overrides: [{ element: 'span', attributes: { 'class': /^fontSize/ } }]
                });
                editor.applyStyle(sizeStyle);
                return true;
            }
        });
        this._editor.addCommand('customTable', {
            exec: function (editor, tableData) {
                var outerDiv = new CKEDITOR.dom.element('div');
                outerDiv.addClass('canvasRteResponsiveTable');
                var table = new CKEDITOR.dom.element('table');
                var tbody = new CKEDITOR.dom.element('tbody');
                var tr = new CKEDITOR.dom.element('tr');
                for (var j = 0; j < tableData.columns; ++j) {
                    var td = new CKEDITOR.dom.element('td');
                    td.appendTo(tr);
                }
                tr.appendTo(tbody);
                for (var i = 1; i < tableData.rows; ++i) {
                    var trCopy = tr.clone(true, true);
                    trCopy.appendTo(tbody);
                }
                tbody.appendTo(table);
                table.appendTo(outerDiv);
                editor.insertElement(outerDiv);
                return true;
            }
        });
        this._editor.addCommand('fontColor', {
            contextSensitive: true,
            exec: function (editor, fontColor) {
                if (fontColor === _this.noColor) {
                    editor.execCommand('removeFontColor');
                }
                else {
                    var colorStyle = new CKEDITOR.style({
                        element: 'span',
                        attributes: { 'class': "fontColor" + fontColor },
                        overrides: [{ element: 'span', attributes: { 'class': /^fontColor/ } }]
                    });
                    editor.applyStyle(colorStyle);
                }
                return true;
            },
            refresh: function (editor, path) {
                var element = path.lastElement;
                if (element.getComputedStyle('color')) {
                    editor.getCommand('fontColor').setState(CKEDITOR.TRISTATE_ON);
                }
                else {
                    editor.getCommand('fontColor').setState(CKEDITOR.TRISTATE_OFF);
                }
            }
        });
        this._editor.addCommand('removeFontColor', {
            exec: function (editor) {
                var colorStyle = new CKEDITOR.style({
                    element: 'span',
                    attributes: { 'class': /^fontColor/ },
                    overrides: [{ element: 'span', attributes: { 'class': /^fontColor/ } }]
                });
                editor.removeStyle(colorStyle);
                return true;
            }
        });
        this._editor.addCommand('highlightColor', {
            contextSensitive: true,
            exec: function (editor, color) {
                if (color === _this.noColor) {
                    editor.execCommand('removeHighlightColor');
                }
                else {
                    var colorStyle = new CKEDITOR.style({
                        element: 'span',
                        attributes: { 'class': "highlightColor" + color },
                        overrides: [{ element: 'span', attributes: { 'class': /^highlightColor/ } }]
                    });
                    editor.applyStyle(colorStyle);
                    return true;
                }
            }
        });
        this._editor.addCommand('removeHighlightColor', {
            contextSensitive: true,
            exec: function (editor, color) {
                var colorStyle = new CKEDITOR.style({
                    element: 'span',
                    attributes: { 'class': /^highlightColor/ },
                    overrides: [{ element: 'span', attributes: { 'class': /^highlightColor/ } }]
                });
                editor.removeStyle(colorStyle);
                return true;
            }
        });
        this._editor.addCommand('heading2', this._getHeadingCommandDefinition('h2'));
        this._editor.addCommand('heading3', this._getHeadingCommandDefinition('h3'));
        this._editor.addCommand('heading4', this._getHeadingCommandDefinition('h4'));
        this._editor.on('blur', this._handleSelectionChangeConvert);
        this._editor.on('loaded', this._handlePluginsLoaded);
        this._editor.on('instanceReady', this._handleInstanceReady);
        this._editor.on('paste', this._handlePaste);
        this._editor.on('beforePaste', this._onBeforePaste);
        this._editor.on('afterPaste', this._handleAfterPaste);
        var self = this;
        this._editor.on('contentDom', (function () {
            this.editable().attachListener(this.editable(), 'contextmenu', (function (evt) {
                var target = evt.data.getTarget() && evt.data.getTarget().$;
                if (target) {
                    var tagName = target.tagName;
                    var parentTagName = target.parentElement && target.parentElement.tagName;
                    if (tagName === 'TD' || parentTagName === 'TD') {
                        evt.stop();
                        evt.data.preventDefault();
                        self._onContextMenuCallBack(true, target);
                    }
                }
            }), undefined, undefined, 0);
        }));
    };
    CKTextEditor.prototype._handleSelectionChangeConvert = function (evt) {
        var sel = this._editor.getSelection();
        var newRange = undefined;
        var forceUpdate = false;
        if (evt) {
            switch (evt.name) {
                case 'selectionChange':
                    sel = evt.data.selection;
                    break;
                case 'blur':
                    sel = undefined;
                    break;
            }
            var ranges = sel ? sel.getRanges() : undefined;
            newRange = ranges && ranges.length ? {
                start: ranges[0].startOffset,
                end: ranges[0].endOffset,
                text: CKTextEditor._getSelectedText(this._editor)
            } : undefined;
            forceUpdate = ranges && ranges.length &&
                this._lastSelectedRanges && this._lastSelectedRanges.length &&
                ranges[0].startContainer !== this._lastSelectedRanges[0].startContainer;
        }
        this._handleSelectionChange(newRange, forceUpdate);
    };
    CKTextEditor.prototype._isHeadingActive = function (tagName, path) {
        path = path || this._editor.elementPath();
        var element = path.lastElement && path.lastElement.getAscendant(tagName, true);
        return (element && element.getName() === tagName);
    };
    CKTextEditor.prototype._getHeadingCommandDefinition = function (tagName) {
        var isHeadingActive = this._isHeadingActive;
        return {
            contextSensitive: true,
            exec: function (editor) {
                var styleDef;
                switch (tagName) {
                    case 'h2':
                        styleDef = editor.config.format_h2;
                        break;
                    case 'h3':
                        styleDef = editor.config.format_h3;
                        break;
                    case 'h4':
                        styleDef = editor.config.format_h4;
                        break;
                }
                if (!styleDef) {
                    return false;
                }
                var style = new CKEDITOR.style(styleDef);
                if (isHeadingActive(tagName)) {
                    editor.removeStyle(style);
                }
                else {
                    editor.applyStyle(style);
                }
                return true;
            },
            refresh: function (editor, path) {
                this.setState(isHeadingActive(tagName, path) ? CKEDITOR.TRISTATE_ON : CKEDITOR.TRISTATE_OFF);
            }
        };
    };
    CKTextEditor.prototype._fakeSelectionChange = function (evt) {
        this._handleSelectionChangeConvert(evt);
    };
    CKTextEditor.prototype._handlePluginsLoaded = function (evt) {
        var _loop_1 = function (command) {
            if (this_1._config.supportedFormatsArray.filter((function (format) { return format.editorKey === command; })).length) {
                this_1._editor.commands[command].on('state', this_1._handleSelectionChangeConvert);
            }
        };
        var this_1 = this;
        for (var command in this._editor.commands) {
            _loop_1(command);
        }
        this._editorElement.addEventListener('keyup', this._fakeSelectionChange);
        this._editorElement.addEventListener('mouseup', this._fakeSelectionChange);
    };
    CKTextEditor.prototype._appliedPropertyValue = function (propertyValue) {
        var color = this._getCssPropertyValue(propertyValue);
        if (color) {
            return CKEDITOR.tools.convertRgbToHex(color);
        }
        return undefined;
    };
    CKTextEditor.prototype._handleInstanceReady = function () {
        this._onReadyCallback();
    };
    CKTextEditor.prototype._handleAfterPaste = function () {
        var _this = this;
        this._async.setTimeout((function () {
            if (_this._onPasteCallback && !_this._isAfterPasteCalled) {
                _this._onPasteCallback(false);
                _this._isAfterPasteCalled = true;
            }
        }), CKTextEditor._PASTETIMEOUT);
    };
    CKTextEditor.prototype._handlePaste = function (evt) {
        var pastedData = evt.data && evt.data.dataValue;
        if (!CKTextEditor.isSanitizePastedHTMLKillSwitchActivated && pastedData) {
            pastedData = sp_safehtml_1.SafeHtml.clean(pastedData);
            evt.data.dataValue = pastedData;
        }
        if (pastedData) {
            var tables = pastedData.match(CKTextEditor._TABLE_REGEX);
            if (tables && tables.length > 0) {
                sp_telemetry_1._EngagementLogger.logEvent('Table.Paste');
                var extraParagraph = '<p></p>';
                if (this._editor.getData() === '' && tables.length === 1) {
                    evt.data.dataValue = extraParagraph + pastedData;
                }
                evt.data.dataValue = "<div class=\"canvasRteResponsiveTable\">" + evt.data.dataValue + "</div>";
                evt.data.dataValue += extraParagraph;
                this._onImagePasteInsideTable(pastedData);
            }
        }
        if (pastedData) {
            var images = pastedData.match(CKTextEditor._IMAGE_REGEX_WITH_SRC);
            if (images && images.length > 0) {
                this._onImagePasteInDataValue(evt, images, pastedData);
            }
        }
        else if (evt.data.dataTransfer) {
            for (var i = 0; i < evt.data.dataTransfer.getFilesCount(); i++) {
                sp_telemetry_1._EngagementLogger.logEvent(CKTextEditor._IMAGE_PASTE);
                this._onImagePasteInChrome(evt.data.dataTransfer.getFile(i));
            }
        }
        this._handleAfterPaste();
    };
    CKTextEditor.prototype._onBeforePaste = function () {
        var _this = this;
        this._async.setTimeout((function () {
            if (_this._onPasteCallback) {
                _this._onPasteCallback(true);
                _this._isAfterPasteCalled = false;
            }
        }), CKTextEditor._PASTETIMEOUT);
    };
    CKTextEditor.prototype._onImagePasteInDataValue = function (evt, images, pastedData) {
        var pastedRTEData = this._removeImagesFromPasteData(pastedData);
        if (pastedRTEData.length === 0) {
            var orignalRTEData = this._splitRTEContentAtSelection();
            if (orignalRTEData) {
                var isImageFileInvalid = false;
                for (var _i = 0, images_1 = images; _i < images_1.length; _i++) {
                    var img = images_1[_i];
                    var src = img.match(CKTextEditor._IMAGE_REGEX_SRC)[1];
                    if (src.length > 0 && src.indexOf('file://') === -1) {
                        evt.cancel();
                        evt.stop();
                        sp_telemetry_1._EngagementLogger.logEvent(CKTextEditor._IMAGE_PASTE);
                        var rteData = '';
                        if (orignalRTEData.postSelectionData) {
                            rteData = orignalRTEData.postSelectionData;
                        }
                        this._onImagePasteCallBack(true, this._handleBase64Image(src), rteData);
                    }
                    else {
                        sp_telemetry_1._EngagementLogger.logEvent('InvalidImageFile.Paste');
                        this._onImagePasteCallBack(false);
                        isImageFileInvalid = true;
                    }
                }
                if (!isImageFileInvalid) {
                    this._editor.setData(orignalRTEData.preSelectionData);
                }
            }
        }
        else {
            sp_telemetry_1._EngagementLogger.logEvent('ImageWrappedWithText.Paste');
            this._onImagePasteCallBack(false);
        }
    };
    CKTextEditor.prototype._handleBase64Image = function (src) {
        var contentType = ImageUtilities_1.Base64MimeType(src);
        var b64Data = src.split(',').pop();
        return ImageUtilities_1.Base64toBlob(b64Data, contentType);
    };
    CKTextEditor.prototype._onImagePasteInsideTable = function (pastedData) {
        if (this._isImagePastedInsideTable(pastedData)) {
            sp_telemetry_1._EngagementLogger.logEvent('ImageInsideTable.Paste');
            this._onImagePasteCallBack(false);
        }
    };
    CKTextEditor.prototype._isImagePastedInsideTable = function (data) {
        var tables = data.match(CKTextEditor._TABLE_REGEX);
        if (tables) {
            for (var _i = 0, tables_1 = tables; _i < tables_1.length; _i++) {
                var table = tables_1[_i];
                if (table.match(CKTextEditor._IMAGE_REGEX) || table.match(CKTextEditor._IMAGE_REGEX_WITHOUT_CLOSING_TAG)) {
                    return true;
                }
            }
            return false;
        }
    };
    CKTextEditor.prototype._removeImagesFromPasteData = function (pastedData) {
        var images = pastedData.match(CKTextEditor._IMAGE_REGEX)
            || pastedData.match(CKTextEditor._IMAGE_REGEX_WITHOUT_CLOSING_TAG);
        if (!images) {
            return [];
        }
        var data = [];
        var temp = [];
        for (var _i = 0, images_2 = images; _i < images_2.length; _i++) {
            var img = images_2[_i];
            temp = pastedData.split(img);
            if (temp.length > 1) {
                if (temp[0]) {
                    data.push(temp[0]);
                }
                pastedData = temp[1];
            }
        }
        if (temp[1]) {
            data.push(temp[1]);
        }
        return data;
    };
    CKTextEditor.prototype._splitRTEContentAtSelection = function () {
        var innerHTML = this._editor.getData();
        if (this._validHTML(innerHTML) && this._isCurrentSelectionTagValid()) {
            var data = [];
            var tempId = sp_core_library_1.Guid.newGuid().toString();
            var tempElement = CKEDITOR.dom.element.createFromHtml('<div>' + tempId + '</div>');
            var tempHTML = tempElement.$.outerHTML;
            this._editor.insertElement(tempElement);
            innerHTML = this._editor.getData();
            data = innerHTML.split(tempHTML);
            var editorData = {
                preSelectionData: data[0],
                postSelectionData: data[1]
            };
            return editorData;
        }
        else {
            this._handleAfterPaste();
            this._onImagePasteCallBack(false);
            return undefined;
        }
    };
    CKTextEditor.prototype._isCurrentSelectionTagValid = function () {
        var tagName = this._editor.getSelection().getStartElement().$ &&
            this._editor.getSelection().getStartElement().$.tagName;
        if (tagName === 'A') {
            return false;
        }
        tagName = this._editor.getSelection().getStartElement().$.parentElement &&
            this._editor.getSelection().getStartElement().$.parentElement.tagName;
        return CKTextEditor._INVALID_TAGS.indexOf(tagName) === -1;
    };
    CKTextEditor.prototype._validHTML = function (html) {
        html = html.replace(/<[^>]*\/\s?>/g, ''); 
        html = html.replace(/<(br|hr|img).*?>/g, ''); 
        var openingTags = html.match(/<[^\/].*?>/g) || []; 
        var closingTags = html.match(/<\/.+?>/g) || []; 
        return openingTags.length === closingTags.length ? true : false;
    };
    CKTextEditor.prototype._onImagePasteInChrome = function (src) {
        var data = this._splitRTEContentAtSelection();
        if (data) {
            this._editor.setData(data.preSelectionData);
            this._onImagePasteCallBack(true, src, data.postSelectionData);
        }
    };
    CKTextEditor.prototype._getActualBackgroundColor = function (elem, value) {
        var propValue = value;
        while (elem &&
            (propValue === 'transparent' || propValue === 'rgba(0, 0, 0, 0)') &&
            elem !== this._editorElement) {
            elem = elem.parentElement;
            propValue = window.getComputedStyle(elem).backgroundColor;
        }
        return elem ? window.getComputedStyle(elem).backgroundColor : 'transparent';
    };
    CKTextEditor.prototype._getCssPropertyValue = function (propertyValue) {
        var selection = this._editor.getSelection();
        if (selection) {
            var startElement = selection.getStartElement();
            var selectedText = selection.getSelectedText();
            if (startElement) {
                var value = window.getComputedStyle(startElement.$).getPropertyValue(propertyValue);
                if (propertyValue === 'background-color') {
                    return this._getActualBackgroundColor(startElement.$, value);
                }
                else if (
                propertyValue === 'font-size' &&
                    selectedText !== '' &&
                    this._isOverlappingStyles(startElement.$, value, 'fontSize', propertyValue)) {
                    return undefined;
                }
                return value;
            }
        }
        return undefined;
    };
    CKTextEditor.prototype._isOverlappingStyles = function (element, styleValue, className, propertyValue) {
        var children = element.querySelectorAll("span[class*=" + className + "]");
        for (var i = 0; i < children.length; i++) {
            var childValue = window.getComputedStyle(children[i]).getPropertyValue(propertyValue);
            if (childValue !== styleValue) {
                return true;
            }
        }
        return false;
    };
    CKTextEditor.moduleLoader = new CKLoader_1.default();
    CKTextEditor.logSource = sp_telemetry_1._LogSource.create('SPRteCKTextEditor');
    CKTextEditor._IMAGE_REGEX = new RegExp('<img.+?\/>', 'gi');
    CKTextEditor._IMAGE_REGEX_WITHOUT_CLOSING_TAG = new RegExp('<img.+?>', 'gi');
    CKTextEditor._TABLE_REGEX = new RegExp('<table([\\w\\W]+?)\/table>', 'gi');
    CKTextEditor._IMAGE_REGEX_WITH_SRC = new RegExp('<img.*?src="(.*?)"', 'gi');
    CKTextEditor._IMAGE_REGEX_SRC = new RegExp('<img.*?src="(.*?)"', 'i');
    CKTextEditor._IMAGE_PASTE = 'Image.Paste';
    CKTextEditor._PASTETIMEOUT = 5;
    CKTextEditor._INVALID_TAGS = ['TD', 'TR', 'OL', 'LI'];
    CKTextEditor._TEXT_FORMAT_KEY = 'linkText';
    CKTextEditor._TAB_FORMAT_KEY = 'shouldOpenInNewTab';
    CKTextEditor._fontSizeMap = new Map([
        [FontSizeInPixels.Small, 'Small'],
        [FontSizeInPixels.Medium, 'Medium'],
        [FontSizeInPixels.MediumPlus, 'MediumPlus'],
        [FontSizeInPixels.Large, 'Large'],
        [FontSizeInPixels.XLarge, 'XLarge'],
        [FontSizeInPixels.XLargePlus, 'XLargePlus'],
        [FontSizeInPixels.XxLarge, 'XxLarge'],
        [FontSizeInPixels.XxLargePlus, 'XxLargePlus'],
        [FontSizeInPixels.XxxLarge, 'XxxLarge'],
        [FontSizeInPixels.Super, 'Super']
    ]);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], CKTextEditor.prototype, "_initialize", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], CKTextEditor.prototype, "_handleSelectionChangeConvert", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], CKTextEditor.prototype, "_isHeadingActive", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], CKTextEditor.prototype, "_getHeadingCommandDefinition", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], CKTextEditor.prototype, "_fakeSelectionChange", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], CKTextEditor.prototype, "_handlePluginsLoaded", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], CKTextEditor.prototype, "_handleInstanceReady", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], CKTextEditor.prototype, "_handleAfterPaste", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], CKTextEditor.prototype, "_handlePaste", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], CKTextEditor.prototype, "_onBeforePaste", null);
    return CKTextEditor;
}());
exports.default = CKTextEditor;


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var ReactDom = __webpack_require__(17);
var sp_telemetry_1 = __webpack_require__(6);
var odsp_utilities_bundle_1 = __webpack_require__(9);
var sp_pagepicker_1 = __webpack_require__(113);
var sp_core_library_1 = __webpack_require__(5);
var SPRteFormattingBar_1 = __webpack_require__(269);
var SPRteLinkDialog_1 = __webpack_require__(273);
var CKTextEditor_1 = __webpack_require__(48);
var ToolbarButton_1 = __webpack_require__(34);
var ToolbarSubmenu_1 = __webpack_require__(115);
var CanvasStore_1 = __webpack_require__(15);
var RteA11y_1 = __webpack_require__(61);
var office_ui_fabric_react_1 = __webpack_require__(2);
__webpack_require__(280);
var RteStrings_resx_1 = __webpack_require__(22);
var CLICK_ACTION = '.Click';
var BUTTON_NAME = 'Button';
exports.CREATE_EDITOR_MONITOR = 'CreateNewEditor';
exports.CREATE_EDITOR_MONITOR_FAILURE = 'EditorFailedToLoad';
var CREATE_EDITOR_MONITOR_EXPECTED = 'CanvasUnmounted';
var Format;
(function (Format) {
    Format["Undo"] = "undo";
    Format["Redo"] = "redo";
    Format["ClearFormatting"] = "clearFormatting";
    Format["Bold"] = "bold";
    Format["Italic"] = "italic";
    Format["Underline"] = "underline";
    Format["Bullet"] = "bullet";
    Format["List"] = "list";
    Format["AlignLeft"] = "alignLeft";
    Format["AlignCenter"] = "alignCenter";
    Format["AlignRight"] = "alignRight";
    Format["Link"] = "link";
    Format["UnLink"] = "unlink";
    Format["NormalText"] = "normalText";
    Format["H2"] = "h2";
    Format["H3"] = "h3";
    Format["H4"] = "h4";
    Format["Blockquote"] = "blockquote";
    Format["Superscipt"] = "superscript";
    Format["Subscript"] = "subscript";
    Format["Justify"] = "justify";
    Format["Outdent"] = "outdent";
    Format["Indent"] = "indent";
    Format["Strike"] = "strike";
    Format["FontSize"] = "fontSize";
    Format["CustomTable"] = "customTable";
    Format["RowInserBefore"] = "rowInsertBefore";
    Format["RowInsertAfter"] = "rowInsertAfter";
    Format["ColumnInsertBefore"] = "columnInsertBefore";
    Format["ColumnInsertAfter"] = "columnInsertAfter";
    Format["RowDelete"] = "rowDelete";
    Format["ColumnDelete"] = "columnDelete";
    Format["TableDelete"] = "tableDelete";
    Format["FontColor"] = "fontColor";
    Format["HighlightColor"] = "highlightColor";
})(Format = exports.Format || (exports.Format = {}));
var BaseRte = (function (_super) {
    tslib_1.__extends(BaseRte, _super);
    function BaseRte(props, rteOptions) {
        var _this = _super.call(this, props) || this;
        _this._initState();
        _this._options = _this.props.options || rteOptions;
        _this._config = _this._options.config;
        _this._restoreSelectionOnNextFocus = false;
        _this._buttonStates = new Map();
        _this._selectionInitiated = false;
        _this._selectionShouldEnd = false;
        _this._isRtl = document.documentElement.getAttribute('dir').toLowerCase() === 'rtl';
        if (_this.state.displayMode === sp_core_library_1.DisplayMode.Edit && !_this._editor) {
            _this._options.loader.loadModule();
        }
        _this._formatMap =
            new Map([
                [Format.Undo, _this._handleUndo],
                [Format.Redo, _this._handleRedo],
                [Format.ClearFormatting, _this._handleClearFormatting],
                [Format.Bold, _this._handleBold],
                [Format.Italic, _this._handleItalic],
                [Format.Underline, _this._handleUnderline],
                [Format.Bullet, _this._handleListBullets],
                [Format.List, _this._handleListNumbered],
                [Format.AlignLeft, _this._handleAlignLeft],
                [Format.AlignRight, _this._handleAlignRight],
                [Format.AlignCenter, _this._handleAlignCenter],
                [Format.Link, _this._handleLink],
                [Format.NormalText, _this._handlePlainText],
                [Format.H2, _this._handleHeading2],
                [Format.H3, _this._handleHeading3],
                [Format.H4, _this._handleHeading4],
                [Format.Blockquote, _this._handleQuote],
                [Format.Strike, _this._handleStrikeThrough],
                [Format.Subscript, _this._handleSubscript],
                [Format.Superscipt, _this._handleSuperscript],
                [Format.Justify, _this._handleJustify],
                [Format.Indent, _this._handleIndent],
                [Format.Outdent, _this._handleOutdent],
                [Format.FontSize, _this._handleFontSize],
                [Format.CustomTable, _this._handleTable],
                [Format.RowInserBefore, _this._handleTableCommands],
                [Format.RowInsertAfter, _this._handleTableCommands],
                [Format.ColumnInsertBefore, _this._handleTableCommands],
                [Format.ColumnInsertAfter, _this._handleTableCommands],
                [Format.RowDelete, _this._handleTableCommands],
                [Format.ColumnDelete, _this._handleTableCommands],
                [Format.TableDelete, _this._handleTableCommands],
                [Format.FontColor, _this._handleFontColor],
                [Format.HighlightColor, _this._handleHighlightColor],
                [Format.UnLink, _this._handleUnlinkCommand]
            ] );
        return _this;
    }
    BaseRte.prototype.getFormatHandler = function (format) {
        return this._formatMap.get(format);
    };
    BaseRte.prototype.render = function () {
        var _this = this;
        var formattingBar;
        var html;
        var className;
        if (this.state.displayMode === sp_core_library_1.DisplayMode.Read) {
            className = this._config.editorElementClassName;
            html = this._previousHTML || this.props.innerHTML;
        }
        else if (this.state.displayMode === sp_core_library_1.DisplayMode.Edit) {
            className = 'rte--edit';
        }
        var isEditMode = this.state.displayMode === sp_core_library_1.DisplayMode.Edit;
        if (isEditMode && !this.state.isFormattingBarHidden) {
            formattingBar = React.createElement(SPRteFormattingBar_1.default, { buttons: this._formattingBarButtons(), position: this.state.formattingBarPosition, onKeyDown: this._handleFormattingBarKeyDown, ref: this._resolveRef('_formattingbar'), isFormattingBarV2: CanvasStore_1.default.isRTESettingsFlightEnabled });
        }
        return (React.createElement("div", null,
            this.state.isContextMenuVisible &&
                React.createElement(office_ui_fabric_react_1.ContextualMenu, { shouldFocusOnMount: true, target: this.state.contextMenuTarget, onDismiss: this._onContextualMenuDismiss, directionalHint: this._isRtl ? 6  : 4 , items: [
                        {
                            key: RteStrings_resx_1.default.AddRowAboveText,
                            name: RteStrings_resx_1.default.AddRowAboveText,
                            title: odsp_utilities_bundle_1.StringHelper.format(RteStrings_resx_1.default.AddRowAboveShortcutText, RteStrings_resx_1.default.AddRowAboveText),
                            iconProps: {
                                iconName: 'Up'
                            },
                            onClick: function () {
                                _this._editor.formatTable('rowInsertBefore', _this.state.contextMenuTarget);
                            }
                        },
                        {
                            key: RteStrings_resx_1.default.AddRowBelowText,
                            name: RteStrings_resx_1.default.AddRowBelowText,
                            title: odsp_utilities_bundle_1.StringHelper.format(RteStrings_resx_1.default.AddRowBelowShortcutText, RteStrings_resx_1.default.AddRowBelowText),
                            iconProps: {
                                iconName: 'Down'
                            },
                            onClick: function () {
                                _this._editor.formatTable('rowInsertAfter', _this.state.contextMenuTarget);
                            }
                        },
                        {
                            key: RteStrings_resx_1.default.DeleteRowText,
                            name: RteStrings_resx_1.default.DeleteRowText,
                            title: odsp_utilities_bundle_1.StringHelper.format(RteStrings_resx_1.default.DeleteRowShortcutText, RteStrings_resx_1.default.DeleteRowText),
                            iconProps: {
                                iconName: 'Trash'
                            },
                            onClick: function () {
                                _this._editor.formatTable('rowDelete', _this.state.contextMenuTarget);
                            }
                        }
                    ] }),
            this.state.isImageWrappedWithText &&
                this.state.displayMode === sp_core_library_1.DisplayMode.Edit &&
                React.createElement(office_ui_fabric_react_1.MessageBar, { messageBarType: office_ui_fabric_react_1.MessageBarType.warning, ariaLabel: RteStrings_resx_1.default.ImagesWithTextNotSupported, dismissButtonAriaLabel: odsp_utilities_bundle_1.StringHelper.format(RteStrings_resx_1.default.CloseWarningText, RteStrings_resx_1.default.ImagesWithTextNotSupported), onDismiss: this._onMessageBarDismiss }, RteStrings_resx_1.default.ImagesWithTextNotSupported),
            this.state.isPasteInProgress &&
                React.createElement(office_ui_fabric_react_1.Spinner, { type: office_ui_fabric_react_1.SpinnerType.large, label: RteStrings_resx_1.default.LoadingText }),
            React.createElement("div", { "data-automation-id": 'textBox', role: isEditMode ? 'textbox' : undefined, "aria-multiline": isEditMode || undefined, dangerouslySetInnerHTML: { __html: html }, className: className, onKeyUp: this._handleKeyUp, ref: this._resolveRef('_editorElement') }),
            formattingBar,
            !sp_pagepicker_1.PagePicker.isEnabled &&
                React.createElement(SPRteLinkDialog_1.default, { editorElement: this._editableDiv, isOpen: this.state.isLinkDialogOpen, onCancelClicked: this._closeLinkDialog.bind(this), onDismiss: this._closeLinkDialog.bind(this), onSaveClicked: this._onLinkDialogSaved, ref: this._resolveRef('_linkDialog'), textFieldValue: this._linkAddress || '', validationRegex: BaseRte._URL_VALIDATION_REGEX, selectedText: this.state.selectedText, onUnlink: this._handleUnlink })));
    };
    BaseRte.prototype.componentWillMount = function () {
        window.addEventListener('load', this._onSPRteLoad);
    };
    BaseRte.prototype.componentDidMount = function () {
        if (this.state.displayMode === sp_core_library_1.DisplayMode.Edit) {
            this._initializeEditor(this.props.innerHTML || '', this.props.focusEditorOnMount, this._postEditorCreatedHandlerComplete);
        }
    };
    BaseRte.prototype.componentDidUpdate = function (prevProps, prevState) {
        if (this.state.displayMode === sp_core_library_1.DisplayMode.Edit) {
            if (this._formattingbar) {
                this._formattingbarElement = ReactDom.findDOMNode(this._formattingbar);
                this._formattingbarWidth = this._formattingbarElement.offsetWidth || this._formattingbarWidth;
            }
            else {
                this._formattingbarElement = undefined;
            }
        }
    };
    BaseRte.prototype.componentWillUnmount = function () {
        if (this._editor) {
            this._previousHTML = this._editor.destroy();
            this._editor = undefined;
            this._editorElement.removeEventListener('paste', this._onBeforePaste, true);
            this._editorElement.removeEventListener('keydown', this._handleKeyDown);
            document.removeEventListener('mouseup', this._checkSelectionChange);
            if (this._editableDiv) {
                this._editableDiv.removeAttribute('contenteditable');
                this._editableDiv.removeEventListener('focus', this._handleEditorFocus);
            }
            if (this._createNewEditorMonitor && !this._createNewEditorMonitor.hasEnded) {
                this._createNewEditorMonitor.writeExpectedFailure(CREATE_EDITOR_MONITOR_EXPECTED);
            }
        }
        window.removeEventListener('load', this._onSPRteLoad);
    };
    BaseRte.prototype.componentWillUpdate = function (nextProps, nextState) {
        if (this.state.displayMode !== nextState.displayMode) {
            if (nextState.displayMode === sp_core_library_1.DisplayMode.Edit) {
                this._initializeEditor(this._previousHTML || this.props.innerHTML || '', false, this._setButtonStates);
            }
            else if (nextState.displayMode === sp_core_library_1.DisplayMode.Read) {
                this.componentWillUnmount();
            }
        }
        else if (nextState.displayMode === sp_core_library_1.DisplayMode.Edit && this._editor) {
            this._setButtonStates();
        }
    };
    BaseRte.prototype.focusFormattingBar = function () {
        if (this._formattingbarElement) {
            RteA11y_1.navigateInside(this._formattingbarElement);
        }
    };
    BaseRte.prototype.setDisplayMode = function (newMode) {
        if (this.state.displayMode !== newMode) {
            this.setState({
                displayMode: newMode,
                formattingBarPosition: undefined,
                isFormattingBarHidden: true,
                isLinkDialogOpen: false
            });
        }
    };
    BaseRte.prototype.serialize = function () {
        var serialization = JSON.parse(JSON.stringify(this.props, (function (key, value) {
            if (key === BaseRte._SERVICESCOPE_PROP_KEY) {
                return undefined;
            }
            else {
                return value;
            }
        })));
        serialization.innerHTML = this._editor ? this._editor.getHTML() : this.props.innerHTML;
        if (this._editor) {
            serialization.editorType = this._editor.getEditorType();
        }
        return serialization;
    };
    Object.defineProperty(BaseRte.prototype, "config", {
        get: function () {
            return this._config;
        },
        enumerable: true,
        configurable: true
    });
    BaseRte.prototype.isFormatActive = function (format) {
        if (format) {
            return this._buttonStates.get(format.toString()) === ToolbarButton_1.ButtonState.Active;
        }
        return false;
    };
    Object.defineProperty(BaseRte.prototype, "fontSizeStyle", {
        get: function () {
            if (this._editor) {
                return this._editor.appliedFontSize;
            }
            return undefined;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseRte.prototype, "fontColor", {
        get: function () {
            if (this._editor) {
                return this._editor.appliedFontColor;
            }
            return undefined;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseRte.prototype, "highlightColor", {
        get: function () {
            if (this._editor) {
                return this._editor.appliedHighlightColor;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseRte.prototype, "isTableSelected", {
        get: function () {
            if (this._editor) {
                return this._editor.isTableSelected;
            }
            return undefined;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseRte.prototype, "isLinkSelected", {
        get: function () {
            return !!(this._editor && this._editor.getSelectedLink());
        },
        enumerable: true,
        configurable: true
    });
    BaseRte.prototype.removeFontColorFormat = function () {
        this._applyFormat('fontColor', { 'fontColor': this._editor.noColor });
    };
    BaseRte.prototype.removeHighlightColor = function () {
        this._applyFormat('highlightColor', { 'highlightColor': this._editor.noColor });
    };
    BaseRte.prototype._initState = function () {
        this.state = {
            displayMode: this.props.displayMode,
            formattingBarPosition: undefined,
            isFormattingBarHidden: true,
            isLinkDialogOpen: false,
            selectedText: ''
        };
    };
    BaseRte.prototype.focus = function () {
        this._focusCore();
    };
    BaseRte.prototype._focusCore = function () {
        if (this._editor) {
            this._editor.focus();
        }
    };
    BaseRte.prototype._postEditorCreatedHandlerComplete = function () {
    };
    BaseRte.prototype._createNewEditor = function (innerHTML, startupFocus) {
        return this._options.editor.createNewEditor(this._config, innerHTML, this._editorElement, this._handleSelectionChange, this._handleTextChange.bind(this), startupFocus, this._onImagePaste.bind(this), this._onPaste.bind(this), this._onContextualMenu.bind(this));
    };
    BaseRte.prototype._afterEditorCreated = function (editor) {
        this._editor = editor;
        this._handleTextChange();
        this._editorElement.addEventListener('paste', this._onBeforePaste, true);
        this._editorElement.addEventListener('keydown', this._handleKeyDown);
        document.addEventListener('mouseup', this._checkSelectionChange);
        this._editableDiv = this._editor.getEditorType() === 'CKEditor' ? this._editorElement :
            this._editorElement.querySelector('.ql-editor');
        if (this._editableDiv) {
            this._editableDiv.setAttribute('aria-label', RteStrings_resx_1.default.RichTextEditorAriaLabel);
            this._editableDiv.setAttribute('title', RteStrings_resx_1.default.RichTextEditorTitle);
            this._editableDiv.addEventListener('focus', this._handleEditorFocus);
            this._editableDiv.addEventListener('blur', this._handleEditorBlur);
        }
        this._initPagePicker();
    };
    BaseRte.prototype._openLinkDialog = function (defaultAddress) {
        if (defaultAddress === void 0) { defaultAddress = ''; }
        if (sp_pagepicker_1.PagePicker.isEnabled) {
            this._pagePicker.open({
                title: this._currentSelection ? this._currentSelection.text : '',
                url: defaultAddress,
                shouldOpenInNewTab: this._editor.getSelectedLinkAttribute('target') === '_blank'
            });
        }
        else {
            this._linkAddress = defaultAddress !== '' ? defaultAddress : 'http://';
            this._updateSelectedText();
            this.setState({
                isLinkDialogOpen: true
            });
        }
    };
    BaseRte.prototype._closeLinkDialog = function () {
        this._restoreSelectionOnNextFocus = true;
        this._linkAddress = '';
        this.setState({
            isLinkDialogOpen: false
        });
    };
    BaseRte.prototype._initPagePicker = function () {
        if (sp_pagepicker_1.PagePicker.isEnabled) {
            this._pagePicker = new sp_pagepicker_1.PagePicker({
                onSelect: this._handlePagePickerSave,
                onUnlink: this._handlePagePickerUnlink,
                serviceScope: this.props.serviceScope,
                elementToFocusOnDismiss: this._editorElement
            });
        }
    };
    BaseRte.prototype._handleTextChange = function () {
        sp_telemetry_1._EngagementLogger.logEvent(this._engagementLoggerClickTagName('TextChange'), CLICK_ACTION);
        if (this.state.displayMode === sp_core_library_1.DisplayMode.Edit) {
            if (this._editor) {
                this._currentSelection = this._editor.getSelection() || this._currentSelection;
            }
        }
    };
    BaseRte.prototype._finalizeAction = function (ariaActionName) {
        if (ariaActionName) {
            this._ariaConfirmAction(ariaActionName);
        }
        this._updateActiveButtons();
    };
    BaseRte.prototype._onImagePaste = function (isImageValid, imageBlob, innerHTML) {
        if (!isImageValid) {
            this.setState({ isImageWrappedWithText: true });
        }
        else {
            this.setState({ isImageWrappedWithText: false });
        }
    };
    BaseRte.prototype._onContextualMenu = function (isRightClicked, target) {
        this.setState({
            isContextMenuVisible: isRightClicked,
            contextMenuTarget: target
        });
    };
    BaseRte.prototype._onPaste = function (isPasteInProgress) {
        this.setState({ isPasteInProgress: isPasteInProgress });
    };
    BaseRte.prototype._handleSelectionChange = function (range, forceUpdate) {
        if (range) {
            this.setState({ currentSubmenuOpen: undefined });
            if (this._restoreOnFocus()) {
                this._updateFormattingBar(false);
                return;
            }
        }
        if (!range && (CanvasStore_1.default.isRTESettingsFlightEnabled && this._isRTESelected)) {
        }
        else if (!range) {
            this._updateFormattingBar(true);
        }
        else {
            this._updateSelection(range, forceUpdate);
        }
    };
    Object.defineProperty(BaseRte.prototype, "_isRTESelected", {
        get: function () {
            return false;
        },
        enumerable: true,
        configurable: true
    });
    BaseRte.prototype._updateSelection = function (range, forceUpdate) {
        if (!this._currentSelection || this.state.isFormattingBarHidden) {
            this._currentSelection = range;
            this._updateFormattingBar(false);
        }
        else if (forceUpdate || this._currentSelection.start !== range.start ||
            this._currentSelection.end !== range.end) {
            this._selectionInitiated = true;
            if (this._selectionShouldEnd) {
                this._currentSelection = range;
                this._updateFormattingBar(false);
                this._selectionInitiated = false;
            }
            this._selectionShouldEnd = false;
        }
    };
    BaseRte.prototype._restoreOnFocus = function () {
        var restore = false;
        if (this._restoreSelectionOnNextFocus && this._currentSelection) {
            this._restoreSelectionOnNextFocus = false;
            this._editor.setSelection(this._currentSelection);
            restore = true;
        }
        return restore;
    };
    BaseRte.prototype._onBeforePaste = function () {
    };
    BaseRte.prototype._handleKeyDown = function (evt) {
        if (RteA11y_1.isTab(evt) || RteA11y_1.isShiftTab(evt)) {
            this._preventEventDefaultBehaviour(evt);
            if (this._shouldIndentOnTab) {
                if (RteA11y_1.isTab(evt)) {
                    this._handleIndent();
                }
                else if (RteA11y_1.isShiftTab(evt)) {
                    this._handleOutdent();
                }
            }
        }
        else if (RteA11y_1.isKey(RteA11y_1.KeyCodes.F10, evt, true) && this._formattingbarElement) {
            sp_telemetry_1._EngagementLogger.logEvent(this.TAG_NAME + 'ToolbarByKeyboardShortcut.Focus', evt.type);
            RteA11y_1.navigateInside(this._formattingbarElement);
            var screenReaderInstruction = odsp_utilities_bundle_1.StringHelper.format(RteStrings_resx_1.default.RichTextNavigationAltF10Keys, RteStrings_resx_1.default.ToolbarNavigationArrowKeys, RteStrings_resx_1.default.ToolbarNavigationTabKeys);
            RteA11y_1.ariaAlert(screenReaderInstruction);
            this._preventEventDefaultBehaviour(evt);
        }
        else if (RteA11y_1.isKey('K'.charCodeAt(0), evt, false, true)) {
            this._handleLink();
            this._preventEventDefaultBehaviour(evt);
        }
    };
    BaseRte.prototype._handleLink = function () {
        sp_telemetry_1._EngagementLogger.logEvent(this._engagementLoggerClickTagName('link'), CLICK_ACTION);
        this._isSelectionChangeFromToolbar = true;
        this._currentSelection = this._editor.getSelection();
        if (sp_pagepicker_1.PagePicker.isEnabled) {
            this._openLinkDialog(this._editor.getSelectedLinkAttribute('href'));
        }
        else {
            this._openLinkDialog(this._editor.getSelectedLink());
        }
        this._updateActiveButtons();
    };
    BaseRte.prototype._handleFormattingBarKeyDown = function (evt) {
        if (RteA11y_1.isEscape(evt)) {
            if (this._editableDiv && !this._editableDiv.isEqualNode(document.activeElement)) {
                this.focus();
                this._preventEventDefaultBehaviour(evt);
            }
        }
    };
    BaseRte.prototype._updateFormattingBar = function (isHidden) {
    };
    BaseRte.prototype._engagementLoggerClickTagName = function (key) {
        return this.TAG_NAME + key + BUTTON_NAME + CLICK_ACTION;
    };
    BaseRte.prototype._handleFormattingBarBlur = function (evt) {
        this._hideFormattingBarOnBlur(evt.relatedTarget);
    };
    BaseRte.prototype._formattingBarButtons = function () {
        var _this = this;
        var buttons = [
            React.createElement(ToolbarSubmenu_1.default, { a11yManagerId: this.props.a11yManagerId, key: 'format', buttons: this._formatSubmenuButtons, isOpen: this.state.currentSubmenuOpen === 'format', isWide: true, onOpen: function () { _this._isSelectionChangeFromToolbar = true; _this.setState({ currentSubmenuOpen: 'format' }); }, onClose: this._handleCloseSubmenu, onBlur: this._handleFormattingBarBlur }),
            React.createElement(ToolbarButton_1.default, tslib_1.__assign({}, this._getFormatButtonProps('bold', this._handleBold))),
            React.createElement(ToolbarButton_1.default, tslib_1.__assign({}, this._getFormatButtonProps('italic', this._handleItalic))),
            React.createElement(ToolbarButton_1.default, tslib_1.__assign({}, this._getFormatButtonProps('underline', this._handleUnderline))),
            React.createElement(ToolbarButton_1.default, tslib_1.__assign({}, this._getFormatButtonProps('bullet', this._handleListBullets))),
            React.createElement(ToolbarButton_1.default, tslib_1.__assign({}, this._getFormatButtonProps('list', this._handleListNumbered))),
            React.createElement(ToolbarButton_1.default, tslib_1.__assign({}, this._getFormatButtonProps('alignLeft', this._handleAlignLeft))),
            React.createElement(ToolbarButton_1.default, tslib_1.__assign({}, this._getFormatButtonProps('alignCenter', this._handleAlignCenter))),
            React.createElement(ToolbarButton_1.default, tslib_1.__assign({}, this._getFormatButtonProps('alignRight', this._handleAlignRight))),
            React.createElement(ToolbarButton_1.default, tslib_1.__assign({}, this._getFormatButtonProps('link', this._handleLink))),
            React.createElement(ToolbarButton_1.default, { key: 'clearFormatting', canBeActive: false, fabricIconKey: 'ClearFormatting', onClick: this._handleClearFormatting, title: RteStrings_resx_1.default.FormattingBarClearFormattingButtonTitle, automationId: 'clearFormatting-button', onBlur: this._handleFormattingBarBlur })
        ];
        return buttons;
    };
    Object.defineProperty(BaseRte.prototype, "_formatSubmenuButtons", {
        get: function () {
            var formatSubmenuButtons = [
                {
                    key: 'normalText',
                    canBeActive: true,
                    title: RteStrings_resx_1.default.FormattingBarNormalTextButtonTitle,
                    label: RteStrings_resx_1.default.FormattingBarNormalTextButtonTitle,
                    onClick: this._handlePlainText,
                    automationId: 'normalText-button'
                },
                this._getFormatButtonProps('h2', this._handleHeading2),
                this._getFormatButtonProps('h3', this._handleHeading3),
                this._getFormatButtonProps('h4', this._handleHeading4),
                this._getFormatButtonProps('blockquote', this._handleQuote)
            ];
            return formatSubmenuButtons;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseRte.prototype, "_isPropertyPaneOpen", {
        get: function () {
            return false;
        },
        enumerable: true,
        configurable: true
    });
    BaseRte.prototype._getFormatButtonProps = function (formatKey, onClick) {
        var format = this._config.formats.get(formatKey);
        var button = format.button;
        return {
            key: format.key,
            fabricIconKey: button.fabricIconKey,
            iconClassName: button.iconClassName,
            onClick: onClick,
            canBeActive: button.canBeActive,
            isActive: this._buttonStates.get(format.key) === ToolbarButton_1.ButtonState.Active,
            disabled: this._buttonStates.get(format.key) === ToolbarButton_1.ButtonState.Disabled,
            title: button.title + (button.shortcut ? " (" + button.shortcut + ")" : ''),
            label: button.label,
            className: button.className,
            automationId: formatKey + '-button',
            onBlur: this._handleFormattingBarBlur
        };
    };
    BaseRte.prototype._handleCloseSubmenu = function (isDocumentClick) {
        this.setState({ currentSubmenuOpen: undefined });
        if (isDocumentClick) {
            this._updateFormattingBar(true);
        }
    };
    BaseRte.prototype._preventEventDefaultBehaviour = function (evt) {
        evt.stopPropagation();
        evt.preventDefault();
    };
    Object.defineProperty(BaseRte.prototype, "_shouldIndentOnTab", {
        get: function () {
            return CanvasStore_1.default.isRTESettingsFlightEnabled && !this._editor.isTableSelected;
        },
        enumerable: true,
        configurable: true
    });
    BaseRte.prototype._formatOrPrepare = function (formatKey) {
        this.focus();
        sp_telemetry_1._EngagementLogger.logEvent(this._engagementLoggerClickTagName(formatKey), CLICK_ACTION);
        var format = this._config.formats.get(formatKey);
        if (format.maskedBy) {
            for (var _i = 0, _a = format.maskedBy; _i < _a.length; _i++) {
                var maskingFormat = _a[_i];
                if (this._buttonStates.get(maskingFormat) === ToolbarButton_1.ButtonState.Active) {
                    return;
                }
            }
        }
        var range = this._editor.getSelection();
        var _b = [range.start, range.end], start = _b[0], end = _b[1];
        var isApplied = this._editor.isFormatAppliedToRange(start, end, format);
        if (!(this._cleanupBeforeFormatting(start, end, format) && isApplied)) {
            var formats = {};
            formats[format.editorKey] = isApplied ? false : (format.editorValue !== undefined ? format.editorValue : true);
            this._editor.format(start, end, formats);
            this._finalizeAction(formatKey);
        }
    };
    BaseRte.prototype._initializeEditor = function (innerHTML, startupFocus, onAfterInitialize) {
        var _this = this;
        if (!this._createNewEditorMonitor) {
            this._createNewEditorMonitor = new sp_telemetry_1._QosMonitor(exports.CREATE_EDITOR_MONITOR);
        }
        if (true) {
            this._createNewEditor(innerHTML, startupFocus)
                .then((function (editor) {
                _this._afterEditorCreated(editor);
                onAfterInitialize();
                _this._createNewEditorMonitor.writeSuccess();
            }))
                .catch((function (error) {
                _this._createNewEditorMonitor.writeUnexpectedFailure(exports.CREATE_EDITOR_MONITOR_FAILURE, error, {
                    'innerHTML': _this.props.innerHTML
                });
            }));
        }
    };
    BaseRte.prototype._onSPRteLoad = function (e) {
        if (this._config.editorElementClassName === 'cke_editable' &&
            !sp_core_library_1._SPKillSwitch.isActivated(sp_core_library_1.Guid.tryParse('f4d628e3-3a01-46e7-8508-96db5caa18e6'), '11/16/2016', 'PreloadCKEditor')) {
            CKTextEditor_1.default.preloadEditor(this._config);
        }
    };
    BaseRte.prototype._ariaConfirmAction = function (formatKeyOrName) {
        var format = this._config.formats.get(formatKeyOrName);
        var name = format ? format.button.title : formatKeyOrName;
        var message = odsp_utilities_bundle_1.StringHelper.format(RteStrings_resx_1.default.FormattingBarConfirmAction, name);
        if (this._currentSelection && this._currentSelection.start !== this._currentSelection.end &&
            !(format && format.isLine)) {
            var text = this._editor.getText(this._currentSelection);
            message = odsp_utilities_bundle_1.StringHelper.format(RteStrings_resx_1.default.FormattingBarConfirmActionOnSelection, name, text);
        }
        RteA11y_1.ariaAlert(message);
    };
    BaseRte.prototype._checkSelectionChange = function () {
        if (this._editor) {
            this._selectionShouldEnd = true;
            if (this._selectionInitiated) {
                var range = this._editor.getSelection();
                this._currentSelection = range;
                this._updateFormattingBar(false);
                this._selectionShouldEnd = false;
            }
            this._selectionInitiated = false;
        }
    };
    BaseRte.prototype._updateSelectedText = function () {
        if (this._currentSelection) {
            this.setState({ selectedText: this._currentSelection.text });
        }
    };
    BaseRte.prototype._handleClearFormatting = function () {
        sp_telemetry_1._EngagementLogger.logEvent(this._engagementLoggerClickTagName('ClearFormatting'), CLICK_ACTION);
        this.focus();
        var range = this._currentSelection;
        var _a = [range.start, range.end], start = _a[0], end = _a[1];
        this._editor.clearFormatting(start, end);
        this._finalizeAction(RteStrings_resx_1.default.FormattingBarClearFormattingButtonTitle);
    };
    BaseRte.prototype._handleUndo = function () {
        this._formatOrPrepare('undo');
    };
    BaseRte.prototype._handleRedo = function () {
        this._formatOrPrepare('redo');
    };
    BaseRte.prototype._applyFormat = function (formatType, value, label) {
        if (this._editor && this._currentSelection) {
            var logEntry = new sp_telemetry_1._LogEntry('RTE', formatType, sp_telemetry_1._LogType.Event, {
                'value': value[formatType]
            });
            sp_telemetry_1._EngagementLogger.logEventWithLogEntry(logEntry);
            this.focus();
            this._editor.format(this._currentSelection.start, this._currentSelection.end, value);
            this._finalizeAction(label);
        }
    };
    BaseRte.prototype._handleFontSize = function (config) {
        this._applyFormat(config.format, config.value, RteStrings_resx_1.default.FontSizeDropDownLabel);
    };
    BaseRte.prototype._handleFontColor = function (config) {
        this._applyFormat(config.format, config.value, RteStrings_resx_1.default.FontColorLabel);
    };
    BaseRte.prototype._handleHighlightColor = function (config) {
        this._applyFormat(config.format, config.value, RteStrings_resx_1.default.HightlightLabel);
    };
    BaseRte.prototype._handleAlignCenter = function () {
        this._formatOrPrepare('alignCenter');
    };
    BaseRte.prototype._handleAlignLeft = function () {
        this._formatOrPrepare(this._isRtl ? 'alignRight' : 'alignLeft');
    };
    BaseRte.prototype._handleAlignRight = function () {
        this._formatOrPrepare(this._isRtl ? 'alignLeft' : 'alignRight');
    };
    BaseRte.prototype._handleBold = function () {
        this._formatOrPrepare('bold');
    };
    BaseRte.prototype._handleHeading2 = function () {
        this._clearFormatting();
        this._formatOrPrepare('h2');
    };
    BaseRte.prototype._handleHeading3 = function () {
        this._clearFormatting();
        this._formatOrPrepare('h3');
    };
    BaseRte.prototype._handleHeading4 = function () {
        this._clearFormatting();
        this._formatOrPrepare('h4');
    };
    BaseRte.prototype._clearFormatting = function () {
        if (CanvasStore_1.default.isRTESettingsFlightEnabled) {
            this._handleClearFormatting();
        }
    };
    BaseRte.prototype._handleItalic = function () {
        this._formatOrPrepare('italic');
    };
    BaseRte.prototype._handleListBullets = function () {
        this._formatOrPrepare('bullet');
    };
    BaseRte.prototype._handleListNumbered = function () {
        this._formatOrPrepare('list');
    };
    BaseRte.prototype._handleStrikeThrough = function () {
        this._formatOrPrepare('strike');
    };
    BaseRte.prototype._handleSuperscript = function () {
        this._formatOrPrepare('superscript');
    };
    BaseRte.prototype._handleSubscript = function () {
        this._formatOrPrepare('subscript');
    };
    BaseRte.prototype._handleJustify = function () {
        this._formatOrPrepare('justify');
    };
    BaseRte.prototype._handleIndent = function () {
        this._formatOrPrepare('indent');
    };
    BaseRte.prototype._handleOutdent = function () {
        this._formatOrPrepare('outdent');
    };
    BaseRte.prototype._handleTable = function (config) {
        sp_telemetry_1._EngagementLogger.logEvent(this._engagementLoggerClickTagName(config.format), CLICK_ACTION);
        this._editor.format(this._currentSelection.start, this._currentSelection.end, config.value);
    };
    BaseRte.prototype._handleTableCommands = function (config) {
        this._formatOrPrepare(config.format);
    };
    BaseRte.prototype._handleUnlinkCommand = function () {
        if (sp_pagepicker_1.PagePicker.isEnabled) {
            this._handlePagePickerUnlink();
        }
        else {
            this._handleUnlink();
        }
    };
    BaseRte.prototype._handlePlainText = function () {
        this.focus();
        this._clearFormatting();
        if (this._currentSelection) {
            var blockStyles = this._config.supportedFormatsArray.filter((function (format) { return format.isBlockStyle; }));
            this._cleanupBeforeFormatting(this._currentSelection.start, this._currentSelection.end, blockStyles[0]);
            this._finalizeAction();
        }
        sp_telemetry_1._EngagementLogger.logEvent(this._engagementLoggerClickTagName('PlainText'), CLICK_ACTION);
    };
    BaseRte.prototype._handleQuote = function () {
        this._clearFormatting();
        this._formatOrPrepare('blockquote');
    };
    BaseRte.prototype._handleUnderline = function () {
        this._formatOrPrepare('underline');
    };
    BaseRte.prototype._handleUnlink = function () {
        this.focus();
        sp_telemetry_1._EngagementLogger.logEvent(this._engagementLoggerClickTagName('Unlink'), CLICK_ACTION);
        if (this._currentSelection) {
            this._editor.format(this._currentSelection.start, this._currentSelection.end, { 'link': false });
            this._finalizeAction(RteStrings_resx_1.default.FormattingBarUnlinkButtonTitle);
        }
        this._closeLinkDialog();
    };
    BaseRte.prototype._cleanupBeforeFormatting = function (start, end, newFormat) {
        var formatsToClear = {};
        if (newFormat.isBlockStyle) {
            var blockStyles = this._config.supportedFormatsArray.filter((function (format) { return format.isBlockStyle; }));
            for (var _i = 0, blockStyles_1 = blockStyles; _i < blockStyles_1.length; _i++) {
                var format = blockStyles_1[_i];
                formatsToClear[format.editorKey] = false;
            }
        }
        if (newFormat.masks) {
            for (var _a = 0, _b = newFormat.masks; _a < _b.length; _a++) {
                var maskedFormatKey = _b[_a];
                formatsToClear[this._config.formats.get(maskedFormatKey).editorKey] = false;
            }
        }
        this._editor.format(start, end, formatsToClear, true);
        return formatsToClear.hasOwnProperty(newFormat.editorKey);
    };
    BaseRte.prototype._onMessageBarDismiss = function () {
        this.setState({ isImageWrappedWithText: false });
    };
    BaseRte.prototype._onContextualMenuDismiss = function () {
        this.setState({ isContextMenuVisible: false });
    };
    BaseRte.prototype._onLinkDialogSaved = function (displayText) {
        if (this._linkDialog.textFieldValue) {
            this._editor.format(this._currentSelection.start, this._currentSelection.end, {
                'link': this._linkDialog.textFieldValue,
                'linkText': displayText
            });
        }
        this._linkElement = undefined;
        this._finalizeAction(RteStrings_resx_1.default.FormattingBarLinkButtonTitle);
        this._closeLinkDialog();
    };
    BaseRte.prototype._handlePagePickerSave = function (link) {
        this._editor.format(this._currentSelection.start, this._currentSelection.end, {
            'link': link.url,
            'linkText': link.title,
            'shouldOpenInNewTab': link.shouldOpenInNewTab
        });
        RteA11y_1.ariaAlert(odsp_utilities_bundle_1.StringHelper.format(RteStrings_resx_1.default.RTEPagePickerSaveAction, link.title));
        this._restoreSelectionOnNextFocus = true;
    };
    BaseRte.prototype._handlePagePickerUnlink = function () {
        if (this._currentSelection) {
            var linkText = this._currentSelection.text || '';
            this._editor.format(this._currentSelection.start, this._currentSelection.end, { 'link': false });
            RteA11y_1.ariaAlert(odsp_utilities_bundle_1.StringHelper.format(RteStrings_resx_1.default.RTEPagePickerUnlinkAction, linkText));
        }
        this._restoreSelectionOnNextFocus = true;
    };
    BaseRte.prototype._handleEditorFocus = function (evt) {
        this._restoreOnFocus();
    };
    BaseRte.prototype._handleEditorBlur = function (evt) {
        var _this = this;
        this._async.setTimeout((function () {
            return _this._hideFormattingBarOnBlur(evt.relatedTarget);
        }), 100);
    };
    BaseRte.prototype._hideFormattingBarOnBlur = function (target) {
        var elem = target;
        if ((this._editorElement && this._editorElement.contains(elem)) ||
            (this._formattingbarElement && this._formattingbarElement.contains(elem)) ||
            (CanvasStore_1.default.isRTESettingsFlightEnabled && this._isPropertyPaneOpen) ||
            elem && elem.className === 'ControlZone ControlZone--edit ControlZone--selected') {
            return;
        }
        else {
            this._updateFormattingBar(true);
        }
    };
    BaseRte.prototype._handleKeyUp = function (evt) {
        this._checkSelectionChange();
        this._updateActiveButtons();
    };
    BaseRte.prototype._setButtonStates = function () {
        var range = this._editor.getSelection();
        if (range) {
            var updatedFormats = new Map();
            for (var _i = 0, _a = this._config.supportedFormatsArray; _i < _a.length; _i++) {
                var format = _a[_i];
                updatedFormats.set(format.key, false);
            }
            var maskingFormats = this._config.supportedFormatsArray.filter((function (format) { return !!format.masks; }));
            for (var _b = 0, maskingFormats_1 = maskingFormats; _b < maskingFormats_1.length; _b++) {
                var maskingFormat = maskingFormats_1[_b];
                if (!updatedFormats.get(maskingFormat.key)) {
                    var isActive = this._editor.isFormatAppliedToRange(range.start, range.end, maskingFormat);
                    this._buttonStates.set(maskingFormat.key, isActive ? ToolbarButton_1.ButtonState.Active : ToolbarButton_1.ButtonState.Normal);
                    updatedFormats.set(maskingFormat.key, true);
                    if (isActive) {
                        for (var _c = 0, _d = maskingFormat.masks; _c < _d.length; _c++) {
                            var maskedFormat = _d[_c];
                            this._buttonStates.set(maskedFormat, ToolbarButton_1.ButtonState.Disabled);
                            updatedFormats.set(maskedFormat, true);
                        }
                    }
                }
            }
            for (var _e = 0, _f = this._config.supportedFormatsArray; _e < _f.length; _e++) {
                var format = _f[_e];
                if (!updatedFormats.get(format.key)) {
                    var isActive = this._editor.isFormatAppliedToRange(range.start, range.end, format);
                    this._buttonStates.set(format.key, isActive ? ToolbarButton_1.ButtonState.Active : ToolbarButton_1.ButtonState.Normal);
                }
            }
        }
        if (this._isRtl) {
            var left = this._buttonStates.get('alignLeft');
            this._buttonStates.set('alignLeft', this._buttonStates.get('alignRight'));
            this._buttonStates.set('alignRight', left);
        }
    };
    BaseRte.prototype._updateActiveButtons = function () {
        this.forceUpdate();
    };
    BaseRte._URL_VALIDATION_REGEX = new RegExp('((^https?:\/\/)|(^ftp:\/\/)|(^file:\/\/)|(^mailto:)|(^news:)|(^pnm:\/\/)|(^mms:\/\/)|(^\/)|(^#)|(^\\\\)).+', 'i');
    BaseRte._SERVICESCOPE_PROP_KEY = 'serviceScope';
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "removeFontColorFormat", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "removeHighlightColor", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_postEditorCreatedHandlerComplete", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_initPagePicker", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_onContextualMenu", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleSelectionChange", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_updateSelection", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_onBeforePaste", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleKeyDown", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleLink", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleFormattingBarKeyDown", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind 
    ], BaseRte.prototype, "_handleFormattingBarBlur", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_getFormatButtonProps", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleCloseSubmenu", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_onSPRteLoad", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_checkSelectionChange", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleClearFormatting", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleUndo", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleRedo", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleFontSize", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleFontColor", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleHighlightColor", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleAlignCenter", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleAlignLeft", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleAlignRight", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleBold", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleHeading2", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleHeading3", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleHeading4", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleItalic", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleListBullets", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleListNumbered", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleStrikeThrough", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleSuperscript", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleSubscript", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleJustify", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleIndent", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleOutdent", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleTable", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleTableCommands", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleUnlinkCommand", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handlePlainText", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleQuote", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleUnderline", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleUnlink", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_onMessageBarDismiss", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_onContextualMenuDismiss", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_onLinkDialogSaved", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handlePagePickerSave", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handlePagePickerUnlink", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleEditorFocus", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleEditorBlur", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_handleKeyUp", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], BaseRte.prototype, "_setButtonStates", null);
    return BaseRte;
}(office_ui_fabric_react_1.BaseComponent));
exports.BaseRte = BaseRte;


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * This file contains the known list of features (a.k.a. flights or ramps).
 * The signature of one entry is:
 *  static FeatureName: IFlight = { ODB: 100, ODC: "foo", Fallback: true };
 * ODB            Is the numerical value of the flight from the ExpFeature enumeration.
 *                Omit if the flight does not have a correspondent in ODB.
 * ODC            Is the string identifier in ODC.
 *                Omit if the flight does not have a correspondent ramp in ODC.
 * OneDrive       Is the value of the flight in OneDrive.
 *                Omit if the flight does not have a correspondent ramp in OneDrive.
 * Fallback       The state of the flight, true = on false = off.
 *                The fallback is used only when the ODB or ODC flight is not applicable.
 *                For example: The Flight is an ODB flight with no ODC counterpart and the app runs in ODC mode.
 *                The fallback also allows declaring app only switches that are not known to the backend.
 *                Omit if false.
 */
var Features = (function () {
    function Features() {
    }
    /**
     * Performs the initialization of the client side features for
     * SP and ODB in scenarios where the window['_spPageContextInfo']
     * is not available.
     *
     * @param {number[]} expFeatures - The bit map of the client side features
     * usually provided by the ISPPageContext.
     *
     * @example initSPExpFeatures(pageContextInfo.ExpFeatures)
     */
    Features.initSPExpFeatures = function (expFeatures) {
        Features._expFeatures = expFeatures;
    };
    /**
     * This function will return true when the feature is enabled and
     * will check the proper config for SP,ODB and/or ODC to determine.
     *
     * @requires In scenarios where the window['_spPagecontextInfo'] might not exist
     * this function requires initSPExpFeatures before checing the state of ODB features.
     *
     * @param {IFeature} feature - the feature to be checked if enabled.
     * @return {boolean} - True if the feature is found active.
     */
    Features.isFeatureEnabled = function (feature) {
        var result = !!feature.Fallback;
        // OneDriveWeb initialization
        var oneDrivePageContext = window['PageContext'];
        // ODC initialization
        var _odcFlightInfo = window['Flight'];
        var _odcConfig = window['FilesConfig'];
        // SP/ODB: for backward compatibility,
        // if _spPageContextInfo is still available
        // this performs the initialization of the _expFeatures.
        var _flighting = window['Flighting']; // Old SharePoint pages use this.
        var _spPageContextInfo = window['_spPageContextInfo'];
        if (!Features._expFeatures && _spPageContextInfo) {
            if (!_spPageContextInfo.ExpFeatures &&
                _flighting && _flighting.ExpFeatures) {
                _spPageContextInfo.ExpFeatures = _flighting.ExpFeatures;
            }
            Features.initSPExpFeatures(_spPageContextInfo.ExpFeatures);
        }
        var odb = feature.ODB;
        if (odb && Features._expFeatures) {
            if (typeof odb === 'boolean') {
                result = odb;
            }
            else if (odb > 0) {
                var elem = Math.floor(odb / 32);
                var mask = 1 << (odb % 32);
                result = (elem < Features._expFeatures.length) &&
                    (Features._expFeatures[elem] & mask) !== 0;
            }
        }
        if (feature.ODC && !!_odcConfig) {
            if (typeof feature.ODC === 'boolean') {
                result = feature.ODC;
            }
            else if (_odcFlightInfo && _odcFlightInfo.Ramps && _odcFlightInfo.Ramps[feature.ODC]) {
                result = true;
            }
            else if (_odcConfig && _odcConfig[feature.ODC]) {
                result = true;
            }
        }
        if (feature.OneDrive && !!oneDrivePageContext) {
            result = feature.OneDrive;
        }
        return result;
    };
    /* This feature is always on */
    Features.On = { Fallback: true };
    /* This feature is always off */
    Features.Off = {};
    //You should not add features here but in your own file
    Features._expFeatures = null;
    return Features;
}());
exports.default = Features;


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:CoverageThreshold(75)
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var EventBase_1 = __webpack_require__(24);
var Manager_1 = __webpack_require__(18);
var ResultTypeEnum_1 = __webpack_require__(30);
var ErrorHelper_1 = __webpack_require__(14);
var Async_1 = __webpack_require__(25);
var ObjectUtil_1 = __webpack_require__(19);
var schemaExceptionErrorCode = 'GetSchemaException';
var promiseCreationFailureErrorCode = 'PromiseCreationFailed';
var timeoutErrorCode = 'Timeout';
function generateQosResult(resultType, resultCode, error) {
    var schema = {
        resultType: resultType
    };
    if (resultCode) {
        schema.resultCode = resultCode;
    }
    if (error) {
        schema.error = error;
    }
    return schema;
}
function createPairedEvent(props, metadata, baseClass) {
    var PairedEvent = (function (_super) {
        __extends(PairedEvent, _super);
        function PairedEvent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return PairedEvent;
    }(PairedEventBase));
    EventBase_1.addEventProps(PairedEvent.prototype, props, metadata, baseClass);
    return PairedEvent;
}
exports.createPairedEvent = createPairedEvent;
var PairedEventBase = (function (_super) {
    __extends(PairedEventBase, _super);
    function PairedEventBase(data, parent) {
        return _super.call(this, data, EventBase_1.ClonedEventType.Start, parent) || this;
    }
    PairedEventBase.instrumentPromise = function (startSchema, createPromise, getCompleteSchema, getErrorSchema, timeoutMs, timeoutSchema, parent) {
        var promise;
        var event = new this(startSchema, parent);
        if (timeoutMs) {
            event.setTimeout(timeoutMs, timeoutSchema);
        }
        var onComplete = function (result) {
            var schema;
            if (getCompleteSchema) {
                try {
                    schema = getCompleteSchema(result);
                }
                catch (e) {
                    schema = generateQosResult(ResultTypeEnum_1.ResultTypeEnum.Failure, schemaExceptionErrorCode, e.toString());
                }
            }
            else {
                schema = generateQosResult(ResultTypeEnum_1.ResultTypeEnum.Success);
            }
            event.end(schema);
        };
        var onError = function (errorArgs) {
            var schema;
            if (getErrorSchema) {
                try {
                    schema = getErrorSchema(errorArgs);
                }
                catch (e) {
                    schema = generateQosResult(ResultTypeEnum_1.ResultTypeEnum.Failure, schemaExceptionErrorCode, e.toString());
                }
            }
            else if (errorArgs) {
                var failureResultType = (errorArgs instanceof Error && errorArgs.name === "Canceled") ?
                    ResultTypeEnum_1.ResultTypeEnum.ExpectedFailure : ResultTypeEnum_1.ResultTypeEnum.Failure;
                schema = generateQosResult(failureResultType, null, ObjectUtil_1.safeSerialize(errorArgs));
            }
            else {
                schema = generateQosResult(ResultTypeEnum_1.ResultTypeEnum.Failure);
            }
            event.end(schema);
        };
        try {
            promise = createPromise();
        }
        catch (e) {
            event.end(generateQosResult(ResultTypeEnum_1.ResultTypeEnum.Failure, promiseCreationFailureErrorCode, e.toString()));
            throw e;
        }
        promise.then(onComplete, onError);
        return promise;
    };
    PairedEventBase.prototype.setTimeout = function (ms, data) {
        if (!this.async) {
            this.async = new Async_1.default(this);
        }
        this._clearTimeout();
        if (!data) {
            data = generateQosResult(ResultTypeEnum_1.ResultTypeEnum.Failure, timeoutErrorCode);
        }
        this.async.setTimeout(this.end.bind(this, data), ms);
    };
    PairedEventBase.prototype.verbose = function (message) {
        if (this.endTime) {
            // event already ended, no need to log anymore
            return;
        }
        if (this._isQosEvent()) {
            var qosSchema = this.data;
            ErrorHelper_1.default.verbose(message, qosSchema.name);
        }
    };
    PairedEventBase.prototype.end = function (data) {
        // Make sure end can only be called once
        if (!this.endTime) {
            if (data) {
                this._setData(data);
            }
            // Set the end time
            this.endTime = Manager_1.Manager.getTime();
            // Log the event end
            this._logEvent(EventBase_1.ClonedEventType.End);
            // If this is a QOS event log and contains an error message trigger the upload of logs by calling
            // the ErrorHelper
            if (this._isQosEvent()) {
                var qosSchema = this.data;
                if (qosSchema.error) {
                    ErrorHelper_1.default.log(qosSchema.error, qosSchema.name, qosSchema.resultCode, qosSchema.resultType);
                }
            }
            this._clearTimeout();
        }
    };
    PairedEventBase.prototype._clearTimeout = function () {
        if (this.async && this.timeoutId) {
            this.async.clearTimeout(this.timeoutId);
            this.timeoutId = null;
        }
    };
    PairedEventBase.prototype._isQosEvent = function () {
        return this.eventName.indexOf('Qos,') >= 0;
    };
    return PairedEventBase;
}(EventBase_1.EventBase));


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var SingleEventBase_1 = __webpack_require__(8);
var Trace_event_1 = __webpack_require__(73);
exports.CaughtError = SingleEventBase_1.createSingleEvent({
    eventName: 'CaughtError,Trace,',
    shortEventName: 'CaughtError',
    critical: true,
    requiresParent: false
}, {
    stack: 1 /* String */,
    extraData: 4 /* Object */
}, Trace_event_1.Trace);
exports.default = exports.CaughtError;


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// OneDrive:IgnoreCodeCoverage
var Async_1 = __webpack_require__(25);
var PageTransitionType_1 = __webpack_require__(76);
var RUMOneDataUpload_event_1 = __webpack_require__(77);
var PlatformDetection_1 = __webpack_require__(40);
var PerformanceMarker_1 = __webpack_require__(78);
var PerformanceDataState;
(function (PerformanceDataState) {
    /**
     * Not enought data collected to upload
     * At this state logger isRunning is true
     */
    PerformanceDataState[PerformanceDataState["Incomplete"] = 1] = "Incomplete";
    /**
     * Required data collected and can be uploaded.
     * Practically all expected controls has rendered by this time
     * and EUPL has been set.
     * At this state logger isRunning is true but sooner to change to false.
     */
    PerformanceDataState[PerformanceDataState["ReadyToUpload"] = 2] = "ReadyToUpload";
    /**
     * Incomplete -> ReadyToUpload |  ERROR_TIMEOUT time elapsed -> Uploaded
     * Performance data has been uploaded for the current page.
     * Until reset, no more data will be uploaded.
     */
    PerformanceDataState[PerformanceDataState["Uploaded"] = 3] = "Uploaded";
    /**
     * Incomplete -> ERROR_TIMEOUT time elapsed -> TimeOut -> Uploaded
     * Timeout occured before expected controls could finish rendering
     * Data will be uploaded as it is but without EUPL.
     * Consumer should consider EUPL="" as > 30 sec for performance analysis
     */
    PerformanceDataState[PerformanceDataState["TimeOut"] = 4] = "TimeOut";
    /**
     * Incomplete -> (ERROR_TIMEOUT time elapsed && TimeOut) | ReadyToUpload -> Skipped
     * This is a state where data has been collected or timeout but uploading the data was skipped
     * This happens when consumer has asked to do so based on the page's debug environment
     */
    PerformanceDataState[PerformanceDataState["Skipped"] = 5] = "Skipped";
})(PerformanceDataState || (PerformanceDataState = {}));
var APICallPerformanceData = (function () {
    function APICallPerformanceData(url, duration, correlationid, status, startTime, endTime, name) {
        this.url = url;
        this.duration = duration;
        this.correlationId = correlationid;
        this.status = status;
        this.startTime = startTime;
        this.endTime = endTime;
        this.name = name;
    }
    return APICallPerformanceData;
}());
exports.APICallPerformanceData = APICallPerformanceData;
var ControlPerformanceData = (function () {
    function ControlPerformanceData(controlId, startTime, endTime, renderTimeCalculator, renderTimeRequiredDataChecker, ignoreForEUPL) {
        this.controlId = controlId;
        this.startTime = startTime;
        this.endTime = endTime;
        this.renderTimeCalculator = renderTimeCalculator;
        this.renderTimeRequiredDataChecker = renderTimeRequiredDataChecker;
        this.ignoreForEUPL = !!ignoreForEUPL;
    }
    return ControlPerformanceData;
}());
exports.ControlPerformanceData = ControlPerformanceData;
function isNullOrUndefined(item) {
    'use strict';
    return item === null || typeof item === 'undefined';
}
var performance = window.performance;
/**
 * It is a new client side perf instrumentation, it logs more metrics, like scenario, api data, server request id, duration, etc in 1 single schema.
 * It has server side usage DB and cosmos supports.
 */
var RUMOneLogger = (function () {
    function RUMOneLogger(logFunc) {
        this.async = new Async_1.default(this);
        this.dataStartTime = Number((new Date()).getTime());
        this._rumoneData = {};
        this.dataState = PerformanceDataState.Incomplete;
        this.controls = [];
        this.apis = [];
        this.euplBreakDown = {};
        this.serverMetrics = {};
        this.isW3cTimingCollected = false;
        this.isW3cResourceTimingCollected = false;
        this.tempData = {};
        this._emergencyUpdateFunc = this._emergencyUpload.bind(this);
        this.loggingFunc = logFunc;
        this.setPerfDataTimer();
        this._platformDetection = new PlatformDetection_1.default();
        this._hookUnloadEvent();
    }
    /**
     * RUMOneLogger.getRUMOneLogger: Use this method to get a singleton reference of RUMOneLogger
     * with default parameters.
     */
    RUMOneLogger.getRUMOneLogger = function (logFunc) {
        var loggingFunc = logFunc || (function (streamName, dictProperties) {
            RUMOneDataUpload_event_1.RUMOneDataUpload.logData({ streamName: streamName, dictionary: dictProperties });
        });
        if (!RUMOneLogger.rumOneLogger) {
            try {
                RUMOneLogger.rumOneLogger = new RUMOneLogger(loggingFunc);
            }
            catch (e) {
                // If RUMOneLogger fails, don't block UX
                RUMOneLogger.rumOneLogger = null;
            }
        }
        return RUMOneLogger.rumOneLogger;
    };
    RUMOneLogger.prototype.getPerformanceData = function () {
        return this._rumoneData;
    };
    RUMOneLogger.prototype.resetLogger = function () {
        this._emergencyUpload(); // upload ready key metrics if we have not. this should rarely happen
        this.dataStartTime = (new Date()).getTime();
        this.dataState = PerformanceDataState.Incomplete;
        this.isW3cTimingCollected = false;
        this.isW3cResourceTimingCollected = false;
        this.controls = [];
        this.apis = [];
        this.tempData = {};
        this._rumoneData = {};
        this._excludePageData = false;
        this._waitOnAddingExpectedControl = false;
        this.clearPerfDataTimer();
        this.setPerfDataTimer();
        this.euplBreakDown = {};
        this.serverMetrics = {};
        this.clearResourceTimings();
        PerformanceMarker_1.clearMarks();
        this._unhookUnloadEvent();
        this._hookUnloadEvent();
        this.logMessageInConsole("Reset performance Logger Done");
    };
    /**
     * Consumer should own logic to determine whether to ignore the  page for perf data collection
     * when Called this API, RUMOneLogger will not upload data but display in the console for debug purpose
     * E.g. Hidden Preload.aspx page for sharepoint or a debug page with #debugManifest or ?moduleLoader= in the url
     *
     */
    RUMOneLogger.prototype.excludePageForPerfData = function () {
        this._excludePageData = true;
    };
    RUMOneLogger.prototype.getPerformanceDataPropertyValue = function (key) {
        return key && this._rumoneData[key];
    };
    RUMOneLogger.prototype.addExpectedControl = function (control) {
        var normalizedControl = this._normalizeControl(control);
        if (!this.expectingControl(control)) {
            this.controls.push(normalizedControl);
        }
        else {
            // Ensure expected controls are not ignored from EUPL
            this.controls.filter((function (expected) { return expected.controlId === normalizedControl.controlId; }))[0].ignoreForEUPL = normalizedControl.ignoreForEUPL;
        }
    };
    RUMOneLogger.prototype.expectingControl = function (control) {
        var normalizedControl = this._normalizeControl(control);
        return this.controls.filter((function (expected) { return expected.controlId === normalizedControl.controlId; })).length > 0;
    };
    RUMOneLogger.prototype.writeServerCorrelationId = function (correlationId) {
        this._rumoneData.ServerCorrelationId = this._rumoneData.ServerCorrelationId || correlationId;
    };
    RUMOneLogger.prototype.writeServerUrl = function (url) {
        if (!this._rumoneData.ServerUrl) {
            this._rumoneData.ServerUrl = url || window.location.href;
        }
    };
    RUMOneLogger.prototype.writeServerSideLatency = function (duration, iisLatency) {
        if (!this.isCollected('ServerRequestDuration')) {
            this._rumoneData.ServerRequestDuration = duration;
            this._rumoneData.IISLatency = iisLatency;
        }
    };
    RUMOneLogger.prototype.writeControlPerformanceData = function (controlData) {
        if (controlData) {
            var foundControl = this.controls.filter((function (control) { return control.controlId === controlData.controlId; }))[0];
            if (foundControl) {
                if (!foundControl.data) {
                    foundControl.data = controlData;
                }
            }
            else {
                var control = {
                    controlId: controlData.controlId,
                    ignoreForEUPL: controlData.ignoreForEUPL || true,
                    data: controlData
                };
                this.controls.push(control);
            }
        }
    };
    RUMOneLogger.prototype.writeAPICallPerformanceData = function (apiData) {
        if (apiData) {
            this.apis.push(apiData);
        }
    };
    RUMOneLogger.prototype.readAPICallPerformanceData = function () {
        return this.apis;
    };
    RUMOneLogger.prototype.writeAppCache = function (appCache) {
        if (!this.isCollected('AppCache')) {
            this._rumoneData.AppCache = appCache;
        }
    };
    RUMOneLogger.prototype.writePageTransitionType = function (pageTransitionType, overwrite) {
        if ((!this.isCollected('PageTransitionType') || overwrite) &&
            (pageTransitionType === PageTransitionType_1.default.fullPageLoad || pageTransitionType === PageTransitionType_1.default.none || pageTransitionType === PageTransitionType_1.default.onePageAppNavigation)) {
            this._rumoneData.PageTransitionType = pageTransitionType;
        }
    };
    RUMOneLogger.prototype.writeScenarioId = function (scenarioId, overwrite) {
        if (!this.isCollected('ScenarioId') || overwrite) {
            this._rumoneData.ScenarioId = scenarioId;
        }
    };
    RUMOneLogger.prototype.collectW3CPerfTimings = function () {
        if (!this.isW3cTimingCollected) {
            var w3cTimeStampNames = ['navigationStart', 'unloadEventStart', 'unloadEventEnd', 'fetchStart', 'redirectStart', 'redirectEnd', 'domainLookupStart', 'domainLookupEnd', 'connectStart', 'secureConnectionStart', 'connectEnd', 'requestStart', 'responseStart', 'responseEnd', 'domLoading', 'domComplete', 'loadEventStart', 'loadEventEnd'];
            var perfTimingObject = performance && performance.timing;
            if (perfTimingObject) {
                for (var index = 0; index < w3cTimeStampNames.length; index++) {
                    var w3cObject = perfTimingObject[w3cTimeStampNames[index]];
                    if (w3cObject) {
                        this._logRUMOneData(this.getW3cTimingName(w3cTimeStampNames[index]), Number(w3cObject));
                    }
                }
                this.isW3cTimingCollected = true;
            }
        }
    };
    RUMOneLogger.prototype.collectW3cResourceTimings = function () {
        if (!this.isW3cResourceTimingCollected && performance && performance.getEntriesByType) {
            var allRequests = performance.getEntriesByType("resource");
            var iFrames = document.getElementsByTagName("iframe");
            for (var index = 0; index < iFrames.length; index++) {
                var iFramePerformance = null;
                try {
                    iFramePerformance = iFrames[index].contentWindow.performance;
                }
                catch (e) {
                    // sometimes we can't access iFrame.
                }
                if (iFramePerformance && iFramePerformance.getEntriesByType) {
                    allRequests.concat(iFramePerformance.getEntriesByType("resource"));
                }
            }
            var fromSources = {};
            fromSources["SharePoint"] = function (element) { return /\.sharepoint\.com|\.spoppe\.com/i.test(element.name); }; //matching sharepoint.com or spoppe.com
            fromSources["CDN"] = function (element) { return /(cdn(ppe)?|static(ppe)?)\.sharepointonline\.com|\.akamaihd\.net/i.test(element.name); }; //matching cdn(ppe)sharepointonline.com or adamaihd.net
            fromSources["ThirdParty"] = function (element) { return !fromSources["SharePoint"](element) && !fromSources["CDN"](element); }; // all requests other than sharepoint requests or cdn requests
            var types = {};
            types["ASPX"] = function (element) { return /\.aspx/i.test(element.name); };
            types["JS"] = function (element) { return /script/i.test(element.initiatorType); };
            types["CSS"] = function (element) { return /link|css/i.test(element.initiatorType); };
            types["IMG"] = function (element) { return /img/i.test(element.initiatorType); };
            var sources = Object.keys(fromSources);
            for (var index = 0; index < sources.length; index++) {
                var source = sources[index];
                var requests = this.categorizeResourceRequests(allRequests, {
                    from: fromSources[source],
                    requestType: null //match any type to get total request count for this source
                });
                this._logRUMOneData(source + "RequestCountTotal", requests.length); //SharePoint|CDN|ThirdParty resource request count
                var typeKeys = Object.keys(types);
                for (var typeIndex = 0; typeIndex < typeKeys.length; typeIndex++) {
                    var type = typeKeys[typeIndex];
                    this._logRUMOneData(source + "RequestCount" + type, this.categorizeResourceRequests(requests, {
                        from: null,
                        requestType: types[type]
                    }).length); //SharePoint|CDN|ThirdParty ASPX resource request count
                }
                if (requests.length > 0) {
                    this._logRUMOneData(source + "RequestDownloadTime", Math.round(requests.reduce((function (sum, currentVal) {
                        return sum + currentVal.duration;
                    }), 0) / requests.length)); //SharePoint|CDN|ThirdParty resource request average duration
                    // log the file names of all resource requests in a JSON string. The output after processing will looks like:
                    // [{name: "require-db6c47e2.js", startTime: 500, duration: 100},{name: "RenderListDataAsStream", startTime: 200, duration: 10}]
                    // The raw resource name before this processing is "https://msft.spoppe.com/teams/SPGroups/_api/web/GetList(@listUrl)/RenderListDataAsStream?Paged=TRUE&p_FileLeafRef=test%2eurl&p_ID=213&PageFirstRow=121&View=6eab4254-2f2f-4086-91c0-549ae900cc93&@listUrl=%27%2Fteams%2FSPGroups%2FVNextDocLib%27"
                    var files = JSON.stringify(requests.map((function (timing) {
                        return {
                            name: timing.name.split("/").map((function (urlToken) {
                                return urlToken.split("?")[0];
                            })).filter((function (urlToken) {
                                return urlToken && urlToken.length > 0;
                            })).slice(-1)[0].replace(/\(.*?\)/g, '()'),
                            startTime: Math.round(timing.startTime),
                            duration: Math.round(timing.duration),
                            transferSize: timing['transferSize'] || 0
                        };
                    })));
                    this._logRUMOneData(source + "RequestNames", files);
                }
            }
            this.isW3cResourceTimingCollected = true;
        }
    };
    RUMOneLogger.prototype.saveTempData = function (key, value) {
        this.tempData[key] = value;
    };
    RUMOneLogger.prototype.readTempData = function (key) {
        return this.tempData[key];
    };
    RUMOneLogger.prototype.writeRenderTime = function (renderTime, overwrite) {
        if (!this.isCollected('RenderTime') || overwrite) {
            this._rumoneData.RenderTime = renderTime;
        }
    };
    RUMOneLogger.prototype.writePreRenderTime = function (preRender) {
        if (!this.isCollected('PreRender')) {
            this._rumoneData.PreRender = preRender;
        }
    };
    RUMOneLogger.prototype.writePostRenderTime = function (postRender) {
        if (!this.isCollected('PostRender')) {
            this._rumoneData.PostRender = postRender;
        }
    };
    RUMOneLogger.prototype.writeDataFetchTime = function (dataFetch, overwrite) {
        if (!this.isCollected('DataFetch') || overwrite) {
            this._rumoneData.DataFetch = dataFetch;
        }
    };
    RUMOneLogger.prototype.isRunning = function () {
        return !(this.dataState === PerformanceDataState.Uploaded ||
            this.dataState === PerformanceDataState.TimeOut ||
            this.dataState === PerformanceDataState.Skipped);
    };
    RUMOneLogger.prototype.writeEUPLBreakdown = function (euplBreakdown, overwrite) {
        if (euplBreakdown) {
            try {
                var breakdown = JSON.parse(euplBreakdown);
                for (var key in breakdown) {
                    if (!breakdown.hasOwnProperty(key)) {
                        continue;
                    }
                    this.addEUPLBreakdown(key, breakdown[key], overwrite);
                }
            }
            catch (e) {
                // in case the euplBreakdown is invalid JSON
                this.logMessageInConsole("Failed to write EUPL breakdown data:" + e.toString());
            }
        }
    };
    RUMOneLogger.prototype.addEUPLBreakdown = function (name, value, overwrite) {
        if (name && !isNullOrUndefined(value)) {
            if (isNullOrUndefined(this.euplBreakDown[name]) || overwrite) {
                var data = this._isBreakdownValue(value) ? value.data : value;
                this.euplBreakDown[name] = data;
            }
            //  kusto job to parse EUPLBreakdown property bag is expensive and cause a lot kusto/MDM perf issues.
            //  to workaround it, we flatten EUPLBreakdown properties that are marked with needFlatten===true to send
            //  them to aria as individual columns. After this change, kusto query does not need to parse json any more.
            if (this._isBreakdownValue(value) && value.needFlatten) {
                this._logRUMOneData(name, value.data);
            }
        }
    };
    RUMOneLogger.prototype.readEUPLBreakdown = function (name) {
        return !!name ? this.euplBreakDown[name] : this.euplBreakDown;
    };
    /**
     * Add list of flights enabled for this page.
     */
    RUMOneLogger.prototype.addFlights = function (flights) {
        if (flights && flights.length > 0) {
            var _flights = JSON.parse(this.getPerformanceDataPropertyValue('Flights') || '[]');
            for (var index = 0; index < flights.length; index++) {
                var flight = flights[index];
                if (flight && _flights.indexOf(flight) === -1) {
                    _flights.push(flight);
                }
            }
            this._rumoneData.Flights = JSON.stringify(_flights);
        }
    };
    RUMOneLogger.prototype.addServerMetrics = function (metric, overwrite) {
        if (metric) {
            for (var key in metric) {
                if (key && !isNullOrUndefined(metric[key]) &&
                    (isNullOrUndefined(this.serverMetrics[key]) || overwrite)) {
                    this.serverMetrics[key] = metric[key];
                }
            }
        }
    };
    /**
     * Write version of the Sharepoint server served the request
     */
    RUMOneLogger.prototype.writeServerVersion = function (version) {
        this._rumoneData.SharePointServerVersion = version;
    };
    RUMOneLogger.prototype.readControlPerformanceData = function () {
        return this.controls.filter((function (control) { return !!control.data; })).map((function (control) { return control.data; }));
    };
    RUMOneLogger.prototype.mark = function (name) {
        PerformanceMarker_1.mark(name);
    };
    RUMOneLogger.prototype.now = function () {
        return performance && performance.now ? Math.round(performance.now()) : NaN;
    };
    /**
     * Register handler function that will be called back when EUPL is computed successfully.
     * @param handler function that app register, wiill be called back when EUPL is computed.
     */
    RUMOneLogger.prototype.registerEUPLComputedHandler = function (handler) {
        this._EUPLComputedHandler = handler;
    };
    /**
     * Register handler function that will be called back when timeout happens.
     * @param handler function that app register, will be called back when timeout happens
     */
    RUMOneLogger.prototype.registerErrorHandler = function (handler) {
        /* no-op */
    };
    RUMOneLogger.prototype.getMarkerTime = function (name) {
        return PerformanceMarker_1.getMarkerTime(name);
    };
    Object.defineProperty(RUMOneLogger.prototype, "waitOnAddingExpectedControl", {
        /**
         * If set to true, RUMOnelogger will wait until this is not set false again before concluding all expected controls are added
         * Set it to true if not all expected controls are added
         * Set it to false once all expected controls has been added
         */
        set: function (wait) {
            this._waitOnAddingExpectedControl = wait;
        },
        enumerable: true,
        configurable: true
    });
    RUMOneLogger.prototype._logRUMOneData = function (key, value) {
        if (key) {
            this._rumoneData[key] = value;
        }
    };
    RUMOneLogger.prototype.clearResourceTimings = function () {
        if (performance && performance.clearResourceTimings) {
            performance.clearResourceTimings();
        }
    };
    RUMOneLogger.prototype._isBreakdownValue = function (data) {
        return data.needFlatten !== undefined;
    };
    RUMOneLogger.prototype.collectMarks = function () {
        var marks = {};
        var markerIndex = 0;
        PerformanceMarker_1.getAllMarks().forEach((function (mark) {
            if (markerIndex < RUMOneLogger.MAX_MARKS) {
                var markName = mark.name.substr(PerformanceMarker_1.MARKER_PREFIX.length) + (".mark" + markerIndex++);
                marks[markName] = Math.round(mark.startTime); // covert to rumone collected marks to object and merge to EUPL Breakdown
            }
        }));
        this.writeEUPLBreakdown(JSON.stringify(marks));
    };
    RUMOneLogger.prototype.logMessageInConsole = function (message) {
        if (this.isRUMOneDebuggingEnabled) {
            console.log(message);
        }
    };
    Object.defineProperty(RUMOneLogger.prototype, "isRUMOneDebuggingEnabled", {
        get: function () {
            try {
                if ('sessionStorage' in window && window.sessionStorage) {
                    var debugStr = window.sessionStorage["enableRUMOneDebugging"];
                    var debug = debugStr && debugStr.toLowerCase() === "true";
                    return debug && typeof console !== "undefined" && !!console;
                }
            }
            catch (e) {
                // sessionStorage errors
            }
            return false;
        },
        enumerable: true,
        configurable: true
    });
    RUMOneLogger.prototype.logObjectForDebugging = function (propertyName, dictProperties) {
        if (this.isRUMOneDebuggingEnabled) {
            var logMessageText = propertyName + " : " + JSON.stringify(dictProperties);
            console.log(logMessageText);
        }
    };
    RUMOneLogger.prototype.isCollected = function (name) {
        return !isNullOrUndefined(this.getPerformanceDataPropertyValue(name));
    };
    RUMOneLogger.prototype._normalizeControl = function (control) {
        return typeof control === 'string' ? {
            controlId: control,
            ignoreForEUPL: false
        } : control;
    };
    RUMOneLogger.prototype.setPerfDataTimer = function () {
        this.perfDataTimer = this.async.setTimeout(this.loopForDataCompleteness, RUMOneLogger.CHECK_INTERVAL);
    };
    RUMOneLogger.prototype.clearPerfDataTimer = function () {
        if (!isNullOrUndefined(this.perfDataTimer)) {
            this.async.clearTimeout(this.perfDataTimer);
            this.perfDataTimer = null;
        }
    };
    RUMOneLogger.prototype._hookUnloadEvent = function () {
        /* tslint:disable:ban-native-functions */
        if (window.addEventListener) {
            window.addEventListener('beforeunload', this._emergencyUpdateFunc);
        }
        /* tslint:enable:ban-native-functions */
    };
    RUMOneLogger.prototype._unhookUnloadEvent = function () {
        /* tslint:disable:ban-native-functions */
        if (window.removeEventListener) {
            window.removeEventListener('beforeunload', this._emergencyUpdateFunc);
        }
        /* tslint:enable:ban-native-functions */
    };
    RUMOneLogger.prototype.categorizeResourceRequests = function (requests, categorizer) {
        var ret = [];
        for (var index = 0; index < requests.length; index++) {
            var request = requests[index];
            if ((!categorizer.from || categorizer.from(request)) && (!categorizer.requestType || categorizer.requestType(request))) {
                ret.push(request);
            }
        }
        return ret;
    };
    RUMOneLogger.prototype.collectSupplementaryData = function () {
        this.setAPIDataToRUMOne();
        this.collectMarks();
        this.writeServerUrl(null);
        this.setBrowseInfo();
        this.setReferrer();
        this._rumoneData.ServerMetrics = JSON.stringify(this.serverMetrics);
        this._rumoneData.EUPLBreakdown = JSON.stringify(this.euplBreakDown);
    };
    RUMOneLogger.prototype.loopForDataCompleteness = function () {
        this.clearPerfDataTimer();
        if (!this._waitOnAddingExpectedControl) {
            if (this.isRUMOneDebuggingEnabled) {
                this.logObjectForDebugging("RUMONE: ", this._rumoneData);
                this.logObjectForDebugging("RUMOne DataState: ", String(this.getReadableDataState(this.dataState)));
                this.logObjectForDebugging("Controls: ", this.controls);
                this.logObjectForDebugging("API Performance Data: ", this.apis);
                this.logObjectForDebugging("Temp Data: ", this.tempData);
                this.logObjectForDebugging("EUPLBreakdown: ", this.euplBreakDown);
                this.logObjectForDebugging("ServerMetrics: ", this.serverMetrics);
                this.logMessageInConsole("====================================================================");
            }
            if (!this.isRunning()) {
                return;
            }
            this._updateState();
            if (this.dataState === PerformanceDataState.ReadyToUpload) {
                this.finishPerfDataUpload();
                return;
            }
            this.processControlRenderTime();
            if (this.readyToComputeEUPL()) {
                this.setEUPL();
                this._updateState();
            }
        }
        // Check timeout
        this._checkTimeout();
        if (this.isRunning()) {
            this.setPerfDataTimer();
        }
    };
    /**
     * Check if we reached ERROR_TIMEOUT without being ready to upload and timeout if so
     */
    RUMOneLogger.prototype._checkTimeout = function () {
        if (!this.isRunning() || this.dataState === PerformanceDataState.ReadyToUpload) {
            return;
        }
        if (Number((new Date()).getTime()) - Number(this.dataStartTime) <= RUMOneLogger.ERROR_TIMEOUT) {
            return; // Nope, we still have time
        }
        // Upload whatever data we have without all key metrics
        this.dataState = PerformanceDataState.TimeOut;
        var error = {
            reason: 'TimeOut',
            details: {
                'MissingMetrics': this._getMissedKeyMetrics(),
                'MissingControls': this._getMissedControls()
            }
        };
        this._rumoneData.RUMOneError = JSON.stringify(error);
        this.finishPerfDataUpload();
    };
    RUMOneLogger.prototype._updateState = function () {
        this.dataState =
            (this._getMissedKeyMetrics().length === 0 && this._getMissedControls().length === 0)
                ? PerformanceDataState.ReadyToUpload
                : PerformanceDataState.Incomplete;
    };
    /**
     * Get array of missing key metrices
     */
    RUMOneLogger.prototype._getMissedKeyMetrics = function () {
        var missedKeyMetrics = [];
        for (var i = 0; i < RUMOneLogger.KeyMetrics.length; i++) {
            var keyMetricValue = this.getPerformanceDataPropertyValue(RUMOneLogger.KeyMetrics[i]);
            if (isNullOrUndefined(keyMetricValue)) {
                missedKeyMetrics.push(RUMOneLogger.KeyMetrics[i]);
            }
        }
        return missedKeyMetrics;
    };
    /**
     * Get array of controls missing data
     */
    RUMOneLogger.prototype._getMissedControls = function () {
        return this.controls.filter((function (control) { return !control.data || !control.data.renderTime; }));
    };
    // since we allow secondary controls reported but not be used to calculate EUPL,
    // these controls might be very slow and we are in higher risky that end user navigates
    // away from this page before we upload our data although EUPL might be available already.
    // This should be hooked with onunload event and resetlogger method
    RUMOneLogger.prototype._emergencyUpload = function () {
        if (this.isRunning() && this._getMissedKeyMetrics().length === 0) {
            this.finishPerfDataUpload(true);
        }
    };
    // if emergency set to true, we will not validate data state in uploadPerfData call
    // since current page is navigating away, mostly likely we already collected key metrics
    // only waiting for secondary controls, we should upload data collected so far
    RUMOneLogger.prototype.finishPerfDataUpload = function (emergency) {
        this.writeControlDataToRUMOne();
        this.collectSupplementaryData();
        try {
            this.uploadPerfData(emergency);
            if (this.isRUMOneDebuggingEnabled) {
                this.logMessageInConsole('Final Data uploaded');
                this.logObjectForDebugging("RUMONE: ", this._rumoneData);
                this.logObjectForDebugging("RUMOne DataState: ", this.getReadableDataState(this.dataState));
            }
        }
        catch (e) {
            (function (errorText) {
                if (typeof console !== "undefined" && Boolean(console)) {
                    console.error(errorText);
                }
            })("PerformanceLogger error writing RUMOne data: " + e);
        }
        finally {
            this._unhookUnloadEvent();
        }
    };
    RUMOneLogger.prototype.getReadableDataState = function (_dataState) {
        for (var key in PerformanceDataState) {
            if (_dataState === Number(PerformanceDataState[key])) {
                return key;
            }
        }
        return 'NaN';
    };
    /**
     * Write Control and corresponding render time for top 10 renderTime controls.
     */
    RUMOneLogger.prototype.writeControlDataToRUMOne = function () {
        if (this.controls && this.controls.length) {
            var byRenderTime = this.controls.slice(0).filter((function (control) { return !!control.data && !!control.data.renderTime && !control.ignoreForEUPL; }));
            byRenderTime.sort((function (control1, control2) {
                return control2.data.renderTime - control1.data.renderTime;
            }));
            // We have maximum 10 slots for the Control render data collection
            for (var index = 0; index < 10 && index < byRenderTime.length; index++) {
                this._logRUMOneData("Control" + (index + 1) + "Id", byRenderTime[index].controlId);
                this._logRUMOneData("Control" + (index + 1) + "RenderTime", byRenderTime[index].data.renderTime);
            }
            // for secondary controls, we wrote data into EUPL breakdown
            var secondaryControls_1 = {};
            this.controls.slice(0).filter((function (control) { return !!control.data && !!control.data.renderTime && !!control.ignoreForEUPL; })).forEach((function (control) {
                secondaryControls_1[control.controlId] = {
                    data: control.data.renderTime,
                    needFlatten: true
                };
            }));
            if (Object.keys(secondaryControls_1).length > 0) {
                this.writeEUPLBreakdown(JSON.stringify(secondaryControls_1), true);
            }
        }
    };
    /**
     * Calculate renderTime for the controls ready for it.
     */
    RUMOneLogger.prototype.processControlRenderTime = function () {
        for (var _i = 0, _a = this.controls; _i < _a.length; _i++) {
            var control = _a[_i];
            // if this control is not processed yet and ready to be processed
            if (control.data && !control.data.renderTime && control.data.renderTimeRequiredDataChecker(this, control.data)) {
                control.data.renderTime = control.data.renderTimeCalculator(this, control.data);
            }
        }
    };
    RUMOneLogger.prototype.readyToComputeEUPL = function () {
        var keyControls = this.controls.filter((function (control) { return !control.ignoreForEUPL; }));
        var ready = keyControls.length > 0;
        for (var _i = 0, keyControls_1 = keyControls; _i < keyControls_1.length; _i++) {
            var control = keyControls_1[_i];
            if (!control.data || !control.data.renderTime) {
                ready = false;
                break;
            }
        }
        return ready;
    };
    RUMOneLogger.prototype.setEUPL = function () {
        if (!this.isCollected('EUPL')) {
            var eupl = 0;
            for (var _i = 0, _a = this.controls; _i < _a.length; _i++) {
                var control = _a[_i];
                if (!control.ignoreForEUPL && control.data && control.data.renderTime && eupl < control.data.renderTime) {
                    eupl = control.data.renderTime;
                }
            }
            this._rumoneData.EUPL = eupl;
            if (typeof this._EUPLComputedHandler === 'function') {
                this._EUPLComputedHandler(eupl);
            }
        }
    };
    RUMOneLogger.prototype.setBrowseInfo = function () {
        this._rumoneData.Browser = this._platformDetection.browserName + this._platformDetection.browserMajor;
        this._rumoneData.BrowserIsMobile = this._platformDetection.isMobile;
    };
    RUMOneLogger.prototype.setAPIDataToRUMOne = function () {
        var calls = 0;
        var durationSum = 0;
        for (var index = 0; index < this.apis.length; index++) {
            var apiData = this.apis[index];
            if (apiData) {
                calls++;
                durationSum += apiData.duration;
                // only take the function part of the API url to avoid cosmos data scrubber
                // url before processing: /teams/SPGroups/_api/web/GetList(@listUrl)/RenderListDataAsStream?Paged=TRUE&p_FileLeafRef=test%2eurl&p_ID=213&PageFirstRow=121&View=6eab4254-2f2f-4086-91c0-549ae900cc93&@listUrl=%27%2Fteams%2FSPGroups%2FVNextDocLib%27"
                // url after processing: RenderListDataAsStream
                apiData.url = apiData.url.split("/").map((function (s) { return s.split("?")[0]; })).slice(-1)[0].replace(/\(.*?\)/g, '()');
            }
        }
        this._rumoneData.APICallCount = calls;
        this._rumoneData.APICallDurationSum = durationSum;
        this._rumoneData.APICalls = JSON.stringify(this.apis);
    };
    RUMOneLogger.prototype.setReferrer = function () {
        this._rumoneData.Referrer = document.referrer;
    };
    RUMOneLogger.prototype.getW3cTimingName = function (timingName) {
        if (timingName !== 'secureConnectionStart') {
            return 'W3c' + timingName.charAt(0).toUpperCase() + timingName.slice(1);
        }
        else {
            return 'W3cSecureConnectStart'; // to workaround a RUMOne schema issue W3cSecureConnectStart should be W3cSecureConnectionStart
        }
    };
    RUMOneLogger.prototype.uploadPerfData = function (emergency) {
        if (this._excludePageData) {
            this.dataState = PerformanceDataState.Skipped;
            this.logMessageInConsole('Uploading perf data skipped as requested by the consumer');
        }
        else if (!emergency && this.dataState !== PerformanceDataState.ReadyToUpload &&
            this.dataState !== PerformanceDataState.TimeOut) {
            console.error("Error: Uploading perf data called with wrong data state " + this.dataState);
        }
        else if (!this.loggingFunc) {
            console.error('Uploading perf data skipped as loggingFunc is not defined');
        }
        else if (!this._rumoneData) {
            console.error('Error: Uploading perf data called but perf data is not available');
        }
        else {
            this.loggingFunc("RUMOne", this.getPerformanceData());
            this.dataState = PerformanceDataState.Uploaded;
        }
    };
    RUMOneLogger.rumOneLogger = undefined;
    RUMOneLogger.CHECK_INTERVAL = 100; // in milliseconds
    RUMOneLogger.ERROR_TIMEOUT = 30000; // in milliseconds
    RUMOneLogger.MAX_MARKS = 100; // suppport maximum 100 perf markers
    RUMOneLogger.KeyMetrics = ['EUPL', 'ScenarioId'];
    return RUMOneLogger;
}());
exports.default = RUMOneLogger;


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var SingleEventBase_1 = __webpack_require__(8);
exports.PLT = SingleEventBase_1.createSingleEvent({
    eventName: 'PLT,',
    shortEventName: 'PLT',
    samplingFeature: { ODB: true, ODC: 'PLTLoggingSampling', Fallback: false }
}, {
    name: {
        isKey: true,
        type: 1 /* String */
    },
    w3cResponseEnd: 2 /* Number */,
    prefetchStart: 2 /* Number */,
    deferredListDataRender: 2 /* Number */,
    appStart: 2 /* Number */,
    preRender: 2 /* Number */,
    dataFetch: 2 /* Number */,
    dataFetchServerTime: 2 /* Number */,
    postRender: 2 /* Number */,
    render: 2 /* Number */,
    plt: 2 /* Number */,
    pltWithUnload: 2 /* Number */,
    httpRequests: 2 /* Number */,
    appCacheHit: 3 /* Boolean */
});
exports.default = exports.PLT;


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var Locale = (function () {
    function Locale() {
    }
    /**
     * Sets the locale to be used by the app.
     * @param {string} language - The language used to render the app.
     */
    Locale.invalidate = function (language) {
        Locale.isRightToLeft = (document.documentElement.getAttribute('dir') === 'rtl');
        Locale.safeLeft = Locale.isRightToLeft ? 'right' : 'left';
        Locale.safeRight = Locale.isRightToLeft ? 'left' : 'right';
        /** Robert Chen has the detailed explanation here : The most magic thing here is that OneDrive page and teamsite page has exactly the same line of code with regard to html tag Lang attribute.
         * <SharePoint:SPHtmlTag lang="<%$Resources:wss,language_value%>" dir="<%$Resources:wss,multipages_direction_dir_value%>" ID="SPHtmlTag" runat="server">
         * And in teamsite doclib, this lang gets executed to the current user locale. And that is actually already a magic------What happens here is the in order to get the doclib page in ContentDB, we had a standard MondoSproc call which gets the page and the SPWeb. In constructing the web, SP *  * code has smart logic to set Thread.CurrentThread.CurrentUICulture to match the MUI language! And with that magic, ="<%$Resources:wss,language_value%> actually gets sets properly to the user language, not the pre-defined web language.
         * For OneDrive.aspx which lives inside _layouts folder, the order of code execution changes. We must have executed this line of ASPX code first ="<%$Resources:wss,language_value%> before SPWeb was opened and did the magic to set Thread.CurrentThread.CurrentUICulture.
         * So the Thread.CurrentThread.CurrentUICulture affecting ="<%$Resources:wss,language_value%> with SPWeb magic end up not working in Onedrive.aspx! And there’s really nothing that we can do about it unless we rewrite the page!
         * So the conclusion is that the lang attribute is by design (of implementation) different from the regular team site pages which live inside content db.
         */
        language = language || window["_spPageContextInfo"] && window["_spPageContextInfo"].currentUICultureName;
        // fallback of xml:lang for IE9
        Locale.language = language ||
            document.documentElement.getAttribute('lang') ||
            document.documentElement.getAttribute('xml:lang') ||
            'en-us';
    };
    return Locale;
}());
Locale.invalidate();
exports.default = Locale;


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ItemType;
(function (ItemType) {
    ItemType[ItemType["File"] = 0] = "File";
    ItemType[ItemType["Folder"] = 1] = "Folder";
    ItemType[ItemType["Media"] = 2] = "Media";
    ItemType[ItemType["OneNote"] = 3] = "OneNote";
    ItemType[ItemType["Unknown"] = 4] = "Unknown";
    ItemType[ItemType["Error"] = 5] = "Error";
    ItemType[ItemType["App"] = 6] = "App";
    ItemType[ItemType["Subsite"] = 7] = "Subsite";
    /** A shortcut link pointing to some target destination or Url */
    ItemType[ItemType["Shortcut"] = 8] = "Shortcut";
})(ItemType = exports.ItemType || (exports.ItemType = {}));
exports.default = ItemType;


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DisposalChain = (function () {
    function DisposalChain(owner) {
        this._callbacks = [];
        this._owner = owner;
    }
    DisposalChain.prototype.addCallback = function (callback) {
        this._callbacks.push(callback);
    };
    DisposalChain.prototype.dispose = function () {
        // Handle dispose callbacks is the reverse order from when they were attached.
        while (this._callbacks.length) {
            var callback = this._callbacks.pop();
            callback.call(this._owner);
        }
    };
    return DisposalChain;
}());
/**
 * Determines whether not an object requires is disposable.
 *
 * @export
 * @template T
 * @param {(T | IDisposable)} object
 * @returns {object is IDisposable}
 */
function isDisposable(object) {
    return typeof object.dispose === 'function';
}
exports.isDisposable = isDisposable;
function hook(instance, onDispose) {
    var disposable = instance;
    var dispose = disposable.dispose;
    var disposalChain = typeof dispose === 'function' && dispose.disposalChain;
    if (!disposalChain) {
        disposalChain = new DisposalChain(disposable);
        var disposeHook = (function () {
            disposalChain.dispose();
            if (dispose) {
                // Restore the old dispose method and clean up modifications.
                disposable.dispose = dispose;
                disposable.dispose();
            }
        });
        disposable.dispose = disposeHook;
        disposeHook.disposalChain = disposalChain;
    }
    disposalChain.addCallback(onDispose);
    return disposable;
}
exports.hook = hook;


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(237);
var styles = {
    defaultIconClass: 'defaultIconClass_be933176',
    dropLocation: 'dropLocation_be933176',
    horizontalLine: 'horizontalLine_be933176',
    verticalLine: 'verticalLine_be933176',
    noselect: 'noselect_be933176',
    linePositionAbsolute: 'linePositionAbsolute_be933176',
    iconVisible: 'iconVisible_be933176',
    iconCollapsed: 'iconCollapsed_be933176',
    iconAdditionalStyle: 'iconAdditionalStyle_be933176',
    cursorDragging: 'cursorDragging_be933176',
    handleGrab: 'handleGrab_be933176',
    hideLine: 'hideLine_be933176',
};
exports.default = styles;


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function CreateEmptyZoneLayout(zoneIndex, sectionIndex, controlIndex) {
    return {
        zoneIndex: zoneIndex,
        sectionIndex: sectionIndex,
        controlIndex: controlIndex
    };
}
exports.CreateEmptyZoneLayout = CreateEmptyZoneLayout;


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_telemetry_1 = __webpack_require__(6);
var sp_core_library_1 = __webpack_require__(5);
var CanvasControlType_1 = __webpack_require__(7);
var CanvasLayout_1 = __webpack_require__(21);
var CanvasSectionPart_1 = __webpack_require__(110);
var CanvasZonePart = (function () {
    function CanvasZonePart(zoneIdx, map, webPartManager) {
        this._index = zoneIdx;
        this._sectionsMap = new Map();
        this._controlComponentMap = map;
        this._webPartManager = webPartManager;
        this._elementKey = sp_core_library_1.Guid.newGuid().toString();
    }
    Object.defineProperty(CanvasZonePart.prototype, "index", {
        get: function () {
            return this._index;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasZonePart.prototype, "elementKey", {
        get: function () {
            return this._elementKey;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasZonePart.prototype, "sections", {
        get: function () {
            var sections = [];
            this._sectionsMap.forEach((function (section) {
                sections.push(section);
            }));
            return sections.sort((function (section1, section2) {
                return section1.index - section2.index;
            }));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasZonePart.prototype, "layoutType", {
        get: function () {
            if (!this._layoutType) {
                this._layoutType = this._getCurrentColumnSize();
            }
            return this._layoutType;
        },
        enumerable: true,
        configurable: true
    });
    CanvasZonePart.prototype.addControl = function (canvasControl) {
        if (!CanvasLayout_1.default.isPositionValid(canvasControl.position)) {
            return undefined;
        }
        var curSectionIndex = canvasControl.position.sectionIndex;
        if (curSectionIndex === undefined) {
            return undefined;
        }
        var controlId;
        var sectionsToAdd = 1;
        var colDef = CanvasZonePart.columnDefinitionMap.get(canvasControl.controlType);
        if (colDef) {
            sectionsToAdd = colDef.sections;
        }
        for (var i = 0; i < sectionsToAdd; ++i, ++curSectionIndex) {
            var section = this._sectionsMap.get(curSectionIndex);
            if (!section) {
                var factor = colDef && colDef.factor[i];
                if (isNaN(factor)) {
                    factor = canvasControl.position.sectionFactor;
                }
                var newSection = new CanvasSectionPart_1.default(curSectionIndex, factor);
                if (canvasControl.position.controlIndex === undefined) {
                    canvasControl.position = CanvasLayout_1.default.cloneMergePosition(canvasControl.position, {
                        zoneIndex: undefined,
                        sectionIndex: undefined,
                        controlIndex: CanvasLayout_1.default.firstLayoutIndex
                    });
                }
                controlId = newSection.addControl(canvasControl);
                if (controlId) {
                    this._sectionsMap.set(curSectionIndex, newSection);
                }
            }
            else {
                if (canvasControl.position.controlIndex !== undefined) {
                    controlId = section.addControl(canvasControl);
                }
                else {
                    canvasControl.position = CanvasLayout_1.default.cloneMergePosition(canvasControl.position, {
                        zoneIndex: undefined,
                        sectionIndex: CanvasLayout_1.default.generateNewLayoutIndex(this.sections, curSectionIndex),
                        controlIndex: undefined
                    });
                    if (canvasControl.position.sectionIndex === undefined) {
                        return undefined;
                    }
                    var newSecondarySection = new CanvasSectionPart_1.default(canvasControl.position.sectionIndex);
                    canvasControl.position = CanvasLayout_1.default.cloneMergePosition(canvasControl.position, {
                        zoneIndex: undefined,
                        sectionIndex: undefined,
                        controlIndex: CanvasLayout_1.default.firstLayoutIndex
                    });
                    controlId = newSecondarySection.addControl(canvasControl);
                    if (controlId) {
                        this._sectionsMap.set(canvasControl.position.sectionIndex, newSecondarySection);
                    }
                }
            }
        }
        return controlId;
    };
    CanvasZonePart.prototype.moveControl = function (control, newControlPosition) {
        if (!control || control.position.zoneIndex !== newControlPosition.zoneIndex) {
            return;
        }
        if (control.position.sectionIndex === newControlPosition.sectionIndex) {
            this._controlComponentMap.get(control.id).position = newControlPosition;
            var section = this._sectionsMap.get(newControlPosition.sectionIndex);
            section.moveControl(control, newControlPosition);
        }
        else {
            var newControl = this._controlComponentMap.get(control.id).component.serialize();
            newControl.position = newControlPosition;
            newControl.addedFromPersistedData = true;
            this.removeControl(control.position);
            this._webPartManager.disposeWebparts(control.id);
            this.addControl(newControl);
        }
    };
    CanvasZonePart.prototype.removeControl = function (controlPosition) {
        if (!controlPosition) {
            return undefined;
        }
        var section = this._sectionsMap.get(controlPosition.sectionIndex);
        if (!section) {
            return undefined;
        }
        var controlId = section.removeControl(controlPosition);
        return controlId;
    };
    CanvasZonePart.prototype.fetchControl = function (controlPosition) {
        if (!controlPosition) {
            return undefined;
        }
        var section = this._sectionsMap.get(controlPosition.sectionIndex);
        if (!section) {
            return undefined;
        }
        return section.fetchControl(controlPosition);
    };
    CanvasZonePart.prototype.fetchAllControls = function (includeEmptySections) {
        var _this = this;
        if (includeEmptySections === void 0) { includeEmptySections = true; }
        var canvasControls = [];
        var sections = this.sections;
        sections.forEach((function (section) {
            var controls = section.fetchAllControls();
            if (includeEmptySections && controls.length === 0) {
                var emptySection = section.emptySectionControl;
                emptySection.position = CanvasLayout_1.default.cloneMergePosition(emptySection.position, {
                    zoneIndex: _this._index,
                    sectionIndex: undefined,
                    controlIndex: undefined
                });
                controls.push(emptySection);
            }
            canvasControls = canvasControls.concat(controls);
        }));
        return canvasControls;
    };
    CanvasZonePart.prototype.changeZone = function (zoneType) {
        var colDef = CanvasZonePart.columnDefinitionMap.get(zoneType);
        var sections = this.sections;
        var sectionsLength = sections.length;
        if (colDef.sections > sectionsLength) {
            this._increaseSections(sections, colDef);
        }
        else if (colDef.sections < sectionsLength) {
            this._reduceSections(sections, colDef);
        }
        else if (colDef.factor[0] !== sections[0].factor) {
            sections.forEach((function (sectionPart, index) {
                sectionPart.changeFactor(colDef.factor[index]);
            }));
        }
        this._layoutType = zoneType;
    };
    CanvasZonePart.prototype.isEmpty = function () {
        return this.fetchAllControls(false).length === 0;
    };
    CanvasZonePart.prototype.dispose = function () {
        var controls = this.fetchAllControls(false);
        var numControls = controls.length;
        for (var i = 0; i < numControls; ++i) {
            this._webPartManager.disposeWebparts(controls[i].id);
            this._controlComponentMap.delete(controls[i].id);
        }
        this._sectionsMap.clear();
    };
    CanvasZonePart.prototype.changeZoneIndex = function (newZoneIndex) {
        var _this = this;
        this.fetchAllControls(false).forEach((function (control) {
            control.position = CanvasLayout_1.default.cloneMergePosition(control.position, {
                zoneIndex: newZoneIndex
            });
            _this._controlComponentMap.get(control.id).position = control.position;
        }));
        this._index = newZoneIndex;
    };
    CanvasZonePart.prototype._createQosScope = function (scope) {
        return new sp_telemetry_1._QosMonitor("Canvas" + scope);
    };
    CanvasZonePart.prototype._increaseSections = function (currentSections, columnDefinition) {
        var qos = this._createQosScope('IncreaseSections');
        try {
            var currentSectionsLength = currentSections.length;
            currentSections.forEach((function (sectionPart, index) {
                sectionPart.changeFactor(columnDefinition.factor[index]);
            }));
            var newSectionsLength = columnDefinition.sections;
            var currentSectionIndex = currentSections[currentSectionsLength - 1].index + 1;
            for (var i = currentSectionsLength; i < newSectionsLength; ++i) {
                var newSection = new CanvasSectionPart_1.default(currentSectionIndex, columnDefinition.factor[i]);
                this._sectionsMap.set(currentSectionIndex++, newSection);
            }
            qos.writeSuccess();
        }
        catch (err) {
            qos.writeUnexpectedFailure('Exception', err);
        }
    };
    CanvasZonePart.prototype._reduceSections = function (currentSections, columnDefinition) {
        var _this = this;
        var qos = this._createQosScope('ReduceSections');
        try {
            var currentSectionsLength = currentSections.length;
            var lastSection_1 = currentSections[columnDefinition.sections - 1];
            var lastSectionLastControl = lastSection_1.controls[lastSection_1.controls.length - 1];
            var newSectionsLength = columnDefinition.sections;
            var controlIndex_1 = 1;
            if (lastSectionLastControl) {
                controlIndex_1 = lastSectionLastControl.position.controlIndex;
            }
            for (var i = 0; i < newSectionsLength; ++i) {
                currentSections[i].changeFactor(columnDefinition.factor[i]);
            }
            for (var i = currentSectionsLength - 1; i >= newSectionsLength; --i) {
                currentSections[i].controls.forEach((function (control) {
                    var newControl = _this._controlComponentMap.get(control.id).component.serialize();
                    newControl.position = CanvasLayout_1.default.cloneMergePosition(newControl.position, {
                        zoneIndex: undefined,
                        sectionIndex: lastSection_1.index,
                        sectionFactor: lastSection_1.factor,
                        controlIndex: ++controlIndex_1
                    });
                    newControl.addedFromPersistedData = true;
                    _this._webPartManager.disposeWebparts(control.id);
                    lastSection_1.addControl(newControl);
                }));
                currentSections[i].dispose();
                this._sectionsMap.delete(currentSections[i].index);
            }
            qos.writeSuccess();
        }
        catch (err) {
            qos.writeUnexpectedFailure('Exception', err);
        }
    };
    CanvasZonePart.prototype._getCurrentColumnSize = function () {
        var sections = this.sections;
        var sectionsLength = sections.length;
        var firstSectionFactor = sections[0].factor;
        var columnSize;
        if (sectionsLength === 1) {
            columnSize = firstSectionFactor === 0 ? CanvasControlType_1.default.FullWidth : CanvasControlType_1.default.OneColumn;
        }
        else if (sectionsLength === 2) {
            if (firstSectionFactor === 4) {
                columnSize = CanvasControlType_1.default.OneThirdColumnLeft;
            }
            else if (firstSectionFactor === 6) {
                columnSize = CanvasControlType_1.default.TwoColumns;
            }
            else if (firstSectionFactor === 8) {
                columnSize = CanvasControlType_1.default.OneThirdColumnRight;
            }
        }
        else if (sectionsLength === 3) {
            columnSize = CanvasControlType_1.default.ThreeColumns;
        }
        return columnSize;
    };
    CanvasZonePart.columnDefinitionMap = new Map([
        [CanvasControlType_1.default.OneColumn, { sections: 1, factor: [12] }],
        [CanvasControlType_1.default.FullWidth, { sections: 1, factor: [0] }],
        [CanvasControlType_1.default.TwoColumns, { sections: 2, factor: [6, 6] }],
        [CanvasControlType_1.default.ThreeColumns, { sections: 3, factor: [4, 4, 4] }],
        [CanvasControlType_1.default.OneThirdColumnRight, { sections: 2, factor: [8, 4] }],
        [CanvasControlType_1.default.OneThirdColumnLeft, { sections: 2, factor: [4, 8] }]
    ] );
    return CanvasZonePart;
}());
exports.default = CanvasZonePart;


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var RteA11y_module_scss_1 = __webpack_require__(274);
var KeyCodes;
(function (KeyCodes) {
    KeyCodes[KeyCodes["Enter"] = 13] = "Enter";
    KeyCodes[KeyCodes["Escape"] = 27] = "Escape";
    KeyCodes[KeyCodes["Tab"] = 9] = "Tab";
    KeyCodes[KeyCodes["F10"] = 121] = "F10";
    KeyCodes[KeyCodes["P"] = 80] = "P";
})(KeyCodes = exports.KeyCodes || (exports.KeyCodes = {}));
function isEscape(e) {
    return isKey(KeyCodes.Escape, e);
}
exports.isEscape = isEscape;
function isEnter(e) {
    return isKey(KeyCodes.Enter, e);
}
exports.isEnter = isEnter;
function isShiftTab(e) {
    return isKey(KeyCodes.Tab, e, false, false, true);
}
exports.isShiftTab = isShiftTab;
function isTab(e) {
    return isKey(KeyCodes.Tab, e);
}
exports.isTab = isTab;
function isKey(keyCode, e, allowAlt, allowCtrl, allowShift) {
    if (allowAlt === void 0) { allowAlt = false; }
    if (allowCtrl === void 0) { allowCtrl = false; }
    if (allowShift === void 0) { allowShift = false; }
    return e.keyCode === keyCode &&
        ((allowAlt && e.altKey) || (!allowAlt && !e.altKey)) &&
        ((allowCtrl && e.ctrlKey) || (!allowCtrl && !e.ctrlKey)) &&
        ((allowShift && e.shiftKey) || (!allowShift && !e.shiftKey));
}
exports.isKey = isKey;
function getFocusableChildren(elem, ignoreTabIndex) {
    if (ignoreTabIndex === void 0) { ignoreTabIndex = false; }
    var children = [];
    for (var _i = 0, _a = getFocusableDescendants(elem, ignoreTabIndex); _i < _a.length; _i++) {
        var descendant = _a[_i];
        if (isElementFocusableChildOf(descendant, elem)) {
            children.push(descendant);
        }
    }
    return children;
}
exports.getFocusableChildren = getFocusableChildren;
function isElementFocusable(elem, ignoreTabIndex) {
    if (ignoreTabIndex === void 0) { ignoreTabIndex = false; }
    var tagName = elem.tagName.toLowerCase();
    if (elem
        && !elem.hidden
        && elem.offsetParent
        && window.getComputedStyle(elem).display !== 'none'
        && window.getComputedStyle(elem).visibility !== 'hidden') {
        var hasTabIndex = elem.hasAttribute('tabindex');
        var tabindex = parseInt(elem.getAttribute('tabindex'), 10);
        if (!ignoreTabIndex && hasTabIndex && tabindex < 0) {
            return false;
        }
        if (tagName === 'a' && !!elem.href ||
            elem.isContentEditable) {
            return true;
        }
        if ((tagName === 'button' ||
            tagName === 'input' ||
            tagName === 'select' ||
            tagName === 'textarea') && !elem.disabled) {
            return true;
        }
        if (ignoreTabIndex && elem.getAttribute('data-is-focusable') === 'true') {
            return true;
        }
        if (!ignoreTabIndex && hasTabIndex && tabindex > -1) {
            return true;
        }
    }
    return false;
}
exports.isElementFocusable = isElementFocusable;
function getFocusableParent(elem, topElement) {
    if (topElement === void 0) { topElement = document.body; }
    var parent = elem;
    do {
        parent = parent.parentElement;
    } while (!isElementFocusable(parent) && parent !== topElement);
    return parent;
}
exports.getFocusableParent = getFocusableParent;
function queryFocusableSelector(elem) {
    var selector = 'button,input,textarea,select,a[href]:not([href=\'\']),\
      [tabindex],[contenteditable=\'true\'], [data-is-focusable=\'true\']';
    return elem.querySelectorAll(selector);
}
function getFirstFocusableChild(elem, ignoreTabIndex) {
    if (ignoreTabIndex === void 0) { ignoreTabIndex = false; }
    var nodes = queryFocusableSelector(elem);
    for (var i = 0; i < nodes.length; i++) {
        var node = nodes[i];
        if (isElementFocusable(node, ignoreTabIndex)) {
            return node;
        }
    }
    return undefined;
}
exports.getFirstFocusableChild = getFirstFocusableChild;
function getFocusableDescendants(elem, ignoreTabIndex) {
    if (ignoreTabIndex === void 0) { ignoreTabIndex = false; }
    var descendants = [];
    var nodes = queryFocusableSelector(elem);
    for (var i = 0; i < nodes.length; i++) {
        var node = nodes[i];
        if (isElementFocusable(node, ignoreTabIndex)) {
            descendants.push(node);
        }
    }
    return descendants;
}
exports.getFocusableDescendants = getFocusableDescendants;
function getFocusableSiblings(elem, topElement) {
    if (topElement === void 0) { topElement = document.body; }
    var children = getFocusableChildren(getFocusableParent(elem, topElement));
    var siblings = [];
    var insertPointer = 0;
    for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {
        var child = children_1[_i];
        if (child !== elem) {
            siblings.splice(insertPointer++, 0, child);
        }
        else {
            insertPointer = 0;
        }
    }
    return siblings;
}
exports.getFocusableSiblings = getFocusableSiblings;
function getNextFocusableElement(elem, topElement) {
    if (topElement === void 0) { topElement = document.body; }
    var siblings = getFocusableSiblings(elem, topElement);
    return siblings[0];
}
exports.getNextFocusableElement = getNextFocusableElement;
function getPrevFocusableElement(elem, topElement) {
    if (topElement === void 0) { topElement = document.body; }
    var siblings = getFocusableSiblings(elem, topElement);
    return siblings[siblings.length - 1];
}
exports.getPrevFocusableElement = getPrevFocusableElement;
function isElementFocusableChildOf(elem, ancestor) {
    var parent = elem.parentElement;
    while (parent.tagName !== 'BODY') {
        if (parent !== ancestor) {
            return true;
        }
        if (isElementFocusable(parent)) {
            break;
        }
        parent = parent.parentElement;
    }
    return false;
}
exports.isElementFocusableChildOf = isElementFocusableChildOf;
function navigateInside(elem) {
    var children = getFocusableChildren(elem);
    if (children.length) {
        children[0].focus();
        return true;
    }
    else {
        return false;
    }
}
exports.navigateInside = navigateInside;
function navigateTo(elem) {
    if (isElementFocusable(elem)) {
        elem.focus();
        return true;
    }
    else {
        return navigateInside(elem);
    }
}
exports.navigateTo = navigateTo;
function navigateOutOf(elem, topElement) {
    if (topElement === void 0) { topElement = document.body; }
    topElement = topElement || document.body;
    getFocusableParent(elem, topElement).focus();
}
exports.navigateOutOf = navigateOutOf;
var ariaAlertElementId = 'aria_alert_' + Math.random().toString().substr(2);
function ariaAlert(message) {
    var oldAlert = document.querySelector('#' + ariaAlertElementId);
    if (oldAlert) {
        document.body.removeChild(oldAlert);
    }
    var alertNode = document.createElement('p');
    alertNode.classList.add(RteA11y_module_scss_1.default.screenReaderOnly);
    alertNode.setAttribute('role', 'alert');
    alertNode.setAttribute('id', ariaAlertElementId);
    var alertText = document.createTextNode(message);
    alertNode.appendChild(alertText);
    document.body.appendChild(alertNode);
}
exports.ariaAlert = ariaAlert;


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(297);


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var sp_telemetry_1 = __webpack_require__(6);
var office_ui_fabric_react_1 = __webpack_require__(2);
var sp_core_library_1 = __webpack_require__(5);
var sp_a11y_1 = __webpack_require__(11);
var odsp_utilities_bundle_1 = __webpack_require__(9);
var CanvasControlType_1 = __webpack_require__(7);
var CanvasStore_1 = __webpack_require__(15);
var Flights_1 = __webpack_require__(28);
var ToolBoxItemClassifier_1 = __webpack_require__(121);
var ToolboxGroup_1 = __webpack_require__(122);
var ToolboxItem_1 = __webpack_require__(123);
var ToolBoxItemClassifier_2 = __webpack_require__(121);
__webpack_require__(62);
var CanvasStrings_resx_1 = __webpack_require__(10);
var ENGAGEMENT_MODULE_NAME = 'ToolboxSmall';
var TOOLBOX_FOCUS_IDENTIFIER = 'beforeToolbox';
var SEARCHBOX_IDENTIFIER = 'sp-canvas-toolbox-search';
var SECTION_ITEM_GROUPID = '19ede092-2988-4759-9b2f-5396b160ce68';
var ToolboxSmall = (function (_super) {
    tslib_1.__extends(ToolboxSmall, _super);
    function ToolboxSmall(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this._isRTL = office_ui_fabric_react_1.getRTL;
        _this._handleSearch = _this._async.debounce(_this._handleSearch, 300);
        _this.state = {
            horizontalPosition: props.horizontalPosition,
            verticalPosition: props.verticalPosition
        };
        return _this;
    }
    ToolboxSmall.isEventFromSearchBox = function (ev) {
        var element = ev && ev.srcElement;
        while (element &&
            element.tagName !== 'BODY') {
            element = element.parentElement;
            if (element.getAttribute('data-automation-id') === SEARCHBOX_IDENTIFIER) {
                return true;
            }
        }
        return false;
    };
    ToolboxSmall.tryGetManifestFromItem = function (item) {
        return item.itemProps.webPartManifest;
    };
    ToolboxSmall._stopKeyboardEvent = function (e) {
        e.stopPropagation();
        e.preventDefault();
    };
    ToolboxSmall.prototype.render = function () {
        var _this = this;
        var _a = this.props, controlPosition = _a.controlPosition, errorMessage = _a.errorMessage, isLoading = _a.isLoading, isOpen = _a.isOpen, onlyLayouts = _a.onlyLayouts;
        var toolboxContent;
        if (!onlyLayouts && isLoading) {
            toolboxContent = (React.createElement("div", { className: 'ms-Spinner-container' },
                React.createElement(office_ui_fabric_react_1.Spinner, { type: office_ui_fabric_react_1.SpinnerType.large })));
        }
        else {
            var errorLabel = void 0;
            if (errorMessage) {
                errorLabel = React.createElement("div", { className: 'CanvasToolbox-Error' },
                    " ",
                    errorMessage,
                    " ");
            }
            toolboxContent = (React.createElement(office_ui_fabric_react_1.FocusZone, { direction: office_ui_fabric_react_1.FocusZoneDirection.horizontal, isCircularNavigation: true, componentRef: function (focusZone) { return _this._focusZone = focusZone; } },
                errorLabel,
                !onlyLayouts && this._searchBoxComponent,
                this._toolboxContent));
        }
        var horizontalPosition = Flights_1.default.isHintDiscoverabilityEnabled && !controlPosition.sectionIndex ?
            this.state.horizontalPosition : this._evalPlacement(this._domNode);
        return (React.createElement("div", { className: this._canvasToolBoxContainerClassName },
            React.createElement("div", { role: 'toolbar', className: this._canvasToolBoxClassName, ref: this._resolveRef('_domNode'), style: {
                    visibility: isOpen ? 'visible' : 'hidden',
                    top: this.state.verticalPosition,
                    left: this._isRTL() ? 0 : horizontalPosition,
                    right: this._isRTL() ? horizontalPosition : 0
                } }, toolboxContent)));
    };
    ToolboxSmall.prototype.componentDidMount = function () {
        if (this._domNode) {
            this._domNode.addEventListener('keydown', this._handleKeyDownCapture, true);
        }
    };
    ToolboxSmall.prototype.componentWillReceiveProps = function (nextProps) {
        var verticalPosition = nextProps.verticalPosition;
        if (!Flights_1.default.isHintDiscoverabilityEnabled) {
            if (nextProps.isOpen && this.context.store.scrollableParent) {
                var _a = this.context.store.scrollableParent.getBoundingClientRect(), top_1 = _a.top, bottom = _a.bottom;
                var toolboxHeight = 330;
                var canvasTop = this.context.store.canvasElement.getBoundingClientRect().top;
                var hintOffset = 28;
                if ((verticalPosition + toolboxHeight + hintOffset + canvasTop > bottom) &&
                    (verticalPosition - toolboxHeight - hintOffset > top_1)) {
                    verticalPosition -= toolboxHeight + hintOffset;
                }
            }
        }
        this.setState({ horizontalPosition: nextProps.horizontalPosition, verticalPosition: verticalPosition });
        if (nextProps.isOpen && !this.props.isOpen) {
            this._clearSearchBox();
        }
    };
    ToolboxSmall.prototype.componentDidUpdate = function (prevProps) {
        if (this.props.isOpen !== prevProps.isOpen) {
            if (this.props.isOpen) {
                if (this.props.isLoading) {
                    this.context.store.a11yManager.alert(CanvasStrings_resx_1.default.ToolboxAriaLoadingAlert);
                }
                else {
                    if (prevProps.isLoading) {
                        this.context.store.a11yManager.alert(CanvasStrings_resx_1.default.ToolboxAriaLoadingFinishedAlert);
                    }
                    this._alertTotalCount(prevProps.isLoading);
                    this.context.store.a11yManager.saveActiveElementAs(TOOLBOX_FOCUS_IDENTIFIER);
                    if (this._searchBox) {
                        this._searchBox.focus();
                    }
                    else {
                        this.context.store.a11yManager.focusTo(this._domNode);
                    }
                }
            }
            else {
                this.context.store.a11yManager.forgetSavedActiveElement(TOOLBOX_FOCUS_IDENTIFIER);
            }
        }
    };
    Object.defineProperty(ToolboxSmall.prototype, "_canvasToolBoxClassName", {
        get: function () {
            return 'CanvasToolbox';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToolboxSmall.prototype, "_canvasToolBoxContainerClassName", {
        get: function () {
            return 'CanvasToolboxContainer';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToolboxSmall.prototype, "_toolboxContent", {
        get: function () {
            var _a = this.props, controlPosition = _a.controlPosition, onItemClick = _a.onItemClick, onlyLayouts = _a.onlyLayouts, toolboxItems = _a.toolboxItems;
            var toolboxGroups;
            if (onlyLayouts) {
                toolboxGroups = (React.createElement("div", null, this._generateSectionGroup(controlPosition, onItemClick)));
            }
            else {
                var classifier = new ToolBoxItemClassifier_2.default(this.state.query);
                for (var _i = 0, toolboxItems_1 = toolboxItems; _i < toolboxItems_1.length; _i++) {
                    var item = toolboxItems_1[_i];
                    var webPartManifest = ToolboxSmall.tryGetManifestFromItem(item);
                    var itemProps = item;
                    itemProps.itemProps.position = controlPosition;
                    itemProps.onClick = onItemClick;
                    if (!itemProps.automationId && webPartManifest && webPartManifest.alias) {
                        itemProps.automationId = webPartManifest.alias + "ToolboxItem";
                    }
                    classifier.tryRegisterItem(item.key, itemProps);
                }
                var featuredItems = this._getFeaturedItems(classifier);
                var featuredGroup = featuredItems.length !== 0
                    ?
                        React.createElement(ToolboxGroup_1.default, { groupName: CanvasStrings_resx_1.default.ToolboxGroupNameFeatured, hasHeader: true, key: CanvasStrings_resx_1.default.ToolboxGroupNameFeatured }, featuredItems)
                    : undefined;
                var isInsideSection = !(this.props.controlPosition &&
                    !this.props.controlPosition.sectionIndex &&
                    CanvasStore_1.default.isPolarisMultiColumnEditEnabled);
                var skipSectionDuringSearch = !!(this.state.query && this.state.query.length > 2);
                var sectionGroup = isInsideSection ||
                    skipSectionDuringSearch ? undefined : this._generateSectionGroup(controlPosition, onItemClick);
                var nonFeaturedItems = this._getNonFeaturedItems(classifier);
                var nonFeaturedGroup = nonFeaturedItems.length !== 0
                    ?
                        React.createElement(ToolboxGroup_1.default, { groupName: CanvasStrings_resx_1.default.ToolboxGroupNameNonFeatured, hasHeader: !!sectionGroup, key: CanvasStrings_resx_1.default.ToolboxGroupNameNonFeatured }, nonFeaturedItems)
                    : undefined;
                this._itemCount = featuredItems.length + nonFeaturedItems.length + (sectionGroup ? this._sectionCount : 0);
                toolboxGroups =
                    React.createElement("div", null,
                        featuredGroup,
                        sectionGroup,
                        nonFeaturedGroup,
                        this._itemCount === 0 &&
                            React.createElement("span", { className: 'CanvasToolbox-noResults' }, CanvasStrings_resx_1.default.ToolboxNoItemsFound));
            }
            return toolboxGroups;
        },
        enumerable: true,
        configurable: true
    });
    ToolboxSmall.prototype._handleKeyDownCapture = function (e) {
        if (sp_a11y_1.Keyboard.isEscape(e)) {
            if (ToolboxSmall.isEventFromSearchBox(e) && this.state.query) {
                this._clearSearchBox();
            }
            else {
                this.context.store.a11yManager.restoreFocus(TOOLBOX_FOCUS_IDENTIFIER);
                this.context.store.closeToolbox();
            }
            ToolboxSmall._stopKeyboardEvent(e);
        }
        else if (sp_a11y_1.Keyboard.isTab(e)) {
            ToolboxSmall._stopKeyboardEvent(e);
        }
    };
    Object.defineProperty(ToolboxSmall.prototype, "_itemCount", {
        get: function () {
            return this._filteredCount;
        },
        set: function (value) {
            if (this._filteredCount !== value) {
                this._filteredCount = value;
                if (this.props.isOpen) {
                    this._alertTotalCount(false);
                    if (this._filteredCount >= 0) {
                        var logEntry = new sp_telemetry_1._LogEntry(ENGAGEMENT_MODULE_NAME, 'FilteredCountUpdated', sp_telemetry_1._LogType.Event, {
                            'count': this._filteredCount.toString(),
                            ENGAGEMENT_QUERY_LENGTH_KEY: this._queryLengthForLogging
                        });
                        sp_telemetry_1._EngagementLogger.logEventWithLogEntry(logEntry);
                    }
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToolboxSmall.prototype, "_searchBoxComponent", {
        get: function () {
            var ariaLabel = odsp_utilities_bundle_1.StringHelper.format(CanvasStrings_resx_1.default.ToolboxSearchAccessibleLabelTemplate, this.state.query ? CanvasStrings_resx_1.default.ToolboxSearchEscapeAccessibleLabel : '');
            return (React.createElement("div", { "data-automation-id": SEARCHBOX_IDENTIFIER },
                React.createElement(office_ui_fabric_react_1.SearchBox, { ariaLabel: ariaLabel, componentRef: this._resolveRef('_searchBox'), labelText: CanvasStrings_resx_1.default.ToolboxSearchLabel, onChange: this._handleSearch, onSearch: this._handleSearch, value: this.state.query })));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToolboxSmall.prototype, "_queryLengthForLogging", {
        get: function () {
            return (this.state.query && this.state.query.length || 0).toString();
        },
        enumerable: true,
        configurable: true
    });
    ToolboxSmall.prototype._getFeaturedItems = function (classifier) {
        var _a = this.props, onItemClick = _a.onItemClick, controlPosition = _a.controlPosition;
        var featuredItemViews = [];
        var rteProps = {
            automationId: 'RTEToolboxItem',
            description: CanvasStrings_resx_1.default.TextWebpartDescription,
            displayName: CanvasStrings_resx_1.default.TextWebPartDisplayName,
            itemProps: this._createSectionItemProps(CanvasControlType_1.default.RTE, controlPosition),
            key: ToolBoxItemClassifier_1.RTE_TOOLBOX_KEY,
            msIconName: 'Font',
            onClick: onItemClick,
            groupId: 'cf066440-0614-43d6-98ae-0b31cf14c7c3' 
        };
        classifier.tryRegisterItem(rteProps.key.toString(), rteProps);
        var featuredItemProps = classifier.classify(true);
        featuredItemProps.forEach((function (item) {
            featuredItemViews.push(React.createElement(ToolboxItem_1.default, tslib_1.__assign({}, item)));
        }));
        return featuredItemViews;
    };
    ToolboxSmall.prototype._getNonFeaturedItems = function (classifier) {
        var nonFeaturedItemViews = [];
        var nonFeaturedItemProps = classifier.classify(false, (function (item1, item2) {
            return item1.displayName.localeCompare(item2.displayName);
        }));
        nonFeaturedItemProps.forEach((function (item) {
            nonFeaturedItemViews.push(React.createElement(ToolboxItem_1.default, tslib_1.__assign({}, item)));
        }));
        return nonFeaturedItemViews;
    };
    ToolboxSmall.prototype._handleSearch = function (newValue) {
        if (this.state.query !== newValue) {
            this.setState({ query: newValue });
        }
        var logEntry = new sp_telemetry_1._LogEntry(ENGAGEMENT_MODULE_NAME, 'SearchBoxQueryEntered', sp_telemetry_1._LogType.Event, {
            ENGAGEMENT_QUERY_LENGTH_KEY: this._queryLengthForLogging
        });
        sp_telemetry_1._EngagementLogger.logEventWithLogEntry(logEntry);
    };
    ToolboxSmall.prototype._evalPlacement = function (toolBox) {
        var halfToolBoxWidth = 0;
        if (toolBox !== undefined) {
            halfToolBoxWidth = toolBox.offsetWidth / 2;
        }
        if (this.state.horizontalPosition > 0) {
            return this.state.horizontalPosition - halfToolBoxWidth + "px";
        }
        else {
            return 'calc(50% - ' + (halfToolBoxWidth + this.state.horizontalPosition) + 'px)';
        }
    };
    ToolboxSmall.prototype._createSectionItemProps = function (controlType, position) {
        return {
            controlType: controlType,
            position: position,
            displayMode: sp_core_library_1.DisplayMode.Edit,
            id: undefined
        };
    };
    ToolboxSmall.prototype._generateSectionGroup = function (position, onItemClick) {
        var sections = [
            React.createElement(ToolboxItem_1.default, { automationId: 'SingleColumnSectionToolboxItem', description: CanvasStrings_resx_1.default.ToolboxOneColumnPart, displayName: CanvasStrings_resx_1.default.ToolboxOneColumnPart, itemProps: this._createSectionItemProps(CanvasControlType_1.default.OneColumn, position), key: 'SingleColumnSectionToolboxItem', msIconName: 'SingleColumn', onClick: onItemClick, groupId: SECTION_ITEM_GROUPID }),
            React.createElement(ToolboxItem_1.default, { automationId: 'DoubleColumnSectionToolboxItem', description: CanvasStrings_resx_1.default.ToolboxTwoColumnPart, displayName: CanvasStrings_resx_1.default.ToolboxTwoColumnPart, itemProps: this._createSectionItemProps(CanvasControlType_1.default.TwoColumns, position), key: 'DoubleColumnSectionToolboxItem', msIconName: 'DoubleColumn', onClick: onItemClick, groupId: SECTION_ITEM_GROUPID }),
            React.createElement(ToolboxItem_1.default, { automationId: 'TripleColumnSectionToolboxItem', description: CanvasStrings_resx_1.default.ToolboxThreeColumnPart, displayName: CanvasStrings_resx_1.default.ToolboxThreeColumnPart, itemProps: this._createSectionItemProps(CanvasControlType_1.default.ThreeColumns, position), key: 'TripleColumnSectionToolboxItem', msIconName: 'TripleColumn', onClick: onItemClick, groupId: SECTION_ITEM_GROUPID }),
            React.createElement(ToolboxItem_1.default, { automationId: 'ColumnRightTwoThirdsSectionToolboxItem', description: CanvasStrings_resx_1.default.ToolboxOneThirdLeftColumnPart, displayName: CanvasStrings_resx_1.default.ToolboxOneThirdLeftColumnPart, itemProps: this._createSectionItemProps(CanvasControlType_1.default.OneThirdColumnLeft, position), key: 'ColumnRightTwoThirdsSectionToolboxItem', msIconName: 'ColumnRightTwoThirds', onClick: onItemClick, groupId: SECTION_ITEM_GROUPID }),
            React.createElement(ToolboxItem_1.default, { automationId: 'ColumnLeftTwoThirdsSectionToolboxItem', description: CanvasStrings_resx_1.default.ToolboxOneThirdRightColumnPart, displayName: CanvasStrings_resx_1.default.ToolboxOneThirdRightColumnPart, itemProps: this._createSectionItemProps(CanvasControlType_1.default.OneThirdColumnRight, position), key: 'ColumnLeftTwoThirdsSectionToolboxItem', msIconName: 'ColumnLeftTwoThirds', onClick: onItemClick, groupId: SECTION_ITEM_GROUPID })
        ];
        if (this.context.store.siteSupportsFullWidth) {
            sections.push(React.createElement(ToolboxItem_1.default, { automationId: 'FullWidthSectionToolboxItem', description: CanvasStrings_resx_1.default.ToolboxFullWidthColumnPart, displayName: CanvasStrings_resx_1.default.ToolboxFullWidthColumnPart, itemProps: this._createSectionItemProps(CanvasControlType_1.default.FullWidth, position), key: 'FullWidthSectionToolboxItem', msIconName: 'FullWidth', onClick: onItemClick, groupId: SECTION_ITEM_GROUPID }));
        }
        this._sectionCount = sections.length;
        return (React.createElement(ToolboxGroup_1.default, { groupName: CanvasStrings_resx_1.default.ToolboxSectionHeader, hasHeader: true, key: 'Sections' }, sections));
    };
    ToolboxSmall.prototype._alertTotalCount = function (announceNavKeys) {
        var message = CanvasStrings_resx_1.default.ToolboxNoItemsFound;
        if (this._filteredCount > 0) {
            var localizedItemCount = odsp_utilities_bundle_1.StringHelper.formatWithLocalizedCountValue(CanvasStrings_resx_1.default.CanvasItems, CanvasStrings_resx_1.default.CanvasItemsInterval, this._filteredCount);
            message = announceNavKeys ?
                odsp_utilities_bundle_1.StringHelper.format(CanvasStrings_resx_1.default.ToolboxNavigationArrowKeys, localizedItemCount) :
                localizedItemCount;
        }
        this.context.store.a11yManager.alert(message);
    };
    ToolboxSmall.prototype._clearSearchBox = function () {
        this.setState({ query: '' });
    };
    ToolboxSmall.contextTypes = {
        store: React.PropTypes.object.isRequired
    };
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], ToolboxSmall.prototype, "_handleKeyDownCapture", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], ToolboxSmall.prototype, "_handleSearch", null);
    return ToolboxSmall;
}(office_ui_fabric_react_1.BaseComponent));
exports.default = ToolboxSmall;


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DomTraversal_1 = __webpack_require__(37);
var Focus = (function () {
    function Focus() {
    }
    Focus.isElementFocusable = function (elem, ignoreTabIndex) {
        if (ignoreTabIndex === void 0) { ignoreTabIndex = false; }
        if (elem
            && !elem.hidden
            && elem.offsetParent
            && window.getComputedStyle(elem).display !== 'none'
            && window.getComputedStyle(elem).visibility !== 'hidden') {
            var tagName = elem.tagName.toLowerCase();
            var hasTabIndex = elem.hasAttribute('tabindex');
            var tabindex = parseInt(elem.getAttribute('tabindex'), 10);
            if (!ignoreTabIndex && hasTabIndex && tabindex < 0) {
                return false;
            }
            if (tagName === 'a' && !!elem.href ||
                elem.isContentEditable) {
                return true;
            }
            if ((tagName === 'button' ||
                tagName === 'input' ||
                tagName === 'select' ||
                tagName === 'textarea') && !elem.disabled) {
                return true;
            }
            if (ignoreTabIndex && elem.getAttribute('data-is-focusable') === 'true') {
                return true;
            }
            if (!ignoreTabIndex && hasTabIndex && tabindex > -1) {
                return true;
            }
        }
        return false;
    };
    Focus.getFocusableChildren = function (element, ignoreTabIndex) {
        if (ignoreTabIndex === void 0) { ignoreTabIndex = false; }
        var children = [];
        var nodes = Focus._queryFocusableSelector(element);
        for (var i = 0; i < nodes.length; i++) {
            var node = nodes[i];
            if (Focus.isElementFocusable(node) && Focus.getFocusableParent(node, element) === element) {
                children.push(node);
            }
        }
        for (var i = 0; i < children.length; i++) {
            var iTabIndex = parseInt(children[i].getAttribute('tabindex') || '0', 10);
            if (iTabIndex > 0) {
                var e = children.splice(i, 1)[0];
                for (var j = 0; j < i; j++) {
                    var jTabIndex = parseInt(children[j].getAttribute('tabindex') || '0', 10);
                    if (jTabIndex === 0 || iTabIndex < jTabIndex) {
                        children.splice(j, 0, e);
                        break;
                    }
                }
            }
        }
        return children;
    };
    Focus.getFocusableParent = function (element, root) {
        root = root || document.body;
        var parent = DomTraversal_1.default.getFirstMatchingParent(element, this.isElementFocusable, root, false);
        return parent || root;
    };
    Focus.getFirstFocusableChild = function (elem, ignoreTabIndex) {
        if (ignoreTabIndex === void 0) { ignoreTabIndex = false; }
        var nodes = Focus._queryFocusableSelector(elem);
        for (var i = 0; i < nodes.length; i++) {
            var node = nodes[i];
            if (Focus.isElementFocusable(node, ignoreTabIndex)) {
                return node;
            }
        }
        return undefined;
    };
    Focus.getFocusableDescendants = function (element, ignoreTabIndex, descendants) {
        if (ignoreTabIndex === void 0) { ignoreTabIndex = false; }
        if (!descendants) {
            descendants = [];
        }
        else {
            descendants.push(element);
        }
        var children = Focus.getFocusableChildren(element);
        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {
            var child = children_1[_i];
            descendants.concat(Focus.getFocusableDescendants(child, ignoreTabIndex, descendants));
        }
        return descendants;
    };
    Focus.getFocusableSiblings = function (element, root) {
        root = root || document.body;
        var parent = Focus.getFocusableParent(element, root);
        if (parent) {
            var children = Focus.getFocusableChildren(parent);
            var siblings = [];
            var insertPointer = 0;
            for (var _i = 0, children_2 = children; _i < children_2.length; _i++) {
                var child = children_2[_i];
                if (child !== element) {
                    siblings.splice(insertPointer++, 0, child);
                }
                else {
                    insertPointer = 0;
                }
            }
            return siblings;
        }
        return [];
    };
    Focus.getNextFocusableSibling = function (element, root) {
        root = root || document.body;
        var siblings = Focus.getFocusableSiblings(element, root);
        return siblings[0];
    };
    Focus.getPrevFocusableSibling = function (element, root) {
        root = root || document.body;
        var siblings = Focus.getFocusableSiblings(element, root);
        return siblings[siblings.length - 1];
    };
    Focus.focusInside = function (element) {
        if (!element) {
            return false;
        }
        var children = Focus.getFocusableChildren(element);
        if (children.length) {
            children[0].focus();
            return true;
        }
        else {
            return false;
        }
    };
    Focus.focusTo = function (element) {
        if (Focus.isElementFocusable(element)) {
            element.focus();
            return true;
        }
        else {
            return Focus.focusInside(element);
        }
    };
    Focus.focusOutOf = function (element, root) {
        root = root || document.body;
        var parent = Focus.getFocusableParent(element, root);
        if (parent && parent !== root) {
            parent.focus();
            return true;
        }
        else {
            return false;
        }
    };
    Focus.hasFocus = function (element, checkChildren) {
        if (checkChildren === void 0) { checkChildren = false; }
        if (document.activeElement === element) {
            return true;
        }
        if (checkChildren && DomTraversal_1.default.contains(element, document.activeElement)) {
            return true;
        }
        return false;
    };
    Focus._queryFocusableSelector = function (element) {
        var selector = 'button,input,textarea,select,a[href]:not([href=\'\']),\
    [tabindex],[contenteditable=\'true\'], [data-is-focusable=\'true\']';
        return element.querySelectorAll(selector);
    };
    return Focus;
}());
exports.default = Focus;


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Keyboard = (function () {
    function Keyboard() {
    }
    Keyboard.isEscape = function (e) {
        return Keyboard.isKey(27, e);
    };
    Keyboard.isEnter = function (e) {
        return Keyboard.isKey(13, e);
    };
    Keyboard.isShiftTab = function (e) {
        return Keyboard.isKey(9, e, { shift: true });
    };
    Keyboard.isTab = function (e) {
        return Keyboard.isKey(9, e);
    };
    Keyboard.isKey = function (keyCode, event, allowedModifiers) {
        if (!(allowedModifiers && allowedModifiers.alt) !== !event.altKey) {
            return false;
        }
        if (!(allowedModifiers && allowedModifiers.ctrl) !== !event.ctrlKey) {
            return false;
        }
        if (!(allowedModifiers && allowedModifiers.shift) !== !event.shiftKey) {
            return false;
        }
        return event.keyCode === keyCode;
    };
    return Keyboard;
}());
exports.default = Keyboard;


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ScreenReader = (function () {
    function ScreenReader() {
    }
    ScreenReader.alert = function (id, message, isVisible, className) {
        if (isVisible === void 0) { isVisible = false; }
        var divId = 'sp_a11y_alert_' + id;
        var oldAlert = document.querySelector('#' + divId);
        if (oldAlert) {
            document.body.removeChild(oldAlert);
        }
        var alertNode = document.createElement('p');
        if (!isVisible) {
            alertNode.setAttribute('style', ScreenReader._cssHidden);
        }
        if (className) {
            alertNode.classList.add(className);
        }
        alertNode.setAttribute('role', 'alert');
        alertNode.setAttribute('aria-live', 'assertive');
        alertNode.setAttribute('id', divId);
        var alertText = document.createTextNode(message);
        document.body.appendChild(alertNode);
        alertNode.appendChild(alertText);
    };
    ScreenReader._cssHidden = "position:absolute;text-indent:-9999px;\n    width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;border:0;";
    return ScreenReader;
}());
exports.default = ScreenReader;


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DomTraversal_1 = __webpack_require__(37);
var A11yAttributeType;
(function (A11yAttributeType) {
    A11yAttributeType[A11yAttributeType["Id"] = 0] = "Id";
    A11yAttributeType[A11yAttributeType["Class"] = 1] = "Class";
    A11yAttributeType[A11yAttributeType["AlertOnFocusIn"] = 2] = "AlertOnFocusIn";
    A11yAttributeType[A11yAttributeType["AlertOnFocusOut"] = 3] = "AlertOnFocusOut";
    A11yAttributeType[A11yAttributeType["SkipKeys"] = 4] = "SkipKeys";
    A11yAttributeType[A11yAttributeType["StopKeys"] = 5] = "StopKeys";
    A11yAttributeType[A11yAttributeType["NavigateOnKey"] = 6] = "NavigateOnKey";
    A11yAttributeType[A11yAttributeType["NavigateByHierarchy"] = 7] = "NavigateByHierarchy";
})(A11yAttributeType = exports.A11yAttributeType || (exports.A11yAttributeType = {}));
var A11yAttribute = (function () {
    function A11yAttribute(appPrefix, type, params, value) {
        this._appPrefix = appPrefix;
        this._type = type;
        this._params = params;
        this._value = value;
    }
    A11yAttribute.getPrefix = function (appPrefix, type) {
        return appPrefix + A11yAttribute._getTypeString(type);
    };
    A11yAttribute.getAllFromElement = function (appPrefix, element) {
        var result = [];
        var types = Object.keys(A11yAttributeType).map((function (k) { return A11yAttributeType[k]; })).filter((function (v) { return typeof v === 'number'; }));
        for (var _i = 0, types_1 = types; _i < types_1.length; _i++) {
            var type = types_1[_i];
            for (var i = 0; i < element.attributes.length; i++) {
                var attrName = element.attributes[i].name;
                var prefix = A11yAttribute.getPrefix(appPrefix, type);
                if (attrName.substring(0, prefix.length) === prefix) {
                    var params = attrName[prefix.length] === '-' ? attrName.substr(prefix.length + 1).split('-') : undefined;
                    var value = element.getAttribute(attrName);
                    result.push(new A11yAttribute(appPrefix, type, params, value));
                }
            }
        }
        return result;
    };
    A11yAttribute.getFromElementByType = function (appPrefix, element, type) {
        return A11yAttribute.getAllFromElement(appPrefix, element).filter((function (a) { return a.type === type; }));
    };
    A11yAttribute.getFromElementOrParentsByType = function (appPrefix, element, root, type) {
        var attr;
        DomTraversal_1.default.getFirstMatchingParent(element, (function (p) {
            attr = A11yAttribute.getAllFromElement(appPrefix, p).filter((function (a) { return a.type === type; }))[0];
            return !!attr;
        }), root, true);
        return attr || undefined;
    };
    A11yAttribute._getTypeString = function (type) {
        switch (type) {
            case A11yAttributeType.Id: return 'id';
            case A11yAttributeType.Class: return 'class';
            case A11yAttributeType.SkipKeys: return 'skipkeys';
            case A11yAttributeType.StopKeys: return 'stopkeys';
            case A11yAttributeType.AlertOnFocusIn: return 'alertonfocusin';
            case A11yAttributeType.AlertOnFocusOut: return 'alertonfocusout';
            case A11yAttributeType.NavigateOnKey: return 'navigateonkey';
            case A11yAttributeType.NavigateByHierarchy: return 'navigatebyhierarchy';
            default: throw new Error("Undefined string for attribute type: " + type);
        }
    };
    Object.defineProperty(A11yAttribute.prototype, "name", {
        get: function () {
            var name = this.prefix;
            if (this._params && this._params.length > 0) {
                var params = this._params.join('-');
                name += "-" + params;
            }
            return name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(A11yAttribute.prototype, "prefix", {
        get: function () {
            return A11yAttribute.getPrefix(this._appPrefix, this._type);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(A11yAttribute.prototype, "value", {
        get: function () {
            return this._value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(A11yAttribute.prototype, "type", {
        get: function () {
            return this._type;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(A11yAttribute.prototype, "params", {
        get: function () {
            return this._params;
        },
        enumerable: true,
        configurable: true
    });
    A11yAttribute.prototype.setOnElement = function (element) {
        element.setAttribute(this.name, this.value);
    };
    return A11yAttribute;
}());
exports.default = A11yAttribute;


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DomTraversal_1 = __webpack_require__(37);
var FocusTransition = (function () {
    function FocusTransition(src, dest, root) {
        this._src = src;
        this._dest = dest;
        this._root = root || document.body;
    }
    Object.defineProperty(FocusTransition.prototype, "src", {
        get: function () {
            return this._src;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FocusTransition.prototype, "dest", {
        get: function () {
            return this._dest;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FocusTransition.prototype, "root", {
        get: function () {
            return this._root;
        },
        enumerable: true,
        configurable: true
    });
    FocusTransition.prototype.forEachElementInPath = function (callback) {
        DomTraversal_1.default.forEachElementInPath(this._src, this._dest, callback, this._root);
    };
    return FocusTransition;
}());
exports.default = FocusTransition;


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Canvas_1 = __webpack_require__(147);
exports.Canvas = Canvas_1.default;
var WebPartRte_1 = __webpack_require__(315);
exports.WebPartRte = WebPartRte_1.default;
var ToolbarButton_1 = __webpack_require__(34);
exports.ToolbarButton = ToolbarButton_1.default;
var CanvasControlType_1 = __webpack_require__(7);
exports.CanvasControlType = CanvasControlType_1.default;


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Guid_1 = __webpack_require__(71);
var CorrelationVector = (function () {
    function CorrelationVector(parent, current) {
        if (parent) {
            this.root = parent.root;
            this.parent = parent.current;
        }
        else {
            this.root = this.parent = Guid_1.default.Empty;
        }
        if (current) {
            this.current = current;
        }
        else {
            this.current = Guid_1.default.generate();
        }
    }
    CorrelationVector.prototype.toString = function () {
        return this.root + "#" + this.parent + "#" + this.current;
    };
    CorrelationVector.RootVector = window['rootVector'] || new CorrelationVector();
    return CorrelationVector;
}());
exports.default = CorrelationVector;


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function generateUuidPart(length) {
    "use strict";
    var str = '';
    while (str.length < length) {
        var num = Math.random() * 16;
        num = num | 0; // clear decimal
        str += num.toString(16);
    }
    return str;
}
var Guid = (function () {
    function Guid() {
    }
    /**
     * Return a v4 UUID as specified by RFC 4122 http://tools.ietf.org/html/rfc4122
     */
    Guid.generate = function () {
        var parts = [];
        parts.push(generateUuidPart(8));
        parts.push(generateUuidPart(4));
        // first digit must be 4 since we are using pseudorandom numbers
        var timeHighAndVersion = '4' + generateUuidPart(3);
        parts.push(timeHighAndVersion);
        // first digit must have first two bits set to 10
        var clockSeqHiAndReserved = generateUuidPart(4);
        var intVal = parseInt(clockSeqHiAndReserved[0], 10);
        intVal = intVal & 3; // clear out first two bits
        intVal = intVal | 8; // set first bit to 1
        clockSeqHiAndReserved = intVal.toString(16) + clockSeqHiAndReserved.substr(1);
        parts.push(clockSeqHiAndReserved);
        parts.push(generateUuidPart(12));
        return parts.join('-');
    };
    /**
     * Normalizes a GUID to lowercase. Returns '' if guid is not given.
     * @param includeBrackets - if true, add or keep brackets; if false, strip brackets
     */
    Guid.normalizeLower = function (guid, includeBrackets) {
        return guid ? Guid._normalizeBrackets(guid.toLowerCase(), includeBrackets) : '';
    };
    /**
     * Normalizes a GUID to uppercase. Returns '' if guid is not given.
     * @param includeBrackets - if true, add or keep brackets; if false, strip brackets
     */
    Guid.normalizeUpper = function (guid, includeBrackets) {
        return guid ? Guid._normalizeBrackets(guid.toUpperCase(), includeBrackets) : '';
    };
    Guid._normalizeBrackets = function (guid, includeBrackets) {
        var match = guid.match(/^\{(.*)\}$/);
        if (match) {
            return includeBrackets ? match[0] : match[1];
        }
        return includeBrackets ? '{' + guid + '}' : guid;
    };
    Guid.Empty = "00000000-0000-0000-0000-000000000000";
    return Guid;
}());
exports.default = Guid;


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var SingleEventBase_1 = __webpack_require__(8);
exports.PLTHttpRequest = SingleEventBase_1.createSingleEvent({
    eventName: 'PLTHttpRequest,',
    shortEventName: 'PLTHttpRequest',
    samplingFeature: { ODB: true, ODC: 'PLTHttpRequestSampling', Fallback: false }
}, {
    startTime: 2 /* Number */,
    url: 1 /* String */,
    duration: 2 /* Number */
});
exports.default = exports.PLTHttpRequest;


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var SingleEventBase_1 = __webpack_require__(8);
exports.Trace = SingleEventBase_1.createSingleEvent({
    eventName: 'Trace,',
    shortEventName: 'Trace',
    requiresParent: false
}, {
    message: 1 /* String */
});
exports.default = exports.Trace;


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var SingleEventBase_1 = __webpack_require__(8);
var CaughtError_event_1 = __webpack_require__(52);
var ResultTypeEnum_1 = __webpack_require__(30);
exports.ResultTypeEnum = ResultTypeEnum_1.ResultTypeEnum;
exports.QosError = SingleEventBase_1.createSingleEvent({
    eventName: 'QosError,CaughtError,Trace,',
    shortEventName: 'QosError',
    critical: true
}, {
    name: {
        isKey: true,
        type: 1 /* String */
    },
    resultCode: 1 /* String */,
    resultType: {
        typeRef: ResultTypeEnum_1.ResultTypeEnum,
        type: 6 /* Enum */
    }
}, CaughtError_event_1.CaughtError);
exports.default = exports.QosError;


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var SingleEventBase_1 = __webpack_require__(8);
var Trace_event_1 = __webpack_require__(73);
exports.Verbose = SingleEventBase_1.createSingleEvent({
    eventName: 'Verbose,Trace,',
    shortEventName: 'Verbose',
    requiresParent: false
}, {
    name: {
        isKey: true,
        type: 1 /* String */
    }
}, Trace_event_1.Trace);
exports.default = exports.Verbose;


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// OneDrive:IgnoreCodeCoverage
var PageTransitionType;
(function (PageTransitionType) {
    PageTransitionType[PageTransitionType["none"] = 0] = "none";
    PageTransitionType[PageTransitionType["fullPageLoad"] = 4] = "fullPageLoad";
    PageTransitionType[PageTransitionType["onePageAppNavigation"] = 5] = "onePageAppNavigation";
})(PageTransitionType || (PageTransitionType = {}));
exports.default = PageTransitionType;


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var SingleEventBase_1 = __webpack_require__(8);
exports.RUMOneDataUpload = SingleEventBase_1.createSingleEvent({
    eventName: 'RUMOneDataUpload,',
    shortEventName: 'RUMOneDataUpload'
}, {
    streamName: 1 /* String */,
    dictionary: 4 /* Object */
});
exports.default = exports.RUMOneDataUpload;


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// OneDrive:IgnoreCodeCoverage
var performance = window.performance;
var HighResolutionTimingSupported = !!performance && typeof performance.mark === 'function' &&
    typeof performance.clearMarks === 'function' &&
    typeof performance.now === 'function';
exports.HighResolutionTimingSupported = HighResolutionTimingSupported;
exports.MARKER_PREFIX = "EUPL.";
var _markCount = 0;
var _perfMarks = window['_perfMarks'] = window['_perfMarks'] || []; // used for browsers do not support native performance.mark
function mark(name, limit) {
    'use strict';
    var markName = name.lastIndexOf(exports.MARKER_PREFIX, 0) === 0 ? name : exports.MARKER_PREFIX + name;
    if (limit === null || limit === undefined || _markCount < limit) {
        if (HighResolutionTimingSupported) {
            performance.mark(markName);
        }
        else {
            _perfMarks.push({
                name: markName,
                startTime: Date.now()
            });
        }
        _markCount++;
    }
}
exports.mark = mark;
function getMarkerTime(name) {
    'use strict';
    var markName = name.lastIndexOf(exports.MARKER_PREFIX, 0) === 0 ? name : exports.MARKER_PREFIX + name;
    if (HighResolutionTimingSupported) {
        var mark_1 = performance.getEntriesByName(markName);
        return mark_1 && mark_1.length > 0 ? Math.round(mark_1[0].startTime) : NaN;
    }
    else {
        var mark_2 = _perfMarks.filter((function (mark) { return mark.name === markName; }))[0];
        return mark_2 && mark_2.startTime;
    }
}
exports.getMarkerTime = getMarkerTime;
function clearMarks() {
    'use strict';
    if (HighResolutionTimingSupported) {
        performance.getEntriesByType("mark").filter((function (mark) {
            return mark.name.lastIndexOf(exports.MARKER_PREFIX, 0) === 0;
        })).forEach((function (mark) {
            performance.clearMarks(mark.name);
        }));
    }
    else {
        _perfMarks = [];
    }
}
exports.clearMarks = clearMarks;
function getAllMarks() {
    'use strict';
    if (HighResolutionTimingSupported) {
        return performance.getEntriesByType("mark").filter((function (mark) {
            return mark.name.lastIndexOf(exports.MARKER_PREFIX, 0) === 0;
        }));
    }
    else {
        return _perfMarks;
    }
}
exports.getAllMarks = getAllMarks;


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var BaseDataStore_1 = __webpack_require__(42);
var DataStoreCachingType_1 = __webpack_require__(32);
var Manager_1 = __webpack_require__(18);
var LogProcessor_1 = __webpack_require__(80);
var BeaconCache;
(function (BeaconCache) {
    "use strict";
    var _store = new BaseDataStore_1.default(LogProcessor_1.default.STORE_KEY,  true ? DataStoreCachingType_1.default.sharedMemory : DataStoreCachingType_1.default.session);
    BeaconCache.eventNamePrefix = "";
    BeaconCache.instance = null;
    BeaconCache.handlers = null;
    if (true) {
        try {
            console.log("Beacon: To disable logging to the console set \"window.disableBeaconLogToConsole = true\" in the debug window");
        }
        catch (error) {
            // Ignore errors here. This code path, console.log, is only called during debug and it can throw while
            // debugging or stepping through the code polluting the UI with unhandled errors.
        }
    }
    var OdbBeaconCache = (function () {
        function OdbBeaconCache(eventNamePrefix, handlers) {
            var _this = this;
            BeaconCache.eventNamePrefix = eventNamePrefix;
            BeaconCache.handlers = handlers;
            var bufferedEvents = Manager_1.Manager.addLogHandler((function (event) {
                _this.addEvent(event);
            }));
            // Add bufferred events to local store
            for (var x = 0; x < bufferedEvents.length; x++) {
                this.addEvent(bufferedEvents[x]);
            }
        }
        OdbBeaconCache.prototype.addEvent = function (event) {
            if (event.enabled) {
                // put every new event to the session storage so that Sharepoint can upload it for us
                // if user navigates away before Beacon event
                LogProcessor_1.default.processAndLogEvent({
                    event: event,
                    logFunc: function (streamName, dictProperties) {
                        var storeSize = _store.getValue(LogProcessor_1.default.STORE_SIZE_KEY);
                        if (!storeSize) {
                            storeSize = 0;
                        }
                        _store.setValue(storeSize.toString(), { name: streamName, props: dictProperties });
                        _store.setValue(LogProcessor_1.default.STORE_SIZE_KEY, ++storeSize);
                    },
                    eventNamePrefix: BeaconCache.eventNamePrefix,
                    handlers: BeaconCache.handlers
                });
            }
        };
        return OdbBeaconCache;
    }());
    function addToLoggingManager(eventNamePrefix, handlers) {
        if (!BeaconCache.instance) {
            BeaconCache.instance = new OdbBeaconCache(eventNamePrefix, handlers);
        }
        else {
            throw new Error("The beaconCache has already been added to the logging manager with event name prefix " + eventNamePrefix + ".");
        }
    }
    BeaconCache.addToLoggingManager = addToLoggingManager;
})(BeaconCache || (BeaconCache = {}));
exports.default = BeaconCache;


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var Qos_event_1 = __webpack_require__(29);
var PLT_event_1 = __webpack_require__(54);
var Beacon_event_1 = __webpack_require__(41);
var UnhandledError_event_1 = __webpack_require__(159);
var RequireJSError_event_1 = __webpack_require__(81);
var CaughtError_event_1 = __webpack_require__(52);
var QosError_event_1 = __webpack_require__(74);
var Verbose_event_1 = __webpack_require__(75);
var Engagement_event_1 = __webpack_require__(39);
var EventBase_1 = __webpack_require__(24);
var RUMOneDataUpload_event_1 = __webpack_require__(77);
var PageInit_event_1 = __webpack_require__(160);
var DebugPriorityLevel_1 = __webpack_require__(161);
var LogProcessor;
(function (LogProcessor) {
    "use strict";
    LogProcessor.STORE_KEY = "SPCacheLogger";
    LogProcessor.STORE_SIZE_KEY = "Size";
    var SOURCE_V2_Engagement = "ClientV2Engagement";
    var DEBUG_LOG_STREAM = "ReliabilityLog";
    var USER_ENGAGEMENT_STREAM = "UserEngagement";
    var SOURCE_V2_Reliability = "ClientV2Reliability";
    // regex for SLAPI event names
    var SLAPI_EVENT_NAME_ALLOW = /[^a-z0-9\.\_\-\+]+/ig;
    var _spModuleLink = window['_spModuleLink'];
    var _appVersion = _spModuleLink ? _spModuleLink.buildNumber : "";
    // these are needed for Engagement and Qos logging
    var _spPageContextInfo;
    var _siteId;
    var _webId;
    var _listId;
    var _groupId;
    var _isContextInfoInitialized = false;
    function processAndLogEvent(params) {
        // Ignored events
        if (params.handlers.ignoredEventsHandler && params.handlers.ignoredEventsHandler(params.event)) {
            return;
        }
        // read these values from spPageContext and remove {}; in case values are not present set an empty string
        if (!_isContextInfoInitialized) {
            _isContextInfoInitialized = true;
            _spPageContextInfo = window['_spPageContextInfo'];
            if (_spPageContextInfo !== null && _spPageContextInfo !== undefined) {
                _siteId = _spPageContextInfo.siteId ? _spPageContextInfo.siteId.replace(SLAPI_EVENT_NAME_ALLOW, "") : "";
                _webId = _spPageContextInfo.webId ? _spPageContextInfo.webId.replace(SLAPI_EVENT_NAME_ALLOW, "") : "";
                _listId = _spPageContextInfo.listId ? _spPageContextInfo.listId.replace(SLAPI_EVENT_NAME_ALLOW, "") : "";
                _groupId = _spPageContextInfo.groupId ? _spPageContextInfo.groupId.replace(SLAPI_EVENT_NAME_ALLOW, "") : "";
            }
            else {
                _siteId = "";
                _webId = "";
                _listId = "";
                _groupId = "";
            }
        }
        // Get the data to log
        var logDataArray = Engagement_event_1.Engagement.isTypeOf(params.event) ? _processEngagementEvent(params.event) :
            Qos_event_1.Qos.isTypeOf(params.event) ? _processQosEvent(params.event, params.handlers.qosEventNameHandler || null, params.handlers.qosEventExtraDataHandler || null) :
                PLT_event_1.PLT.isTypeOf(params.event) ? _processPLTEvent(params.event) :
                    UnhandledError_event_1.UnhandledError.isTypeOf(params.event) ? _processUnhandledErrorEvent(params.event) :
                        RequireJSError_event_1.RequireJSError.isTypeOf(params.event) ? _processRequireJSErrorEvent(params.event) :
                            CaughtError_event_1.CaughtError.isTypeOf(params.event) ? _processCaughtErrorEvent(params.event) :
                                Verbose_event_1.Verbose.isTypeOf(params.event) ? _processVerboseEvent(params.event) :
                                    Beacon_event_1.Beacon.isTypeOf(params.event) ? _processBeaconEvent(params.event) :
                                        RUMOneDataUpload_event_1.RUMOneDataUpload.isTypeOf(params.event) ? _processRUMOneDataUploadEvent(params.event) :
                                            PageInit_event_1.PageInit.isTypeOf(params.event) ? _processPageInitEvent(params.event) :
                                                null;
        // If the log data array is not defined the event was unhandled, log
        // the event name so is easy to discover and fix
        if (!logDataArray) {
            logDataArray = [{
                    userEngagementData: {
                        EngagementName: "UnknownEvent",
                        Duration: 0,
                        LogType: 0,
                        Properties: JSON.stringify({ name: params.event.eventName }),
                        ClientTime: params.event.eventType === EventBase_1.ClonedEventType.End ? params.event.endTime : params.event.startTime,
                        Source: SOURCE_V2_Engagement
                    }
                }];
        }
        // Log all the data in the array adding the event prefix to the tag/name
        for (var index = 0, length = logDataArray.length; index < length; index++) {
            var logData = logDataArray[index];
            if (logData.debugData) {
                logData.debugData.Tag = _addEventPrefix(logData.debugData.Tag, params.eventNamePrefix).replace(SLAPI_EVENT_NAME_ALLOW, "");
                params.logFunc(DEBUG_LOG_STREAM, logData.debugData);
            }
            if (logData.userEngagementData) {
                // SPList: special case for Engagement events
                // set prefix to the name of the list type
                // to be able to track usage/engagement by list type
                var prefix = params.eventNamePrefix;
                if (Engagement_event_1.Engagement.isTypeOf(params.event) && prefix === 'SPList') {
                    // prefix will be set to a list type based on list base template
                    // if list type not found, [refix will be set back to generic SPList
                    prefix = _getScenarioNameFromListType();
                }
                logData.userEngagementData.EngagementName = _addEventPrefix(logData.userEngagementData.EngagementName, prefix).replace(SLAPI_EVENT_NAME_ALLOW, "");
                // SPList: special case for Qos events; add listBaseTemplate ID to the property bag
                if (Qos_event_1.Qos.isTypeOf(params.event) && params.eventNamePrefix === 'SPList') {
                    params.event.data.extraData["ListBaseTemplate"] = _getListBaseTemplate();
                }
                params.logFunc(USER_ENGAGEMENT_STREAM, logData.userEngagementData);
            }
            if (logData.rumOneData) {
                params.logFunc(logData.rumOneData.streamName, logData.rumOneData.dictionary);
            }
        }
    }
    LogProcessor.processAndLogEvent = processAndLogEvent;
    // get the list base template id
    function _getListBaseTemplate() {
        var listTemplate = -1;
        var spPageContextInfo = window['_spPageContextInfo'];
        if (spPageContextInfo !== undefined && spPageContextInfo !== null) {
            listTemplate = spPageContextInfo.listBaseTemplate;
        }
        return listTemplate;
    }
    // get the name of the listType; it's SPList for the unrecognized
    // list templates; TODO: add all templates
    function _getScenarioNameFromListType() {
        var scenarioName = "";
        var listTemplate = _getListBaseTemplate();
        switch (listTemplate) {
            case 100:
                scenarioName = "ListNext";
                break;
            case 101:
                scenarioName = "DocsNext";
                break;
            case 102:
                scenarioName = "SurveyNext";
                break;
            case 103:
                scenarioName = "LinksNext";
                break;
            case 104:
                scenarioName = "AnnouncementsNext";
                break;
            case 107:
                scenarioName = "TasksNext";
                break;
            case 109:
                scenarioName = "PicLibNext";
                break;
            default:
                scenarioName = "SPList";
                break;
        }
        return scenarioName;
    }
    // string examples: "{\"w3cResponseEnd\":2", "\"appStart\":750"
    function _cleanString(dataPLT) {
        var cleanString = dataPLT;
        cleanString = cleanString.replace("{", "");
        cleanString = cleanString.replace(/\"/gi, "");
        cleanString = cleanString.replace("}", "");
        return cleanString;
    }
    function _addEventPrefix(eventName, prefix) {
        if (!prefix) {
            return eventName;
        }
        return prefix + '.' + eventName;
    }
    function _getResultTypeSuffix(resultType) {
        if (resultType === Qos_event_1.ResultTypeEnum.Success) {
            return ".Success";
        }
        else if (resultType === Qos_event_1.ResultTypeEnum.Failure) {
            return ".Failure";
        }
        else if (resultType === Qos_event_1.ResultTypeEnum.ExpectedFailure) {
            return ".ExpectedFailure";
        }
        return "";
    }
    function _processRUMOneDataUploadEvent(event) {
        if (!event.data) {
            return [{
                    userEngagementData: {
                        EngagementName: "RUMOne.no_EventData",
                        Duration: 0,
                        LogType: 0,
                        ClientTime: event.startTime,
                        Source: SOURCE_V2_Engagement
                    }
                }];
        }
        var rumOneDataUpdateEventData = event.data;
        return [{
                rumOneData: {
                    streamName: rumOneDataUpdateEventData.streamName,
                    dictionary: rumOneDataUpdateEventData.dictionary
                }
            }];
    }
    function _processPageInitEvent(event) {
        return [{
                userEngagementData: {
                    EngagementName: "PageInit",
                    Properties: !!event.data ? JSON.stringify(event.data) : '',
                    Duration: 0,
                    LogType: 0,
                    ClientTime: event.startTime,
                    Source: SOURCE_V2_Engagement
                }
            }];
    }
    function _processEngagementEvent(event) {
        var logDataList = [];
        // if the event has not data we will get this in COSMOS
        // if it's a start we have only the name and append ".Start" to it
        // else we look for resultCode and append it to data.name with result type
        // if resultCode is not present than we append only the result type to the name
        // i.e. serverDataGetValue.Start OR serverDataGetValue.ResponseText.GetAuth.ExpectedFailure
        var name = "no_EngagementName";
        var properties = "";
        var siteId = _siteId;
        var webId = _webId;
        var listId = _listId;
        var groupId = _groupId;
        if (event.data) {
            var engagementData = event.data;
            siteId = engagementData.siteId || siteId;
            webId = engagementData.webId || webId;
            listId = engagementData.listId || listId;
            groupId = engagementData.groupId || groupId;
            name = engagementData.name || name;
            // if there is an experimentData object, it means there is an experiment so create and log a new tag for it
            // put all the experiment data in the properties bag;
            if (engagementData.experiment) {
                var abExperiment = engagementData.experiment;
                var experimentData = abExperiment.GetExperimentData();
                logDataList.push({
                    userEngagementData: {
                        EngagementName: _getExperimentEventName(experimentData, abExperiment.IsExperimentOn()),
                        Properties: JSON.stringify(experimentData),
                        Duration: 0,
                        LogType: 0,
                        ClientTime: event.startTime,
                        Source: SOURCE_V2_Engagement,
                        SiteId: siteId,
                        WebId: webId,
                        ListId: listId,
                        GroupId: groupId
                    }
                });
            }
            // put the extraData in the properties bag
            properties = engagementData.extraData ? JSON.stringify(engagementData.extraData) : "";
        }
        logDataList.push({
            userEngagementData: {
                EngagementName: name,
                Properties: properties,
                Duration: 0,
                LogType: 0,
                ClientTime: event.startTime,
                Source: SOURCE_V2_Engagement,
                SiteId: siteId,
                WebId: webId,
                ListId: listId,
                GroupId: groupId
            }
        });
        return logDataList;
    }
    function _getExperimentEventName(experimentData, isOn) {
        var name = (experimentData.name ? experimentData.name : 'noExperimentData') +
            '.Experiment' +
            (isOn ? 'Treatment' : 'Control');
        return name;
    }
    function _processQosEvent(event, qoSEventNameHandler, qosEventExtraDataHandler) {
        var logData = {};
        // if the event has not data we will get this in COSMOS
        // if it's a start we have only the name and append ".Start" to it
        // else we look for resultCode and append it to data.name with result type
        // if resultCode is not present than we append only the result type to the name
        // i.e. serverDataGetValue.ResponseText.Success OR serverDataGetValue.ResponseText.GetAuth.ExpectedFailure
        var name = "no_QosName";
        var qosData = event.data ? event.data : null;
        if (qosData) {
            if (qosData.name) {
                name = qosData.name;
            }
            if (qoSEventNameHandler != null) {
                name = qoSEventNameHandler(event, name);
            }
            qosData.extraData = qosData.extraData || {};
            if (qosEventExtraDataHandler != null) {
                qosEventExtraDataHandler(event, qosData);
            }
            qosData.extraData["appver"] = _appVersion;
        }
        // Duration is calculated only when we have an END event
        var durationTime;
        if (event.eventType === EventBase_1.ClonedEventType.End && event.startTime && event.endTime) {
            durationTime = event.endTime - event.startTime;
        }
        else {
            durationTime = 0;
        }
        logData.userEngagementData = {
            EngagementName: name,
            Properties: qosData && qosData.extraData ? JSON.stringify(qosData.extraData) : "",
            Duration: durationTime,
            LogType: 0,
            ClientTime: event.eventType === EventBase_1.ClonedEventType.End ? event.endTime : event.startTime,
            Source: SOURCE_V2_Reliability
        };
        return [logData];
    }
    function _processBeaconEvent(event) {
        var logData = {};
        var durationTime;
        if (event.eventType === EventBase_1.ClonedEventType.End && event.startTime && event.endTime) {
            durationTime = event.endTime - event.startTime;
        }
        else {
            durationTime = 0;
        }
        logData.userEngagementData = {
            EngagementName: "Beacon",
            Properties: event.data ? JSON.stringify(event.data) : "no_EventData",
            Duration: durationTime,
            LogType: 0,
            ClientTime: event.eventType === EventBase_1.ClonedEventType.End ? event.endTime : event.startTime,
            Source: SOURCE_V2_Reliability
        };
        return [logData];
    }
    function _processPLTEvent(event) {
        if (!event.data) {
            return [{
                    userEngagementData: {
                        EngagementName: "PLT.no_EventData",
                        Duration: 0,
                        LogType: 0,
                        ClientTime: event.startTime,
                        Source: SOURCE_V2_Engagement
                    }
                }];
        }
        var logDataList = [];
        //get the data for this event
        var pltData = event.data;
        // this will be the prefix for the tags; i.e. PLT.SetView-Files.w3cResponseEnd
        var name = "PLT." + pltData.name.replace(" ", "");
        // break down the PLT data and log each one as a separate record in the stream
        //{"name":"SetView-Files","w3cResponseEnd":424,"appStart":254,"preRender":20,"dataFetch":310,"postRender":327,"render":347,"plt":1335}
        var dataPLT = JSON.stringify(pltData).split(',');
        var duration = 0;
        // iterate through data and extract each type
        // create tags like this: PLT.<pagename>.w3cResponseEnd; PLT.<pagename>.appStart
        for (var i = 0; i < dataPLT.length; i++) {
            var cleanedPLTString = _cleanString(dataPLT[i]);
            // split the string and get the name and duration
            // special case for duration when appCacheHit is a boolean
            var subDataPLTs = cleanedPLTString.split(':');
            // skip the 'name' key-value pair
            if (_cleanString(subDataPLTs[1]) !== pltData.name) {
                if (subDataPLTs[1] === 'true') {
                    duration = 1;
                }
                else if (subDataPLTs[1] === 'false' || subDataPLTs[1] === 'null') {
                    duration = 0;
                }
                else {
                    duration = parseInt(subDataPLTs[1], 10);
                }
                logDataList.push({
                    userEngagementData: {
                        EngagementName: name + "." + subDataPLTs[0],
                        Properties: (subDataPLTs[0] === 'appCacheHit') ? JSON.stringify(event.data) : "",
                        Duration: duration,
                        LogType: 0,
                        ClientTime: event.startTime,
                        Source: SOURCE_V2_Engagement
                    }
                });
            }
        }
        return logDataList;
    }
    function _processUnhandledErrorEvent(event) {
        return [{
                userEngagementData: {
                    EngagementName: "UnhandledError",
                    Duration: 0,
                    LogType: 0,
                    ClientTime: event.startTime,
                    Source: SOURCE_V2_Engagement
                },
                debugData: {
                    Tag: "UnhandledError",
                    Level: DebugPriorityLevel_1.default.Normal,
                    Message: event.data ? JSON.stringify(event.data) : "no_EventData",
                    Misc: "",
                    ClientTime: event.startTime
                }
            }];
    }
    function _processRequireJSErrorEvent(event) {
        var logData = {};
        var name = "RequireJSError";
        var errorData;
        var errorMessage;
        if (event.data) {
            // clone all properties so that we can omit 'message' in JSON
            errorData = {};
            for (var key in event.data) {
                if (key !== "message") {
                    errorData[key] = event.data[key];
                }
                else {
                    errorMessage = event.data[key];
                }
            }
        }
        logData.userEngagementData = {
            EngagementName: name,
            Duration: 0,
            LogType: 0,
            ClientTime: event.startTime,
            Source: SOURCE_V2_Engagement
        };
        logData.debugData = {
            Tag: name,
            Level: DebugPriorityLevel_1.default.Normal,
            Message: errorMessage ? errorMessage : "no_ErrorMessage",
            Misc: errorData ? JSON.stringify(errorData) : "no_ErrorData",
            ClientTime: event.startTime
        };
        return [logData];
    }
    function _processCaughtErrorEvent(event) {
        var logData = {};
        var name = "CaughtError";
        if (QosError_event_1.QosError.isTypeOf(event)) {
            if (event.data) {
                var qosErrorData = event.data;
                name = qosErrorData.name;
                if (qosErrorData.resultCode) {
                    name += "." + qosErrorData.resultCode;
                }
                name += _getResultTypeSuffix(qosErrorData.resultType);
            }
            else {
                name = "QosErrorEvent.no_EventData";
            }
        }
        else {
            // log it once in the UserEngagement stream to count the hits
            logData.userEngagementData = {
                EngagementName: name,
                Duration: 0,
                LogType: 0,
                ClientTime: event.startTime,
                Source: SOURCE_V2_Engagement
            };
        }
        // log it again in ReliabilityLog stream with data for debugging
        var caughtErrorData = event.data ? event.data : null;
        logData.debugData = {
            Tag: name,
            Level: DebugPriorityLevel_1.default.Normal,
            Message: caughtErrorData && caughtErrorData.message ? caughtErrorData.message : "",
            Misc: caughtErrorData && caughtErrorData.stack ? JSON.stringify(caughtErrorData.stack) : "",
            ClientTime: event.startTime
        };
        return [logData];
    }
    function _processVerboseEvent(event) {
        var logData = {};
        var name = "Verbose";
        if (event.data) {
            var verboseData = event.data;
            if (verboseData.name) {
                name = verboseData.name + ".Verbose";
            }
        }
        else {
            name += ".no_EventData";
        }
        // log it in ReliabilityLog stream with data for debugging
        logData.debugData = {
            Tag: name,
            Level: DebugPriorityLevel_1.default.Low,
            Message: verboseData.message,
            Misc: "",
            ClientTime: event.startTime
        };
        return [logData];
    }
})(LogProcessor || (LogProcessor = {}));
exports.default = LogProcessor;


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var SingleEventBase_1 = __webpack_require__(8);
exports.RequireJSError = SingleEventBase_1.createSingleEvent({
    eventName: 'RequireJSError,',
    shortEventName: 'RequireJSError',
    critical: true,
    requiresParent: false
}, {
    message: 1 /* String */,
    requireModules: 5 /* Array */,
    requireType: 1 /* String */,
    stack: 1 /* String */
});
exports.default = exports.RequireJSError;


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
exports.strings = { "fileSizeTB": "{0} TB", "fileSizeGB": "{0} GB", "fileSizeMB": "{0} MB", "fileSizeKB": "{0} KB", "fileSizeBytesPlural": "{0} bytes", "fileSizeBytesSingular": "1 byte" };


/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var FileTypeIconMap_1 = __webpack_require__(84);
var ItemType_1 = __webpack_require__(56);
var SharingTypeHelper = __webpack_require__(85);
var GENERIC_FILE = 'genericfile';
var CODE_FILE = 'code';
var ONENOTE_FILE = 'one';
var FOLDER = 'folder';
var SHARED_FOLDER = 'sharedfolder';
var DOCSET_FOLDER = 'docset';
var VIDEO_FILE = 'video';
var PHOTO_FILE = 'photo';
var LIST_ITEM = 'listitem';
var _extensionToIconName;
exports.genericFile = GENERIC_FILE;
exports.codeFile = CODE_FILE;
exports.videoFile = VIDEO_FILE;
exports.photoFile = PHOTO_FILE;
function getIconNameFromItem(item) {
    var iconName = '';
    if (item.type === ItemType_1.default.Folder) {
        iconName = SharingTypeHelper.usePrivateFolderIcon(item.sharingType) ? FOLDER : SHARED_FOLDER;
        if (item.isDocSet) {
            iconName = DOCSET_FOLDER;
        }
    }
    else if (item.type === ItemType_1.default.OneNote) {
        iconName = ONENOTE_FILE;
    }
    else if (item.listItem) {
        iconName = LIST_ITEM;
    }
    else if (item.textEditorMimeType === 'text/typescript') {
        iconName = CODE_FILE;
    }
    else {
        iconName = getIconNameFromExtension(item.extension);
    }
    return iconName;
}
exports.getIconNameFromItem = getIconNameFromItem;
function getItemTypeFromExtension(extension) {
    var itemType;
    try {
        if (extension) {
            var iconName = getIconNameFromExtension(extension);
            if (FileTypeIconMap_1.default[iconName]) {
                var iconItemType = FileTypeIconMap_1.default[iconName].type;
                if (iconItemType === (void 0)) {
                    iconItemType = ItemType_1.default.File;
                }
                itemType = iconItemType;
            }
        }
    }
    catch (e) {
        //do nothing
    }
    if (itemType === (void 0)) {
        itemType = ItemType_1.default.Unknown;
    }
    return itemType;
}
exports.getItemTypeFromExtension = getItemTypeFromExtension;
function getIconNameFromExtension(extension) {
    if (!_extensionToIconName) {
        _extensionToIconName = {};
        for (var iconName in FileTypeIconMap_1.default) {
            var extensions = FileTypeIconMap_1.default[iconName].extensions;
            if (extensions) {
                for (var i = 0; i < extensions.length; i++) {
                    _extensionToIconName[extensions[i]] = iconName;
                }
            }
        }
    }
    // Strip periods, force lowercase.
    extension = extension.replace('.', '').toLowerCase();
    return _extensionToIconName[extension] || GENERIC_FILE;
}
exports.getIconNameFromExtension = getIconNameFromExtension;


/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ItemType_1 = __webpack_require__(56);
/**
 * Enumeration of icon file names, and what extensions they map to.
 * Please keep items alphabetical. Items without extensions may require specific logic in the code to map.
 * Track icon accuracy status here: https://msft-my.spoppe.com/personal/caperez_microsoft_com/Documents/Missing%20List.xlsx?web=1
 */
var FileTypeIconMap = {
    'accdb': { extensions: ['accdb', 'mdb'] },
    'archive': { type: ItemType_1.default.Unknown, extensions: ['7z', 'ace', 'arc', 'arj', 'dmg', 'gz', 'iso', 'lzh', 'pkg', 'rar', 'sit', 'tgz', 'tar', 'z'] },
    'audio': { type: ItemType_1.default.Unknown, extensions: ['aif', 'aiff', 'aac', 'amr', 'au', 'awb', 'dct', 'dss', 'dvf', 'flac', 'gsm', 'm4a', 'm4p', 'mid', 'mmf', 'mp3', 'ogg', 'oga', 'ra', 'rm', 'wav', 'wma', 'wv'] },
    'code': { extensions: ['abap', 'ada', 'adp', 'ahk', 'as', 'as3', 'asc', 'ascx', 'asm', 'asp', 'awk', 'bash', 'bash_login', 'bash_logout', 'bash_profile', 'bashrc', 'bat', 'bib', 'bsh', 'build', 'builder', 'c', 'c++', 'capfile', 'cc', 'cfc', 'cfm', 'cfml', 'cl', 'clj', 'cls', 'cmake', 'cmd', 'coffee', 'config', 'cpp', 'cpt', 'cpy', 'cs', 'cshtml', 'cson', 'csproj', 'css', 'ctp', 'cxx', 'd', 'ddl', 'di', 'disco', 'dml', 'dtd', 'dtml', 'el', 'emakefile', 'erb', 'erl', 'f', 'f90', 'f95', 'fs', 'fsi', 'fsscript', 'fsx', 'gemfile', 'gemspec', 'gitconfig', 'go', 'groovy', 'gvy', 'Hcp', 'h', 'h++', 'haml', 'handlebars', 'hbs', 'hh', 'hpp', 'hrl', 'hs', 'htc', 'hxx', 'idl', 'iim', 'inc', 'inf', 'ini', 'inl', 'ipp', 'irbrc', 'jade', 'jav', 'java', 'js', 'json', 'jsp', 'jsx', 'l', 'less', 'lhs', 'lisp', 'log', 'lst', 'ltx', 'lua', 'm', 'make', 'manifest', 'master', 'md', 'markdn', 'markdown', 'mdown', 'mkdn', 'ml', 'mli', 'mll', 'mly', 'mm', 'mud', 'nfo', 'opml', 'osascript', 'p', 'pas', 'patch', 'php', 'php2', 'php3', 'php4', 'php5', 'phtml', 'pl', 'pm', 'pod', 'pp', 'profile', 'ps1', 'pss', 'pt', 'py', 'pyw', 'r', 'rake', 'rb', 'rbx', 'rc', 'rdf', 're', 'reg', 'rest', 'resw', 'resx', 'rhtml', 'rjs', 'rprofile', 'rpy', 'rss', 'rst', 'ruby', 'rxml', 's', 'sass', 'scala', 'scm', 'sconscript', 'sconstruct', 'script', 'scss', 'sgml', 'sh', 'sh', 'shtml', 'sml', 'svn-base', 'sql', 'sql', 'sty', 'tcl', 'tex', 'textile', 'tld', 'tli', 'tmpl', 'tpl', 'vb', 'vi', 'vim', 'vmg', 'webpart', 'wsp', 'wsdl', 'xhtml', 'xoml', 'xsd', 'xslt', 'yaml', 'yaws', 'yml', 'zsh'] },
    'css': {},
    'csv': { extensions: ['csv'] },
    'docset': { type: ItemType_1.default.Folder, iconType: 'svg' },
    'docx': { extensions: ['doc', 'docm', 'docx'] },
    'dotx': { extensions: ['dot', 'dotm', 'dotx'] },
    'email': { type: ItemType_1.default.Unknown, extensions: ['eml', 'msg', 'ost', 'pst'] },
    'exe': { type: ItemType_1.default.Unknown, extensions: ['application', 'appref-ms', 'apk', 'app', 'appx', 'exe', 'ipa', 'msi', 'xap'] },
    'folder': { type: ItemType_1.default.Folder, iconType: 'svg' },
    'font': { type: ItemType_1.default.Unknown, extensions: ['ttf', 'otf', 'woff'] },
    'genericfile': { type: ItemType_1.default.Unknown },
    'html': { extensions: ['htm', 'html', 'mht'] },
    'link': { type: ItemType_1.default.Unknown, extensions: ['lnk', 'link', 'url', 'website', 'webloc'] },
    'listitem': { type: ItemType_1.default.Unknown, extensions: ['listitem'] },
    'model': { extensions: ['3ds', '3mf', 'blend', 'cool', 'dae', 'df', 'dwfx', 'dwg', 'dxf', 'fbx', 'glb', 'gltf', 'holo', 'layout', 'max', 'off', 'ply', 'skp', 'stp', 'stl', 't', 'thl', 'x'] },
    'mpp': { extensions: ['mpp'] },
    'mpt': { extensions: ['mpt'] },
    'odp': { extensions: ['odp'] },
    'ods': { extensions: ['ods'] },
    'odt': { extensions: ['odt'] },
    'one': { type: ItemType_1.default.OneNote, extensions: ['one', 'onepkg'] },
    'onetoc': { type: ItemType_1.default.OneNote, extensions: ['ms-one-stub', 'onetoc', 'onetoc2'] },
    'pdf': { extensions: ['pdf'] },
    'photo': { type: ItemType_1.default.Media, extensions: ['arw', 'bmp', 'cr2', 'crw', 'dcr', 'dds', 'dib', 'dng', 'erf', 'gif', 'ico', 'jfi', 'jfif', 'jif', 'jpe', 'jpeg', 'jpg', 'kdc', 'mrw', 'nef', 'orf', 'pct', 'pict', 'png', 'pns', 'psd', 'raw', 'tga', 'tif', 'tiff', 'wdp'] },
    'potx': { extensions: ['pot', 'potm', 'potx'] },
    'ppsx': { extensions: ['pps', 'ppsm', 'ppsx'] },
    'pptx': { extensions: ['ppt', 'pptm', 'pptx'] },
    'pub': { extensions: ['pub'] },
    'spo': { extensions: ['aspx'] },
    'rtf': { extensions: ['epub', 'rtf', 'wri'] },
    'sharedfolder': { type: ItemType_1.default.Folder, iconType: 'svg' },
    'sysfile': { type: ItemType_1.default.Unknown, extensions: ['bak', 'bin', 'cab', 'cache', 'cat', 'cer', 'class', 'dat', 'db', 'dbg', 'dl_', 'dll', 'ithmb', 'jar', 'kb', 'kdc', 'ldt', 'lrprev', 'ppa', 'ppam', 'pdb', 'rom', 'thm', 'thmx', 'vsl', 'xla', 'xlam', 'xll'] },
    'txt': { extensions: ['dif', 'diff', 'readme', 'out', 'plist', 'properties', 'text', 'txt'] },
    'vector': { type: ItemType_1.default.Unknown, extensions: ['ai', 'dgn', 'pd', 'emf', 'eps', 'indd', 'indt', 'ps', 'svg', 'svgz', 'wmf', 'oxps', 'xps', 'xd', 'sketch'] },
    'video': { type: ItemType_1.default.Media, extensions: ['3gp', 'asf', 'avi', 'dvr-ms', 'flv', 'm1v', 'm4v', 'mkv', 'mod', 'mov', 'mm4p', 'mp2', 'mp2v', 'mp4', ' mpa', 'mpe', 'mpeg', 'mpg', 'mpv', 'mpv2', 'mts', 'ogg', 'qt', 'swf', 'ts', 'vob', 'webm', 'wlmp', 'wm', 'wmv', 'wmx'] },
    'vsdx': { extensions: ['vsd', 'vsdm', 'vsdx', 'vdw'] },
    'vssx': { extensions: ['vss', 'vssm', 'vssx'] },
    'vstx': { extensions: ['vst', 'vstm', 'vstx'] },
    'xlsx': { extensions: ['xls', 'xlsb', 'xlsm', 'xlsx'] },
    'xltx': { extensions: ['xlt', 'xltm', 'xltx'] },
    'xml': { extensions: ['xaml', 'xml', 'xsl'] },
    'xsn': { extensions: ['xsn'] },
    'zip': { type: ItemType_1.default.Unknown, extensions: ['zip'] }
};
exports.default = FileTypeIconMap;


/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SharingType_1 = __webpack_require__(86);
function usePrivateFolderIcon(itemSharingType) {
    return (itemSharingType === undefined ||
        itemSharingType === SharingType_1.default.Private ||
        itemSharingType === SharingType_1.default.Unknown); // erring on caution--if sharingType is Unknown, show it as not shared
}
exports.usePrivateFolderIcon = usePrivateFolderIcon;
function showSubTextSharingIcon(itemSharingType) {
    return (itemSharingType !== undefined &&
        itemSharingType !== SharingType_1.default.Private &&
        itemSharingType !== SharingType_1.default.Unknown); // additionally, the Unknown case should be not shared as well
}
exports.showSubTextSharingIcon = showSubTextSharingIcon;
function shouldRequestSharedWithData(itemSharingType) {
    return (itemSharingType !== SharingType_1.default.Private); // not including Unknown, should fetch the shared with information when uncertain
}
exports.shouldRequestSharedWithData = shouldRequestSharedWithData;
function useSharedFolderAriaLabel(itemSharingType) {
    return (itemSharingType === SharingType_1.default.Shared); // not including Unknown, don't mentioned sharing state when uncertain
}
exports.useSharedFolderAriaLabel = useSharedFolderAriaLabel;


/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SharingType;
(function (SharingType) {
    SharingType[SharingType["Public"] = 0] = "Public";
    SharingType[SharingType["PublicUnlisted"] = 2] = "PublicUnlisted";
    SharingType[SharingType["Shared"] = 3] = "Shared";
    SharingType[SharingType["Private"] = 4] = "Private";
    SharingType[SharingType["Unknown"] = 5] = "Unknown";
})(SharingType || (SharingType = {}));
exports.default = SharingType;


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// NOTE: This module should have no dependencies!
Object.defineProperty(exports, "__esModule", { value: true });
function isDOMEventTarget(target) {
    return !!target && typeof target.addEventListener === 'function';
}
exports.isDOMEventTarget = isDOMEventTarget;
function isEventTarget(target) {
    return !!target && !!target.__events__;
}
exports.isEventTarget = isEventTarget;
function declare(parent, event) {
    var host = parent;
    var declaredEvents = host.__declaredEvents = host.__declaredEvents || {};
    if (typeof event === 'string') {
        declaredEvents[event] = true;
    }
    else {
        for (var i = 0; i < event.length; i++) {
            declaredEvents[event[i]] = true;
        }
    }
}
exports.declare = declare;
function raise(target, eventName, eventArgs, bubbleEvent) {
    var retVal;
    if (isDOMEventTarget(target)) {
        if (document.createEvent) {
            var ev = document.createEvent('HTMLEvents');
            ev.initEvent(eventName, bubbleEvent, true);
            ev.args = eventArgs;
            retVal = target.dispatchEvent(ev);
        }
    }
    else {
        while (target && retVal !== false) {
            if (isEventTarget(target)) {
                var events = target.__events__;
                var eventRecords = events[eventName];
                for (var id in eventRecords) {
                    var eventRecordList = eventRecords[id];
                    for (var listIndex = 0; retVal !== false && listIndex < eventRecordList.length; listIndex++) {
                        var record = eventRecordList[listIndex];
                        if (record.objectCallback) {
                            retVal = record.objectCallback.call(record.parent, eventArgs);
                        }
                    }
                }
                // If the target has a parent, bubble the event up.
                target = bubbleEvent ? target.parent : null;
            }
            else {
                target = null;
            }
        }
    }
    return retVal;
}
exports.raise = raise;


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ObjectUtil_1 = __webpack_require__(19);
var StringHelper_1 = __webpack_require__(31);
var UriPartial;
(function (UriPartial) {
    /** The scheme segment of the URI */
    UriPartial[UriPartial["scheme"] = 0] = "scheme";
    /** The scheme and authority segments of the URI */
    UriPartial[UriPartial["authority"] = 1] = "authority";
    /** The scheme, authority, and path segments of the URI */
    UriPartial[UriPartial["path"] = 2] = "path";
    /** The scheme, authority, path, and query segments of the URI */
    UriPartial[UriPartial["query"] = 3] = "query";
})(UriPartial = exports.UriPartial || (exports.UriPartial = {}));
var DELIMITERS = /[;\/?:@&=$,]/;
var AUTHORITY_TERMINATORS = /[\/?]/;
function queryToLower(queryObj) {
    var newQuery = {};
    for (var key in queryObj) {
        if (queryObj.hasOwnProperty(key)) {
            newQuery[key.toLowerCase()] = queryObj[key].toLowerCase();
        }
    }
    return newQuery;
}
/**
 * Partial port of groove\Misc\URI.cpp, which was based on RFC2396 and RFC3986 (http://www.ietf.org/rfc/rfc2396.txt).
 * There are a few differences between this implementation and the RFC:
 *  - Implementation does not support parameters (we don't use them, and partial implementation was incorrect)
 *  - Implementation supports some relative URIs at a glance but more investigation required
 *
 *   foo://example.com:8042/over/there?name=ferret#nose
 *   \_/   \______________/\_________/ \_________/ \__/
 *    |           |            |            |        |
 * scheme     authority       path        query   fragment
 *
 * Possible improvements:
 *  - Support path parameters
 *  - Fully support and test relative URLs based on RFC
 *  - Allow changing/removing remaining URI components (i.e. user, host, port, parameters)
 *  - URI.equals could allow ?foo=1&bar=2 equals ?bar=2&foo=1
 *  - URI.parseURI should have better error handling rather than just setting it as path
 *  - URI.getQueryAsObject should have better error handling for query of "a=1&a=2"
 */
var Uri = (function () {
    function Uri(uriString, options) {
        // All of these are decoded (if relevant) unless specified as encoded.
        this._scheme = "";
        this._user = "";
        this._host = "";
        this._port = "";
        this._path = "";
        this._pathSegments = [];
        this._pathEncoded = "";
        this._query = {};
        this._fragment = "";
        if (options) {
            this._queryCaseInsensitive = !!options.queryCaseInsensitive;
            this._pathCaseInsensitive = !!options.pathCaseInsensitive;
        }
        this._parseURI(uriString);
    }
    Uri.concatenate = function () {
        var uriParts = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            uriParts[_i] = arguments[_i];
        }
        var result = '';
        for (var i = 0; i < uriParts.length; i++) {
            var part = uriParts[i];
            if (i > 0) {
                part = Uri.ensureNoPrecedingSlash(part);
            }
            if (i < uriParts.length - 1) {
                part = Uri.ensureTrailingSlash(part);
            }
            result += part;
        }
        return result;
    };
    Uri.ensureNoPrecedingSlash = function (part) {
        return part[0] === "/" ? part.substr(1) : part;
    };
    Uri.ensureTrailingSlash = function (part) {
        return part[part.length - 1] !== "/" ? (part + "/") : part;
    };
    Uri.prototype.getScheme = function () {
        return this._scheme;
    };
    Uri.prototype.setScheme = function (scheme) {
        this._scheme = scheme;
    };
    Uri.prototype.getAuthority = function () {
        return this._getAuthority(false);
    };
    Uri.prototype.setAuthority = function (authority) {
        this._parseAuthority(authority);
    };
    Uri.prototype.getUser = function () {
        return this._user;
    };
    Uri.prototype.getHost = function () {
        return this._host;
    };
    Uri.prototype.getPort = function () {
        return this._port;
    };
    Uri.prototype.getPath = function (trimTrailingSlash) {
        var retPath = this._path;
        if (Boolean(trimTrailingSlash)) {
            // If the last character is a slash
            if (retPath !== null && retPath.lastIndexOf("/") === (retPath.length - 1)) {
                retPath = retPath.slice(0, -1); //trim last character
            }
        }
        return retPath;
    };
    /**
     * Returns a string containing the leftmost portion of the URI string, ending with the portion specified by part
     */
    Uri.prototype.getLeftPart = function (part) {
        var ret = this._scheme + "://"; // default value is UriPartial.scheme
        if (part === UriPartial.authority) {
            ret += this.getAuthority();
        }
        if (part === UriPartial.path) {
            ret += this.getPath();
        }
        if (part === UriPartial.query) {
            ret += this.getQuery();
        }
        return ret;
    };
    Uri.prototype.setPath = function (path) {
        if (path && path[0] !== "/") {
            path = "/" + path;
        }
        this._parsePath(path);
    };
    Uri.prototype.getPathSegments = function () {
        return this._pathSegments;
    };
    Uri.prototype.getLastPathSegment = function () {
        var pathSegments = this._pathSegments;
        return pathSegments[pathSegments.length - 1] || "";
    };
    Uri.prototype.getQuery = function (encoded) {
        return this._serializeQuery(encoded);
    };
    /**
     * Query is not well-defined but is commonly formatted as key=value and delimited with & or ;
     * (http://www.w3.org/TR/REC-html40/appendix/notes.html#h-B.2.2)
     *  - URI with query "a=1&b=2" or "a=1;b=2" will return {a: "1", b: "2"}
     *  - Mixed-mode will also work: "a=1&b=2;c=3" will return {a: "1", b: "2", c: "3"}
     *  - Assumes that parameters will be unique (i.e. "a=1&a=2" is not allowed and will produce unexpected results)
     */
    Uri.prototype.setQuery = function (query) {
        this.setQueryFromObject(this._deserializeQuery(query));
    };
    Uri.prototype.getQueryAsObject = function () {
        return this._query;
    };
    Uri.prototype.setQueryFromObject = function (queryObj) {
        this._query = {};
        for (var queryKey in queryObj) {
            if (queryObj.hasOwnProperty(queryKey)) {
                this.setQueryParameter(queryKey, queryObj[queryKey]);
            }
        }
    };
    Uri.prototype.getQueryParameter = function (queryKey) {
        var ret = null;
        var query = this._query;
        if (this._queryCaseInsensitive) {
            queryKey = queryKey.toLowerCase();
            for (var key in query) {
                if (query.hasOwnProperty(key) && key.toLowerCase() === queryKey) {
                    ret = query[key];
                }
            }
        }
        else {
            ret = query[queryKey];
        }
        return ret || null;
    };
    /**
     * Adds query parameter to the end if queryKey does not exist, or
     * overwrites existing query value if queryKey already exists.
     */
    Uri.prototype.setQueryParameter = function (queryKey, queryValue, ignoreEmptyValues) {
        if (ignoreEmptyValues === void 0) { ignoreEmptyValues = true; }
        var queryValueDecoded = this._decodeQueryString(queryValue);
        // there is no point adding undefined or modifying existing values to undefined or null.
        if (!!queryValueDecoded || ignoreEmptyValues) {
            this._query[this._decodeQueryString(queryKey)] = queryValueDecoded;
        }
    };
    Uri.prototype.removeQueryParameter = function (queryKey) {
        delete this._query[this._decodeQueryString(queryKey)];
    };
    Uri.prototype.getFragment = function () {
        return this._fragment;
    };
    Uri.prototype.setFragment = function (fragment) {
        if (fragment[0] === "#") {
            fragment = fragment.substring(1);
        }
        // Treat the fragment as a query string (decode + as space) because we pass in
        // query parameters using the fragment on page load.
        this._fragment = this._decodeQueryString(fragment);
    };
    /**
     * Does a strict equality check of URIs (including same query parameters
     * in the same order, and most comparisons case-sensitive).
     * According to RFC3986: scheme and host should be case-insensitive.
     * Note: This does not follow RFC2616's URI Comparison since it is not HTTP-specific.
     *
     * KNOWN ISSUE: Depending on your definition of "incorrect," this could return
     * incorrect results for URI parts that get decoded.
     * For example: http://somewhere/my%2fpath and http://somewhere/my/path
     * will compare as equal because the comparisons are done to decoded versions.
     */
    Uri.prototype.equals = function (uri) {
        return StringHelper_1.equalsCaseInsensitive(this._scheme, uri.getScheme()) &&
            this._user === uri.getUser() &&
            StringHelper_1.equalsCaseInsensitive(this._host, uri.getHost()) &&
            this._port === uri.getPort() &&
            this._fragment === uri.getFragment() &&
            this._equalsCaseAppropriate(this.getPath(/*trimTrailingSlash*/ true), uri.getPath(true), this._pathCaseInsensitive) &&
            this._equalsCaseAppropriate(this.getQuery(), uri.getQuery(), this._queryCaseInsensitive);
    };
    /**
     * Does an equivalence check of two URIs. Checks to see if the URIs are
     * equivalent, but they may not be exact! Strings are compared case
     * insensitive and query parameters can be in any order.
     *
     * KNOWN ISSUE: Depending on your definition of "incorrect," this could return
     * incorrect results for URI parts that get decoded.
     * For example: http://somewhere/my%2fpath and http://somewhere/my/path
     * will compare as equal because the comparisons are done to decoded versions.
     */
    Uri.prototype.equivalent = function (uri) {
        return StringHelper_1.equalsCaseInsensitive(this._scheme, uri.getScheme()) &&
            StringHelper_1.equalsCaseInsensitive(this._user, uri.getUser()) &&
            StringHelper_1.equalsCaseInsensitive(this._host, uri.getHost()) &&
            StringHelper_1.equalsCaseInsensitive(this._port, uri.getPort()) &&
            StringHelper_1.equalsCaseInsensitive(this.getPath(/*trimTrailingSlash*/ true), uri.getPath(true)) &&
            ObjectUtil_1.deepCompare(queryToLower(this.getQueryAsObject()), queryToLower(uri.getQueryAsObject())) &&
            StringHelper_1.equalsCaseInsensitive(this._fragment, uri.getFragment());
    };
    /**
     * Note that this returns the URL encoded/escaped while the getXXX() methods
     * for the individual components return the unescaped strings. Returning a
     * concatenation of the decoded components would change the semantics of the
     * URL. See section 2.4.2 of RFC 2396 (http://www.ietf.org/rfc/rfc2396.txt).
     *
     * Use doNotPercentEncodeHost to indicate that the output should not have a
     * percent-encoded host, such as when passing to the url parameter of
     * XmlHttpRequest.open(). Section 3.2.2 of RFC 2396 only allows alphanumeric
     * characters and hyphen in the host of a URL, so percent-encoded hosts are
     * not allowed. While section 3.2.2 of RFC 3986 does not restrict the host
     * character set anymore, not all browsers can handle a percent-encoded host
     * - DNS lookup fails.  But, they will convert the unencoded Unicode to the
     * IDNA encoding (punycode), so leaving the host as-is in this case is preferred.
     */
    Uri.prototype.toString = function (outputOptions) {
        return this._getStringInternal(/*encoded*/ true, outputOptions);
    };
    /**
     * This method should be used to obtain a string for display purposes only,
     * because as mentioned above, a decoded URL may have different semantics than
     * the encoded version.
     */
    Uri.prototype.getDecodedStringForDisplay = function () {
        return this._getStringInternal(/*encoded*/ false);
    };
    /*
     * Input URI of "foo://user:pass@host.com/alpha/beta/gamma/delta;p;a;r;a;m;s?q=1&u=2&e=3&r=4&y=5#fragment"
     * would return "foo://user:pass@host.com/alpha/beta/gamma/delta;p;a;r;a;m;s";
     */
    Uri.prototype.getStringWithoutQueryAndFragment = function () {
        return this._getStringWithoutQueryAndFragmentInternal(/*encoded=*/ true);
    };
    Uri.prototype._equalsCaseAppropriate = function (a, b, isCaseInsensitive) {
        if (isCaseInsensitive) {
            return StringHelper_1.equalsCaseInsensitive(a, b);
        }
        return a === b;
    };
    Uri.prototype._getStringInternal = function (encoded, outputOptions) {
        var ret = this._getStringWithoutQueryAndFragmentInternal(encoded, outputOptions);
        var query = this.getQuery(encoded);
        if (query) {
            ret += "?" + query;
        }
        if (this._fragment) {
            ret += "#" + (encoded ? encodeURIComponent(this._fragment) : this._fragment);
        }
        return ret;
    };
    Uri.prototype._getStringWithoutQueryAndFragmentInternal = function (encoded, outputOptions) {
        var ret = "";
        if (this._scheme) {
            ret += (encoded ? encodeURIComponent(this._scheme) : this._scheme) + ":";
        }
        // Authority includes user, host, and port
        var authority = this._getAuthority(/*encoded=*/ encoded, outputOptions);
        if (authority) {
            ret += "//" + authority;
        }
        if (this._pathEncoded) {
            ret += (encoded ? this._pathEncoded : this._path);
        }
        return ret;
    };
    Uri.prototype._deserializeQuery = function (queryStr) {
        var queryObj = {};
        if (queryStr.indexOf("?") === 0) {
            queryStr = queryStr.substring(1);
        }
        for (var _i = 0, _a = queryStr.split(/[;&]+/); _i < _a.length; _i++) {
            var queryPart = _a[_i];
            var keyEndIndex = queryPart.indexOf('=');
            // "foo" is a legal query string equivalent to "foo="
            if (keyEndIndex < 0) {
                keyEndIndex = queryPart.length;
            }
            if (keyEndIndex > 0) {
                queryObj[queryPart.substr(0, keyEndIndex)] = queryPart.substr(keyEndIndex + 1);
            }
        }
        return queryObj;
    };
    Uri.prototype._serializeQuery = function (encoded) {
        var queryStr = "";
        for (var queryKey in this._query) {
            if (this._query.hasOwnProperty(queryKey)) {
                var key = queryKey;
                var value = this._query[queryKey];
                if (encoded) {
                    key = encodeURIComponent(key);
                    value = encodeURIComponent(value);
                }
                if (value === null || value === "") {
                    queryStr += key + "=&";
                }
                else {
                    queryStr += key + "=" + value + "&";
                }
            }
        }
        if (queryStr !== "") {
            queryStr = queryStr.slice(0, -1); //trim extra & at the end
        }
        return queryStr;
    };
    Uri.prototype._parseURI = function (uriString) {
        var remainingString = uriString;
        // Find fragment
        var fragmentBeginPos = remainingString.indexOf("#");
        if (fragmentBeginPos >= 0) {
            var fragment = remainingString.substring(fragmentBeginPos + 1);
            this.setFragment(fragment);
            remainingString = remainingString.substring(0, fragmentBeginPos); //remove fragment
        }
        // Find scheme
        var schemeEndPos = remainingString.search(DELIMITERS);
        if (schemeEndPos >= 0) {
            if (remainingString[schemeEndPos] === ":") {
                this.setScheme(remainingString.substring(0, schemeEndPos));
                remainingString = remainingString.substring(schemeEndPos + 1); //remove scheme
            }
        }
        else {
            this.setPath(remainingString);
            return;
        }
        // Find authority
        var authority = "";
        var doubleSlashPos = remainingString.indexOf("//");
        if (doubleSlashPos === 0) {
            remainingString = remainingString.substring(2); //skip the //
            var authorityEndPos = remainingString.search(AUTHORITY_TERMINATORS);
            if (authorityEndPos >= 0) {
                authority = remainingString.substring(0, authorityEndPos);
                remainingString = remainingString.substring(authorityEndPos); //remove authority
            }
            else {
                authority = remainingString;
                remainingString = "";
            }
            this.setAuthority(authority);
            if (!remainingString) {
                this.setPath("");
                return;
            }
        }
        // Find query
        var queryBeginPos = remainingString.indexOf("?");
        if (queryBeginPos >= 0) {
            this.setQuery(remainingString.substring(queryBeginPos + 1));
            remainingString = remainingString.substring(0, queryBeginPos);
        }
        this.setPath(remainingString);
    };
    Uri.prototype._parseAuthority = function (authority) {
        this._host = authority;
        var userNameEndPos = authority.lastIndexOf("@");
        if (userNameEndPos >= 0) {
            this._host = this._host.substring(userNameEndPos + 1);
        }
        var hostPortSeparatorPos = this._host.indexOf(":");
        if (userNameEndPos < 0 && hostPortSeparatorPos < 0) {
            return;
        }
        var authorityComponents = authority;
        if (userNameEndPos < 0) {
            this._host = authorityComponents;
        }
        else {
            this._user = authorityComponents.substring(0, userNameEndPos);
            this._host = authorityComponents.substring(userNameEndPos + 1);
        }
        if (hostPortSeparatorPos >= 0) {
            this._port = this._host.substring(hostPortSeparatorPos + 1);
            this._host = this._host.substring(0, hostPortSeparatorPos);
        }
        this._user = decodeURIComponent(this._user);
        this._host = decodeURIComponent(this._host);
    };
    Uri.prototype._parsePath = function (remainingString) {
        this._path = decodeURIComponent(remainingString);
        var pathSegments = this._pathSegments = [];
        this._pathEncoded = remainingString;
        // We have to split the path BEFORE decoding so that encoded / characters
        // don't get interpreted as path separators.
        var encodedPathSegments = remainingString.split("/");
        for (var i = 0; i < encodedPathSegments.length; ++i) {
            pathSegments[i] = decodeURIComponent(encodedPathSegments[i]);
        }
        // Trims first/last element if empty
        if (pathSegments[0] === "") {
            pathSegments.shift(); // remove first element
        }
        if (pathSegments[pathSegments.length - 1] === "") {
            pathSegments.pop(); // remove last element
        }
    };
    Uri.prototype._getAuthority = function (encoded, outputOptions) {
        if (outputOptions === void 0) { outputOptions = {}; }
        // Note that if encoded is false, doNotPercentEncodeHost doesn't matter - the whole URI (including host) will not be encoded.
        var doNotPercentEncodeHost = outputOptions && outputOptions.doNotPercentEncodeHost;
        var authority = "";
        var user;
        var host;
        var port;
        if (encoded) {
            // While technically a reserved character, ':' is commonly used in the
            // username to denote username:password, so we special case not encoding
            // the first occurence of this character.
            user = encodeURIComponent(this._user).replace("%3A", ":");
            if (doNotPercentEncodeHost) {
                host = this._host;
            }
            else {
                host = encodeURIComponent(this._host);
            }
            port = encodeURIComponent(this._port);
        }
        else {
            user = this._user;
            host = this._host;
            port = this._port;
        }
        if (user !== "") {
            authority = user + "@";
        }
        if (this._host !== "") {
            authority += host;
        }
        if (this._port !== "") {
            authority += ":" + port;
        }
        return authority;
    };
    Uri.prototype._decodeQueryString = function (component) {
        // For query strings only, "+" is a valid substitute for a space, but decodeURIComponent
        // doesn't take this into account. (Note that replace("+", " ") only replaces one +.)
        var result = component;
        try {
            result = decodeURIComponent(component.replace(/\+/g, " "));
        }
        catch (e) {
            // %1 (or anything with a % that is not a result of calling encodeURIComponent)
            // would make decodeURIComponent throw a URI malformed exception.
            // Return the original value in these cases.
        }
        return result;
    };
    return Uri;
}());
exports.default = Uri;


/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ErrorHelper_1 = __webpack_require__(14);
var Events = __webpack_require__(87);
/** An instance of EventGroup allows anything with a handle to it to trigger events on it.
 *  If the target is an HTMLElement, the event will be attached to the element and can be
 *  triggered as usual (like clicking for onclick).
 *  The event can be triggered by calling EventGroup.raise() here. If the target is an
 *  HTMLElement, the event gets raised and is handled by the browser. Otherwise, it gets
 *  handled here in EventGroup, and the handler is called in the context of the parent
 *  (which is passed in in the constructor).
 */
var EventGroup = (function () {
    /** parent: the context in which events attached to non-HTMLElements are called */
    function EventGroup(parent) {
        this._id = EventGroup._uniqueId++;
        this._parent = parent;
        this._eventRecords = [];
    }
    /**
     *  Events raised here by default have bubbling set to false and cancelable set to true.
     *  This applies also to built-in events being raised manually here on HTMLElements,
     *  which may lead to unexpected behavior if it differs from the defaults.
     */
    EventGroup.raise = function (target, eventName, eventArgs, bubbleEvent) {
        return Events.raise(target, eventName, eventArgs, bubbleEvent);
    };
    EventGroup.isObserved = function (target, eventName) {
        var events = target && target.__events__;
        return !!events && !!events[eventName];
    };
    /** Check to see if the target has declared support of the given event. */
    EventGroup.isDeclared = function (target, eventName) {
        var declaredEvents = target && target.__declaredEvents;
        return !!declaredEvents && !!declaredEvents[eventName];
    };
    EventGroup.stopPropagation = function (event) {
        if (event.stopPropagation) {
            event.stopPropagation();
        }
    };
    EventGroup.prototype.dispose = function () {
        if (!this._isDisposed) {
            this._isDisposed = true;
            this.off();
            this._parent = null;
        }
    };
    /** On the target, attach a set of events, where the events object is a name to function mapping. */
    EventGroup.prototype.onAll = function (target, events, useCapture) {
        for (var eventName in events) {
            this.on(target, eventName, events[eventName], useCapture);
        }
    };
    /** On the target, attach an event whose handler will be called in the context of the parent
     * of this instance of EventGroup.
     */
    EventGroup.prototype.on = function (target, eventName, callback, useCapture) {
        var _this = this;
        if (eventName.indexOf(',') > -1) {
            var events = eventName.split(/[ ,]+/);
            for (var i = 0; i < events.length; i++) {
                this.on(target, events[i], callback, useCapture);
            }
        }
        else {
            var parent = this._parent;
            var eventRecord = {
                target: target,
                eventName: eventName,
                parent: parent,
                callback: callback,
                objectCallback: null,
                elementCallback: null,
                useCapture: useCapture
            };
            // Initialize and wire up the record on the target, so that it can call the callback if the event fires.
            var events_1 = (target.__events__ = target.__events__ || {});
            events_1[eventName] = events_1[eventName] || {
                count: 0
            };
            events_1[eventName][this._id] = events_1[eventName][this._id] || [];
            events_1[eventName][this._id].push(eventRecord);
            events_1[eventName].count++;
            if (Events.isDOMEventTarget(target)) {
                var processElementEvent = function () {
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        args[_i] = arguments[_i];
                    }
                    if (_this._isDisposed) {
                        return;
                    }
                    try {
                        var result = callback.apply(parent, args);
                        if (result === false && args[0] && args[0].preventDefault) {
                            var e = args[0];
                            e.preventDefault();
                            EventGroup.stopPropagation(e);
                        }
                    }
                    catch (e) {
                        ErrorHelper_1.default.log(e);
                    }
                    return result;
                };
                eventRecord.elementCallback = processElementEvent;
                /* tslint:disable:ban-native-functions */
                target.addEventListener(eventName, processElementEvent, useCapture);
                /* tslint:enable:ban-native-functions */
            }
            else {
                var processObjectEvent = function () {
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        args[_i] = arguments[_i];
                    }
                    if (_this._isDisposed) {
                        return;
                    }
                    return callback.apply(parent, args);
                };
                eventRecord.objectCallback = processObjectEvent;
            }
            // Remember the record locally, so that it can be removed.
            this._eventRecords.push(eventRecord);
        }
    };
    EventGroup.prototype.off = function (target, eventName, callback, useCapture) {
        for (var i = 0; i < this._eventRecords.length; i++) {
            var eventRecord = this._eventRecords[i];
            if ((!target || target === eventRecord.target) &&
                (!eventName || eventName === eventRecord.eventName) &&
                (!callback || callback === eventRecord.callback) &&
                ((typeof useCapture !== 'boolean') || useCapture === eventRecord.useCapture)) {
                var events = eventRecord.target.__events__;
                var targetArrayLookup = events[eventRecord.eventName];
                var targetArray = targetArrayLookup ? targetArrayLookup[this._id] : null;
                // We may have already target's entries, so check for null.
                if (targetArray) {
                    if (targetArray.length === 1 || !callback) {
                        targetArrayLookup.count -= targetArray.length;
                        delete events[eventRecord.eventName][this._id];
                    }
                    else {
                        targetArrayLookup.count--;
                        targetArray.splice(targetArray.indexOf(eventRecord), 1);
                    }
                    if (!targetArrayLookup.count) {
                        delete events[eventRecord.eventName];
                    }
                }
                if (eventRecord.elementCallback) {
                    if (eventRecord.target.removeEventListener) {
                        eventRecord.target.removeEventListener(eventRecord.eventName, eventRecord.elementCallback, eventRecord.useCapture);
                    }
                }
                this._eventRecords.splice(i--, 1);
            }
        }
    };
    /** Trigger the given event in the context of this instance of EventGroup. */
    EventGroup.prototype.raise = function (eventName, eventArgs, bubbleEvent) {
        return EventGroup.raise(this._parent, eventName, eventArgs, bubbleEvent);
    };
    /** Declare an event as being supported by this instance of EventGroup. */
    EventGroup.prototype.declare = function (event) {
        var declaredEvents = this._parent.__declaredEvents = this._parent.__declaredEvents || {};
        if (typeof event === 'string') {
            declaredEvents[event] = true;
        }
        else {
            for (var i = 0; i < event.length; i++) {
                declaredEvents[event[i]] = true;
            }
        }
    };
    EventGroup._uniqueId = 0;
    return EventGroup;
}());
exports.EventGroup = EventGroup;
exports.default = EventGroup;


/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
// Split from odsp-next/src/local/utilities/path/Path.ts
// Contains non SP utility methods
function splitFileName(fileName) {
    var extension = getFileExtension(fileName);
    var name = extension ? fileName.substring(0, fileName.length - extension.length) : fileName;
    return {
        name: name,
        extension: extension
    };
}
exports.splitFileName = splitFileName;
/**
 * Given a filename (without directory path), return the file extension or the empty string if one is not present.
 */
function getFileExtension(fileName, removeDot) {
    if (removeDot === void 0) { removeDot = false; }
    var extension = '';
    if (fileName) {
        var index = fileName.lastIndexOf('.');
        if (index >= 0) {
            if (removeDot) {
                extension = fileName.substr(index + 1);
            }
            else {
                extension = fileName.substr(index);
            }
        }
    }
    return extension;
}
exports.getFileExtension = getFileExtension;
function encodePath(url, encodeHash) {
    if (encodeHash === void 0) { encodeHash = true; }
    url = encodeURI(url);
    if (encodeHash) {
        // encodeURI API doesn't encode # path. Here for openUrl we know # is path, not Hash, so encode it properly "manually".
        if (url) {
            url = url.replace(/#/g, "%23");
        }
    }
    return url;
}
exports.encodePath = encodePath;


/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var PairedEventBase_1 = __webpack_require__(51);
var Qos_event_1 = __webpack_require__(29);
var ResultTypeEnum_1 = __webpack_require__(30);
exports.ResultTypeEnum = ResultTypeEnum_1.ResultTypeEnum;
exports.Api = PairedEventBase_1.createPairedEvent({
    eventName: 'Api,Qos,',
    shortEventName: 'Api',
    samplingFeature: { ODB: true, ODC: 'ApiEventLogging', Fallback: false }
}, {
    url: 1 /* String */
}, Qos_event_1.Qos);
exports.default = exports.Api;


/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// OneDrive:IgnoreCodeCoverage
var PLT_event_1 = __webpack_require__(54);
var PLTHttpRequest_event_1 = __webpack_require__(72);
var Api_event_1 = __webpack_require__(91);
var EventBase_1 = __webpack_require__(24);
var ErrorHelper_1 = __webpack_require__(14);
var Manager_1 = __webpack_require__(18);
var PerformanceMarker_1 = __webpack_require__(78);
exports.HighResolutionTimingSupported = PerformanceMarker_1.HighResolutionTimingSupported;
var performance = window.performance;
exports.AppStartMarkerName = "EUPL.AppStart";
exports.DataFetchStartMarkerName = "EUPL.DataManager.FirstDataFetch.GetItem.Start";
exports.DataFetchEndMarkerName = "EUPL.DataManager.FirstDataFetch.GetItem.End";
exports.OnePageNavigationStartMarkerName = "EUPL.OnePageNavigation.Start";
//For reference see http://www.w3.org/TR/navigation-timing/
//also, got tips at http://www.stevesouders.com/blog/2014/08/21/resource-timing-practical-tips/
var PerformanceCollection = (function () {
    function PerformanceCollection() {
    }
    /**
     * When list data is returned from server as deferred control, browser w3c timing responseEnd may not reflect correct timing of the manifest response end.
     * To workaround this, we write "var g_responseEnd = new Date().getTime();" in server duration script tag.
     * In most of the scenarios, we will still use performance.timing.responseEnd.
     * If g_responseEnd is less than performance.timing.responseEnd or performance.timing.responseEnd is not available yet (this is will happen for deferred SPListRender sends splist data back to html), we will use g_responseEnd.
     */
    PerformanceCollection.getResponseEnd = function () {
        if (performance && performance.timing) {
            if (window["g_responseEnd"] &&
                (!!performance.timing.responseEnd && (Number(window["g_responseEnd"]) < performance.timing.responseEnd) || !performance.timing.responseEnd)) {
                return Number(window["g_responseEnd"]);
            }
            else {
                return performance.timing.responseEnd;
            }
        }
        else {
            return NaN;
        }
    };
    PerformanceCollection.appStart = function () {
        try {
            if (performance && performance.timing) {
                PerformanceCollection.mark(exports.AppStartMarkerName);
                Manager_1.Manager.addLogHandler(this.eventLogHandler);
                this.summary.w3cResponseEnd = (PerformanceCollection.getResponseEnd() - performance.timing.fetchStart); //Time to get the aspx from the server
                this._times["appStart"] = Date.now(); //Time it takes for our app to *start* running
                this.summary.appStart = this._times["appStart"] - PerformanceCollection.getResponseEnd(); //Time it takes for our app to *start* running
                this.summary.prefetchStart = -1;
                this.summary.deferredListDataRender = -1;
            }
        }
        catch (e) {
            ErrorHelper_1.default.log(e);
        }
    };
    //called when the view is fully loaded
    PerformanceCollection.plt = function (name) {
        try {
            if (performance && performance.timing && PerformanceCollection._times["plt"] === undefined) {
                var now = Date.now();
                var performanceNow = Math.round(performance.now());
                Manager_1.Manager.removeLogHandler(this.eventLogHandler);
                var onePageNavStart = PerformanceMarker_1.getMarkerTime(exports.OnePageNavigationStartMarkerName);
                this._times["plt"] = isNaN(onePageNavStart) ? (now - performance.timing.fetchStart) : (performanceNow - onePageNavStart);
                this.summary.preRender = PerformanceMarker_1.getMarkerTime(exports.DataFetchStartMarkerName) - PerformanceMarker_1.getMarkerTime(exports.AppStartMarkerName); //Time it takes for our app to make the relevant data fetch for this view
                this.summary.dataFetch = PerformanceMarker_1.getMarkerTime(exports.DataFetchEndMarkerName) - PerformanceMarker_1.getMarkerTime(exports.DataFetchStartMarkerName); //Time it takes for our app to get data back from the server
                this.summary.postRender = PerformanceCollection.now() - PerformanceMarker_1.getMarkerTime(exports.DataFetchEndMarkerName);
                this.summary.render = this.summary["preRender"] + this.summary["postRender"];
                this.summary.plt = this._times["plt"]; //unbiased end to end PLT from fetchStart that excludes unload of previous page.
                this.summary.pltWithUnload = now - performance.timing.navigationStart; //unbiased end to end PLT from navigationStart that includes the unload of the previous page
                this.summary.name = name;
                //we consider an appcache hit if the w3cResponseEnd time is less than 40ms
                this.summary.appCacheHit = this.summary.w3cResponseEnd <= 40 &&
                    Boolean(window.applicationCache) &&
                    Boolean(window.applicationCache.status !== window.applicationCache.UNCACHED);
                // ASSERT(this.summary.appStart +
                //     this.summary.dataFetch +
                //     this.summary.postRender +
                //     this.summary.preRender +
                //     this.summary.w3cResponseEnd ===
                //     this.summary.plt,
                //     "PLT summary times do not add up");
                // Get the count of events so we have it in the plt event logs
                // This must be logged before log data otherwise the count is not passed
                this.getHttpRequests();
                var event_1 = PLT_event_1.PLT.logData(this.summary);
                if (this.httpRequestCollection) {
                    for (var _i = 0, _a = this.httpRequestCollection; _i < _a.length; _i++) {
                        var eventData = _a[_i];
                        PLTHttpRequest_event_1.PLTHttpRequest.logData(eventData, event_1);
                    }
                }
                PerformanceCollection.mark('EUPL.glass');
            }
        }
        catch (e) {
            ErrorHelper_1.default.log(e);
        }
    };
    PerformanceCollection.mark = function (name, limit) {
        PerformanceMarker_1.mark(name, limit);
    };
    PerformanceCollection.pageLoaded = function () {
        return this._times["plt"] !== undefined;
    };
    PerformanceCollection.getMarkerTime = function (name) {
        return PerformanceMarker_1.getMarkerTime(name);
    };
    PerformanceCollection.now = function () {
        if (PerformanceMarker_1.HighResolutionTimingSupported) {
            return Math.round(performance.now());
        }
        else {
            return Date.now();
        }
    };
    PerformanceCollection.eventLogHandler = function (event) {
        // Look at all api events
        if (Api_event_1.Api.isTypeOf(event)) {
            if (PerformanceCollection._times["appDataFetchStart"] === undefined) {
                // Calculate the start time from the first api event
                PerformanceCollection._times["appDataFetchStart"] = event.startTime;
            }
            else if (event.eventType === EventBase_1.ClonedEventType.End || event.eventType === EventBase_1.ClonedEventType.Single) {
                // Calculate the end time from the api events
                PerformanceCollection._times["appDataFetchEnd"] = PerformanceCollection._times["appDataFetchEnd"] ? Math.max(PerformanceCollection._times["appDataFetchEnd"], event.endTime) : event.endTime;
            }
        }
    };
    PerformanceCollection.getHttpRequests = function () {
        if (performance && performance.getEntriesByType) {
            var httpRequestCollection = [];
            var perfEntries = performance.getEntriesByType("resource");
            var httpRequests = perfEntries.length;
            for (var j = 0; j < httpRequests; j++) {
                var data = {
                    startTime: Math.round(perfEntries[j].startTime),
                    url: perfEntries[j].name,
                    duration: Math.round(perfEntries[j].duration)
                };
                httpRequestCollection.push(data);
            }
            //Make sure we get all the http requests from iframes as well
            var iFrames = document.getElementsByTagName("iframe");
            httpRequests += iFrames.length;
            for (var i = 0; i < iFrames.length; i++) {
                try {
                    perfEntries = iFrames[i].contentWindow.performance.getEntriesByType("resource");
                }
                catch (e) {
                    // If the iframe in question isn't domain lowered, we can't access it.
                    perfEntries = null;
                }
                if (perfEntries) {
                    var requests = perfEntries.length;
                    httpRequests += requests;
                    for (var j = 0; j < requests; j++) {
                        var iframeData = {
                            startTime: Math.round(perfEntries[j].startTime),
                            url: perfEntries[j].name,
                            duration: Math.round(perfEntries[j].duration)
                        };
                        httpRequestCollection.push(iframeData);
                    }
                }
            }
            this.summary.httpRequests = httpRequests;
            this.httpRequestCollection = httpRequestCollection;
        }
    };
    PerformanceCollection.summary = {};
    PerformanceCollection._times = {};
    return PerformanceCollection;
}());
exports.default = PerformanceCollection;


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Attempts to extract the default export from a module.
 *
 * @export
 * @template TExport
 * @param {IModule<TExport>} module
 * @returns {TExport}
 */
function getDefaultExport(module) {
    if (isModuleWithDefault(module)) {
        return module.default;
    }
    else {
        return module;
    }
}
exports.getDefaultExport = getDefaultExport;
/**
 * Returns the module itself as its own export.
 *
 * @export
 * @template TModule
 * @param {TModule} module
 * @returns {TModule}
 */
function getIdentityExport(module) {
    return module;
}
exports.getIdentityExport = getIdentityExport;
function isModuleWithDefault(module) {
    return !!module && typeof module === 'object' && 'default' in module;
}
exports.isModuleWithDefault = isModuleWithDefault;


/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Disposable_1 = __webpack_require__(57);
/**
 * Lifetime manager for scoping components.
 *
 * @export
 * @class Scope
 * @implements {IDisposable}
 *
 * @example
 *  const scope = new Scope();
 *
 *  let instance = new (scope.attached(MyComponent))();
 *
 *  scope.dispose();
 */
var Scope = (function () {
    /**
     * Creates an instance of Scope.
     */
    function Scope() {
        this._disposables = {};
        this._lastDisposableId = 0;
    }
    /**
     * Produces a constructor for instances of a type which will be bound to the lifetime
     * of this scope.
     *
     * @template T the type of object to be created.
     * @param {T} the original constructor for the type.
     * @returns {T} a new constructor to invoke to create the object.
     */
    Scope.prototype.attached = function (type) {
        var scope = this;
        var Attached = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return scope.attach(type.apply(this, args) || this);
        };
        if (true) {
            // This pattern results in the correct type being displayed in the debugger
            var wrappedConstructor_1 = Attached;
            Attached = function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                return wrappedConstructor_1.apply(Object.create(type.prototype), args);
            };
        }
        Attached.prototype = type.prototype;
        return Attached;
    };
    Scope.prototype.attach = function (instance) {
        var _this = this;
        var id = "" + ++this._lastDisposableId;
        var disposable = Disposable_1.hook(instance, (function () {
            delete _this._disposables[id];
        }));
        this._disposables[id] = disposable;
        return disposable;
    };
    /**
     * Disposes this scope and any attached objects.
     */
    Scope.prototype.dispose = function () {
        if (!this.isDisposed) {
            this.isDisposed = true;
        }
        var disposables = this._disposables;
        for (var _i = 0, _a = Object.keys(disposables); _i < _a.length; _i++) {
            var id = _a[_i];
            var disposable = disposables[id];
            if (disposable && Disposable_1.isDisposable(disposable)) {
                disposable.dispose();
            }
            delete disposables[id];
        }
    };
    return Scope;
}());
exports.default = Scope;


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var Promise_1 = __webpack_require__(20);
var Signal_1 = __webpack_require__(33);
var Scope_1 = __webpack_require__(94);
var Disposable_1 = __webpack_require__(57);
var lastId = 0;
var ResourceKey = (function () {
    function ResourceKey(nameOrOptions) {
        this.id = ++lastId;
        if (typeof nameOrOptions === 'string') {
            this.name = nameOrOptions;
        }
        else {
            this.name = nameOrOptions.name;
            this.factory = nameOrOptions.factory;
            this.loader = nameOrOptions.loader;
        }
    }
    Object.defineProperty(ResourceKey.prototype, "lazy", {
        /**
         * Gets an identifier for this {ResourceKey} as a lazy dependency (wrap in a function for deferred evaluation)
         */
        get: function () {
            return new ResourceDependency(this, 1 /* lazy */);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ResourceKey.prototype, "local", {
        /**
         * Gets an identifier for this {ResourceKey} as a local dependency (resolved in the local ResourceScope)
         */
        get: function () {
            return new ResourceDependency(this, 2 /* local */);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ResourceKey.prototype, "optional", {
        /**
         * Gets an identifier for this {ResourceKey} as an optional dependency
         */
        get: function () {
            return new ResourceDependency(this, 4 /* optional */);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ResourceKey.prototype, "bypass", {
        /**
         * Gets an identifier for this {ResourceKey} as an optional dependency
         */
        get: function () {
            return new ResourceDependency(this, 8 /* bypass */);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Provides information about this resource key
     */
    ResourceKey.prototype.toString = function () {
        return "Resource #" + this.id + " \"" + this.name + "\"";
    };
    return ResourceKey;
}());
exports.ResourceKey = ResourceKey;
var ResourceDependency = (function () {
    function ResourceDependency(key, flags) {
        this.key = key;
        this.flags = flags;
    }
    Object.defineProperty(ResourceDependency.prototype, "lazy", {
        get: function () {
            return new ResourceDependency(this.key, this.flags | 1 /* lazy */);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ResourceDependency.prototype, "local", {
        get: function () {
            return new ResourceDependency(this.key, this.flags | 2 /* local */);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ResourceDependency.prototype, "optional", {
        get: function () {
            return new ResourceDependency(this.key, this.flags | 4 /* optional */);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ResourceDependency.prototype, "bypass", {
        get: function () {
            return new ResourceDependency(this.key, this.flags | 8 /* bypass */);
        },
        enumerable: true,
        configurable: true
    });
    return ResourceDependency;
}());
var ConstantResourceFactory = (function () {
    function ConstantResourceFactory(value) {
        this._value = value;
        this.dependencies = {};
    }
    ConstantResourceFactory.prototype.create = function () {
        return { instance: this._value };
    };
    return ConstantResourceFactory;
}());
exports.ConstantResourceFactory = ConstantResourceFactory;
exports.resourceScopeKey = new ResourceKey({
    name: 'resources'
});
exports.asyncLoadBarrierKey = new ResourceKey({
    name: 'asyncLoadBarrier'
});
var CacheOnSuccessLoader = (function () {
    function CacheOnSuccessLoader(loader) {
        this._loader = loader;
    }
    CacheOnSuccessLoader.prototype.load = function () {
        var _this = this;
        var load = preventCancellation(this._loader.load());
        load.catch((function () {
            // On error, reset the cache so the next load can try again.
            delete _this.load;
        }));
        this.load = function () { return load; };
        return load;
    };
    return CacheOnSuccessLoader;
}());
var Handle = (function () {
    function Handle(entry, instanceManager) {
        this.entry = entry;
        this.manager = instanceManager;
    }
    Handle.prototype.getInstance = function (key, resourceScopeOptions) {
        var manager = this.manager;
        var factory = this.entry.factory;
        var resource = factory.create(manager.resolve(factory.dependencies, resourceScopeOptions));
        var instance = resource.instance;
        if (resource.disposable) {
            manager.scope.attach(resource.disposable);
        }
        this.getInstance = function () { return instance; };
        return instance;
    };
    Handle.prototype.promote = function (targetHandleManager) {
        var entry = this.entry;
        return new Handle({
            manager: targetHandleManager,
            loader: entry.loader,
            factory: entry.factory
        });
    };
    return Handle;
}());
var logBeginConstruction;
var logEndConstruction;
var logConsume;
var logExpose;
var log;
function getResolvedConstructor(resolvableConstructor, resolvedDependencies) {
    var Resolved = function (params) {
        var instance = resolvableConstructor.call(this, params, resolvedDependencies) || this;
        return instance;
    };
    if (true) {
        // This pattern results in the correct type being displayed in the debugger
        var wrappedConstructor_1 = Resolved;
        Resolved = function (params) {
            logBeginConstruction(resolvableConstructor, 'Resources.resolved');
            var instance = wrappedConstructor_1.call(Object.create(resolvableConstructor.prototype), params);
            logEndConstruction(resolvableConstructor, 'Resources.resolved');
            return instance;
        };
    }
    Resolved.prototype = resolvableConstructor.prototype;
    return Resolved;
}
exports.getResolvedConstructor = getResolvedConstructor;
var HandleManager = (function () {
    function HandleManager(parentOrOptions) {
        this._handles = {};
        this._isLocked = false;
        var options;
        if (parentOrOptions instanceof HandleManager) {
            if (parentOrOptions.isDisposed) {
                throw new Error('Parent ResourceScope has already been disposed!');
            }
            options = parentOrOptions.options;
            this._parent = parentOrOptions;
            this._level = parentOrOptions._level + 1;
        }
        else {
            options = parentOrOptions || {};
            this._level = 0;
            if (true) {
                // Check for setting and enable tracing if set
                if (!('__ResourceTraceState' in window) && (localStorage && localStorage['EnableResourceTracing'])) {
                    window['__ResourceTraceState'] = {
                        log: [],
                        stack: [],
                        types: {},
                        exposed: {}
                    };
                }
                log('Created new root level Resource Scope');
            }
        }
        this.scope = new Scope_1.default();
        this.options = options;
    }
    Object.defineProperty(HandleManager.prototype, "isDisposed", {
        get: function () {
            return this.scope.isDisposed;
        },
        enumerable: true,
        configurable: true
    });
    HandleManager.prototype.block = function (key) {
        return this._expose(key);
    };
    HandleManager.prototype.isDescendantOf = function (manager) {
        return this._level > manager._level;
    };
    HandleManager.prototype.getHandle = function (key) {
        var manager = this;
        var keyId = key.id;
        // Starting with this scope, attempt to find the first scope with an entry (may be undefined)
        // for the given key. Stop when there are no more ancestor scopes.
        while (!(keyId in manager._handles) && manager._parent) {
            manager = manager._parent;
        }
        var handles = manager._handles;
        return handles[keyId] || this.options.useFactoriesOnKeys &&
            (key.factory && (handles[keyId] = new Handle({
                factory: key.factory,
                manager: manager
            })) || (key.loader && (handles[keyId] = new Handle({
                loader: new CacheOnSuccessLoader(key.loader),
                manager: manager
            }))));
    };
    HandleManager.prototype.expose = function (key, source, instance) {
        return this._expose(key, (function (handleManager) { return new Handle({
            factory: source.factory,
            loader: source.loader,
            manager: handleManager
        }, instance && handleManager); }));
    };
    HandleManager.prototype.getLoader = function () {
        this.lock();
        var loader = new ResourceLoader(this);
        this.getLoader = function () { return loader; };
        return loader;
    };
    HandleManager.prototype.dispose = function () {
        this.scope.dispose();
        this._handles = {};
        this.consume = this.resolve = onConsumeAfterDispose;
        this.getLoader = onLoadAfterDispose;
    };
    HandleManager.prototype.bind = function (key) {
        var handle = this.getHandle(key);
        if (handle) {
            return this._expose(key, (function (handleManager) { return handle.promote(handleManager); }));
        }
        return this;
    };
    HandleManager.prototype.lock = function () {
        this._isLocked = !!this.options.lockResourcesForChildren;
    };
    HandleManager.prototype.consume = function (dependency, scopeOptions) {
        var _this = this;
        this.lock();
        var key = (dependency.key || dependency);
        var options = dependency.flags;
        var thunk;
        if (key === exports.resourceScopeKey) {
            var resourceScope_1;
            thunk = function () {
                if (!resourceScope_1) {
                    resourceScope_1 = _this.scope.attach(new ResourceScope(_this, scopeOptions || { owner: "" + key }));
                }
                return resourceScope_1;
            };
        }
        else {
            var handle_1 = this._getValidHandle(dependency, []);
            if (!(handle_1 instanceof Error)) {
                thunk = function () { return handle_1.getInstance(key, scopeOptions || { owner: "" + key }); };
            }
            else if (!(options & 4 /* optional */)) {
                throw handle_1;
            }
        }
        return ((options & 1 /* lazy */) ? thunk : (thunk && thunk()));
    };
    HandleManager.prototype.isExposed = function (dependency) {
        return !(this._getValidHandle(dependency, []) instanceof Error);
    };
    HandleManager.prototype.resolve = function (dependencies, scopeOptions) {
        var result = {};
        for (var _i = 0, _a = Object.keys(dependencies); _i < _a.length; _i++) {
            var id = _a[_i];
            var dependency = dependencies[id];
            if (!dependency) {
                continue;
            }
            result[id] = this.consume(dependencies[id], scopeOptions);
        }
        return result;
    };
    HandleManager.prototype._getValidHandle = function (resourceDependency, stack) {
        var key = (resourceDependency.key || resourceDependency);
        var keyId = key.id;
        if (stack.indexOf(key) >= 0) {
            // Circular reference will *always* throw, even on isExposed.
            throw new Error(key + " has a circular dependency.");
        }
        // If we have a handle with a manager cached, return it.
        var localHandle = this._handles[keyId];
        if (localHandle && localHandle.manager) {
            return localHandle;
        }
        var handle = this.getHandle(key);
        if (!handle) {
            return new Error(key + " is being consumed, but has not been exposed by a parent scope.");
        }
        var entry = handle.entry;
        var factory = entry.factory;
        if (!factory) {
            return new Error(key + " is being consumed synchronously, but was exposed asynchronously and has not been loaded.");
        }
        // Find the highest possible scope at which an instance of T can be stored.
        stack.push(key);
        var instanceManager = handle.manager;
        var targetManager = (resourceDependency.flags & 2 /* local */)
            ? this : instanceManager || entry.manager;
        var dependencies = factory.dependencies || {};
        for (var _i = 0, _a = Object.keys(dependencies); _i < _a.length; _i++) {
            var id = _a[_i];
            var dependency = dependencies[id];
            // Dependency on resourceScopeKey does not affect targeting
            if (!dependency || (dependency.key || dependency) === exports.resourceScopeKey) {
                continue;
            }
            // Recurse on dependencies.
            var dependencyHandle = this._getValidHandle(dependency, stack);
            if (dependencyHandle instanceof Error) {
                if (!(dependency.flags & 4 /* optional */)) {
                    stack.pop();
                    return dependencyHandle;
                }
            }
            else if (dependencyHandle.manager.isDescendantOf(targetManager)) {
                targetManager = dependencyHandle.manager;
            }
        }
        stack.pop();
        if (!instanceManager || instanceManager !== targetManager) {
            // Need a new handle.
            handle = new Handle(entry, targetManager);
            // Place on targetManager, so that other levels can reuse
            targetManager._handles[keyId] = handle;
        }
        return this._handles[keyId] = handle;
    };
    HandleManager.prototype._expose = function (key, createHandle) {
        if (this.isDisposed) {
            throw new Error('Cannot expose a resource on a ResourceScope that has been disposed.');
        }
        if (key === exports.resourceScopeKey) {
            throw new Error('It is illegal to expose the ResourceScope key');
        }
        var keyId = key.id;
        var handleManager = this._isLocked ? this.scope.attach(new HandleManager(this)) : this;
        var handles = handleManager._handles;
        if (handles[keyId]) {
            if (this.options.noDoubleExpose) {
                throw new Error(key + " has already been exposed/consumed at this scope.");
            }
            else if (true) {
                log("Duplicate exposure of " + key + ".");
            }
        }
        handles[keyId] = createHandle ? createHandle(handleManager) : void 0;
        return handleManager;
    };
    return HandleManager;
}());
function onConsumeAfterDispose() {
    throw new Error('Cannot consume a resource from a ResourceScope that has been disposed.');
}
function onLoadAfterDispose() {
    throw new Error('Cannot load a resource from a ResourceScope that has been disposed.');
}
function voidify() {
    // Do nothing
}
function getFirstError(errors) {
    for (var key in errors) {
        if (errors[key]) {
            return Promise_1.default.reject(errors[key]);
        }
    }
    return Promise_1.default.reject(new Error('A dependency could not be loaded.'));
}
var ResourceLoader = (function () {
    function ResourceLoader(handleManager) {
        this._handleManager = handleManager;
        this._loadState = {};
        this._root = handleManager.consume(exports.asyncLoadBarrierKey.optional);
    }
    /**
     * Performs an async load of the specified resource. Should return a successful result if the value is optional or loads.
     * Should return an error result if the value is non-optional and fails to load.
     * Should return the same promise for multiple requests to the same key.
     */
    ResourceLoader.prototype.loadAsync = function (dependency) {
        // Loading the ResourceScope key is always successful.
        var key = dependency.key || dependency;
        if (key === exports.resourceScopeKey) {
            return Promise_1.default.resolve();
        }
        var options = dependency.flags;
        var promise = this._loadAsync(key, !!(options & 8 /* bypass */));
        return (options & 4 /* optional */) ? promise.catch(voidify) : promise;
    };
    ResourceLoader.prototype.loadAllAsync = function (dependencies, bypass) {
        if (dependencies) {
            var dependencyNames = Object.keys(dependencies);
            var length_1 = dependencyNames.length;
            if (length_1 > 0) {
                var promises = {};
                while (length_1--) {
                    var name_1 = dependencyNames[length_1];
                    var dependency = dependencies[name_1];
                    if (!dependency) {
                        continue;
                    }
                    promises[name_1] = this.loadAsync(bypass ? dependency.bypass : dependency);
                }
                return Promise_1.default.all(promises).then(voidify, getFirstError);
            }
        }
        return Promise_1.default.resolve();
    };
    ResourceLoader.prototype._loadAsync = function (key, bypass) {
        var _this = this;
        // Check the cache
        var keyId = key.id;
        var loadStateMap = this._loadState;
        var cached = loadStateMap[keyId];
        if (cached) {
            return cached;
        }
        // Validate that there is a valid handle for the key
        var handleManager = this._handleManager;
        var handle = handleManager.getHandle(key);
        if (!handle) {
            return loadStateMap[keyId] = Promise_1.default.reject(new Error(key + " is being loaded, but has no factory/loader."));
        }
        // Mark possible circular reference
        loadStateMap[keyId] = Promise_1.default.resolve();
        // If we have a synchronously available factory, load its dependencies
        var entry = handle.entry;
        var factory = entry.factory;
        if (factory) {
            return loadStateMap[keyId] = this.loadAllAsync(factory.dependencies);
        }
        // Finally, fall back to the loader
        var loader = entry.loader;
        if (!loader) {
            return loadStateMap[keyId] = Promise_1.default.reject(new Error(key + " is being loaded, but no loader was defined."));
        }
        var root = this._root;
        var rootPromise = !bypass && root && root.wait() || Promise_1.default.resolve();
        return loadStateMap[keyId] = rootPromise.then((function () { return loader.load(); })).then((function (value) {
            if (true) {
                log("Loaded " + key);
            }
            entry.factory = value;
            var factoryDependencies = value.dependencies;
            if (factoryDependencies) {
                return _this.loadAllAsync(factoryDependencies, bypass);
            }
        }));
    };
    return ResourceLoader;
}());
var ResourceScope = (function () {
    function ResourceScope(parentOrOptions, options) {
        var parentOwner;
        var handleManager;
        if (parentOrOptions instanceof ResourceScope) {
            handleManager = parentOrOptions._handleManager;
            parentOwner = parentOrOptions._owner;
        }
        else if (parentOrOptions instanceof HandleManager) {
            handleManager = parentOrOptions;
        }
        else {
            options = parentOrOptions || options;
        }
        var scope = new Scope_1.default();
        if (handleManager) {
            if (handleManager.scope.isDisposed) {
                throw new Error('Parent ResourceScope has already been disposed.');
            }
            handleManager.lock();
            if (!handleManager.options.lockResourcesForChildren) {
                this._prepareWrite = this._fork;
            }
        }
        this._handleManager = handleManager || (handleManager = scope.attach(new HandleManager(options)));
        this._scope = scope;
        var owner = options ? options.owner : '';
        this._owner = parentOwner ? parentOwner + " > " + owner : owner;
        if (true) {
            log("new ResourceScope: '" + owner + "'");
        }
    }
    /**
     * Obtains an instance of a resource with the given key exposed by either this scope
     * or a parent. Throws if the resource is not found and isOptional is not set.
     * @param key {ResourceKey} - a shared resource key corresponding to a specific named resource.
     * @returns an instance of the resource, if available in this scope or a parent.
     */
    ResourceScope.prototype.consume = function (dependency) {
        if (true) {
            logConsume(dependency);
        }
        return this._handleManager.consume(dependency);
    };
    /**
     * Obtains an instance of a resource with the given key exposed by either this scope
     * or a parent. Throws if the resource is not found and isOptional is not set.
     * @param key {ResourceKey} - a shared resource key corresponding to a specific named resource.
     * @returns a promise for an instance of the resource, if available in this scope or a parent.
     */
    ResourceScope.prototype.consumeAsync = function (dependency) {
        if (true) {
            logConsume(dependency);
        }
        var handleManager = this._handleManager;
        return preventCancellation(handleManager.getLoader().loadAsync(dependency)).then((function () {
            return handleManager.consume(dependency);
        }));
    };
    /**
     * Ensures that the specified dependencies have been loaded for synchronous consumption.
     * @param dependencies {IResourceDependencies} - the dependencies to load.
     * @returns a promise that will complete when the specified resources are available.
     */
    ResourceScope.prototype.load = function (dependencies) {
        return preventCancellation(this._handleManager.getLoader().loadAllAsync(dependencies));
    };
    /**
     * Exposes an asynchronous loader for a resource with the given type-safe key.
     * @param key {ResourceKey} - a shared resource key corresponding to a specific named resource.
     * @param loader - the object that can asynchronously load a factory of the desired type
     */
    ResourceScope.prototype.exposeAsync = function (key, loader) {
        this._expose(key, {
            loader: new CacheOnSuccessLoader(loader)
        });
    };
    /**
     * Exposes a factory for a resource with the given type-safe key.
     * @param key {ResourceKey} - a shared resource key corresponding to a specific named resource.
     * @param factory - the factory that will construct instances when required by this or any child scope.
     */
    ResourceScope.prototype.exposeFactory = function (key, factory) {
        this._expose(key, {
            factory: factory
        });
    };
    /**
     * Exposes a resource with the given type-safe key.
     * @param key {ResourceKey} - a shared resource key corresponding to a specific named resource.
     * @param instance - the instance of the resource to use within this scope.
     */
    ResourceScope.prototype.expose = function (key, instance) {
        if (true) {
            logExpose(key, this._owner, instance);
        }
        this._expose(key, {
            factory: new ConstantResourceFactory(instance)
        }, instance);
        return instance;
    };
    /**
     * Hides any resources exposed by parent scopes for the specified key.
     * @param key {ResourceKey} - a shared resource key corresponding to a specific named resource.
     */
    ResourceScope.prototype.block = function (key) {
        this._handleManager = this._prepareWrite().block(key);
    };
    /**
     * Re-exposes the currently exposed resource at the specified key at the current resource scope.
     * The effect of this is that the lifetime of instances created by the resource system that depend on the
     * specific key will not exceed the lifetime of this resource scope.
     * @param key {ResourceKey} - a shared resource key corresponding to a specific named resource.
     */
    ResourceScope.prototype.bind = function (key) {
        this._handleManager = this._prepareWrite().bind(key);
    };
    /**
     * Checks if a given resource key is defined and known to the system.
     */
    ResourceScope.prototype.isDefined = function (key) {
        var handleManager = this._handleManager;
        return !handleManager.isDisposed && !!handleManager.getHandle(key);
    };
    /**
     * Checks if a given resource key is exposed in the resource scope (including in parent scopes).
     * @param key {ResourceKey} - a shared resource key corresponding to a specific named resource.
     * @return {boolean}
     */
    ResourceScope.prototype.isExposed = function (dependency) {
        if (true) {
            logConsume(dependency);
        }
        var handleManager = this._handleManager;
        return !handleManager.isDisposed && handleManager.isExposed(dependency);
    };
    /**
     * Produces an alternate constructor for the given type which pre-injects the instance with resources
     * before invoking the real constructor.
     * This function preserves the original argument types for the constructor, allowing validation
     * of arguments.
     * @param type - the type of object for which to create an injected constructor.
     * @returns an injected version of the original constructor for the type.
     */
    ResourceScope.prototype.injected = function (type, options) {
        if (options === void 0) { options = {}; }
        var injectChildResourceScope = options.injectChildResourceScope;
        var childOptions = {
            owner: options.owner || type.name
        };
        var resources = injectChildResourceScope ? this._scope.attach(new ResourceScope(this, childOptions)) : this;
        var Injected = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            this.resources = resources;
            var instance = type.apply(this, args) || this;
            if (injectChildResourceScope) {
                Disposable_1.hook(instance, disposeInstanceResources);
            }
            return instance;
        };
        if (true) {
            // This pattern results in the correct type being displayed in the debugger
            var wrappedConstructor_2 = Injected;
            Injected = function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                logBeginConstruction(type, 'Resources.injected');
                var instance = wrappedConstructor_2.apply(Object.create(type.prototype), args);
                logEndConstruction(type, 'Resources.injected');
                return instance;
            };
        }
        Injected.prototype = type.prototype;
        return Injected;
    };
    /**
     * Resolves a set of resource keys
     *
     * @param dependencies - an object that maps names to {ResourceKey} instances.
     * @returns an object mapping the original names to the resolved resources.
     */
    ResourceScope.prototype.resolve = function (dependencies) {
        return this._handleManager.resolve(dependencies);
    };
    /**
     * Resolves a set of resource keys
     *
     * @param dependencies - an object that maps names to {ResourceKey} instances.
     * @returns an object mapping the original names to the resolved resources.
     */
    ResourceScope.prototype.resolveAsync = function (dependencies) {
        var _this = this;
        return this.load(dependencies).then((function () { return _this.resolve(dependencies); }));
    };
    ResourceScope.prototype.resolved = function (type, dependencies) {
        return getResolvedConstructor(type, this.resolve(__assign({}, (type.dependencies || {}), (dependencies || {}))));
    };
    ResourceScope.prototype.resolvedAsync = function (type, dependencies) {
        var _this = this;
        return this.load(__assign({}, (type.dependencies || {}), (dependencies || {}))).then((function () { return _this.resolved(type, dependencies); }));
    };
    /**
     * Disposes this resource scope and any resources bound to this scope's lifetime.
     */
    ResourceScope.prototype.dispose = function () {
        this._scope.dispose();
    };
    ResourceScope.prototype._expose = function (key, source, instance) {
        this._handleManager = this._prepareWrite().expose(key, source, instance);
    };
    // These methods are to support legacy call patterns by imitating old behavior
    ResourceScope.prototype._prepareWrite = function () {
        return this._handleManager;
    };
    ResourceScope.prototype._fork = function () {
        delete this._prepareWrite;
        if (true) {
            log("Fork: '" + this._owner + "'");
        }
        return this._scope.attach(new HandleManager(this._handleManager));
    };
    return ResourceScope;
}());
exports.ResourceScope = ResourceScope;
function disposeInstanceResources() {
    this.resources.dispose();
}
if (true) {
    var lastTypeNameId_1 = 0;
    var getTraceState_1 = function () {
        return window['__ResourceTraceState'];
    };
    logBeginConstruction = function (type, wrapperType) {
        var traceState = getTraceState_1();
        if (traceState) {
            var typeName = type['name'] + "_" + ++lastTypeNameId_1;
            var stack = traceState.stack, types = traceState.types;
            var parent_1 = stack[stack.length - 1] || '_root';
            stack.push(typeName);
            (types[parent_1] || (types[parent_1] = {}))[typeName] = wrapperType;
            if (!(typeName in types)) {
                types[typeName] = {};
            }
        }
    };
    logEndConstruction = function (type, wrapperType) {
        var traceState = getTraceState_1();
        if (traceState) {
            traceState.stack.pop();
        }
    };
    logConsume = function (dependency) {
        var traceState = getTraceState_1();
        var key = dependency.key || dependency;
        var isOptional = dependency.flags & 4 /* optional */;
        if (traceState) {
            var stack = traceState.stack, types = traceState.types;
            var parent_2 = stack[stack.length - 1] || '_root';
            (types[parent_2] || (types[parent_2] = {}))[isOptional ? key.id + "?" : key.id] = key.name;
        }
    };
    logExpose = function (key, owner, instance) {
        var traceState = getTraceState_1();
        if (traceState) {
            var typeName = instance && instance.constructor['name'];
            var exposed = traceState.exposed;
            (exposed[owner] || (exposed[owner] = [])).push({
                id: key.id,
                name: key.name,
                type: typeName
            });
        }
    };
    log = function (message) {
        var traceState = getTraceState_1();
        if (traceState) {
            traceState.log.push(message);
        }
    };
}
function preventCancellation(promise) {
    var signal = new Signal_1.default();
    promise.then((function (result) { return signal.complete(result); }), (function (error) { return signal.error(error); }));
    return signal.getPromise();
}
exports.default = ResourceScope;


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var HslColor_1 = __webpack_require__(97);
var RgbaColor_1 = __webpack_require__(26);
var Shades_1 = __webpack_require__(181);
/**
 * Utility class with static methods to work with Fabric-style themes.
 */
var FabricTheming = (function () {
    function FabricTheming() {
    }
    /**
     * Generates a palette of Fabric colors from a primary RGB color value.
     * @param {RgbaColor} primaryRgb Primary RGB color used to generate a palette.
     * @param {boolean} inverted Whether the theme is inverted, with a dark background and light foreground.
     */
    FabricTheming.generateFabricColors = function (primaryRgb, inverted) {
        if (inverted === void 0) { inverted = false; }
        var generatedShades = {
            "themeDarker": Shades_1.Shades.Darkest,
            "themeDark": Shades_1.Shades.Darker,
            "themeDarkAlt": Shades_1.Shades.Darker,
            "themeLight": Shades_1.Shades.Lighter,
            "themeLightAlt": Shades_1.Shades.Lighter,
            "themeLighter": Shades_1.Shades.Lightest,
            "themeLighterAlt": Shades_1.Shades.Lightest,
            "themePrimary": Shades_1.Shades.Unshaded,
            "themeAccent": Shades_1.Shades.Unshaded,
            "themeSecondary": Shades_1.Shades.Medium,
            "themeTertiary": Shades_1.Shades.Lighter,
            "themeTertiaryAlt": Shades_1.Shades.Lighter
        };
        // Expected color slots. Start each defaulting to null to avoid warnings about missing slots.
        var colors = FabricTheming._getDefaultThemeTokenMap();
        // Starting points for the generated palette.
        var primaryColor = RgbaColor_1.default.fromRgba(primaryRgb.R, primaryRgb.G, primaryRgb.B);
        for (var shadeName in generatedShades) {
            var shade = generatedShades[shadeName];
            if (inverted && shade !== Shades_1.Shades.Unshaded) {
                shade = Shades_1.Shades.Darkest + Shades_1.Shades.Lightest - shade;
            }
            colors[shadeName] = Shades_1.getShade(primaryColor, shade);
        }
        var accent = colors["themeAccent"];
        colors["themeAccentTranslucent10"] = accent ?
            RgbaColor_1.default.fromRgba(accent.R, accent.G, accent.B, 0.1 * RgbaColor_1.default.maxComponent) : null;
        // Handle neutral slots for inverted themes
        if (inverted) {
            var invertedText = '#f8f8f8'; // neutralLighterAlt
            var invertedNeutralQuaternary = '#6b6b6b';
            var invertedNeutralQuaternaryAlt = '#707070';
            var invertedNeutralColors = {
                'black': '#fff',
                'blackTranslucent40': '#66ffffff',
                'neutralDark': '#fff',
                'neutralPrimary': invertedText,
                'neutralPrimaryTranslucent50': '#7ff8f8f8',
                'neutralPrimaryAlt': '#f4f4f4',
                'neutralSecondary': '#eaeaea',
                'neutralSecondaryAlt': '#c8c8c8',
                'neutralTertiary': '#a6a6a6',
                'neutralTertiaryAlt': '#767676',
                'neutralQuaternary': invertedNeutralQuaternary,
                'neutralQuaternaryAlt': invertedNeutralQuaternaryAlt,
                'cmdbarSelected': invertedNeutralQuaternary,
                'cmdbarSelectedHover': invertedNeutralQuaternaryAlt,
                'neutralLight': '#666666',
                'neutralLighter': '#333',
                'neutralLighterAlt': '#212121',
                'primaryText': invertedText,
                'primaryBackground': '#000',
                'white': '#000',
                'whiteTranslucent40': '#66000000',
                'error': '#f00',
                'errorBackground': '#7e3333'
            };
            for (var neutralSlot in invertedNeutralColors) {
                if (invertedNeutralColors.hasOwnProperty(neutralSlot)) {
                    colors[neutralSlot] =
                        RgbaColor_1.default.fromHtmlColor(invertedNeutralColors[neutralSlot]);
                }
            }
        }
        return colors;
    };
    /**
     * Applies an Hsl delta to an HslColor to produce a new HslColor.
     * @param {HslColor} primaryHsl Starting HSL color value.
     * @param {number} hDelta Delta to apply to the hue.
     * @param {number} sDelta Delta to apply to the saturation.
     * @param {number} lDelta Delta to apply to the luminance.
     */
    FabricTheming.applyHslDelta = function (primaryHsl, hDelta, sDelta, lDelta) {
        var hue = primaryHsl.hue - hDelta;
        if (hue > 1 || hue < 0) {
            hue = hue - Math.floor(hue);
        }
        var sat = primaryHsl.sat - sDelta;
        if (sat > 1) {
            sat = 1;
        }
        else if (sat < 0) {
            sat = 0;
        }
        var lum = primaryHsl.lum - lDelta;
        if (lum > 1) {
            lum = 1;
        }
        else if (lum < 0) {
            lum = 0;
        }
        var hslValue = new HslColor_1.default(hue, sat, lum);
        return hslValue;
    };
    FabricTheming._getDefaultThemeTokenMap = function () {
        return {
            backgroundOverlay: null,
            primaryBackground: null,
            primaryText: null,
            themeDarker: null,
            themeDark: null,
            themeDarkAlt: null,
            themePrimary: null,
            themeSecondary: null,
            themeTertiary: null,
            themeLight: null,
            themeLighter: null,
            themeLighterAlt: null,
            black: null,
            cmdbarSelected: null,
            cmdbarSelectedHover: null,
            neutralDark: null,
            neutralPrimary: null,
            neutralPrimaryAlt: null,
            neutralPrimaryTranslucent50: null,
            neutralSecondary: null,
            neutralSecondaryAlt: null,
            neutralTertiary: null,
            neutralTertiaryAlt: null,
            neutralQuaternary: null,
            neutralQuaternaryAlt: null,
            neutralLight: null,
            neutralLighter: null,
            neutralLighterAlt: null,
            white: null,
            blackTranslucent40: null,
            whiteTranslucent40: null,
            yellow: null,
            yellowLight: null,
            orange: null,
            orangeLight: null,
            redDark: null,
            red: null,
            magentaDark: null,
            magenta: null,
            magentaLight: null,
            purpleDark: null,
            purple: null,
            purpleLight: null,
            blueDark: null,
            blueMid: null,
            blue: null,
            blueLight: null,
            tealDark: null,
            teal: null,
            tealLight: null,
            greenDark: null,
            green: null,
            greenLight: null,
            error: null,
            errorBackground: null,
            success: null,
            successBackground: null,
            alert: null,
            alertBackground: null,
            infoBackground: null,
            info: null,
            orangeLighter: null
        };
    };
    return FabricTheming;
}());
exports.default = FabricTheming;


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var RgbaColor_1 = __webpack_require__(26);
/**
 * A color represented by hue, saturation, luminance, and alpha (opacity) components.
 */
var HslColor = (function () {
    /**
     * Constructs a new HSL color object.
     * @param {number} h The hue (between 0 and 1) of the color.
     * @param {number} s The saturation (between 0 and 1) of the color.
     * @param {number} l The luminance (between 0 and 1) of the color.
     * @param {number} a The opacity (between 0 and 255) of the color.
     */
    function HslColor(h, s, l, a) {
        function LimitNumberToUnitInterval(value) {
            return Math.min(1.0, Math.max(0.0, value));
        }
        this.hue = LimitNumberToUnitInterval(h);
        this.sat = LimitNumberToUnitInterval(s);
        this.lum = LimitNumberToUnitInterval(l);
        this.alpha = a == null ? RgbaColor_1.default.maxComponent : a;
    }
    /**
     * Constructs an HslColor from an RgbaColor.
     * @param {RgbaColor} color The color to convert to HSL.
     */
    HslColor.fromRgba = function (color) {
        // Using integer values as much as possible to make comparisons easier.
        // I will indicate non-integer values with a  "_float" suffix.
        // These integer values are each some integer multiple of the true value.
        var scaleFactor = RgbaColor_1.default.maxComponent;
        var h_float = 0.0;
        var s_float = 0.0;
        var l_float = 0.0;
        var r = color.R;
        var g = color.G;
        var b = color.B;
        var cMax = Math.max(Math.max(r, g), b);
        var cMin = Math.min(Math.min(r, g), b);
        var twiceL = cMax + cMin;
        l_float = twiceL / (2 * scaleFactor);
        if (cMax === cMin) {
            s_float = 0.0;
            h_float = -1.0;
        }
        else {
            var dmax = cMax - cMin;
            var pmax = cMax + cMin;
            // The scale factor cancels when we divide scaled values, so divisions can ignore it.
            if (twiceL <= 1 * scaleFactor) {
                s_float = dmax / pmax;
            }
            else {
                s_float = dmax / (2 * scaleFactor - pmax); // Safe, since cMax != cMin
            }
            var dr_float = (cMax - r) * (1 / 6) / dmax;
            var dg_float = (cMax - g) * (1 / 6) / dmax;
            var db_float = (cMax - b) * (1 / 6) / dmax;
            if (r === cMax) {
                h_float = db_float - dg_float;
            }
            else if (g === cMax) {
                h_float = (1 / 3) + dr_float - db_float;
            }
            else {
                h_float = (2 / 3) + dg_float - dr_float;
            }
            if (h_float < 0) {
                h_float += 1.0;
            }
            if (h_float > 1.0) {
                h_float -= 1.0;
            }
        }
        return new HslColor(h_float, s_float, l_float, color.A);
    };
    /**
     * Converts a hue, saturation, or luminance value between 0 and 1 into
     * an integer between 0 and 255.
     */
    HslColor._hslComponentToByte = function (value) {
        var c_rgbaMax = RgbaColor_1.default.maxComponent;
        var result = Math.round(c_rgbaMax * value);
        return Math.min(c_rgbaMax, Math.max(0, result));
    };
    /**
     * Internal method which given the calculated magic numbers and the hue,
     * will calculate the appropriate RGB number.
     * This algorithm is intended to stay in-sync with the equivalent code in
     * mso\officespace\fscolorgallery.cpp.
     * @param {number} m1 The first magic number.
     * @param {number} m2 The second magic number.
     * @param {number} hue The hue to be converted using the magic numbers.
     */
    HslColor._hueToRgbComponent = function (m1, m2, hue) {
        var result;
        if (hue < 0) {
            hue += 1;
        }
        if (hue > 1) {
            hue -= 1;
        }
        if (hue < 1 / 6) {
            result = m1 + (m2 - m1) * hue * 6;
        }
        else if (hue < 1 / 2) {
            result = m2;
        }
        else if (hue < 2 / 3) {
            result = m1 + (m2 - m1) * (2 / 3 - hue) * 6;
        }
        else {
            result = m1;
        }
        return HslColor._hslComponentToByte(result);
    };
    /**
     * Darkens the color by the provided factor.
     * @param {number} factor The factor (between 0 and 1) by which to scale the luminance.
     */
    HslColor.prototype.darken = function (factor) {
        // TODO: Validate input.
        this.lum *= factor;
    };
    /**
     * Lightens the color by the provided factor.
     * @param {number} factor The factor (between 0 and 1) by which to scale the luminance.
     */
    HslColor.prototype.lighten = function (factor) {
        // TODO: Validate input.
        this.lum = this.lum * factor + (1 - factor);
    };
    /**
     * Returns an RgbaColor representation of this HslColor.
     */
    HslColor.prototype.toRgbaColor = function () {
        var r;
        var g;
        var b;
        var hue = this.hue;
        var saturation = this.sat;
        var luminance = this.lum;
        if (Math.round(saturation * RgbaColor_1.default.maxComponent) === 0) {
            r = g = b = HslColor._hslComponentToByte(luminance);
        }
        else {
            var m1;
            var m2;
            if (luminance <= 0.5) {
                m2 = luminance * (1 + saturation);
            }
            else {
                m2 = luminance + saturation - (luminance * saturation);
            }
            m1 = 2 * luminance - m2;
            r = HslColor._hueToRgbComponent(m1, m2, hue + (1 / 3));
            g = HslColor._hueToRgbComponent(m1, m2, hue);
            b = HslColor._hueToRgbComponent(m1, m2, hue - (1 / 3));
        }
        return RgbaColor_1.default.fromRgba(r, g, b, this.alpha);
    };
    return HslColor;
}());
exports.default = HslColor;


/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var BaseDataStore_1 = __webpack_require__(42);
var DataStoreCachingType_1 = __webpack_require__(32);
var THEME_CACHE_VERSION = '1.7';
var THEME_CACHE_PREFIX = 'odTheme';
var DATA_KEY = 'Data';
var TOKEN_KEY = 'CacheToken';
var VERSION_KEY = 'CacheVersion';
/**
 * Utility methods for caching theme data.
 */
var ThemeCache = (function () {
    function ThemeCache() {
    }
    /**
     * Clears the theme cache.
     */
    ThemeCache.clearThemeCache = function () {
        "use strict";
        var ds = ThemeCache.getThemeDataStore();
        ds.remove(DATA_KEY);
        ds.remove(TOKEN_KEY);
        ds.remove(VERSION_KEY);
    };
    /**
     * Reads the cached theme, if the cacheToken is compatible.
     * @param {string} cacheToken The cached value will only be returned if it has the same cache token.
     */
    ThemeCache.getCachedTheme = function (cacheToken) {
        "use strict";
        var cachedTheme;
        var ds = ThemeCache.getThemeDataStore();
        try {
            // Make sure the data was cached with the expected version and
            // the current theme cache token. Otherwise, return undefined.
            if (cacheToken === ds.getValue(TOKEN_KEY) &&
                THEME_CACHE_VERSION === ds.getValue(VERSION_KEY)) {
                cachedTheme = ds.getValue(DATA_KEY);
            }
        }
        catch (exReadCache) {
            // Ignore.
        }
        return cachedTheme;
    };
    /**
     * Updates the theme data in the cache.
     * @param {IThemeData} themeData The new theme data to cache.
     */
    ThemeCache.updateThemeCache = function (themeData, cacheToken) {
        "use strict";
        var ds = ThemeCache.getThemeDataStore();
        ds.setValue(DATA_KEY, themeData);
        ds.setValue(TOKEN_KEY, cacheToken || themeData.cacheToken);
        ds.setValue(VERSION_KEY, THEME_CACHE_VERSION);
    };
    /**
     * Returns an instance of the supporting data store for this cache.
     */
    ThemeCache.getThemeDataStore = function () {
        "use strict";
        return new BaseDataStore_1.default(THEME_CACHE_PREFIX, DataStoreCachingType_1.default.local);
    };
    return ThemeCache;
}());
exports.default = ThemeCache;


/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Point_1 = __webpack_require__(100);
var Size_1 = __webpack_require__(101);
/**
 * Describes an area enclosed by an upper-left coordinate plus a width and height.
 */
var Rectangle = (function () {
    function Rectangle(arg0, arg1, arg2, arg3) {
        this.x = 0;
        this.y = 0;
        this.width = 0;
        this.height = 0;
        if (arguments.length === 0) {
            this.x = 0;
            this.y = 0;
            this.width = 0;
            this.height = 0;
        }
        else if (arg0 instanceof Rectangle) {
            var rect = arg0;
            this.x = rect.x;
            this.y = rect.y;
            this.width = rect.width;
            this.height = rect.height;
        }
        else if (arg0 instanceof Point_1.default) {
            var point = arg0;
            var size = arg1;
            this.x = point.x;
            this.y = point.y;
            this.width = size.width;
            this.height = size.height;
        }
        else if (typeof arg0 === 'object' &&
            typeof arg0.left === 'number' &&
            typeof arg0.top === 'number' &&
            typeof arg0.width === 'number' &&
            typeof arg0.height === 'number') {
            var cRect = arg0;
            this.x = cRect.left;
            this.y = cRect.top;
            this.width = cRect.width;
            this.height = cRect.height;
        }
        else {
            this.x = arg0;
            this.y = arg1;
            this.width = arg2;
            this.height = arg3;
        }
    }
    /**
     * Clips the Rectangle to fit within the specified bounds and returns the result.
     */
    Rectangle.prototype.clip = function (bounds) {
        var rect = new Rectangle(this);
        if (rect.x < bounds.x) {
            rect.width -= bounds.x - rect.x;
            rect.x = bounds.x;
        }
        if (rect.getRight() > bounds.getRight()) {
            rect.width -= rect.getRight() - bounds.getRight();
        }
        if (rect.y < bounds.y) {
            rect.height -= bounds.y - rect.y;
            rect.y = bounds.y;
        }
        if (rect.getBottom() > bounds.getBottom()) {
            rect.height -= rect.getBottom() - bounds.getBottom();
        }
        return rect;
    };
    /**
     * Determines if the specified Point or Rectangle is entirely contained by this Rectangle.
     */
    Rectangle.prototype.contains = function (val) {
        if (val instanceof Point_1.default) {
            // test if a single point is contained within this Rectangle
            var point = val;
            return ((point.x >= this.x) &&
                (point.y >= this.y) &&
                (point.x <= this.getRight()) &&
                (point.y <= this.getBottom()));
        }
        else {
            // test upper-left and lower-right points of the Rectangle
            var rect = val;
            var pointA = rect.getPoint();
            var pointB = new Point_1.default(rect.getRight(), rect.getBottom());
            return (this.contains(pointA) && this.contains(pointB));
        }
    };
    Rectangle.prototype.getCenter = function () {
        return new Point_1.default(this.x + this.width / 2, this.y + this.height / 2);
    };
    Rectangle.prototype.getLeft = function () {
        return this.x;
    };
    Rectangle.prototype.getTop = function () {
        return this.y;
    };
    Rectangle.prototype.getRight = function () {
        return this.x + this.width;
    };
    Rectangle.prototype.getBottom = function () {
        return this.y + this.height;
    };
    Rectangle.prototype.getPoint = function () {
        return new Point_1.default(this.x, this.y);
    };
    Rectangle.prototype.getSize = function () {
        return new Size_1.default(this.width, this.height);
    };
    Rectangle.prototype.inflate = function (arg0, arg1) {
        var dx;
        var dy;
        if (typeof arg0 === 'object') {
            var size = arg0;
            dx = size.width;
            dy = size.height;
        }
        else {
            dx = arg0;
            dy = arg1;
        }
        return new Rectangle(this.x - dx / 2, this.y - dy / 2, this.width + dx, this.height + dy);
    };
    /**
     * Translates the Rectangle by the minimum distance to try and fit within the specified bounds.
     */
    Rectangle.prototype.nudge = function (bounds) {
        var result = new Rectangle(this);
        if (result.x < bounds.x) {
            result.x = bounds.x;
        }
        else if (result.getRight() > bounds.getRight()) {
            result.x = bounds.getRight() - result.width;
        }
        if (result.y < bounds.y) {
            result.y = bounds.y;
        }
        else if (result.getBottom() > bounds.getBottom()) {
            result.y = bounds.getBottom() - result.height;
        }
        return result;
    };
    Rectangle.prototype.translate = function (arg0, arg1) {
        var result;
        if (arg0 instanceof Point_1.default) {
            // allow distance to be specified in the coordinates of a Point
            var p = arg0;
            result = this.translate(p.x, p.y);
        }
        else {
            var dx = arg0;
            var dy = arg1;
            result = new Rectangle(this.x + dx, this.y + dy, this.width, this.height);
        }
        return result;
    };
    /**
     * Calculates the smallest Rectangle that contains both this rectangle and the specified rectangle.
     */
    Rectangle.prototype.union = function (rect) {
        var x1 = Math.min(this.x, rect.x);
        var y1 = Math.min(this.y, rect.y);
        var x2 = Math.max(this.x + this.width, rect.x + rect.width);
        var y2 = Math.max(this.y + this.height, rect.y + rect.height);
        return new Rectangle(x1, y1, x2 - x1, y2 - y1);
    };
    /**
     * Creates a new rectangle similar to the current rectangle, but fitted to the target rectangle,
     * either outside or inside.
     */
    Rectangle.prototype.fit = function (rect, isInside) {
        var coverRect = rect;
        if (this.width && this.height && (isInside ?
            (this.width > coverRect.width || this.height > coverRect.height) :
            (this.width > coverRect.width && this.height > coverRect.height))) {
            coverRect = this._scaleTo(rect, isInside);
        }
        else {
            coverRect = this;
        }
        var deltaX = (rect.width - coverRect.width) / 2;
        var deltaY = (rect.height - coverRect.height) / 2;
        return new Rectangle(deltaX + this.x, deltaY + this.y, coverRect.width, coverRect.height);
    };
    Rectangle.prototype._scaleTo = function (target, isInside) {
        var targetAspectRatio = target.width / target.height;
        var currentAspectRatio = this.width / this.height;
        var width = 0;
        var height = 0;
        var aspectRatio1 = isInside ? currentAspectRatio : targetAspectRatio;
        var aspectRatio2 = isInside ? targetAspectRatio : currentAspectRatio;
        if (aspectRatio1 < aspectRatio2) {
            // Target is skinnier than current. Match height of target area.
            height = target.height;
            width = currentAspectRatio * target.height;
        }
        else {
            // Current is skinnier than target. Match width of target area.
            width = target.width;
            height = target.width / currentAspectRatio;
        }
        return new Rectangle(this.x, this.y, width, height);
    };
    return Rectangle;
}());
exports.default = Rectangle;


/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Immutable structure representing a 2D point.
 */
var Point = (function () {
    function Point(xOrPoint, y) {
        if (xOrPoint === void 0) { xOrPoint = 0; }
        if (y === void 0) { y = 0; }
        if (xOrPoint instanceof Point) {
            var point = xOrPoint;
            this.x = point.x;
            this.y = point.y;
        }
        else {
            this.x = xOrPoint;
            this.y = y;
        }
    }
    Point.areEqual = function (point1, point2, tolerance) {
        if (tolerance === void 0) { tolerance = 1E-6; }
        return Math.abs(point1.x - point2.x) < tolerance && Math.abs(point1.y - point2.y) < tolerance;
    };
    /**
     * gets the center of points.
     */
    Point.getCenter = function (points) {
        return points.reduce((function (p1, p2) { return p1.add(p2); }), Point.ORIGIN).scale(1 / points.length);
    };
    /**
     * Multiplies a point by a constant, producing a scaled point.
     */
    Point.prototype.scale = function (factor) {
        return new Point(this.x * factor, this.y * factor);
    };
    /**
     * Adds two points, creating a translated point.
     */
    Point.prototype.add = function (offset) {
        return new Point(this.x + offset.x, this.y + offset.y);
    };
    /**
     * Subtracts two points, creating a translated point.
     */
    Point.prototype.subtract = function (offset) {
        return new Point(this.x - offset.x, this.y - offset.y);
    };
    /**
     * Determines the distance from one point to another.
     */
    Point.prototype.distance = function (target) {
        var dx = this.x - target.x;
        var dy = this.y - target.y;
        return Math.sqrt((dx * dx) + (dy * dy));
    };
    /**
     * Negates a point, creating a point reflected across the origin.
     */
    Point.prototype.negate = function () {
        return new Point(-this.x, -this.y);
    };
    /**
     * Takes the absolute value of a point, getting its distance from the origin.
     */
    Point.prototype.abs = function () {
        return Math.sqrt((this.x * this.x) + (this.y * this.y));
    };
    /**
     * Gets the unit vector for a point.
     */
    Point.prototype.unit = function () {
        var abs = this.abs();
        return this.scale(abs && (1 / abs) || 0);
    };
    /**
     * Represents this point as a string.
     */
    Point.prototype.toString = function () {
        return '[Point ' + this.x + ', ' + this.y + ']';
    };
    /**
     * The origin of a 2D plane.
     */
    Point.ORIGIN = new Point();
    return Point;
}());
exports.default = Point;


/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var Size = (function () {
    function Size(width, height) {
        this.width = 0;
        this.height = 0;
        this.width = width;
        this.height = height;
    }
    return Size;
}());
exports.default = Size;


/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var toolbox_1 = __webpack_require__(197);
exports.Toolbox = toolbox_1.Toolbox;
var toolboxFullBleed_1 = __webpack_require__(224);
exports.ToolboxFullBleed = toolboxFullBleed_1.ToolboxFullBleed;


/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(201);
var styles = {
    fromNoneToSmall: 'fromNoneToSmall_143d0bd2',
    upIn: 'upIn_143d0bd2',
    fromNoneToSmallUpIn: 'fromNoneToSmallUpIn_143d0bd2',
    downIn: 'downIn_143d0bd2',
    fromNoneToSmallDownInLTR: 'fromNoneToSmallDownInLTR_143d0bd2',
    fromNoneToSmallDownInRTL: 'fromNoneToSmallDownInRTL_143d0bd2',
    fromSmallToLarge: 'fromSmallToLarge_143d0bd2',
    fromLargeToSmall: 'fromLargeToSmall_143d0bd2',
};
exports.default = styles;


/***/ }),
/* 104 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DelayLessText_1 = __webpack_require__(217);
exports.LessText = DelayLessText_1.DelayLessText;


/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(219);
var styles = {
    lessText: 'lessText_e2bbc3d7',
};
exports.default = styles;


/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var odsp_utilities_bundle_1 = __webpack_require__(9);
var DragZone_module_scss_1 = __webpack_require__(58);
var office_ui_fabric_react_1 = __webpack_require__(2);
var DragZoneUtilities_1 = __webpack_require__(108);
var DragZoneTree_1 = __webpack_require__(239);
var DragZoneKeyboard_1 = __webpack_require__(240);
var DATA_DRAG_HANDLE = 'data-drag-handle';
var DRAGSTART_TIMEOUT_MS = 100;
var ICON_MARGIN_PX = -25;
var DRAGOVER_INTERVAL_MS = 200;
var LINE_WIDTH_PX = 3;
var DragZoneControl = (function () {
    function DragZoneControl(options) {
        if (!options.host) {
            throw Error('Need to specify a host control for the DropZone');
        }
        if (!(options.treeLevelTagsBottomUp && options.treeLevelTagsBottomUp.length > 0)) {
            throw Error('Need to have at least one level of tags for the DropZone');
        }
        this._options = options;
        if (options.icon) {
            this._icon = options.icon;
        }
        else {
            this._icon = DragZoneUtilities_1.DragZoneUtilities.getDefaultIcon();
        }
        this._icon.classList.add(DragZone_module_scss_1.default.iconCollapsed);
        this._icon.classList.add(DragZone_module_scss_1.default.iconAdditionalStyle);
        this._tree = new DragZoneTree_1.DragZoneTree(options.treeLevelTagsBottomUp, options.host);
    }
    DragZoneControl.prototype.activate = function () {
        var _this = this;
        var _a = this._options, host = _a.host, dragHandleTag = _a.dragHandleTag, scrollIntoView = _a.scrollIntoView, disallowedTag = _a.disallowedTag, disallowedClassName = _a.disallowedClassName, onMoveStart = _a.onMoveStart, onMoving = _a.onMoving;
        this._async = new odsp_utilities_bundle_1.Async();
        if (dragHandleTag) {
            this._dragHandles =
                DragZoneUtilities_1.DragZoneUtilities.getElementsWithAttribute(host, DATA_DRAG_HANDLE, dragHandleTag);
            this._dragHandles.forEach((function (handle) {
                handle.addEventListener('mousedown', _this._onMouseDown);
                handle.addEventListener('touchstart', _this._onMouseDown);
                handle.classList.add(DragZone_module_scss_1.default.handleGrab);
            }));
        }
        else {
            host.addEventListener('mousedown', this._onMouseDown);
            host.addEventListener('touchstart', this._onMouseDown);
        }
        var dragZoneKeyboardOptions = {
            host: host,
            tree: this._tree,
            supportHorizontalReorder: this._supportHorizontalReorder,
            moveLine: this._moveLine,
            removeLine: this._removeLine,
            moveItem: this._triggerOnMoved,
            handles: this._dragHandles,
            strings: this._options.dragZoneStrings,
            handleTag: dragHandleTag,
            scrollIntoView: scrollIntoView,
            disallowedTag: disallowedTag,
            disallowedClassName: disallowedClassName,
            moveIcon: this._moveIcon,
            changeIconVisibility: this._changeIconVisibility,
            onMoveStart: onMoveStart,
            onMoving: onMoving
        };
        if (this._supportKeyboardAlternative) {
            this._dragZoneKeyboard = new DragZoneKeyboard_1.default(dragZoneKeyboardOptions);
        }
        host.addEventListener('mouseup', this._internalMouseUp);
        host.addEventListener('touchend', this._internalMouseUp);
        host.addEventListener('mouseout', this._onMouseOut);
        host.addEventListener('touchout', this._onMouseOut);
    };
    DragZoneControl.prototype.deactivate = function () {
        var _this = this;
        var _a = this._options, host = _a.host, dragHandleTag = _a.dragHandleTag;
        this._async.dispose();
        if (this._supportKeyboardAlternative && this._dragZoneKeyboard) {
            this._dragZoneKeyboard.dispose();
        }
        if (dragHandleTag) {
            this._dragHandles =
                DragZoneUtilities_1.DragZoneUtilities.getElementsWithAttribute(host, DATA_DRAG_HANDLE, dragHandleTag);
            this._dragHandles.forEach((function (handle) {
                handle.removeEventListener('mousedown', _this._onMouseDown);
                handle.removeEventListener('touchstart', _this._onMouseDown);
                handle.classList.remove(DragZone_module_scss_1.default.handleGrab);
            }));
        }
        else {
            host.removeEventListener('mousedown', this._onMouseDown);
            host.removeEventListener('touchstart', this._onMouseDown);
        }
        host.removeEventListener('mouseup', this._internalMouseUp);
        host.removeEventListener('touchend', this._internalMouseUp);
        host.removeEventListener('mouseout', this._onMouseOut);
        host.removeEventListener('touchout', this._onMouseOut);
    };
    DragZoneControl.prototype.refreshHandles = function () {
        var _this = this;
        var _a = this._options, host = _a.host, dragHandleTag = _a.dragHandleTag;
        if (dragHandleTag) {
            var dragHandles = DragZoneUtilities_1.DragZoneUtilities.getElementsWithAttribute(host, DATA_DRAG_HANDLE, dragHandleTag);
            var itemsAdded = DragZoneUtilities_1.DragZoneUtilities.getElementsNotInFirstArray(this._dragHandles, dragHandles);
            if (itemsAdded.length > 0) {
                itemsAdded.forEach((function (handle) {
                    _this._dragHandles.push(handle);
                    handle.addEventListener('mousedown', _this._onMouseDown);
                    handle.addEventListener('touchstart', _this._onMouseDown);
                    handle.classList.remove(DragZone_module_scss_1.default.handleGrab);
                }));
            }
            if (this._supportKeyboardAlternative && this._dragZoneKeyboard) {
                this._dragZoneKeyboard.addHandles(itemsAdded);
            }
        }
    };
    DragZoneControl.prototype._onMouseMove = function (evt) {
        this._mouseOut = false;
        this._tree.currentPosition.x = evt.clientX;
        this._tree.currentPosition.y = evt.clientY;
    };
    DragZoneControl.prototype._onTouchMove = function (evt) {
        this._mouseOut = false;
        if (evt.touches.length === 1) {
            var touch = evt.touches[0];
            this._tree.currentPosition.x = touch.clientX;
            this._tree.currentPosition.y = touch.clientY;
            evt.preventDefault();
        }
    };
    DragZoneControl.prototype._onMouseOut = function () {
        this._mouseOut = true;
    };
    DragZoneControl.prototype._onMouseDown = function (evt) {
        evt.preventDefault();
        this._mouseDown = true;
        this._async.setTimeout(this._startDrag, DRAGSTART_TIMEOUT_MS);
        if (evt instanceof MouseEvent) {
            var mouseEvent = evt;
            this._tree.startPosition.x = mouseEvent.clientX;
            this._tree.startPosition.y = mouseEvent.clientY;
            this._tree.currentPosition.x = mouseEvent.clientX;
            this._tree.currentPosition.y = mouseEvent.clientY;
        }
        else if (evt instanceof TouchEvent) {
            var touchEvent = evt;
            if (touchEvent && touchEvent.touches.length > 0) {
                this._tree.startPosition.x = touchEvent.touches[0].clientX;
                this._tree.startPosition.y = touchEvent.touches[0].clientY;
                this._tree.currentPosition.x = touchEvent.touches[0].clientX;
                this._tree.currentPosition.y = touchEvent.touches[0].clientY;
            }
        }
    };
    DragZoneControl.prototype._onDragStart = function () {
        var _a = this._options, disallowedTag = _a.disallowedTag, disallowedClassName = _a.disallowedClassName;
        this._isDragging = true;
        if (window.getSelection()) {
            window.getSelection().removeAllRanges();
        }
        document.body.classList.add(DragZone_module_scss_1.default.noselect);
        this._animationFrameHandle = window.requestAnimationFrame(this._emulateMouseMove);
        this._dragOverInterval = this._async.setInterval(this._emulateDragOver, DRAGOVER_INTERVAL_MS);
        this._options.host.addEventListener('mousemove', this._onMouseMove);
        this._options.host.addEventListener('touchmove', this._onTouchMove);
        window.addEventListener('mouseup', this._onMouseUp);
        window.addEventListener('touchend', this._onMouseUp);
        this._autoScroll = new office_ui_fabric_react_1.AutoScroll(this._options.host);
        this._changeIconVisibility(true);
        this._options.host.classList.add(DragZone_module_scss_1.default.cursorDragging);
        this._draggedItemPosition = this._tree.getDraggedItemPosition();
        this._draggedElement = this._tree.getDraggedItem;
        this._tree.addDisallowedStyles(disallowedTag, disallowedClassName);
        if (this._options.onMoveStart) {
            this._options.onMoveStart(this._draggedItemPosition);
        }
    };
    DragZoneControl.prototype._changeIconVisibility = function (visible) {
        this._icon.classList.remove(visible ? DragZone_module_scss_1.default.iconCollapsed : DragZone_module_scss_1.default.iconVisible);
        this._icon.classList.add(visible ? DragZone_module_scss_1.default.iconVisible : DragZone_module_scss_1.default.iconCollapsed);
    };
    DragZoneControl.prototype._internalMouseUp = function () {
        this._mouseDown = false;
    };
    DragZoneControl.prototype._onMouseUp = function () {
        if (!this._isDragging) {
            return;
        }
        this._isDragging = false;
        this._changeIconVisibility(false);
        document.body.classList.remove(DragZone_module_scss_1.default.noselect);
        if (this._mouseOut || !this._draggedElement || !this._dragOverElement) {
            this._resetCursorEvents();
            this._reset();
            return;
        }
        this._resetCursorEvents();
        this._triggerOnMoved(this._draggedItemPosition, this._hoverOverPosition);
    };
    DragZoneControl.prototype._triggerOnMoved = function (draggedItemPosition, dropPosition) {
        if (this._options.onMoved) {
            if (draggedItemPosition &&
                draggedItemPosition.length === this._tree.depth &&
                dropPosition && dropPosition.length === this._tree.depth) {
                this._options.onMoved(draggedItemPosition, dropPosition);
            }
        }
        this._reset();
    };
    DragZoneControl.prototype._emulateDragOver = function () {
        var disallowedTag = this._options.disallowedTag;
        var plainElement = this._options.canDropOnEmptyParent ?
            this._tree.getBottomMostElementFromMousePosition(this._draggedElement, disallowedTag) :
            this._tree.getLeafElementFromMousePosition();
        var element = plainElement;
        if (!element) {
            return;
        }
        this._hoverOverPosition = this._tree.getHoverOverItemPosition(element);
        var shouldInsertBefore = DragZoneUtilities_1.DragZoneUtilities.shouldInsertBeforeElement(element, this._tree.currentPosition.x, this._tree.currentPosition.y, this._supportHorizontalReorder);
        var isLeaf = this._tree.isLeafElement(element);
        if (!shouldInsertBefore && isLeaf) {
            this._hoverOverPosition[0]++;
        }
        this._moveLine(element, isLeaf, shouldInsertBefore);
    };
    DragZoneControl.prototype._moveLine = function (adjacentElement, isLeaf, shouldInsertBefore) {
        this._removeLine();
        this._line = document.createElement('div');
        this._line.className = DragZone_module_scss_1.default.dropLocation;
        var supportHorizontalReorder = this._options.supportHorizontalReorder;
        if (supportHorizontalReorder) {
            this._line.classList.add(DragZone_module_scss_1.default.verticalLine);
        }
        else {
            this._line.classList.add(DragZone_module_scss_1.default.horizontalLine);
        }
        if (isLeaf) {
            this._line.classList.add(DragZone_module_scss_1.default.linePositionAbsolute);
            if (supportHorizontalReorder) {
                if (office_ui_fabric_react_1.getRTL()) {
                    if (!shouldInsertBefore) {
                        this._line.style.marginRight = adjacentElement.getBoundingClientRect().width + "px";
                    }
                    else {
                        this._line.style.marginRight = -LINE_WIDTH_PX + "px";
                    }
                }
                else {
                    if (!shouldInsertBefore) {
                        this._line.style.marginLeft = adjacentElement.getBoundingClientRect().width + "px";
                    }
                    else {
                        this._line.style.marginLeft = -LINE_WIDTH_PX + "px";
                    }
                }
            }
            else {
                if (!shouldInsertBefore) {
                    this._line.style.marginTop =
                        this._getLineBottomPosition(adjacentElement.parentElement, adjacentElement) + 'px';
                    this._line.style.marginTop =
                        this._getLineBottomPosition(adjacentElement.parentElement, adjacentElement) + 'px';
                }
                else {
                    this._line.style.marginTop = -this._options.dropPositionOffsetTopPx + 'px';
                }
            }
            adjacentElement.parentElement.insertBefore(this._line, adjacentElement);
        }
        else {
            if (this._supportHorizontalReorder) {
                this._line.classList.add(DragZone_module_scss_1.default.verticalLine);
            }
            else {
                this._line.classList.add(DragZone_module_scss_1.default.horizontalLine);
            }
            adjacentElement.appendChild(this._line);
        }
        this._dragOverElement = adjacentElement;
        return this._line;
    };
    DragZoneControl.prototype._emulateMouseMove = function () {
        var _a = this._options, disallowedTag = _a.disallowedTag, onMoving = _a.onMoving;
        this._moveIcon(this._tree.currentPosition.x, this._tree.currentPosition.y);
        if (onMoving && this._isDragging) {
            onMoving(!this._tree.isDragAllowed(this._draggedElement, this._tree.getDraggedOverElement(), disallowedTag));
        }
        window.requestAnimationFrame(this._emulateMouseMove);
    };
    DragZoneControl.prototype._moveIcon = function (x, y) {
        this._icon.style.top = y + ICON_MARGIN_PX + "px";
        if (office_ui_fabric_react_1.getRTL()) {
            this._icon.style.right = x + ICON_MARGIN_PX + "px";
        }
        else {
            this._icon.style.left = x + ICON_MARGIN_PX + "px";
        }
    };
    DragZoneControl.prototype._startDrag = function () {
        if (this._mouseDown) {
            this._onDragStart();
        }
    };
    DragZoneControl.prototype._resetCursorEvents = function () {
        this._removeLine();
        this._tree.startPosition.x = undefined;
        this._tree.startPosition.y = undefined;
        window.cancelAnimationFrame(this._animationFrameHandle);
        this._async.clearInterval(this._dragOverInterval);
        this._options.host.removeEventListener('mousemove', this._onMouseMove);
        this._options.host.removeEventListener('touchmove', this._onTouchMove);
        window.removeEventListener('mouseup', this._onMouseUp);
        window.removeEventListener('touchend', this._onMouseUp);
        this._options.host.classList.remove(DragZone_module_scss_1.default.cursorDragging);
        this._autoScroll.dispose();
    };
    DragZoneControl.prototype._reset = function () {
        var _a = this._options, disallowedTag = _a.disallowedTag, disallowedClassName = _a.disallowedClassName;
        this._draggedItemPosition = undefined;
        this._dragOverElement = undefined;
        this._tree.applyRemoveCssToDataDragDisallowed(disallowedTag, false, disallowedClassName);
    };
    DragZoneControl.prototype._removeLine = function () {
        if (this._dragOverElement) {
            if (this._tree.isLeafElement(this._dragOverElement) &&
                this._dragOverElement.parentElement.contains(this._line)) {
                this._dragOverElement.parentElement.removeChild(this._line);
            }
            else if (this._dragOverElement.contains(this._line)) {
                this._dragOverElement.removeChild(this._line);
            }
        }
    };
    DragZoneControl.prototype._getLineBottomPosition = function (parent, element) {
        var childRect = element.getBoundingClientRect();
        var bottomInsideParent = childRect.height + this._options.dropPositionOffsetBottomPx;
        return bottomInsideParent || 0;
    };
    Object.defineProperty(DragZoneControl.prototype, "_supportHorizontalReorder", {
        get: function () {
            return this._options.supportHorizontalReorder;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DragZoneControl.prototype, "_supportKeyboardAlternative", {
        get: function () {
            return this._options.supportKeyboardAlternative;
        },
        enumerable: true,
        configurable: true
    });
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], DragZoneControl.prototype, "_onMouseMove", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], DragZoneControl.prototype, "_onTouchMove", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], DragZoneControl.prototype, "_onMouseOut", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], DragZoneControl.prototype, "_onMouseDown", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], DragZoneControl.prototype, "_changeIconVisibility", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], DragZoneControl.prototype, "_internalMouseUp", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], DragZoneControl.prototype, "_onMouseUp", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], DragZoneControl.prototype, "_triggerOnMoved", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], DragZoneControl.prototype, "_emulateDragOver", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], DragZoneControl.prototype, "_moveLine", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], DragZoneControl.prototype, "_emulateMouseMove", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], DragZoneControl.prototype, "_moveIcon", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], DragZoneControl.prototype, "_startDrag", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], DragZoneControl.prototype, "_removeLine", null);
    return DragZoneControl;
}());
exports.DragZoneControl = DragZoneControl;


/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var office_ui_fabric_react_1 = __webpack_require__(2);
var DragZone_module_scss_1 = __webpack_require__(58);
var DragZoneUtilities = (function () {
    function DragZoneUtilities() {
    }
    DragZoneUtilities.getElementsWithAttribute = function (parent, tag, value) {
        if (!parent) {
            return [];
        }
        var querySelector = "[" + tag + (value ? "=\"" + value + "\"" : "") + "]";
        var tempEls = parent.querySelectorAll(querySelector);
        var elements = [];
        for (var index = 0; index < tempEls.length; index++) {
            elements.push(tempEls[index]);
        }
        return elements;
    };
    DragZoneUtilities.hasAttributeValue = function (elem, attribute, value) {
        return elem && elem.getAttribute(attribute) === value;
    };
    DragZoneUtilities.shouldInsertBeforeElement = function (element, x, y, isHorizontalReorder) {
        var rectangle = element.getBoundingClientRect();
        var center;
        if (isHorizontalReorder) {
            center = ((rectangle.left + rectangle.right) / 2);
            return office_ui_fabric_react_1.getRTL() ? x > center : x < center;
        }
        else {
            center = ((rectangle.bottom + rectangle.top) / 2);
            return y < center;
        }
    };
    DragZoneUtilities.getDefaultIcon = function () {
        var icon = document.createElement('div');
        icon.innerText = 'icon';
        icon.className = DragZone_module_scss_1.default.defaultIconClass;
        icon.hidden = true;
        document.body.appendChild(icon);
        return icon;
    };
    DragZoneUtilities.elementArrayEquals = function (array1, array2) {
        if (!array1 || !array2) {
            return false;
        }
        if (array1.length !== array2.length) {
            return false;
        }
        for (var i = 0; i < array1.length; i++) {
            if (!array1[i].isEqualNode(array2[i])) {
                return false;
            }
        }
        return true;
    };
    DragZoneUtilities.getElementsNotInFirstArray = function (array1, array2) {
        if (!array1 || !array2 || array2.length === 0) {
            return [];
        }
        var addedElements = array2.filter((function (el) { return array1.indexOf(el) === -1; }));
        return addedElements;
    };
    return DragZoneUtilities;
}());
exports.DragZoneUtilities = DragZoneUtilities;


/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(242);
var styles = {
    dragIconContainer: 'dragIconContainer_525e47ce',
    dragIcon: 'dragIcon_525e47ce',
    dragText: 'dragText_525e47ce',
    singleColumn: 'singleColumn_525e47ce',
    doubleColumn: 'doubleColumn_525e47ce',
    tripleColumn: 'tripleColumn_525e47ce',
    columnLeftTwoThirds: 'columnLeftTwoThirds_525e47ce',
    columnRightTwoThirds: 'columnRightTwoThirds_525e47ce',
    disabledArea: 'disabledArea_525e47ce',
};
exports.default = styles;


/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_core_library_1 = __webpack_require__(5);
var CanvasLayout_1 = __webpack_require__(21);
var CanvasControlType_1 = __webpack_require__(7);
var CanvasSectionPart = (function () {
    function CanvasSectionPart(sectionIdx, factor) {
        this._index = sectionIdx;
        this._factor = factor;
        this._controlsMap = new Map();
    }
    Object.defineProperty(CanvasSectionPart.prototype, "emptySectionControl", {
        get: function () {
            return {
                controlType: undefined,
                displayMode: sp_core_library_1.DisplayMode.Edit,
                id: CanvasSectionPart.emptySectionId,
                position: {
                    zoneIndex: undefined,
                    sectionIndex: this._index,
                    controlIndex: undefined,
                    sectionFactor: this._factor
                }
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasSectionPart.prototype, "factor", {
        get: function () {
            return this._factor;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasSectionPart.prototype, "index", {
        get: function () {
            return this._index;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasSectionPart.prototype, "controls", {
        get: function () {
            var _this = this;
            var canvasControls = [];
            this._controlsMap.forEach((function (control) {
                control.position = CanvasLayout_1.default.cloneMergePosition(control.position, {
                    zoneIndex: undefined,
                    sectionIndex: undefined,
                    sectionFactor: _this._factor,
                    controlIndex: undefined
                });
                canvasControls.push(control);
            }));
            return canvasControls.sort((function (ctrl1, ctrl2) {
                return ctrl1.position.controlIndex - ctrl2.position.controlIndex;
            }));
        },
        enumerable: true,
        configurable: true
    });
    CanvasSectionPart.prototype.addControl = function (canvasControl) {
        if (canvasControl.controlType === CanvasControlType_1.default.WebPartZone ||
            canvasControl.controlType === CanvasControlType_1.default.RTE) {
            if (!CanvasLayout_1.default.isPositionValid(canvasControl.position)) {
                return undefined;
            }
            var curControlIndex = canvasControl.position.controlIndex;
            if (curControlIndex === undefined) {
                return undefined;
            }
            var sectionControl = this._controlsMap.get(curControlIndex);
            if (!sectionControl) {
                this._controlsMap.set(curControlIndex, canvasControl);
            }
            else {
                var layoutControlItems = this.controls.map((function (control) {
                    return {
                        index: control.position.controlIndex
                    };
                }));
                canvasControl.position = CanvasLayout_1.default.cloneMergePosition(canvasControl.position, {
                    zoneIndex: undefined,
                    sectionIndex: undefined,
                    controlIndex: CanvasLayout_1.default.generateNewLayoutIndex(layoutControlItems, curControlIndex)
                });
                if (canvasControl.position.controlIndex === undefined) {
                    return undefined;
                }
                this._controlsMap.set(canvasControl.position.controlIndex, canvasControl);
            }
        }
        return canvasControl.id;
    };
    CanvasSectionPart.prototype.moveControl = function (control, newControlPosition) {
        if (!control ||
            control.position.zoneIndex !== newControlPosition.zoneIndex ||
            control.position.sectionIndex !== newControlPosition.sectionIndex) {
            return;
        }
        this._controlsMap.delete(control.position.controlIndex);
        var siblingLayoutItems = this.controls.map((function (ctrl) {
            return {
                index: ctrl.position.controlIndex
            };
        }));
        control.position = CanvasLayout_1.default.cloneMergePosition(control.position, {
            controlIndex: CanvasLayout_1.default.generateNewLayoutIndex(siblingLayoutItems, newControlPosition.controlIndex)
        });
        this._controlsMap.set(control.position.controlIndex, control);
    };
    CanvasSectionPart.prototype.removeControl = function (controlPosition) {
        if (!controlPosition) {
            return undefined;
        }
        var control = this._controlsMap.get(controlPosition.controlIndex);
        if (!control) {
            return undefined;
        }
        this._controlsMap.delete(control.position.controlIndex);
        return control.id;
    };
    CanvasSectionPart.prototype.fetchControl = function (controlPosition) {
        if (!controlPosition) {
            return undefined;
        }
        return this._controlsMap.get(controlPosition.controlIndex);
    };
    CanvasSectionPart.prototype.fetchAllControls = function () {
        return this.controls;
    };
    CanvasSectionPart.prototype.isEmpty = function () {
        return this.fetchAllControls().length === 0;
    };
    CanvasSectionPart.prototype.dispose = function () {
        this._controlsMap.clear();
    };
    CanvasSectionPart.prototype.changeFactor = function (newFactor) {
        this.controls.forEach((function (control) {
            control.position = CanvasLayout_1.default.cloneMergePosition(control.position, {
                zoneIndex: undefined,
                sectionIndex: undefined,
                sectionFactor: newFactor,
                controlIndex: undefined
            });
        }));
        this._factor = newFactor;
    };
    return CanvasSectionPart;
}());
exports.default = CanvasSectionPart;


/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var sp_telemetry_1 = __webpack_require__(6);
var sp_core_library_1 = __webpack_require__(5);
var office_ui_fabric_react_1 = __webpack_require__(2);
var sp_core_library_2 = __webpack_require__(5);
var odsp_utilities_bundle_1 = __webpack_require__(9);
var CanvasControlFactory_1 = __webpack_require__(246);
var CanvasDragZoneConstants_1 = __webpack_require__(27);
var CanvasLayout_1 = __webpack_require__(21);
var CanvasToolboxHint_1 = __webpack_require__(117);
var ControlZone_1 = __webpack_require__(288);
var Flights_1 = __webpack_require__(28);
var Toolbar_1 = __webpack_require__(119);
var CanvasStrings_resx_1 = __webpack_require__(10);
__webpack_require__(120);
var SPACER_ID = '8654b779-4886-46d4-8ffb-b5ed960ee986';
var DIVIDER_ID = '2161a1c6-db61-4731-b97c-3cdb303f7cbb';
var CanvasSection = (function (_super) {
    tslib_1.__extends(CanvasSection, _super);
    function CanvasSection(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this._controlComponents = [];
        return _this;
    }
    CanvasSection._createEmptyControlLayout = function (zoneIndex, sectionIndex, controlIndex) {
        return {
            zoneIndex: zoneIndex,
            sectionIndex: sectionIndex,
            controlIndex: controlIndex
        };
    };
    CanvasSection.prototype.render = function () {
        var _this = this;
        var store = this.context.store;
        var displayMode = store.displayMode;
        var _a = this.props, zoneIndex = _a.zoneIndex, section = _a.section, selectedPosition = _a.selectedPosition;
        var isEditMode = displayMode === sp_core_library_2.DisplayMode.Edit;
        if (Flights_1.default.isHintDiscoverabilityEnabled && isEditMode && section === undefined) {
            return (React.createElement("div", { className: office_ui_fabric_react_1.css('CanvasSection', 'ms-sm12', 'ms-Grid-col', 'CanvasSection--edit'), "data-automation-id": 'CanvasSection' },
                React.createElement(CanvasToolboxHint_1.default, { ariaLabel: odsp_utilities_bundle_1.StringHelper.format(CanvasStrings_resx_1.default.ToolboxHintTitleWithLayout, CanvasStrings_resx_1.default.ToolboxHintColumnOne), type: 2 , layout: this.props.hintLayout })));
        }
        var isSectionSelected = selectedPosition.zoneIndex === zoneIndex &&
            selectedPosition.sectionIndex === section.index;
        var isSpacerDividerHideToolbarButtonsKillSwitchActivated = sp_core_library_1._SPKillSwitch.isActivated(CanvasSection._spacerDividerHideToolbarButtonsKillSwitch, '9/1/2017', 'hidePartOfSpacerAndDividerToolbarButtons');
        var controls = section.controls;
        var numControls = controls.length;
        this._controlComponents = [];
        controls.forEach((function (curCtrl, curIdx) {
            var isControlSelected = isSectionSelected &&
                selectedPosition.controlIndex === curCtrl.position.controlIndex;
            var hideEditButton = false;
            var hideMoveButton = false;
            if (!isSpacerDividerHideToolbarButtonsKillSwitchActivated) {
                var webPartId = curCtrl.webPartId;
                hideEditButton = webPartId === DIVIDER_ID;
                hideMoveButton = webPartId === DIVIDER_ID || webPartId === SPACER_ID;
            }
            _this._controlComponents.push(React.createElement(ControlZone_1.default, { displayMode: displayMode, id: curCtrl.id, isSelected: isControlSelected, key: curCtrl.id, position: curCtrl.position },
                CanvasControlFactory_1.default.CreateCanvasControl(curCtrl, store),
                React.createElement(Toolbar_1.default, { controlType: curCtrl.controlType, displayMode: displayMode, id: curCtrl.id, onConfigureButtonClick: store.handleConfigureButtonClicked, onDeleteButtonClick: store.handleDeleteControlButtonClicked, controlPosition: curCtrl.position, hideEditButton: hideEditButton, hideMoveButton: hideMoveButton })));
            var nextControlIndex = (curIdx + 1 === numControls) ?
                curCtrl.position.controlIndex + 1 :
                controls[curIdx + 1].position.controlIndex;
            var nextCtrlPosition = CanvasSection._createEmptyControlLayout(curCtrl.position.zoneIndex, curCtrl.position.sectionIndex, nextControlIndex);
            _this._addToolBoxHint(nextCtrlPosition);
        }));
        this._firstControlIdx = controls.length > 0 ?
            controls[0].position.controlIndex :
            CanvasLayout_1.default.firstLayoutIndex;
        var firstControlLayout = {
            zoneIndex: zoneIndex,
            sectionIndex: section.index,
            controlIndex: this._firstControlIdx,
            sectionFactor: section.factor
        };
        var isReadMode = displayMode === sp_core_library_2.DisplayMode.Read;
        var layoutSectionClassName = this._getLayoutSectionClassName(isReadMode, isSectionSelected);
        return (React.createElement("div", { className: layoutSectionClassName, ref: function (ref) { return _this._domElement = ref; }, "data-automation-id": 'CanvasSection', "data-drag-tag": CanvasDragZoneConstants_1.default.sectionDragTag, "data-drag-disallowedArea-tag": this._dragDisallowedAreaTag, "data-negative-space": true },
            this._getContentSelectionMechanism(firstControlLayout),
            this._controlComponents));
    };
    CanvasSection.prototype._addToolBoxHint = function (nextCtrlPosition) {
        this._controlComponents.push(React.createElement(CanvasToolboxHint_1.default, { ariaLabel: this._getToolboxHintAccessibleTitle(), layout: nextCtrlPosition, key: "hint." + nextCtrlPosition.controlIndex, type: 2  }));
    };
    CanvasSection.prototype._getLayoutSectionClassName = function (isReadMode, isSectionSelected) {
        var layoutSectionClassName = office_ui_fabric_react_1.css('CanvasSection', 'ms-Grid-col', 'ms-sm12', "ms-xl" + (this.props.section.factor || 12), {
            'CanvasSection--edit': !isReadMode,
            'CanvasSection--read': isReadMode,
            'CanvasSection--selected': isSectionSelected
        });
        return layoutSectionClassName;
    };
    CanvasSection.prototype._shouldCenterAlignHint = function () {
        return false;
    };
    CanvasSection.prototype._getContentSelectionMechanism = function (firstControlLayout) {
        return (React.createElement(CanvasToolboxHint_1.default, { ariaLabel: this._getToolboxHintAccessibleTitle(), layout: firstControlLayout, type: 2  }));
    };
    Object.defineProperty(CanvasSection.prototype, "_dragDisallowedAreaTag", {
        get: function () {
            return undefined;
        },
        enumerable: true,
        configurable: true
    });
    CanvasSection.prototype._getToolboxHintAccessibleTitle = function () {
        var section = this.props.section;
        var columnNo = '';
        try {
            switch (section.index) {
                case 1:
                    columnNo = CanvasStrings_resx_1.default.ToolboxHintColumnOne;
                    break;
                case 2:
                    columnNo = CanvasStrings_resx_1.default.ToolboxHintColumnTwo;
                    break;
                case 3:
                    columnNo = CanvasStrings_resx_1.default.ToolboxHintColumnThree;
                    break;
                default:
                    throw ('Unexpected Error');
            }
        }
        catch (err) {
            sp_telemetry_1._TraceLogger.logError(CanvasSection._logSource, err, "Canvas section has undefined index");
        }
        return odsp_utilities_bundle_1.StringHelper.format(CanvasStrings_resx_1.default.ToolboxHintTitleWithLayout, columnNo);
    };
    CanvasSection.contextTypes = {
        store: React.PropTypes.object.isRequired
    };
    CanvasSection._logSource = sp_telemetry_1._LogSource.create('CanvasSection');
    CanvasSection._spacerDividerHideToolbarButtonsKillSwitch = sp_core_library_1.Guid.parse('4634224d-b0bd-4101-b0ce-ddd4c7a7be07');
    return CanvasSection;
}(React.Component));
exports.default = CanvasSection;


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var CKTextEditor_1 = __webpack_require__(48);
var sp_core_library_1 = __webpack_require__(5);
var sp_telemetry_1 = __webpack_require__(6);
var CanvasStore_1 = __webpack_require__(15);
var CanvasLayout_1 = __webpack_require__(21);
var CanvasControlType_1 = __webpack_require__(7);
var sp_lodash_subset_1 = __webpack_require__(12);
var ToolbarButton_1 = __webpack_require__(34);
var ToolbarSubmenu_1 = __webpack_require__(115);
var sp_webpart_base_1 = __webpack_require__(16);
var BaseRte_1 = __webpack_require__(49);
var SPRteCKEditorConfiguration_1 = __webpack_require__(116);
var office_ui_fabric_react_1 = __webpack_require__(2);
var RteStrings_resx_1 = __webpack_require__(22);
var BaseRte_2 = __webpack_require__(49);
var SPRte = (function (_super) {
    tslib_1.__extends(SPRte, _super);
    function SPRte(props) {
        var _this = _super.call(this, props, { editor: CKTextEditor_1.default, config: new SPRteCKEditorConfiguration_1.default, loader: CKTextEditor_1.default.moduleLoader }) || this;
        _this.TAG_NAME = 'Canvas.';
        _this._REMOVE_EXTRALINE_REGEX = new RegExp(/\n/g);
        _this._restoreScrollTopOnNextFocus = false;
        _this._isPasting = false;
        _this._handleScroll = _this._async.debounce(_this._handleScroll, 100);
        return _this;
    }
    SPRte.prototype.componentDidMount = function () {
        _super.prototype.componentDidMount.call(this);
        if (CanvasStore_1.default.isRTESettingsFlightEnabled) {
            this._loadAndInstantiatePropertyPaneControl();
        }
    };
    SPRte.prototype.componentDidUpdate = function (prevProps, prevState) {
        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);
        if (this.state.displayMode === sp_core_library_1.DisplayMode.Edit && this.context.store && this.context.store.scrollableParent) {
            this._formattingbar ?
                this.context.store.scrollableParent.addEventListener('scroll', this._handleScroll) :
                this.context.store.scrollableParent.removeEventListener('scroll', this._handleScroll);
        }
        if (CanvasStore_1.default.isRTESettingsFlightEnabled &&
            !this._isRTESelected &&
            !this.state.isFormattingBarHidden &&
            this._isPropertyPaneOpen) {
            this._updateFormattingBar(true);
        }
        if (CanvasStore_1.default.isRTESettingsFlightEnabled &&
            !this.state.currentSubmenuOpen &&
            this._isPropertyPaneOpen &&
            this._isRTESelected) {
            this._changePropertyPaneState(sp_webpart_base_1.PropertyPaneState.Refresh);
        }
    };
    SPRte.prototype.focus = function () {
        this._currentScrollTop = this.context.store.scrollableParent.scrollTop;
        _super.prototype.focus.call(this);
        this.context.store.scrollableParent.scrollTop = this._currentScrollTop;
        if (!sp_core_library_1._SPKillSwitch.isActivated(sp_core_library_1.Guid.tryParse('c0d8bc0f-83e7-4ed7-ae7a-ffc4157b3a23'), '11/9/2017', 'DelayedFocusOnEditor') &&
            CanvasStore_1.default.isRTESettingsFlightEnabled &&
            this._isPropertyPaneOpen) {
            this._setDelayedFocus();
        }
    };
    SPRte.prototype._createNewEditor = function (innerHTML, startupFocus) {
        return this._options.editor.createNewEditor(this._config, innerHTML, this._editorElement, this._handleSelectionChange, this._handleTextChange.bind(this), startupFocus, this._onImagePaste.bind(this), this._onPaste.bind(this), this._onContextualMenu.bind(this));
    };
    SPRte.prototype._onImagePaste = function (isImageValid, imageBlob, innerHTML) {
        _super.prototype._onImagePaste.call(this, isImageValid, imageBlob, innerHTML);
        if (isImageValid) {
            this._updateFormattingBar(true, true);
            this._createImageWebPartAndSplitRTE(innerHTML, imageBlob, this.props.position, this.props.id);
        }
    };
    SPRte.prototype._postEditorCreatedHandlerComplete = function () {
        if (!CanvasStore_1.default.isRTESettingsFlightEnabled) {
            this.context.store.webPartManager.setPropertyPaneState(undefined);
        }
        if (!this.props.addedFromPersistedData) {
            this.focus();
        }
    };
    SPRte.prototype._closeLinkDialog = function () {
        this._restoreScrollTopOnNextFocus = true;
        this.context.store.scrollableParent.scrollTop = this._currentScrollTop;
        _super.prototype._closeLinkDialog.call(this);
    };
    SPRte.prototype._openLinkDialog = function (defaultAddress) {
        if (defaultAddress === void 0) { defaultAddress = ''; }
        _super.prototype._openLinkDialog.call(this, defaultAddress);
        this._currentScrollTop = this.context.store.scrollableParent.scrollTop;
    };
    SPRte.prototype._restoreOnFocus = function () {
        var restore = _super.prototype._restoreOnFocus.call(this);
        if (this._restoreScrollTopOnNextFocus && this._currentScrollTop) {
            this._restoreScrollTopOnNextFocus = false;
            this.context.store.scrollableParent.scrollTop = this._currentScrollTop;
            restore = true;
        }
        return restore;
    };
    SPRte.prototype._handleTextChange = function () {
        _super.prototype._handleTextChange.call(this);
        if (this._isPasting) {
            this._onAfterPaste();
        }
        if (this.state.displayMode === sp_core_library_1.DisplayMode.Edit && this.props.onChange) {
            this.props.onChange();
        }
    };
    SPRte.prototype._formattingBarButtons = function () {
        var _this = this;
        if (CanvasStore_1.default.isRTESettingsFlightEnabled) {
            var alignButtons = [
                this._getFormatButtonProps('alignLeft', this.getFormatHandler(BaseRte_2.Format.AlignLeft)),
                this._getFormatButtonProps('alignCenter', this.getFormatHandler(BaseRte_2.Format.AlignCenter)),
                this._getFormatButtonProps('alignRight', this.getFormatHandler(BaseRte_2.Format.AlignRight))
            ];
            var bulletButtons = [
                this._getFormatButtonProps('bullet', this.getFormatHandler(BaseRte_2.Format.Bullet)),
                this._getFormatButtonProps('list', this.getFormatHandler(BaseRte_2.Format.List))
            ];
            var buttons = [
                React.createElement(ToolbarSubmenu_1.default, { a11yManagerId: this.props.a11yManagerId, key: 'format', buttons: this._formatSubmenuButtons, isOpen: this.state.currentSubmenuOpen === 'format', isWide: true, onOpen: function () { _this._isSelectionChangeFromToolbar = true; _this.setState({ currentSubmenuOpen: 'format' }); }, onClose: this._handleCloseSubmenu, onBlur: this._handleFormattingBarBlur }),
                React.createElement(ToolbarButton_1.default, tslib_1.__assign({}, this._getFormatButtonProps('bold', this.getFormatHandler(BaseRte_2.Format.Bold)))),
                React.createElement(ToolbarButton_1.default, tslib_1.__assign({}, this._getFormatButtonProps('italic', this.getFormatHandler(BaseRte_2.Format.Italic)))),
                React.createElement(ToolbarButton_1.default, tslib_1.__assign({}, this._getFormatButtonProps('underline', this.getFormatHandler(BaseRte_2.Format.Underline)))),
                React.createElement(ToolbarSubmenu_1.default, { a11yManagerId: this.props.a11yManagerId, key: 'align', buttons: alignButtons, isOpen: this.state.currentSubmenuOpen === 'align', onOpen: function () { _this._isSelectionChangeFromToolbar = true; _this.setState({ currentSubmenuOpen: 'align' }); }, onClose: this._handleCloseSubmenu, onBlur: this._handleFormattingBarBlur }),
                React.createElement(ToolbarSubmenu_1.default, { a11yManagerId: this.props.a11yManagerId, key: 'bullet', buttons: bulletButtons, isOpen: this.state.currentSubmenuOpen === 'bullet', onOpen: function () { _this._isSelectionChangeFromToolbar = true; _this.setState({ currentSubmenuOpen: 'bullet' }); }, onClose: this._handleCloseSubmenu, onBlur: this._handleFormattingBarBlur }),
                React.createElement(ToolbarButton_1.default, tslib_1.__assign({}, this._getFormatButtonProps('link', this._handleLink))),
                React.createElement(ToolbarButton_1.default, { key: 'more', canBeActive: false, fabricIconKey: 'More', onClick: this._openPropertyPane, title: RteStrings_resx_1.default.FormattingBarMoreButtonTitle, automationId: 'more-button', onBlur: this._handleFormattingBarBlur })
            ];
            return buttons;
        }
        return _super.prototype._formattingBarButtons.call(this);
    };
    Object.defineProperty(SPRte.prototype, "_isPropertyPaneOpen", {
        get: function () {
            return this.context.store.webPartManager.isPropertyPaneOpen();
        },
        enumerable: true,
        configurable: true
    });
    SPRte.prototype._updateFormattingBar = function (isHidden, forceHide) {
        if (!this._editorElement) {
            return;
        }
        var updatePosition = true;
        var newState = {
            formattingBarPosition: {
                left: SPRte._TOOLBAR_DEFAULT_POSITION.left,
                top: SPRte._TOOLBAR_DEFAULT_POSITION.top,
                position: SPRte._TOOLBAR_DEFAULT_POSITION.position,
                right: SPRte._TOOLBAR_DEFAULT_POSITION.right
            },
            isFormattingBarHidden: isHidden
        };
        if (isHidden && this._formattingbarElement) {
            if (!forceHide && this._editableDiv && document.activeElement && document.activeElement === this._editableDiv) {
                isHidden = false;
            }
            else {
                var buttonNodes = this._formattingbarElement.querySelectorAll('.ToolbarButton');
                for (var i = 0; i < buttonNodes.length; i++) {
                    if (this._isSelectionChangeFromToolbar || document.activeElement.isEqualNode(buttonNodes[i])) {
                        this._isSelectionChangeFromToolbar = false;
                        newState.isFormattingBarHidden = false;
                        newState.formattingBarPosition = this.state.formattingBarPosition;
                        isHidden = false;
                        updatePosition = false;
                        break;
                    }
                }
            }
            if (isHidden && !document.activeElement.isContentEditable) {
                window.getSelection().removeAllRanges();
            }
        }
        if (!isHidden) {
            newState.isFormattingBarHidden = false;
            if (updatePosition) {
                newState.formattingBarPosition = this._getFormattingBarPosition();
            }
        }
        this.setState(newState);
    };
    SPRte.prototype._onBeforePaste = function () {
        this._currentScrollTop = this.context.store.scrollableParent.scrollTop;
        this._isPasting = true;
    };
    SPRte.prototype._handleScroll = function () {
        if (this.state.formattingBarPosition) {
            var isSticky = this.state.formattingBarPosition.position === 'fixed';
            if (this._shouldFormattingBarStick() ? !isSticky : isSticky) {
                var newState = {
                    formattingBarPosition: this._getFormattingBarPosition(),
                    isLinkDialogOpen: false
                };
                this.setState(newState);
            }
        }
    };
    SPRte.prototype._getFormattingBarPosition = function () {
        var floatRight = (this._isRtl && !this._isRTEInLastColumn()) ||
            (!this._isRtl && this._isRTEInLastColumn());
        var left = floatRight ? undefined : SPRte._TOOLBAR_DEFAULT_POSITION.left;
        var top = SPRte._TOOLBAR_DEFAULT_POSITION.top;
        var right = floatRight ? 0 : SPRte._TOOLBAR_DEFAULT_POSITION.right;
        var position = 'absolute';
        var isFloating = false;
        if (this._formattingbarElement) {
            if (this._currentSelection && this._currentSelection.start !== this._currentSelection.end) {
                var startBounds = this._editor.getBounds(this._currentSelection.start);
                var endBounds = this._editor.getBounds(Math.max(0, this._currentSelection.end - 1));
                if (startBounds.top === endBounds.top) {
                    isFloating = true;
                    endBounds.left = startBounds.left <= endBounds.left ? endBounds.left : this._editorElement.offsetWidth;
                    var toolbarLeft = (startBounds.left + endBounds.left) / 2 - this._formattingbarWidth / 2;
                    var controlZoneWidth = this._editorElement.offsetWidth + SPRte._CONTROLZONE_PADDING_HORIZONTAL * 2;
                    left = toolbarLeft + this._formattingbarWidth <= controlZoneWidth ?
                        Math.max(toolbarLeft, SPRte._TOOLBAR_DEFAULT_POSITION.left) :
                        controlZoneWidth - this._formattingbarWidth;
                    top = startBounds.top < SPRte._LINE_HEIGHT ?
                        SPRte._TOOLBAR_DEFAULT_POSITION.top :
                        startBounds.top + SPRte._TOOLBAR_DEFAULT_POSITION.top;
                    position = 'absolute';
                    if (left === 0) {
                        if (this._isRtl && !this._isRTEInLastColumn()) {
                            right = undefined;
                        }
                        else if (this._isRTEInLastColumn()) {
                            left = undefined;
                            right = 0;
                        }
                    }
                }
            }
            if (!isFloating && this._shouldFormattingBarStick()) {
                if (floatRight) {
                    right = right + window.innerWidth -
                        this._editorElement.getBoundingClientRect().right - SPRte._CONTROLZONE_PADDING_HORIZONTAL;
                }
                else {
                    left = SPRte._TOOLBAR_DEFAULT_POSITION.left +
                        this._editorElement.getBoundingClientRect().left - SPRte._CONTROLZONE_PADDING_HORIZONTAL;
                }
                top = this.context.store.scrollableParent.getBoundingClientRect().top + SPRte._TOP_OFFSET;
                position = 'fixed';
            }
        }
        return { left: left, top: top, position: position, right: right };
    };
    Object.defineProperty(SPRte.prototype, "_isRTESelected", {
        get: function () {
            return this.context.store.selectedControlId === this.props.id;
        },
        enumerable: true,
        configurable: true
    });
    SPRte.prototype._setDelayedFocus = function () {
        var _this = this;
        this._async.setTimeout((function () { return _this._focusCore(); }), 0);
    };
    SPRte.prototype._onAfterPaste = function () {
        var _this = this;
        sp_telemetry_1._EngagementLogger.logEvent(this.TAG_NAME + 'CopyPaste');
        this._isPasting = false;
        this.context.store.scrollableParent.scrollTop = this._currentScrollTop;
        window.setTimeout((function () {
            _this.context.store.scrollableParent.scrollTop = _this._currentScrollTop;
            var range = _this._editor.getSelection();
            if (range) {
                var viewportHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
                var cursorTop = _this._editor.getBounds(range.start).top;
                var editorTop = _this._editableDiv.getBoundingClientRect().top;
                if (editorTop + cursorTop > viewportHeight) {
                    _this.context.store.scrollableParent.scrollTop =
                        _this._currentScrollTop + editorTop + cursorTop - viewportHeight + SPRte._LINE_HEIGHT;
                }
            }
        }), 10);
    };
    SPRte.prototype._shouldFormattingBarStick = function () {
        if (this._editorElement) {
            var scrollableParentTop = this.context.store.scrollableParent &&
                this.context.store.scrollableParent.getBoundingClientRect().top;
            var rteRect = this._editorElement.getBoundingClientRect();
            return rteRect.top <= scrollableParentTop &&
                scrollableParentTop <= rteRect.bottom;
        }
    };
    SPRte.prototype._isRTEInLastColumn = function () {
        return this.props.position &&
            (this.props.position.sectionIndex === 3 || this.props.position.sectionIndex === 2);
    };
    Object.defineProperty(SPRte.prototype, "_isPropertyPaneLoadedAndSelected", {
        get: function () {
            return this._sprtePropertyPane && this._isRTESelected;
        },
        enumerable: true,
        configurable: true
    });
    SPRte.prototype._createImageWebPartAndSplitRTE = function (innerHTML, imageSource, position, id) {
        var itemPropsRTE = {
            a11yManagerId: this.context.store.a11yManager.id,
            controlType: CanvasControlType_1.default.RTE,
            displayMode: this.state.displayMode,
            id: sp_core_library_1.Guid.newGuid().toString(),
            position: CanvasLayout_1.default.undefinedControlPosition,
            innerHTML: innerHTML,
            serviceScope: this.props.serviceScope
        };
        var imageWebPartManifestId = 'd1d91016-032f-456d-98a4-721247c305e8';
        var itemPropsImageWebPart = sp_lodash_subset_1.cloneDeep(this.context.store.getToolBoxItem(imageWebPartManifestId));
        if (itemPropsImageWebPart) {
            itemPropsImageWebPart.webPartData.properties.imageBlob = imageSource;
            itemPropsImageWebPart.webPartData.id = sp_core_library_1.Guid.newGuid().toString();
            this._addRTEAndImageWebPart(position, itemPropsRTE, itemPropsImageWebPart);
        }
    };
    SPRte.prototype._addRTEAndImageWebPart = function (position, itemPropsRTE, itemPropsImageWebPart) {
        var controls = this.context.store.canvasLayout.fetchAllControls();
        var currentIndex = sp_lodash_subset_1.findIndex(controls, (function (control) {
            return (position.zoneIndex === control.position.zoneIndex &&
                position.sectionIndex === control.position.sectionIndex &&
                position.controlIndex === control.position.controlIndex &&
                position.sectionFactor === control.position.sectionFactor);
        }));
        var nextIndex = currentIndex + 1;
        var nextControlPosition;
        if (nextIndex < controls.length &&
            controls[nextIndex].position.zoneIndex === position.zoneIndex &&
            controls[nextIndex].position.sectionIndex === position.sectionIndex) {
            nextControlPosition = controls[nextIndex].position;
            itemPropsImageWebPart.position = sp_lodash_subset_1.clone(nextControlPosition);
            this.context.store.addControlToCanvas(itemPropsImageWebPart, true);
            itemPropsRTE.position = sp_lodash_subset_1.clone(nextControlPosition);
            this._addRTEInCanvas(itemPropsRTE);
        }
        else {
            nextControlPosition = {
                zoneIndex: position.zoneIndex,
                sectionIndex: position.sectionIndex,
                sectionFactor: position.sectionFactor,
                controlIndex: position.controlIndex + 1
            };
            itemPropsRTE.position = sp_lodash_subset_1.clone(nextControlPosition);
            this._addRTEInCanvas(itemPropsRTE);
            itemPropsImageWebPart.position = sp_lodash_subset_1.clone(nextControlPosition);
            this.context.store.addControlToCanvas(itemPropsImageWebPart, true);
        }
    };
    SPRte.prototype._addRTEInCanvas = function (itemPropsRTE) {
        var innerHTML = itemPropsRTE.innerHTML.replace(this._REMOVE_EXTRALINE_REGEX, '');
        if (innerHTML !== SPRte._EMPTY_RTE_HTML) {
            this.context.store.addControlToCanvas(itemPropsRTE, true);
        }
    };
    SPRte.prototype._openPropertyPane = function () {
        this._changePropertyPaneState(sp_webpart_base_1.PropertyPaneState.Toggle);
    };
    SPRte.prototype._changePropertyPaneState = function (propertyPaneState) {
        if (this._isPropertyPaneLoadedAndSelected) {
            this.context.store.webPartManager.setPropertyPaneState(this.props.id, propertyPaneState);
        }
    };
    SPRte.prototype._loadAndInstantiatePropertyPaneControl = function () {
        var _this = this;
        if (!this._sprtePropertyPane) {
            return new Promise(function (resolve) {
                __webpack_require__.e/* require.ensure */(3).then((function (require) {
                    _this._sprtePropertyPane =
                        __webpack_require__(377).default;
                    resolve(_this._sprtePropertyPane);
                }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);
            }).then((function (sprtePropertyPane) {
                _this.context.store.webPartManager.setPropertyPaneControl(_this.props.id, new sprtePropertyPane(_this));
            }));
        }
    };
    SPRte.contextTypes = {
        store: React.PropTypes.object.isRequired
    };
    SPRte._TOOLBAR_DEFAULT_POSITION = {
        left: 0,
        top: -36,
        position: 'absolute',
        right: undefined
    };
    SPRte._CONTROLZONE_PADDING_HORIZONTAL = 8;
    SPRte._LINE_HEIGHT = 23;
    SPRte._TOP_OFFSET = 10;
    SPRte._EMPTY_RTE_HTML = '<p>&nbsp;</p>';
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], SPRte.prototype, "_postEditorCreatedHandlerComplete", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], SPRte.prototype, "_onBeforePaste", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], SPRte.prototype, "_handleScroll", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], SPRte.prototype, "_onAfterPaste", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], SPRte.prototype, "_openPropertyPane", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], SPRte.prototype, "_changePropertyPaneState", null);
    return SPRte;
}(BaseRte_1.BaseRte));
exports.default = SPRte;


/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var PagePicker_1 = __webpack_require__(247);
exports.PagePicker = PagePicker_1.default;


/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var odsp_utilities_bundle_1 = __webpack_require__(9);
var Utilities = (function () {
    function Utilities() {
    }
    Utilities.isTouchEnabled = function () {
        var platform = new odsp_utilities_bundle_1.PlatformDetection();
        return platform.isAndroid || platform.isIOS;
    };
    return Utilities;
}());
exports.default = Utilities;


/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(2);
var sp_a11y_1 = __webpack_require__(11);
var ToolbarButton_1 = __webpack_require__(34);
var office_ui_fabric_react_2 = __webpack_require__(2);
__webpack_require__(266);
var DISPLAYBUTTON = 'displayButton';
var ToolbarSubmenu = (function (_super) {
    tslib_1.__extends(ToolbarSubmenu, _super);
    function ToolbarSubmenu(props) {
        var _this = _super.call(this, props) || this;
        _this._hasExplicitActiveButton = false;
        if (props.a11yManagerId) {
            _this._a11yManager = sp_a11y_1.A11yManager.getInstanceById(props.a11yManagerId);
        }
        _this.state = {
            isOpen: props.isOpen
        };
        return _this;
    }
    ToolbarSubmenu.prototype.componentDidMount = function () {
        document.addEventListener('click', this._handleDocumentClick);
    };
    ToolbarSubmenu.prototype.componentDidUpdate = function (prevProps, prevState) {
        if (this._isKeyboardNav && !this.state.isOpen) {
            if (this._a11yManager) {
                this._a11yManager.focusTo(this._focusElement);
            }
            else {
                sp_a11y_1.Focus.focusTo(this._focusElement);
            }
            this._focusElement = undefined;
            this._isKeyboardNav = false;
        }
        if (this._isKeyboardNav && this.state.isOpen) {
            if (this._a11yManager) {
                this._a11yManager.focusInside(this._menuElement);
            }
            else {
                sp_a11y_1.Focus.focusInside(this._menuElement);
            }
            this._isKeyboardNav = false;
        }
    };
    ToolbarSubmenu.prototype.componentWillReceiveProps = function (nextProps) {
        if (this.props.isOpen !== nextProps.isOpen) {
            this.setState({ isOpen: nextProps.isOpen });
        }
    };
    ToolbarSubmenu.prototype.componentWillUnmount = function () {
        document.removeEventListener('click', this._handleDocumentClick);
    };
    ToolbarSubmenu.prototype.render = function () {
        var openedCssClass = this.state.isOpen ? 'is-open' : '';
        var wideCssClass = this.props.isWide ? 'ToolbarSubmenu--wide' : '';
        var activeButton = this._getActiveButton();
        this._bindButtonClickHandlers();
        var buttonElements = [];
        for (var _i = 0, _a = this.props.buttons; _i < _a.length; _i++) {
            var buttonProps = _a[_i];
            buttonProps.tabIndex = this.state.isOpen ? 0 : -1;
            if (buttonProps === activeButton) {
                buttonProps.isActive = true;
            }
            buttonElements.push(React.createElement(ToolbarButton_1.default, tslib_1.__assign({}, buttonProps)));
        }
        return (React.createElement("div", { className: "ToolbarSubmenu " + openedCssClass + " " + wideCssClass },
            React.createElement(ToolbarButton_1.default, { className: 'ToolbarSubmenu-displayButton', fabricIconKey: activeButton.fabricIconKey, iconClassName: activeButton.iconClassName, key: 'displayButton', onClick: this._handleClickOnDisplayButton, label: activeButton.label, tabIndex: this.state.isOpen ? -1 : 0, title: activeButton.title, onKeyDown: this._handleSubmenuItemsKeyDown, automationId: DISPLAYBUTTON, onBlur: this.props.onBlur }),
            React.createElement(office_ui_fabric_react_1.Icon, { className: 'ToolbarSubmenu-caret', iconName: 'CaretDownSolid8' }),
            React.createElement(office_ui_fabric_react_1.FocusZone, { isCircularNavigation: true },
                React.createElement("div", { role: 'presentation', className: 'ToolbarSubmenu-menuItems', ref: this._resolveRef('_menuElement'), onKeyDown: this._handleSubmenuKeyDown, "data-automation-id": 'subMenuContainer' }, buttonElements))));
    };
    ToolbarSubmenu.prototype._bindButtonClickHandlers = function () {
        for (var _i = 0, _a = this.props.buttons; _i < _a.length; _i++) {
            var buttonProps = _a[_i];
            buttonProps.onClick = this._handleOnButtonClick.bind(this, buttonProps.onClick);
        }
    };
    ToolbarSubmenu.prototype._getActiveButton = function () {
        this._hasExplicitActiveButton = false;
        for (var _i = 0, _a = this.props.buttons; _i < _a.length; _i++) {
            var button = _a[_i];
            if (button.isActive) {
                this._hasExplicitActiveButton = true;
                return button;
            }
        }
        return this.props.buttons[0];
    };
    ToolbarSubmenu.prototype._handleSubmenuKeyDown = function (e) {
        if (this.state.isOpen &&
            (e.key === 'ArrowRight' || e.key === 'ArrowLeft')) {
            this._isKeyboardNav = true;
            this._handleCloseSubmenu();
        }
    };
    ToolbarSubmenu.prototype._handleSubmenuItemsKeyDown = function (e) {
        if (e.key === 'ArrowDown') {
            this._isKeyboardNav = true;
            this._handleOpenSubmenu();
        }
    };
    ToolbarSubmenu.prototype._handleClickOnDisplayButton = function () {
        if (this.state.isOpen) {
            this._handleCloseSubmenu();
        }
        else {
            this._handleOpenSubmenu();
        }
    };
    ToolbarSubmenu.prototype._handleOpenSubmenu = function () {
        this._focusElement = document.activeElement;
        this.props.onOpen();
        this.setState({ isOpen: true });
    };
    ToolbarSubmenu.prototype._handleCloseSubmenu = function (isDocumentClick) {
        this.setState({ isOpen: false });
        this.props.onClose(isDocumentClick);
    };
    ToolbarSubmenu.prototype._handleOnButtonClick = function (onClickCallback) {
        onClickCallback();
        this._handleCloseSubmenu();
    };
    ToolbarSubmenu.prototype._handleDocumentClick = function (evt) {
        var currentTarget = evt.target;
        if (this.state.isOpen &&
            currentTarget.getAttribute('data-automation-id') !== DISPLAYBUTTON &&
            currentTarget.parentElement &&
            currentTarget.parentElement.getAttribute('data-automation-id') !== DISPLAYBUTTON) {
            this._handleCloseSubmenu(true);
        }
    };
    tslib_1.__decorate([
        office_ui_fabric_react_2.autobind
    ], ToolbarSubmenu.prototype, "_bindButtonClickHandlers", null);
    tslib_1.__decorate([
        office_ui_fabric_react_2.autobind
    ], ToolbarSubmenu.prototype, "_handleSubmenuKeyDown", null);
    tslib_1.__decorate([
        office_ui_fabric_react_2.autobind
    ], ToolbarSubmenu.prototype, "_handleSubmenuItemsKeyDown", null);
    tslib_1.__decorate([
        office_ui_fabric_react_2.autobind
    ], ToolbarSubmenu.prototype, "_handleClickOnDisplayButton", null);
    tslib_1.__decorate([
        office_ui_fabric_react_2.autobind
    ], ToolbarSubmenu.prototype, "_handleOpenSubmenu", null);
    tslib_1.__decorate([
        office_ui_fabric_react_2.autobind
    ], ToolbarSubmenu.prototype, "_handleCloseSubmenu", null);
    tslib_1.__decorate([
        office_ui_fabric_react_2.autobind
    ], ToolbarSubmenu.prototype, "_handleOnButtonClick", null);
    tslib_1.__decorate([
        office_ui_fabric_react_2.autobind
    ], ToolbarSubmenu.prototype, "_handleDocumentClick", null);
    return ToolbarSubmenu;
}(office_ui_fabric_react_2.BaseComponent));
exports.default = ToolbarSubmenu;


/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var RteStrings_resx_1 = __webpack_require__(22);
var SPRteCKEditorConfiguration = (function () {
    function SPRteCKEditorConfiguration() {
        this._supportedFormatsArray = [
            {
                key: 'bold',
                editorKey: 'bold',
                browserKey: 'bold',
                isBlockStyle: false,
                isLine: false,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'Bold',
                    shortcut: 'Ctrl+B',
                    title: RteStrings_resx_1.default.FormattingBarBoldButtonTitle
                }
            },
            {
                key: 'italic',
                editorKey: 'italic',
                browserKey: 'italic',
                isBlockStyle: false,
                isLine: false,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'Italic',
                    shortcut: 'Ctrl+I',
                    title: RteStrings_resx_1.default.FormattingBarItalicButtonTitle
                }
            },
            {
                key: 'underline',
                editorKey: 'underline',
                browserKey: 'underline',
                isBlockStyle: false,
                isLine: false,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'Underline',
                    shortcut: 'Ctrl+U',
                    title: RteStrings_resx_1.default.FormattingBarUnderlineButtonTitle
                }
            },
            {
                key: 'link',
                editorKey: 'link',
                isBlockStyle: false,
                isLine: false,
                isEditorNative: true,
                masks: ['underline'],
                button: {
                    canBeActive: true,
                    fabricIconKey: 'Link',
                    shortcut: 'Ctrl+K',
                    title: RteStrings_resx_1.default.FormattingBarLinkButtonTitle
                }
            },
            {
                key: 'alignLeft',
                editorKey: 'justifyleft',
                browserKey: 'justifyLeft',
                isBlockStyle: false,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'AlignLeft',
                    title: RteStrings_resx_1.default.FormattingBarAlignLeftButtonTitle
                }
            },
            {
                key: 'alignCenter',
                editorKey: 'justifycenter',
                browserKey: 'justifyCenter',
                isBlockStyle: false,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'AlignCenter',
                    title: RteStrings_resx_1.default.FormattingBarAlignCenterButtonTitle
                }
            },
            {
                key: 'alignRight',
                editorKey: 'justifyright',
                browserKey: 'justifyRight',
                isBlockStyle: false,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'AlignRight',
                    title: RteStrings_resx_1.default.FormattingBarAlignRightButtonTitle
                }
            },
            {
                key: 'bullet',
                editorKey: 'bulletedlist',
                browserKey: 'insertUnorderedList',
                isBlockStyle: true,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'BulletedList',
                    title: RteStrings_resx_1.default.FormattingBarBulletListButtonTitle
                }
            },
            {
                key: 'list',
                editorKey: 'numberedlist',
                browserKey: 'insertOrderedList',
                isBlockStyle: true,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'NumberedList',
                    title: RteStrings_resx_1.default.FormattingBarNumberedListButtonTitle
                }
            },
            {
                key: 'h2',
                editorKey: 'heading2',
                isBlockStyle: true,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    title: RteStrings_resx_1.default.FormattingBarHeading2ButtonTitle,
                    label: RteStrings_resx_1.default.FormattingBarHeading2ButtonTitle,
                    className: 'ToolbarButton--h2'
                }
            },
            {
                key: 'h3',
                editorKey: 'heading3',
                isBlockStyle: true,
                isLine: true,
                isEditorNative: false,
                button: {
                    canBeActive: true,
                    title: RteStrings_resx_1.default.FormattingBarHeading3ButtonTitle,
                    label: RteStrings_resx_1.default.FormattingBarHeading3ButtonTitle,
                    className: 'ToolbarButton--h3'
                }
            },
            {
                key: 'h4',
                editorKey: 'heading4',
                isBlockStyle: true,
                isLine: true,
                isEditorNative: false,
                button: {
                    canBeActive: true,
                    title: RteStrings_resx_1.default.FormattingBarHeading4ButtonTitle,
                    label: RteStrings_resx_1.default.FormattingBarHeading4ButtonTitle,
                    className: 'ToolbarButton--h4'
                }
            },
            {
                key: 'blockquote',
                editorKey: 'blockquote',
                isBlockStyle: true,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    title: RteStrings_resx_1.default.FormattingBarQuoteButtonTitle,
                    label: RteStrings_resx_1.default.FormattingBarQuoteButtonTitle,
                    className: 'ToolbarButton--blockquote'
                }
            },
            {
                key: 'undo',
                editorKey: 'undo',
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    title: RteStrings_resx_1.default.UndoButtonTitle,
                    label: RteStrings_resx_1.default.UndoButtonTitle,
                    fabricIconKey: 'Undo'
                }
            },
            {
                key: 'redo',
                editorKey: 'redo',
                isEditorNative: true,
                button: {
                    title: RteStrings_resx_1.default.RedoButtonTitle,
                    label: RteStrings_resx_1.default.RedoButtonTitle,
                    fabricIconKey: 'Redo'
                }
            },
            {
                key: 'strike',
                editorKey: 'strike',
                isBlockStyle: false,
                isLine: false,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    title: RteStrings_resx_1.default.StrikeThroughButtonLabel,
                    label: RteStrings_resx_1.default.StrikeThroughButtonLabel,
                    fabricIconKey: 'Strikethrough'
                }
            },
            {
                key: 'subscript',
                editorKey: 'subscript',
                isBlockStyle: false,
                isLine: false,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    title: RteStrings_resx_1.default.SubscriptButtonLabel,
                    label: RteStrings_resx_1.default.SubscriptButtonLabel,
                    fabricIconKey: 'Subscript'
                }
            },
            {
                key: 'superscript',
                editorKey: 'superscript',
                isBlockStyle: false,
                isLine: false,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    title: RteStrings_resx_1.default.SuperscriptButtonLabel,
                    label: RteStrings_resx_1.default.SuperscriptButtonLabel,
                    fabricIconKey: 'Superscript'
                }
            },
            {
                key: 'justify',
                editorKey: 'justifyblock',
                isBlockStyle: false,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    title: RteStrings_resx_1.default.JustifyButtonLabel,
                    label: RteStrings_resx_1.default.JustifyButtonLabel,
                    fabricIconKey: 'CollapseMenu'
                }
            },
            {
                key: 'indent',
                editorKey: 'indent',
                isBlockStyle: false,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    title: RteStrings_resx_1.default.IncreaseIndentButtonLabel,
                    label: RteStrings_resx_1.default.IncreaseIndentButtonLabel,
                    fabricIconKey: 'IncreaseIndentLegacy'
                }
            },
            {
                key: 'outdent',
                editorKey: 'outdent',
                isBlockStyle: false,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    title: RteStrings_resx_1.default.DecreaseIndentButtonLabel,
                    label: RteStrings_resx_1.default.DecreaseIndentButtonLabel,
                    fabricIconKey: 'DecreaseIndentLegacy'
                }
            },
            {
                key: 'customTable',
                editorKey: 'customTable',
                isEditorNative: true,
                button: {
                    title: RteStrings_resx_1.default.TableButtonLabel,
                    label: RteStrings_resx_1.default.TableButtonLabel
                }
            },
            {
                key: 'rowInsertBefore',
                editorKey: 'rowInsertBefore',
                isEditorNative: true,
                button: {
                    title: RteStrings_resx_1.default.InsertRowBeforeButtonLabel,
                    label: RteStrings_resx_1.default.InsertRowBeforeButtonLabel
                }
            },
            {
                key: 'rowInsertAfter',
                editorKey: 'rowInsertAfter',
                isEditorNative: true,
                button: {
                    title: RteStrings_resx_1.default.InsertRowAfterButtonLabel,
                    label: RteStrings_resx_1.default.InsertRowAfterButtonLabel
                }
            },
            {
                key: 'columnInsertBefore',
                editorKey: 'columnInsertBefore',
                isEditorNative: true,
                button: {
                    title: RteStrings_resx_1.default.InsertColumnLeftButtonLabel,
                    label: RteStrings_resx_1.default.InsertColumnLeftButtonLabel
                }
            },
            {
                key: 'columnInsertAfter',
                editorKey: 'columnInsertAfter',
                isEditorNative: true,
                button: {
                    title: RteStrings_resx_1.default.InsertColumnRightButtonLabel,
                    label: RteStrings_resx_1.default.InsertColumnRightButtonLabel
                }
            },
            {
                key: 'rowDelete',
                editorKey: 'rowDelete',
                isEditorNative: true,
                button: {
                    title: RteStrings_resx_1.default.DeleteRowButtonLabel,
                    label: RteStrings_resx_1.default.DeleteRowButtonLabel
                }
            },
            {
                key: 'columnDelete',
                editorKey: 'columnDelete',
                isEditorNative: true,
                button: {
                    title: RteStrings_resx_1.default.DeleteColumnButtonLabel,
                    label: RteStrings_resx_1.default.DeleteColumnButtonLabel
                }
            },
            {
                key: 'tableDelete',
                editorKey: 'tableDelete',
                isEditorNative: true,
                button: {
                    title: RteStrings_resx_1.default.DeleteTableButtonLabel,
                    label: RteStrings_resx_1.default.DeleteTableButtonLabel
                }
            },
            {
                key: 'unlink',
                editorKey: 'unlink',
                isEditorNative: false,
                button: {
                    title: RteStrings_resx_1.default.FormattingBarUnlinkButtonTitle,
                    label: RteStrings_resx_1.default.FormattingBarUnlinkButtonTitle,
                    fabricIconKey: 'RemoveLink'
                }
            }
        ];
        this._formats = new Map();
        for (var _i = 0, _a = this._supportedFormatsArray; _i < _a.length; _i++) {
            var format = _a[_i];
            this._formats.set(format.key, format);
        }
        var maskingFormats = this._supportedFormatsArray.filter((function (format) { return !!format.masks; }));
        for (var _b = 0, maskingFormats_1 = maskingFormats; _b < maskingFormats_1.length; _b++) {
            var maskingFormat = maskingFormats_1[_b];
            for (var _c = 0, _d = maskingFormat.masks; _c < _d.length; _c++) {
                var maskedFormatKey = _d[_c];
                var maskedFormat = this._formats.get(maskedFormatKey);
                if (!maskedFormat.maskedBy) {
                    maskedFormat.maskedBy = [maskingFormat.key];
                }
                else {
                    maskedFormat.maskedBy.push(maskingFormat.key);
                }
            }
        }
    }
    Object.defineProperty(SPRteCKEditorConfiguration.prototype, "editorElementClassName", {
        get: function () {
            return 'cke_editable';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPRteCKEditorConfiguration.prototype, "formats", {
        get: function () {
            return this._formats;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPRteCKEditorConfiguration.prototype, "supportedFormatsArray", {
        get: function () {
            return this._supportedFormatsArray;
        },
        enumerable: true,
        configurable: true
    });
    return SPRteCKEditorConfiguration;
}());
exports.default = SPRteCKEditorConfiguration;


/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var ReactDOM = __webpack_require__(17);
var sp_telemetry_1 = __webpack_require__(6);
var office_ui_fabric_react_1 = __webpack_require__(2);
var sp_core_library_1 = __webpack_require__(5);
var sp_core_library_2 = __webpack_require__(5);
var ICanvasZone_1 = __webpack_require__(118);
var CanvasA11yConstants_1 = __webpack_require__(44);
var Flights_1 = __webpack_require__(28);
var KillSwitches_1 = __webpack_require__(45);
__webpack_require__(285);
var TOOLBOX_HORIZONTAL_POSITION = 30;
var HINT_TOOLBOX_SPACER = 4;
var TOOLBOX_HEIGHT = 330;
var TOOLBOX_MARGIN_TOP = 26;
var CanvasToolboxHint = (function (_super) {
    tslib_1.__extends(CanvasToolboxHint, _super);
    function CanvasToolboxHint(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this._isRTL = office_ui_fabric_react_1.getRTL;
        _this.state = CanvasToolboxHint._getState(props);
        return _this;
    }
    CanvasToolboxHint._getState = function (props) {
        return {
            isVisible: props.isVisible
        };
    };
    CanvasToolboxHint.prototype.componentDidMount = function () {
        this._domNode = ReactDOM.findDOMNode(this);
        if (this.props.shouldFocus) {
            this.focus();
        }
    };
    CanvasToolboxHint.prototype.componentDidUpdate = function () {
        this.componentDidMount();
    };
    CanvasToolboxHint.prototype.componentWillReceiveProps = function (nextProps) {
        if (nextProps.isVisible !== this.props.isVisible) {
            this.setState(CanvasToolboxHint._getState(nextProps));
        }
    };
    CanvasToolboxHint.prototype.render = function () {
        var _this = this;
        var _a = this.props, ariaLabel = _a.ariaLabel, adjacentZoneState = _a.adjacentZoneState, shouldCenterAlign = _a.shouldCenterAlign, type = _a.type, layout = _a.layout;
        var _b = this.context.store.toolboxProps, controlPosition = _b.controlPosition, isOpen = _b.isOpen;
        var hintClassName = office_ui_fabric_react_1.css('CanvasToolboxHint', {
            'is-visible': this.state.isVisible,
            'zone-selected': adjacentZoneState === ICanvasZone_1.CanvasZoneSelectionState.Selected ||
                (controlPosition.sectionIndex === layout.sectionIndex && isOpen),
            'zone-active': adjacentZoneState === ICanvasZone_1.CanvasZoneSelectionState.Active
        });
        var hintButtonWrapperClassName;
        var plusButtonClassName;
        if (Flights_1.default.isHintDiscoverabilityEnabled) {
            hintButtonWrapperClassName = office_ui_fabric_react_1.css('CanvasToolboxHint-plusButtonWrapper', {
                'centerAlign': shouldCenterAlign
            });
            var buttonTypeClassName = void 0;
            switch (type) {
                case 1 :
                    hintClassName = office_ui_fabric_react_1.css(hintClassName, 'ZoneHint');
                    buttonTypeClassName = 'CanvasToolboxHint-plusButtonZone';
                    break;
                case 2 :
                    hintClassName = office_ui_fabric_react_1.css(hintClassName, 'SectionHint');
                    buttonTypeClassName = 'CanvasToolboxHint-plusButtonSection';
                    break;
                case 0 :
                default:
                    break;
            }
            plusButtonClassName = office_ui_fabric_react_1.css('CanvasToolboxHint-plusButton', buttonTypeClassName);
        }
        else {
            hintButtonWrapperClassName = office_ui_fabric_react_1.css('CanvasToolboxHint-plusButtonWrapperOriginal', {
                'centerAlign': shouldCenterAlign
            });
            plusButtonClassName = 'CanvasToolboxHint-plusButtonOriginal';
        }
        return this.context.store.displayMode === sp_core_library_2.DisplayMode.Edit && (React.createElement("button", { "aria-haspopup": true, "aria-label": ariaLabel, className: hintClassName, "data-automation-id": 'toolboxHintButton', "data-sp-a11y-class": CanvasA11yConstants_1.canvasA11yClasses.toolboxHint, onClick: this._handleClick, title: ariaLabel },
            React.createElement("div", { className: hintButtonWrapperClassName },
                React.createElement("div", { className: plusButtonClassName, ref: function (ref) { return _this._canvasToolPlusButton = ref; } },
                    React.createElement(office_ui_fabric_react_1.Icon, { iconName: 'Add' })))));
    };
    CanvasToolboxHint.prototype.focus = function () {
        var _this = this;
        window.setTimeout((function () {
            if (_this._domNode) {
                _this._domNode.focus();
            }
        }), 0);
    };
    CanvasToolboxHint.prototype._handleClick = function () {
        var _this = this;
        this.context.store.selectedControlId = undefined;
        if (this.props.layout && this.props.layout.zoneIndex) {
            this.context.store.selectedZoneIndex = this.props.layout.zoneIndex;
        }
        var logPrefix = this._isWebpartHint ? 'WebPart' : 'Section';
        sp_telemetry_1._EngagementLogger.logEvent(logPrefix + "Hint.Click");
        var _a = this._toolboxPosition, horizontalPosition = _a.horizontalPosition, verticalPosition = _a.verticalPosition;
        this.context.store.openToolbox(this.props.layout, verticalPosition, horizontalPosition, 
        this.props.isVisible ? undefined : this._handleToolboxClose);
        if (sp_core_library_1._SPKillSwitch.isActivated(sp_core_library_1.Guid.parse('de576315-7864-49c3-8d17-9ed24691535b'), '9/18/2017', 'DeferSetToolboxHintVisible')) {
            this.setState({
                isVisible: true
            });
        }
        else {
            setTimeout((function () { return _this.setState({
                isVisible: true
            }); }));
        }
    };
    CanvasToolboxHint.prototype._handleToolboxClose = function () {
        this.setState({
            isVisible: false
        });
        this.context.store.toolboxProps.isOpen = false;
    };
    Object.defineProperty(CanvasToolboxHint.prototype, "_isWebpartHint", {
        get: function () {
            return !!(this.props.layout && this.props.layout.sectionIndex);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasToolboxHint.prototype, "_toolboxPosition", {
        get: function () {
            if (this._domNode) {
                if (this._isWebpartHint) {
                    return this._webPartToolboxPosition;
                }
                else {
                    return this._sectionToolboxPosition;
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasToolboxHint.prototype, "_sectionToolboxPosition", {
        get: function () {
            var horizontalPosition, verticalPosition;
            verticalPosition = this._domNode.offsetTop;
            if (Flights_1.default.isHintDiscoverabilityEnabled) {
                horizontalPosition = TOOLBOX_HORIZONTAL_POSITION;
                verticalPosition -= TOOLBOX_HEIGHT / 3;
                var canvasTop = this.context.store.canvasElement.getBoundingClientRect().top;
                var canvasParentTop = this.context.store.scrollableParent.getBoundingClientRect().top;
                if (canvasTop >= canvasParentTop && verticalPosition < 0) {
                    verticalPosition = -TOOLBOX_MARGIN_TOP;
                }
            }
            else {
                var plusButton = this._canvasToolPlusButton;
                horizontalPosition = (plusButton && (!Flights_1.default.isToolboxLargeEnabled || !this._isRTL()))
                    ? plusButton.parentElement.offsetLeft : 0;
                if (horizontalPosition > 0) {
                    horizontalPosition = -horizontalPosition;
                }
            }
            return {
                horizontalPosition: horizontalPosition,
                verticalPosition: verticalPosition
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasToolboxHint.prototype, "_webPartToolboxPosition", {
        get: function () {
            var horizontalPosition, verticalPosition;
            var _a = this._domNode, clientWidth = _a.clientWidth, offsetTop = _a.offsetTop, offsetLeft = _a.offsetLeft, parentElement = _a.parentElement;
            var sectionContainer = this._domNode.parentElement;
            if (!KillSwitches_1.default.isCanvasZoneContainerKillswitchEnabled) {
                while (sectionContainer.offsetTop === 0 &&
                    !sectionContainer.classList.contains('CanvasZoneContainer') &&
                    sectionContainer.parentElement) {
                    sectionContainer = sectionContainer.parentElement;
                }
                verticalPosition = sectionContainer.offsetTop + offsetTop;
                if (Flights_1.default.isHintDiscoverabilityEnabled) {
                    verticalPosition = this._calculateWebPartToolboxVerticalPosition(verticalPosition);
                }
            }
            if (this._isRTL()) {
                var offsetRight = parentElement.offsetParent.clientWidth - clientWidth - parentElement.offsetLeft - offsetLeft;
                horizontalPosition = offsetRight + (clientWidth / 2);
            }
            else {
                horizontalPosition = offsetLeft + parentElement.offsetLeft + (clientWidth / 2);
            }
            return {
                horizontalPosition: horizontalPosition,
                verticalPosition: verticalPosition
            };
        },
        enumerable: true,
        configurable: true
    });
    CanvasToolboxHint.prototype._calculateWebPartToolboxVerticalPosition = function (initialPosition) {
        var verticalPosition = initialPosition;
        var bottom = 0, canvasTop = 0, top = 0;
        var _a = this.context.store, canvasElement = _a.canvasElement, scrollableParent = _a.scrollableParent;
        if (canvasElement) {
            canvasTop = canvasElement.getBoundingClientRect().top;
        }
        if (scrollableParent) {
            var scrollRect = scrollableParent.getBoundingClientRect();
            bottom = scrollRect.bottom;
            top = scrollRect.top;
        }
        var toolboxPosition = TOOLBOX_HEIGHT + TOOLBOX_MARGIN_TOP + HINT_TOOLBOX_SPACER;
        var isToolboxAboveFold = verticalPosition - toolboxPosition > top;
        var isToolboxBelowFold = verticalPosition + toolboxPosition + canvasTop > bottom;
        if (isToolboxAboveFold && isToolboxBelowFold) {
            verticalPosition -= toolboxPosition;
        }
        return verticalPosition;
    };
    CanvasToolboxHint.contextTypes = {
        store: React.PropTypes.object.isRequired
    };
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], CanvasToolboxHint.prototype, "_handleClick", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], CanvasToolboxHint.prototype, "_handleToolboxClose", null);
    return CanvasToolboxHint;
}(React.Component));
exports.default = CanvasToolboxHint;


/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var CanvasZoneSelectionState;
(function (CanvasZoneSelectionState) {
    CanvasZoneSelectionState[CanvasZoneSelectionState["None"] = 1] = "None";
    CanvasZoneSelectionState[CanvasZoneSelectionState["Active"] = 2] = "Active";
    CanvasZoneSelectionState[CanvasZoneSelectionState["Selected"] = 3] = "Selected";
})(CanvasZoneSelectionState = exports.CanvasZoneSelectionState || (exports.CanvasZoneSelectionState = {}));


/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var sp_core_library_1 = __webpack_require__(5);
var office_ui_fabric_react_1 = __webpack_require__(2);
var React = __webpack_require__(1);
var CanvasControlType_1 = __webpack_require__(7);
var CanvasDragZoneConstants_1 = __webpack_require__(27);
var CanvasStore_1 = __webpack_require__(15);
var ToolbarButton_1 = __webpack_require__(34);
__webpack_require__(291);
var CanvasStrings_resx_1 = __webpack_require__(10);
var Toolbar = (function (_super) {
    tslib_1.__extends(Toolbar, _super);
    function Toolbar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Toolbar.prototype.render = function () {
        var _this = this;
        var _a = this.props, className = _a.className, controlType = _a.controlType, displayMode = _a.displayMode, fixedPosition = _a.fixedPosition;
        var layout;
        var isMultiColumn = false;
        switch (controlType) {
            case CanvasControlType_1.default.RTE:
                layout = (React.createElement("div", { className: className || 'CanvasControlToolbar', role: 'toolbar', ref: function (ref) { return _this._domElement = ref; } },
                    this._getMoveHandle(CanvasDragZoneConstants_1.default.webpartDragHandleTag),
                    this._getDeleteButton()));
                break;
            case CanvasControlType_1.default.WebPartZone:
                layout = (React.createElement("div", { className: className || 'CanvasControlToolbar', role: 'toolbar', ref: function (ref) { return _this._domElement = ref; } },
                    this._getEditButton(),
                    this._getMoveHandle(CanvasDragZoneConstants_1.default.webpartDragHandleTag),
                    this._getDeleteButton()));
                break;
            case CanvasControlType_1.default.FullWidth:
                layout = (React.createElement("div", { className: className || 'CanvasControlToolbar', role: 'toolbar' },
                    this._getMoveHandle(CanvasDragZoneConstants_1.default.zoneDragHandleTag),
                    this._getDeleteButton()));
                break;
            default:
                isMultiColumn = true;
                layout = (React.createElement("div", { className: className || 'CanvasControlToolbar', style: fixedPosition, role: 'toolbar', ref: function (ref) { return _this._domElement = ref; } },
                    this._getEditButton(controlType),
                    this._getMoveHandle(CanvasDragZoneConstants_1.default.zoneDragHandleTag),
                    this._getDeleteButton()));
                break;
        }
        return (sp_core_library_1.DisplayMode.Edit === displayMode &&
            (!isMultiColumn || CanvasStore_1.default.isPolarisMultiColumnEditEnabled) &&
            React.createElement(office_ui_fabric_react_1.FocusZone, { isCircularNavigation: true }, layout));
    };
    Toolbar.prototype.getHeight = function () {
        return this._domElement.clientHeight;
    };
    Object.defineProperty(Toolbar.prototype, "toolBarElement", {
        get: function () {
            return this._domElement;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Toolbar.prototype, "_isWebPart", {
        get: function () {
            return this.props.controlType === CanvasControlType_1.default.WebPartZone ||
                this.props.controlType === CanvasControlType_1.default.RTE;
        },
        enumerable: true,
        configurable: true
    });
    Toolbar.prototype._handleConfigureButtonClicked = function () {
        this.props.onConfigureButtonClick(this.props.id);
    };
    Toolbar.prototype._handleDeleteButtonClicked = function () {
        this.props.onDeleteButtonClick(this.props.controlPosition);
    };
    Toolbar.prototype._getDeleteButton = function () {
        return (React.createElement(ToolbarButton_1.default, { key: 'delete' + this.props.key, canBeActive: false, fabricIconKey: 'Trash', onClick: this._handleDeleteButtonClicked, title: this._isWebPart ? CanvasStrings_resx_1.default.WebpartToolbarDeleteButtonTitle : CanvasStrings_resx_1.default.ZoneToolbarDeleteButtonTitle, automationId: 'deleteButton' }));
    };
    Toolbar.prototype._getEditButton = function (controlType) {
        if (this.props.hideEditButton) {
            return null;
        }
        var fabricIconKey = '';
        switch (controlType) {
            case CanvasControlType_1.default.FullWidth:
                fabricIconKey = 'FullWidth';
                break;
            case CanvasControlType_1.default.OneColumn:
                fabricIconKey = 'SingleColumn';
                break;
            case CanvasControlType_1.default.OneThirdColumnLeft:
                fabricIconKey = office_ui_fabric_react_1.getRTL() ? 'ColumnLeftTwoThirds' : 'ColumnRightTwoThirds';
                break;
            case CanvasControlType_1.default.OneThirdColumnRight:
                fabricIconKey = office_ui_fabric_react_1.getRTL() ? 'ColumnRightTwoThirds' : 'ColumnLeftTwoThirds';
                break;
            case CanvasControlType_1.default.ThreeColumns:
                fabricIconKey = 'TripleColumn';
                break;
            case CanvasControlType_1.default.TwoColumns:
                fabricIconKey = 'DoubleColumn';
                break;
        }
        return (React.createElement(ToolbarButton_1.default, { key: 'edit' + this.props.key, canBeActive: false, fabricIconKey: fabricIconKey + "Edit", onClick: this._handleConfigureButtonClicked, title: this._isWebPart ? CanvasStrings_resx_1.default.WebpartToolbarConfigButtonTitle : CanvasStrings_resx_1.default.ZoneToolbarConfigButtonTitle, automationId: 'configureButton' }));
    };
    Toolbar.prototype._getMoveHandle = function (handleTag) {
        if (this.props.hideMoveButton) {
            return null;
        }
        return (CanvasStore_1.default.isReorderingSupported &&
            React.createElement(ToolbarButton_1.default, { key: 'move' + this.props.key, canBeActive: false, fabricIconKey: 'Move', title: this._isWebPart ? CanvasStrings_resx_1.default.WebpartToolbarMoveButtonTitle : CanvasStrings_resx_1.default.ZoneToolbarMoveButtonTitle, automationId: 'moveButton', dragHandleTag: handleTag }));
    };
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], Toolbar.prototype, "getHeight", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], Toolbar.prototype, "_handleConfigureButtonClicked", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], Toolbar.prototype, "_handleDeleteButtonClicked", null);
    return Toolbar;
}(React.Component));
exports.default = Toolbar;


/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(294);


/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var FEATURED_ITEM_IDS = [
    'd1d91016-032f-456d-98a4-721247c305e8_0',
    'b7dd04e1-19ce-4b24-9132-b60a1c2b910d_0',
    '6410b3b6-d440-4663-8744-378976dc041e_0',
    '490d7c76-1824-45b2-9de3-676421c997fa_0',
    'daf0b71c-6de8-4ef7-b511-faae7c388708_0' 
];
var GENERIC_ITEM_ID = '00000000-0000-0000-0000-000000000000';
exports.RTE_TOOLBOX_KEY = 0;
var ToolBoxItemClassifier = (function () {
    function ToolBoxItemClassifier(filter) {
        var _this = this;
        this._toolBoxItemIdToPropsMap = new Map();
        this._fullWidthToolBoxItemIdToPropsMap = new Map();
        FEATURED_ITEM_IDS.splice(0, 0, exports.RTE_TOOLBOX_KEY.toString());
        if (filter && filter.length > 2) {
            this._filterRegex = new RegExp(filter, 'i');
        }
        FEATURED_ITEM_IDS.forEach((function (id) {
            _this._toolBoxItemIdToPropsMap.set(id, []);
        }));
        this._toolBoxItemIdToPropsMap.set(GENERIC_ITEM_ID, []);
    }
    ToolBoxItemClassifier.prototype.tryRegisterItem = function (itemId, itemProps) {
        if (this._shouldExcludeItem(itemProps)) {
            return false;
        }
        var registeredItemProps = this._toolBoxItemIdToPropsMap.get(itemId);
        if (Array.isArray(registeredItemProps)) {
            registeredItemProps.push(itemProps);
        }
        else {
            this._toolBoxItemIdToPropsMap.get(GENERIC_ITEM_ID).push(itemProps);
        }
        return true;
    };
    ToolBoxItemClassifier.prototype.classify = function (isFeatured, sortPredicate) {
        var toolBoxItemProps = [];
        if (isFeatured) {
            this._toolBoxItemIdToPropsMap.forEach((function (items, id) {
                if (id !== GENERIC_ITEM_ID && items.length > 0) {
                    toolBoxItemProps.push(items[0]);
                }
            }));
        }
        else {
            toolBoxItemProps = this._toolBoxItemIdToPropsMap.get(GENERIC_ITEM_ID);
        }
        if (Boolean(sortPredicate)) {
            toolBoxItemProps = toolBoxItemProps.sort(sortPredicate);
        }
        return toolBoxItemProps;
    };
    ToolBoxItemClassifier.prototype._shouldExcludeItem = function (item) {
        return this._filterRegex &&
            item.displayName.search(this._filterRegex) < 0 &&
            item.description.search(this._filterRegex) < 0;
    };
    return ToolBoxItemClassifier;
}());
exports.default = ToolBoxItemClassifier;


/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
__webpack_require__(299);
var office_ui_fabric_react_1 = __webpack_require__(2);
function ToolboxGroup(props) {
    var canvasToolboxHeaderClass = office_ui_fabric_react_1.css('CanvasToolboxItemsGroup-header', {
        'CanvasToolboxItemsGroup-header--Embedded': props.embeddedToolbox
    });
    var banner = props.hasHeader ?
        React.createElement("header", { className: canvasToolboxHeaderClass }, props.groupName) :
        React.createElement("hr", { className: 'CanvasToolboxItemsGroup-divider' });
    return (React.createElement("section", { "aria-label": props.groupName, role: 'group', className: 'CanvasToolboxItemsGroup' },
        banner,
        React.createElement("div", { className: 'CanvasToolboxItemsGroup-items' }, props.children)));
}
exports.default = ToolboxGroup;


/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var lessText_1 = __webpack_require__(105);
__webpack_require__(302);
var office_ui_fabric_react_1 = __webpack_require__(2);
function ToolboxItem(props) {
    var canvasToolboxItemClass = office_ui_fabric_react_1.css('CanvasToolboxItem', {
        'CanvasToolboxItemFloat': !props.embeddedToolbox,
        'CanvasToolboxItem--Embedded': props.embeddedToolbox
    });
    return (React.createElement("button", { className: canvasToolboxItemClass, title: props.description, onClick: function () { return props.onClick(JSON.parse(JSON.stringify(props.itemProps))); }, "data-automation-id": props.automationId },
        props.imageSrc
            ? React.createElement("img", { className: 'CanvasToolboxItem-image', alt: props.displayName, src: props.imageSrc })
            : React.createElement(office_ui_fabric_react_1.Icon, { iconName: props.msIconName, className: 'CanvasToolboxItem-icon' }),
        React.createElement(lessText_1.LessText, { text: props.displayName, className: 'CanvasToolboxItem-title', showTitle: true, lines: 2, omission: '…' })));
}
exports.default = ToolboxItem;


/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
function htmlEncode(str) {
    if (str) {
        return str
            .replace(/\&/g, '&amp;')
            .replace(/\</g, '&lt;')
            .replace(/\>/g, '&gt;');
    }
    else {
        return str;
    }
}
exports.htmlEncode = htmlEncode;
function getReactLines(str) {
    if (str) {
        if (typeof str === 'string') {
            str = str.split('\n');
        }
        var encodedLines = str.map((function (line) { return htmlEncode(line).replace(/\s/g, '&nbsp;'); }));
        return (React.createElement("div", { dangerouslySetInnerHTML: { __html: encodedLines.join('<br />') } }));
    }
}
exports.getReactLines = getReactLines;


/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(365);
var styles = {
    container: 'container_6d46df37',
    content: 'content_6d46df37',
    pivotItem: 'pivotItem_6d46df37',
    learnMoreLink: 'learnMoreLink_6d46df37',
    serializedTextArea: 'serializedTextArea_6d46df37',
};
exports.default = styles;


/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ICanvasControl_1 = __webpack_require__(215);
exports.CanvasControlType = ICanvasControl_1.CanvasControlType;
var IToolboxItemShim_1 = __webpack_require__(216);
exports.mapToolboxItem = IToolboxItemShim_1.mapToolboxItem;


/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ToolboxCallout_1 = __webpack_require__(204);
exports.ToolboxCallout = ToolboxCallout_1.ToolboxCallout;


/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ToolboxSearch = __webpack_require__(214);
exports.ToolboxSearch = ToolboxSearch;


/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_core_library_1 = __webpack_require__(5);
var office_ui_fabric_react_1 = __webpack_require__(2);
var React = __webpack_require__(1);
var lessText_1 = __webpack_require__(105);
var ToolboxItemBase_module_scss_1 = __webpack_require__(221);
function ToolboxItemBase(props) {
    var iconClassName = office_ui_fabric_react_1.css(ToolboxItemBase_module_scss_1.default.icon, props.iconClassName, isWideImageLogoKillSwitchActivated() ? ToolboxItemBase_module_scss_1.default.fixedImageIcon : ToolboxItemBase_module_scss_1.default.scalableImageIcon);
    var iconImageFit = isWideImageLogoKillSwitchActivated()
        ? undefined
        : office_ui_fabric_react_1.ImageFit.contain;
    return (React.createElement(office_ui_fabric_react_1.CommandButton, { role: 'listitem', className: office_ui_fabric_react_1.css(ToolboxItemBase_module_scss_1.default.item, props.itemClassName), ariaLabel: props.item.displayName, ariaDescription: props.item.description, title: props.item.description, onClick: function () { return props.onClick(props.item.id); }, "data-automation-id": props.item.id, "data-item-size": props['data-item-size'] },
        React.createElement("div", { className: office_ui_fabric_react_1.css(ToolboxItemBase_module_scss_1.default.flexBox, props.flexBoxClassName) },
            React.createElement(office_ui_fabric_react_1.Icon, { className: iconClassName, iconName: props.item.msIconName, iconType: props.item.imageSrc ? office_ui_fabric_react_1.IconType.Image : office_ui_fabric_react_1.IconType.Default, imageProps: { src: props.item.imageSrc, alt: props.item.displayName, imageFit: iconImageFit } }),
            React.createElement(lessText_1.LessText, { text: props.item.displayName, className: office_ui_fabric_react_1.css(ToolboxItemBase_module_scss_1.default.title, props.titleClassName), showTitle: true, lines: props.titleLineCount, omission: '…' }))));
}
exports.ToolboxItemBase = ToolboxItemBase;
function isWideImageLogoKillSwitchActivated() {
    return sp_core_library_1._SPKillSwitch.isActivated(sp_core_library_1.Guid.parse('df18b060-e9d5-4421-a619-474277e3b0fd'), '10/26/2017', 'ToolboxItemWideImageLogo');
}
exports.isWideImageLogoKillSwitchActivated = isWideImageLogoKillSwitchActivated;


/***/ }),
/* 130 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_130__;

/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ToolboxLoadingAnimationLayer_1 = __webpack_require__(199);
exports.ToolboxLoading = ToolboxLoadingAnimationLayer_1.ToolboxLoadingAnimationLayer;


/***/ }),
/* 132 */,
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(5)], __WEBPACK_AMD_DEFINE_RESULT__ = function(__WEBPACK_EXTERNAL_MODULE_3__) { return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ ((function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1),__webpack_require__(2),__webpack_require__(3)], __WEBPACK_AMD_DEFINE_RESULT__ = function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_9__) { return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 3);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ ((function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var globalize =  false
    ? require('./../globalize-locales/en-us.js')
    : __webpack_require__(4);
var timeConstants_1 = __webpack_require__(1);
var LocaleFormatStrings_resx_1 = __webpack_require__(5);
var RelativeTimeLengthForm;
(function (RelativeTimeLengthForm) {
    RelativeTimeLengthForm[RelativeTimeLengthForm["short"] = 0] = "short";
    RelativeTimeLengthForm[RelativeTimeLengthForm["narrow"] = 1] = "narrow";
    RelativeTimeLengthForm[RelativeTimeLengthForm["long"] = 2] = "long";
})(RelativeTimeLengthForm || (RelativeTimeLengthForm = {}));
var LocaleFormat = (function () {
    function LocaleFormat() {
    }
    LocaleFormat.formatNumber = function (value, options) {
        return globalize.formatNumber(value, _sortAndScrubOptions(options));
    };
    LocaleFormat.parseNumber = function (value, options) {
        return globalize.parseNumber(value, _sortAndScrubOptions(options));
    };
    LocaleFormat.formatDate = function (value, options) {
        return globalize.formatDate(value, _sortAndScrubOptions(options));
    };
    LocaleFormat.parseDate = function (value, options) {
        return globalize.parseDate(value, _sortAndScrubOptions(options));
    };
    LocaleFormat.formatRelativeTime = function (value, unit, options) {
        _normalizeRelativeTimeFormatterOptions(options);
        return globalize.formatRelativeTime(value, unit, options);
    };
    LocaleFormat.formatRelativeTimeApproximate = function (value, options) {
        _normalizeRelativeTimeFormatterOptions(options);
        if (!options) {
            options = {};
        }
        var timeDifference = value.getTime() - Date.now();
        var past = timeDifference < 0;
        var absoluteTimeDifference = (timeDifference < 0) ? -timeDifference : timeDifference;
        var length = (options.form)
            ? ((options.form === 'short') ? RelativeTimeLengthForm.short : RelativeTimeLengthForm.narrow)
            : RelativeTimeLengthForm.long;
        if (absoluteTimeDifference < 1000) {
            return LocaleFormat.formatRelativeTime(0, 'second', options);
        }
        else if (absoluteTimeDifference < timeConstants_1.MILLISECONDS_IN_THIRTY_SECONDS) {
            return _getFewSecondsRelative(length, past);
        }
        else if (absoluteTimeDifference < timeConstants_1.MILLISECONDS_IN_ONE_MINUTE) {
            return _getLessThanAMinuteRelative(length, past);
        }
        else if (absoluteTimeDifference < timeConstants_1.MILLISECONDS_IN_TWO_MINUTES) {
            return _getAboutAMinuteRelative(length, past);
        }
        else if (absoluteTimeDifference < timeConstants_1.MILLISECONDS_IN_ONE_HOUR) {
            var minuteCount = Math.round(timeDifference / timeConstants_1.MILLISECONDS_IN_ONE_MINUTE);
            return LocaleFormat.formatRelativeTime(minuteCount, 'minute', options);
        }
        else if (absoluteTimeDifference < timeConstants_1.MILLISECONDS_IN_TWO_HOURS) {
            return _getAboutAnHourRelative(length, past);
        }
        else if (absoluteTimeDifference < timeConstants_1.MILLISECONDS_IN_ONE_DAY) {
            var hourCount = Math.round(timeDifference / timeConstants_1.MILLISECONDS_IN_ONE_HOUR);
            return LocaleFormat.formatRelativeTime(hourCount, 'hour', options);
        }
        else if (absoluteTimeDifference < timeConstants_1.MILLISECONDS_IN_THIRTY_TWO_DAYS) {
            var dayCount = Math.round(timeDifference / timeConstants_1.MILLISECONDS_IN_ONE_DAY);
            return LocaleFormat.formatRelativeTime(dayCount, 'day', options);
        }
        else if (value.getFullYear() === (new Date()).getFullYear()) {
            return _getDateWithoutYear(value, length);
        }
        else {
            return _getDateWithYear(value, length);
        }
    };
    return LocaleFormat;
}());
exports.default = LocaleFormat;
function _sortAndScrubOptions(options) {
    if (!options) {
        return options;
    }
    else {
        var result = {};
        var keys = Object.keys(options).sort();
        var emptyObject = true;
        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
            var key = keys_1[_i];
            if (options[key] !== undefined) {
                result[key] = options[key];
                emptyObject = false;
            }
        }
        return emptyObject ? undefined : result;
    }
}
function _getFewSecondsRelative(length, past) {
    switch (length) {
        case RelativeTimeLengthForm.narrow:
            return past ? LocaleFormatStrings_resx_1.default.AFewSeconds_Past_Narrow : LocaleFormatStrings_resx_1.default.AFewSeconds_Future_Narrow;
        case RelativeTimeLengthForm.short:
            return past ? LocaleFormatStrings_resx_1.default.AFewSeconds_Past_Short : LocaleFormatStrings_resx_1.default.AFewSeconds_Future_Short;
        case RelativeTimeLengthForm.long:
            return past ? LocaleFormatStrings_resx_1.default.AFewSeconds_Past_Long : LocaleFormatStrings_resx_1.default.AFewSeconds_Future_Long;
    }
}
function _getLessThanAMinuteRelative(length, past) {
    switch (length) {
        case RelativeTimeLengthForm.narrow:
            return past ? LocaleFormatStrings_resx_1.default.LessThanAMinute_Past_Narrow : LocaleFormatStrings_resx_1.default.LessThanAMinute_Future_Narrow;
        case RelativeTimeLengthForm.short:
            return past ? LocaleFormatStrings_resx_1.default.LessThanAMinute_Past_Short : LocaleFormatStrings_resx_1.default.LessThanAMinute_Future_Short;
        case RelativeTimeLengthForm.long:
            return past ? LocaleFormatStrings_resx_1.default.LessThanAMinute_Past_Long : LocaleFormatStrings_resx_1.default.LessThanAMinute_Future_Long;
    }
}
function _getAboutAMinuteRelative(length, past) {
    switch (length) {
        case RelativeTimeLengthForm.narrow:
            return past ? LocaleFormatStrings_resx_1.default.AboutAMinute_Past_Narrow : LocaleFormatStrings_resx_1.default.AboutAMinute_Future_Narrow;
        case RelativeTimeLengthForm.short:
            return past ? LocaleFormatStrings_resx_1.default.AboutAMinute_Past_Short : LocaleFormatStrings_resx_1.default.AboutAMinute_Future_Short;
        case RelativeTimeLengthForm.long:
            return past ? LocaleFormatStrings_resx_1.default.AboutAMinute_Past_Long : LocaleFormatStrings_resx_1.default.AboutAMinute_Future_Long;
    }
}
function _getAboutAnHourRelative(length, past) {
    switch (length) {
        case RelativeTimeLengthForm.narrow:
            return past ? LocaleFormatStrings_resx_1.default.AboutAnHour_Past_Narrow : LocaleFormatStrings_resx_1.default.AboutAnHour_Future_Narrow;
        case RelativeTimeLengthForm.short:
            return past ? LocaleFormatStrings_resx_1.default.AboutAnHour_Past_Short : LocaleFormatStrings_resx_1.default.AboutAnHour_Future_Short;
        case RelativeTimeLengthForm.long:
            return past ? LocaleFormatStrings_resx_1.default.AboutAnHour_Past_Long : LocaleFormatStrings_resx_1.default.AboutAnHour_Future_Long;
    }
}
function _getDateWithoutYear(value, length) {
    var skeleton;
    switch (length) {
        case RelativeTimeLengthForm.narrow:
            skeleton = 'Md'; 
            break;
        case RelativeTimeLengthForm.short:
            skeleton = 'MMMd'; 
            break;
        case RelativeTimeLengthForm.long:
        default:
            skeleton = 'MMMMd'; 
    }
    return LocaleFormat.formatDate(value, { skeleton: skeleton });
}
function _getDateWithYear(value, length) {
    var dateFormat;
    switch (length) {
        case RelativeTimeLengthForm.narrow:
            dateFormat = 'short'; 
            break;
        case RelativeTimeLengthForm.short:
            dateFormat = 'medium'; 
            break;
        case RelativeTimeLengthForm.long:
        default:
            dateFormat = 'long'; 
    }
    return LocaleFormat.formatDate(value, {
        date: dateFormat
    });
}
function _normalizeRelativeTimeFormatterOptions(options) {
    if (!options) {
        return;
    }
    if (options.form === 'long') {
        options.form = undefined;
    }
    options = _sortAndScrubOptions(options);
}


/***/ })),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.MILLISECONDS_IN_ONE_SECOND = 1000;
exports.MILLISECONDS_IN_THIRTY_SECONDS = exports.MILLISECONDS_IN_ONE_SECOND * 30;
exports.MILLISECONDS_IN_ONE_MINUTE = 60 * exports.MILLISECONDS_IN_ONE_SECOND;
exports.MILLISECONDS_IN_TWO_MINUTES = 2 * exports.MILLISECONDS_IN_ONE_MINUTE;
exports.MILLISECONDS_IN_ONE_HOUR = 60 * exports.MILLISECONDS_IN_ONE_MINUTE;
exports.MILLISECONDS_IN_TWO_HOURS = 2 * exports.MILLISECONDS_IN_ONE_HOUR;
exports.MILLISECONDS_IN_ONE_DAY = 24 * exports.MILLISECONDS_IN_ONE_HOUR;
exports.MILLISECONDS_IN_ONE_WEEK = 7 * exports.MILLISECONDS_IN_ONE_DAY;
exports.MILLISECONDS_IN_THIRTY_TWO_DAYS = 32 * exports.MILLISECONDS_IN_ONE_DAY;


/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_2__;

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var LocaleFormat_1 = __webpack_require__(0);
exports.LocaleFormat = LocaleFormat_1.default;
var FabricSupport_1 = __webpack_require__(6);
exports.FabricSupport = FabricSupport_1.default;
var SPDate_1 = __webpack_require__(8);
exports.SPDate = SPDate_1.default;


/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_4__;

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var strings = ( false)
    ? require('../resx-strings/en-us.json')
    : __webpack_require__(2);
exports.default = strings['_tmSI9uv3XmV4RG+FeeI2/A'];


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var LocaleFormat_1 = __webpack_require__(0);
var FabricSupport_resx_1 = __webpack_require__(7);
var FabricSupport = (function () {
    function FabricSupport() {
    }
    Object.defineProperty(FabricSupport, "datePickerStrings", {
        get: function () {
            if (!FabricSupport._datePickerStrings) {
                var months = [
                    new Date(0, 0),
                    new Date(0, 1),
                    new Date(0, 2),
                    new Date(0, 3),
                    new Date(0, 4),
                    new Date(0, 5),
                    new Date(0, 6),
                    new Date(0, 7),
                    new Date(0, 8),
                    new Date(0, 9),
                    new Date(0, 10),
                    new Date(0, 11)
                ];
                var days = [
                    new Date(0, 0, 0),
                    new Date(0, 0, 1),
                    new Date(0, 0, 2),
                    new Date(0, 0, 3),
                    new Date(0, 0, 4),
                    new Date(0, 0, 5),
                    new Date(0, 0, 6)
                ];
                FabricSupport._datePickerStrings = {
                    months: months.map((function (month) { return LocaleFormat_1.default.formatDate(month, { raw: 'LLLL' }); })),
                    shortMonths: months.map((function (month) { return LocaleFormat_1.default.formatDate(month, { raw: 'LLL' }); })),
                    days: days.map((function (day) { return LocaleFormat_1.default.formatDate(day, { raw: 'cccc' }); })),
                    shortDays: days.map((function (day) { return LocaleFormat_1.default.formatDate(day, { raw: 'ccc' }); })),
                    goToToday: FabricSupport_resx_1.default.datePickerGoToToday
                };
            }
            return FabricSupport._datePickerStrings;
        },
        enumerable: true,
        configurable: true
    });
    FabricSupport._datePickerStrings = undefined;
    return FabricSupport;
}());
exports.default = FabricSupport;


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var strings = ( false)
    ? require('../resx-strings/en-us.json')
    : __webpack_require__(2);
exports.default = strings['_tzecLFnVcD/oZoWS/0fBVg'];


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var timeConstants_1 = __webpack_require__(1);
var sp_core_library_1 = __webpack_require__(9);
var SPDate = (function () {
    function SPDate(data) {
        this._fullYear = data.fullYear;
        this._month = data.month;
        this._date = data.date;
        this._hours = data.hours;
        this._minutes = data.minutes;
        this._seconds = data.seconds;
        this._milliseconds = data.milliseconds;
    }
    Object.defineProperty(SPDate.prototype, "fullYear", {
        get: function () { return this._fullYear; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPDate.prototype, "month", {
        get: function () { return this._month; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPDate.prototype, "date", {
        get: function () { return this._date; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPDate.prototype, "hours", {
        get: function () { return this._hours; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPDate.prototype, "minutes", {
        get: function () { return this._minutes; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPDate.prototype, "seconds", {
        get: function () { return this._seconds; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPDate.prototype, "milliseconds", {
        get: function () { return this._milliseconds ? this._milliseconds : 0; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPDate.prototype, "timezoneOffset", {
        get: function () { return this._timezoneOffset ? this._timezoneOffset : 0; },
        enumerable: true,
        configurable: true
    });
    SPDate.prototype.convertToUTC = function (fromTimezone) {
        var utcMilliSeconds = Date.UTC(this.fullYear, this.month, this.date, this.hours, this.minutes, this.seconds, this.milliseconds);
        var preferredTimezoneMilliSeconds = utcMilliSeconds + (this._getAdjustedTimezoneOffset(this, fromTimezone) * timeConstants_1.MILLISECONDS_IN_ONE_MINUTE);
        var newDate = new Date(preferredTimezoneMilliSeconds);
        return this._convertDateToSPDate(newDate, 0);
    };
    SPDate.prototype.convertFromUTC = function (toTimezone) {
        var utcMilliseconds = Date.UTC(this.fullYear, this.month, this.date, this.hours, this.minutes, this.seconds, this.milliseconds);
        var adjustedOffset = this._getAdjustedTimezoneOffset(this, toTimezone);
        var timeInMilliSeconds = utcMilliseconds - (adjustedOffset * timeConstants_1.MILLISECONDS_IN_ONE_MINUTE);
        var localizedDate = new Date(timeInMilliSeconds);
        return this._convertDateToSPDate(localizedDate, adjustedOffset);
    };
    SPDate.prototype.isSame = function (inputDate) {
        return (this.fullYear === inputDate.fullYear &&
            this.month === inputDate.month &&
            this.date === inputDate.date &&
            this.hours === inputDate.hours &&
            this.minutes === inputDate.minutes &&
            this.seconds === inputDate.seconds &&
            this.milliseconds === inputDate.milliseconds);
    };
    SPDate.prototype._getAdjustedTimezoneOffset = function (date, timezone) {
        var isStandardTime = this._isStandardTime(date, timezone);
        var adjustedOffset = timezone.offset +
            (isStandardTime ? timezone.standardOffset : timezone.daylightOffset);
        return adjustedOffset;
    };
    SPDate.prototype._isStandardTime = function (date, timeZone) {
        if (timeZone.standardDate.Month === timeZone.daylightDate.Month) {
            return true;
        }
        var isStandardDateEarlier = timeZone.standardDate.Month < timeZone.daylightDate.Month;
        var earlierDate = this._convertSystemTimeToDate(isStandardDateEarlier ? timeZone.standardDate : timeZone.daylightDate, date.fullYear);
        var laterDate = this._convertSystemTimeToDate(isStandardDateEarlier ? timeZone.daylightDate : timeZone.standardDate, date.fullYear);
        if (date._isSameOrAfter(earlierDate) && date._isBefore(laterDate)) {
            return isStandardDateEarlier;
        }
        else {
            return !isStandardDateEarlier;
        }
    };
    SPDate.prototype._convertSystemTimeToDate = function (time, currentYear) {
        var firstDayOfTheMonth = new Date(time.Year || currentYear, time.Month - 1, 
        1, 
        time.Hour, time.Minute, time.Second, time.Milliseconds);
        var millisecondsBetweenDaysOfWeek = (time.DayOfWeek - firstDayOfTheMonth.getDay()) * timeConstants_1.MILLISECONDS_IN_ONE_DAY;
        var guid = sp_core_library_1.Guid.parse('734fd830-e2a6-416e-826e-bfeafc1c8abf');
        if (!sp_core_library_1._SPKillSwitch.isActivated(guid, '10/09/2017', 'Fixing the SPDate issue.')) {
            var weekOffsetInMilliseconds = timeConstants_1.MILLISECONDS_IN_ONE_WEEK * ((millisecondsBetweenDaysOfWeek !== 0) ? time.Day : time.Day - 1);
            return new Date(firstDayOfTheMonth.getTime() + millisecondsBetweenDaysOfWeek + weekOffsetInMilliseconds);
        }
        else {
            var weekOffset = (millisecondsBetweenDaysOfWeek !== 0) ? timeConstants_1.MILLISECONDS_IN_ONE_WEEK * (time.Day) : 0;
            return new Date(firstDayOfTheMonth.getTime() + millisecondsBetweenDaysOfWeek + weekOffset);
        }
    };
    SPDate.prototype._convertDateToSPDate = function (date, timezoneOffset) {
        return new SPDate({
            date: date.getUTCDate(),
            fullYear: date.getUTCFullYear(),
            hours: date.getUTCHours(),
            milliseconds: date.getUTCMilliseconds(),
            minutes: date.getUTCMinutes(),
            month: date.getUTCMonth(),
            seconds: date.getUTCSeconds(),
            timezoneOffset: timezoneOffset
        });
    };
    SPDate.prototype._isSameOrAfter = function (inputDate) {
        if (!inputDate) {
            throw new Error('Supplied date cannot be undefined or null.');
        }
        var thisDate = new Date(this.fullYear, this.month, this.date, this.hours, this.minutes, this.milliseconds);
        return thisDate >= inputDate;
    };
    SPDate.prototype._isBefore = function (date) {
        return !this._isSameOrAfter(date);
    };
    return SPDate;
}());
exports.default = SPDate;


/***/ }),
/* 9 */
/***/ ((function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_9__;

/***/ }))
/******/ ])}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));;

/***/ })),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {
  var strings = {
    "_tzecLFnVcD/oZoWS/0fBVg": {
      "datePickerGoToToday": "Go to today"
    },
    "_tmSI9uv3XmV4RG+FeeI2/A": {
      "AFewSeconds_Past_Long": "a few seconds ago",
      "AFewSeconds_Past_Short": "a few seconds ago",
      "AFewSeconds_Past_Narrow": "a few seconds ago",
      "AFewSeconds_Future_Long": "in a few seconds",
      "AFewSeconds_Future_Short": "in a few seconds",
      "AFewSeconds_Future_Narrow": "in a few seconds",
      "LessThanAMinute_Past_Long": "less than a minute ago",
      "LessThanAMinute_Past_Short": "less than a min. ago",
      "LessThanAMinute_Past_Narrow": "< 1 min ago",
      "LessThanAMinute_Future_Long": "in less than a minute",
      "LessThanAMinute_Future_Short": "in less than a min.",
      "LessThanAMinute_Future_Narrow": "in < 1 min",
      "AboutAMinute_Past_Long": "about a minute ago",
      "AboutAMinute_Past_Short": "about a min. ago",
      "AboutAMinute_Past_Narrow": "~1 min ago",
      "AboutAMinute_Future_Long": "in about a minute",
      "AboutAMinute_Future_Short": "in about a min.",
      "AboutAMinute_Future_Narrow": "in ~1 min",
      "AboutAnHour_Past_Long": "about an hour ago",
      "AboutAnHour_Past_Short": "about an hr. ago",
      "AboutAnHour_Past_Narrow": "~1 hr ago",
      "AboutAnHour_Future_Long": "in about an hour",
      "AboutAnHour_Future_Short": "in about an hr.",
      "AboutAnHour_Future_Narrow": "in ~1 hr"
    }
  };

  strings.default = strings;
  return strings;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function() { return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 3);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ ((function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Globalize Runtime v1.3.0
 *
 * http://github.com/jquery/globalize
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2017-07-03T21:37Z
 */
/*!
 * Globalize Runtime v1.3.0 2017-07-03T21:37Z Released under the MIT license
 * http://git.io/TrdQbw
 */
(function( root, factory ) {

	"use strict";

	// UMD returnExports
	if ( true ) {

		// AMD
		!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else if ( typeof exports === "object" ) {

		// Node, CommonJS
		module.exports = factory();
	} else {

		// Globalize
		root.Globalize = factory();
	}
}( this, (function() {




/**
 * A toString method that outputs meaningful values for objects or arrays and
 * still performs as fast as a plain string in case variable is string, or as
 * fast as `"" + number` in case variable is a number.
 * Ref: http://jsperf.com/my-stringify
 */
var toString = function( variable ) {
	return typeof variable === "string" ? variable : ( typeof variable === "number" ? "" +
		variable : JSON.stringify( variable ) );
};




/**
 * formatMessage( message, data )
 *
 * @message [String] A message with optional {vars} to be replaced.
 *
 * @data [Array or JSON] Object with replacing-variables content.
 *
 * Return the formatted message. For example:
 *
 * - formatMessage( "{0} second", [ 1 ] ); // 1 second
 *
 * - formatMessage( "{0}/{1}", ["m", "s"] ); // m/s
 *
 * - formatMessage( "{name} <{email}>", {
 *     name: "Foo",
 *     email: "bar@baz.qux"
 *   }); // Foo <bar@baz.qux>
 */
var formatMessage = function( message, data ) {

	// Replace {attribute}'s
	message = message.replace( /{[0-9a-zA-Z-_. ]+}/g, (function( name ) {
		name = name.replace( /^{([^}]*)}$/, "$1" );
		return toString( data[ name ] );
	}));

	return message;
};




var objectExtend = function() {
	var destination = arguments[ 0 ],
		sources = [].slice.call( arguments, 1 );

	sources.forEach((function( source ) {
		var prop;
		for ( prop in source ) {
			destination[ prop ] = source[ prop ];
		}
	}));

	return destination;
};




var createError = function( code, message, attributes ) {
	var error;

	message = code + ( message ? ": " + formatMessage( message, attributes ) : "" );
	error = new Error( message );
	error.code = code;

	objectExtend( error, attributes );

	return error;
};




// Based on http://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript-jquery
var stringHash = function( str ) {
	return [].reduce.call( str, (function( hash, i ) {
		var chr = i.charCodeAt( 0 );
		hash = ( ( hash << 5 ) - hash ) + chr;
		return hash | 0;
	}), 0 );
};




var runtimeKey = function( fnName, locale, args, argsStr ) {
	var hash;
	argsStr = argsStr || JSON.stringify( args );
	hash = stringHash( fnName + locale + argsStr );
	return hash > 0 ? "a" + hash : "b" + Math.abs( hash );
};




var validate = function( code, message, check, attributes ) {
	if ( !check ) {
		throw createError( code, message, attributes );
	}
};




var validateParameterPresence = function( value, name ) {
	validate( "E_MISSING_PARAMETER", "Missing required parameter `{name}`.",
		value !== undefined, { name: name });
};




var validateParameterType = function( value, name, check, expected ) {
	validate(
		"E_INVALID_PAR_TYPE",
		"Invalid `{name}` parameter ({value}). {expected} expected.",
		check,
		{
			expected: expected,
			name: name,
			value: value
		}
	);
};




var validateParameterTypeString = function( value, name ) {
	validateParameterType(
		value,
		name,
		value === undefined || typeof value === "string",
		"a string"
	);
};




// ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions?redirectlocale=en-US&redirectslug=JavaScript%2FGuide%2FRegular_Expressions
var regexpEscape = function( string ) {
	return string.replace( /([.*+?^=!:${}()|\[\]\/\\])/g, "\\$1" );
};




var stringPad = function( str, count, right ) {
	var length;
	if ( typeof str !== "string" ) {
		str = String( str );
	}
	for ( length = str.length; length < count; length += 1 ) {
		str = ( right ? ( str + "0" ) : ( "0" + str ) );
	}
	return str;
};




function Globalize( locale ) {
	if ( !( this instanceof Globalize ) ) {
		return new Globalize( locale );
	}

	validateParameterPresence( locale, "locale" );
	validateParameterTypeString( locale, "locale" );

	this._locale = locale;
}

Globalize.locale = function( locale ) {
	validateParameterTypeString( locale, "locale" );

	if ( arguments.length ) {
		this._locale = locale;
	}
	return this._locale;
};

Globalize._createError = createError;
Globalize._formatMessage = formatMessage;
Globalize._regexpEscape = regexpEscape;
Globalize._runtimeKey = runtimeKey;
Globalize._stringPad = stringPad;
Globalize._validateParameterPresence = validateParameterPresence;
Globalize._validateParameterTypeString = validateParameterTypeString;
Globalize._validateParameterType = validateParameterType;

return Globalize;




})));


/***/ })),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Globalize Runtime v1.3.0
 *
 * http://github.com/jquery/globalize
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2017-07-03T21:37Z
 */
/*!
 * Globalize Runtime v1.3.0 2017-07-03T21:37Z Released under the MIT license
 * http://git.io/TrdQbw
 */
(function( root, factory ) {

	"use strict";

	// UMD returnExports
	if ( true ) {

		// AMD
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [
			__webpack_require__(0)
		], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else if ( typeof exports === "object" ) {

		// Node, CommonJS
		module.exports = factory( require( "../globalize-runtime" ) );
	} else {

		// Extend global
		factory( root.Globalize );
	}
}(this, (function( Globalize ) {



var createError = Globalize._createError,
	regexpEscape = Globalize._regexpEscape,
	runtimeKey = Globalize._runtimeKey,
	stringPad = Globalize._stringPad,
	validateParameterType = Globalize._validateParameterType,
	validateParameterPresence = Globalize._validateParameterPresence,
	validateParameterTypeString = Globalize._validateParameterTypeString;


var createErrorUnsupportedFeature = function( feature ) {
	return createError( "E_UNSUPPORTED", "Unsupported {feature}.", {
		feature: feature
	});
};




var validateParameterTypeNumber = function( value, name ) {
	validateParameterType(
		value,
		name,
		value === undefined || typeof value === "number",
		"Number"
	);
};




/**
 * goupingSeparator( number, primaryGroupingSize, secondaryGroupingSize )
 *
 * @number [Number].
 *
 * @primaryGroupingSize [Number]
 *
 * @secondaryGroupingSize [Number]
 *
 * Return the formatted number with group separator.
 */
var numberFormatGroupingSeparator = function( number, primaryGroupingSize, secondaryGroupingSize ) {
	var index,
		currentGroupingSize = primaryGroupingSize,
		ret = "",
		sep = ",",
		switchToSecondary = secondaryGroupingSize ? true : false;

	number = String( number ).split( "." );
	index = number[ 0 ].length;

	while ( index > currentGroupingSize ) {
		ret = number[ 0 ].slice( index - currentGroupingSize, index ) +
			( ret.length ? sep : "" ) + ret;
		index -= currentGroupingSize;
		if ( switchToSecondary ) {
			currentGroupingSize = secondaryGroupingSize;
			switchToSecondary = false;
		}
	}

	number[ 0 ] = number[ 0 ].slice( 0, index ) + ( ret.length ? sep : "" ) + ret;
	return number.join( "." );
};




/**
 * integerFractionDigits( number, minimumIntegerDigits, minimumFractionDigits,
 * maximumFractionDigits, round, roundIncrement )
 *
 * @number [Number]
 *
 * @minimumIntegerDigits [Number]
 *
 * @minimumFractionDigits [Number]
 *
 * @maximumFractionDigits [Number]
 *
 * @round [Function]
 *
 * @roundIncrement [Function]
 *
 * Return the formatted integer and fraction digits.
 */
var numberFormatIntegerFractionDigits = function( number, minimumIntegerDigits, minimumFractionDigits, maximumFractionDigits, round,
	roundIncrement ) {

	// Fraction
	if ( maximumFractionDigits ) {

		// Rounding
		if ( roundIncrement ) {
			number = round( number, roundIncrement );

		// Maximum fraction digits
		} else {
			number = round( number, { exponent: -maximumFractionDigits } );
		}

	} else {
		number = round( number );
	}

	number = String( number );

	// Maximum integer digits (post string phase)
	if ( maximumFractionDigits && /e-/.test( number ) ) {

		// Use toFixed( maximumFractionDigits ) to make sure small numbers like 1e-7 are
		// displayed using plain digits instead of scientific notation.
		// 1: Remove leading decimal zeros.
		// 2: Remove leading decimal separator.
		// Note: String() is still preferred so it doesn't mess up with a number precision
		// unnecessarily, e.g., (123456789.123).toFixed(10) === "123456789.1229999959",
		// String(123456789.123) === "123456789.123".
		number = ( +number ).toFixed( maximumFractionDigits )
			.replace( /0+$/, "" ) /* 1 */
			.replace( /\.$/, "" ) /* 2 */;
	}

	// Minimum fraction digits (post string phase)
	if ( minimumFractionDigits ) {
		number = number.split( "." );
		number[ 1 ] = stringPad( number[ 1 ] || "", minimumFractionDigits, true );
		number = number.join( "." );
	}

	// Minimum integer digits
	if ( minimumIntegerDigits ) {
		number = number.split( "." );
		number[ 0 ] = stringPad( number[ 0 ], minimumIntegerDigits );
		number = number.join( "." );
	}

	return number;
};




/**
 * toPrecision( number, precision, round )
 *
 * @number (Number)
 *
 * @precision (Number) significant figures precision (not decimal precision).
 *
 * @round (Function)
 *
 * Return number.toPrecision( precision ) using the given round function.
 */
var numberToPrecision = function( number, precision, round ) {
	var roundOrder;

	// Get number at two extra significant figure precision.
	number = number.toPrecision( precision + 2 );

	// Then, round it to the required significant figure precision.
	roundOrder = Math.ceil( Math.log( Math.abs( number ) ) / Math.log( 10 ) );
	roundOrder -= precision;

	return round( number, { exponent: roundOrder } );
};




/**
 * toPrecision( number, minimumSignificantDigits, maximumSignificantDigits, round )
 *
 * @number [Number]
 *
 * @minimumSignificantDigits [Number]
 *
 * @maximumSignificantDigits [Number]
 *
 * @round [Function]
 *
 * Return the formatted significant digits number.
 */
var numberFormatSignificantDigits = function( number, minimumSignificantDigits, maximumSignificantDigits, round ) {
	var atMinimum, atMaximum;

	// Sanity check.
	if ( minimumSignificantDigits > maximumSignificantDigits ) {
		maximumSignificantDigits = minimumSignificantDigits;
	}

	atMinimum = numberToPrecision( number, minimumSignificantDigits, round );
	atMaximum = numberToPrecision( number, maximumSignificantDigits, round );

	// Use atMaximum only if it has more significant digits than atMinimum.
	number = +atMinimum === +atMaximum ? atMinimum : atMaximum;

	// Expand integer numbers, eg. 123e5 to 12300.
	number = ( +number ).toString( 10 );

	if ( ( /e/ ).test( number ) ) {
		throw createErrorUnsupportedFeature({
			feature: "integers out of (1e21, 1e-7)"
		});
	}

	// Add trailing zeros if necessary.
	if ( minimumSignificantDigits - number.replace( /^0+|\./g, "" ).length > 0 ) {
		number = number.split( "." );
		number[ 1 ] = stringPad( number[ 1 ] || "", minimumSignificantDigits - number[ 0 ].replace( /^0+/, "" ).length, true );
		number = number.join( "." );
	}

	return number;
};




/**
 * removeLiteralQuotes( string )
 *
 * Return:
 * - `` if input string is `''`.
 * - `o'clock` if input string is `'o''clock'`.
 * - `foo` if input string is `foo`, i.e., return the same value in case it isn't a single-quoted
 *   string.
 */
var removeLiteralQuotes = function( string ) {
	if ( string[ 0 ] + string[ string.length - 1 ] !== "''" ) {
		return string;
	}
	if ( string === "''" ) {
		return "";
	}
	return string.replace( /''/g, "'" ).slice( 1, -1 );
};




/**
 * format( number, properties )
 *
 * @number [Number].
 *
 * @properties [Object] Output of number/format-properties.
 *
 * Return the formatted number.
 * ref: http://www.unicode.org/reports/tr35/tr35-numbers.html
 */
var numberFormat = function( number, properties ) {
	var infinitySymbol, maximumFractionDigits, maximumSignificantDigits, minimumFractionDigits,
	minimumIntegerDigits, minimumSignificantDigits, nanSymbol, nuDigitsMap, padding, prefix,
	primaryGroupingSize, pattern, ret, round, roundIncrement, secondaryGroupingSize, suffix,
	symbolMap;

	padding = properties[ 1 ];
	minimumIntegerDigits = properties[ 2 ];
	minimumFractionDigits = properties[ 3 ];
	maximumFractionDigits = properties[ 4 ];
	minimumSignificantDigits = properties[ 5 ];
	maximumSignificantDigits = properties[ 6 ];
	roundIncrement = properties[ 7 ];
	primaryGroupingSize = properties[ 8 ];
	secondaryGroupingSize = properties[ 9 ];
	round = properties[ 15 ];
	infinitySymbol = properties[ 16 ];
	nanSymbol = properties[ 17 ];
	symbolMap = properties[ 18 ];
	nuDigitsMap = properties[ 19 ];

	// NaN
	if ( isNaN( number ) ) {
		return nanSymbol;
	}

	if ( number < 0 ) {
		pattern = properties[ 12 ];
		prefix = properties[ 13 ];
		suffix = properties[ 14 ];
	} else {
		pattern = properties[ 11 ];
		prefix = properties[ 0 ];
		suffix = properties[ 10 ];
	}

	// Infinity
	if ( !isFinite( number ) ) {
		return prefix + infinitySymbol + suffix;
	}

	ret = prefix;

	// Percent
	if ( pattern.indexOf( "%" ) !== -1 ) {
		number *= 100;

	// Per mille
	} else if ( pattern.indexOf( "\u2030" ) !== -1 ) {
		number *= 1000;
	}

	// Significant digit format
	if ( !isNaN( minimumSignificantDigits * maximumSignificantDigits ) ) {
		number = numberFormatSignificantDigits( number, minimumSignificantDigits,
			maximumSignificantDigits, round );

	// Integer and fractional format
	} else {
		number = numberFormatIntegerFractionDigits( number, minimumIntegerDigits,
			minimumFractionDigits, maximumFractionDigits, round, roundIncrement );
	}

	// Remove the possible number minus sign
	number = number.replace( /^-/, "" );

	// Grouping separators
	if ( primaryGroupingSize ) {
		number = numberFormatGroupingSeparator( number, primaryGroupingSize,
			secondaryGroupingSize );
	}

	ret += number;

	// Scientific notation
	// TODO implement here

	// Padding/'([^']|'')+'|''|[.,\-+E%\u2030]/g
	// TODO implement here

	ret += suffix;

	return ret.replace( /('([^']|'')+'|'')|./g, (function( character, literal ) {

		// Literals
		if ( literal ) {
			return removeLiteralQuotes( literal );
		}

		// Symbols
		character = character.replace( /[.,\-+E%\u2030]/, (function( symbol ) {
			return symbolMap[ symbol ];
		}));

		// Numbering system
		if ( nuDigitsMap ) {
			character = character.replace( /[0-9]/, (function( digit ) {
				return nuDigitsMap[ +digit ];
			}));
		}

		return character;
	}));
};




var numberFormatterFn = function( properties ) {
	return function numberFormatter( value ) {
		validateParameterPresence( value, "value" );
		validateParameterTypeNumber( value, "value" );

		return numberFormat( value, properties );
	};
};




/**
 * Generated by:
 *
 * var regenerate = require( "regenerate" );
 * var formatSymbols = require( * "unicode-8.0.0/General_Category/Format/symbols" );
 * regenerate().add( formatSymbols ).toString();
 *
 * https://github.com/mathiasbynens/regenerate
 * https://github.com/mathiasbynens/unicode-8.0.0
 */
var regexpCfG = /[\xAD\u0600-\u0605\u061C\u06DD\u070F\u180E\u200B-\u200F\u202A-\u202E\u2060-\u2064\u2066-\u206F\uFEFF\uFFF9-\uFFFB]|\uD804\uDCBD|\uD82F[\uDCA0-\uDCA3]|\uD834[\uDD73-\uDD7A]|\uDB40[\uDC01\uDC20-\uDC7F]/g;




/**
 * Generated by:
 *
 * var regenerate = require( "regenerate" );
 * var dashSymbols = require( * "unicode-8.0.0/General_Category/Dash_Punctuation/symbols" );
 * regenerate().add( dashSymbols ).toString();
 *
 * https://github.com/mathiasbynens/regenerate
 * https://github.com/mathiasbynens/unicode-8.0.0
 *
 * NOTE: In addition to [:dash:],  the below includes MINUS SIGN U+2212.
 */
var regexpDashG = /[\-\u058A\u05BE\u1400\u1806\u2010-\u2015\u2E17\u2E1A\u2E3A\u2E3B\u2E40\u301C\u3030\u30A0\uFE31\uFE32\uFE58\uFE63\uFF0D\u2212]/g;




/**
 * Generated by:
 *
 * var regenerate = require( "regenerate" );
 * var spaceSeparatorSymbols = require( "unicode-8.0.0/General_Category/Space_Separator/symbols" );
 * regenerate().add( spaceSeparatorSymbols ).toString();
 *
 * https://github.com/mathiasbynens/regenerate
 * https://github.com/mathiasbynens/unicode-8.0.0
 */
var regexpZsG = /[ \xA0\u1680\u2000-\u200A\u202F\u205F\u3000]/g;




/**
 * Loose Matching:
 * - Ignore all format characters, which includes RLM, LRM or ALM used to control BIDI
 *   formatting.
 * - Map all characters in [:Zs:] to U+0020 SPACE;
 * - Map all characters in [:Dash:] to U+002D HYPHEN-MINUS;
 */
var looseMatching = function( value ) {
	return value
		.replace( regexpCfG, "" )
		.replace( regexpDashG, "-" )
		.replace( regexpZsG, " " );
};




/**
 * parse( value, properties )
 *
 * @value [String].
 *
 * @properties [Object] Parser properties is a reduced pre-processed cldr
 * data set returned by numberParserProperties().
 *
 * Return the parsed Number (including Infinity) or NaN when value is invalid.
 * ref: http://www.unicode.org/reports/tr35/tr35-numbers.html
 */
var numberParse = function( value, properties ) {
	var grammar, invertedNuDigitsMap, invertedSymbolMap, negative, number, prefix, prefixNSuffix,
		suffix, tokenizer, valid;

	// Grammar:
	// - Value <=           NaN | PositiveNumber | NegativeNumber
	// - PositiveNumber <=  PositivePrefix NumberOrInf PositiveSufix
	// - NegativeNumber <=  NegativePrefix NumberOrInf
	// - NumberOrInf <=     Number | Inf
	grammar = [
		[ "nan" ],
		[ "prefix", "infinity", "suffix" ],
		[ "prefix", "number", "suffix" ],
		[ "negativePrefix", "infinity", "negativeSuffix" ],
		[ "negativePrefix", "number", "negativeSuffix" ]
	];

	invertedSymbolMap = properties[ 0 ];
	invertedNuDigitsMap = properties[ 1 ] || {};
	tokenizer = properties[ 2 ];

	value = looseMatching( value );

	function parse( type ) {
		return function( lexeme ) {

			// Reverse localized symbols and numbering system.
			lexeme = lexeme.split( "" ).map((function( character ) {
				return invertedSymbolMap[ character ] ||
					invertedNuDigitsMap[ character ] ||
					character;
			})).join( "" );

			switch ( type ) {
				case "infinity":
					number = Infinity;
					break;

				case "nan":
					number = NaN;
					break;

				case "number":

					// Remove grouping separators.
					lexeme = lexeme.replace( /,/g, "" );

					number = +lexeme;
					break;

				case "prefix":
				case "negativePrefix":
					prefix = lexeme;
					break;

				case "suffix":
					suffix = lexeme;
					break;

				case "negativeSuffix":
					suffix = lexeme;
					negative = true;
					break;

				// This should never be reached.
				default:
					throw new Error( "Internal error" );
			}
			return "";
		};
	}

	function tokenizeNParse( _value, grammar ) {
		return grammar.some((function( statement ) {
			var value = _value;

			// The whole grammar statement should be used (i.e., .every() return true) and value be
			// entirely consumed (i.e., !value.length).
			return statement.every((function( type ) {
				if ( value.match( tokenizer[ type ] ) === null ) {
					return false;
				}

				// Consume and parse it.
				value = value.replace( tokenizer[ type ], parse( type ) );
				return true;
			})) && !value.length;
		}));
	}

	valid = tokenizeNParse( value, grammar );

	// NaN
	if ( !valid || isNaN( number ) ) {
		return NaN;
	}

	prefixNSuffix = "" + prefix + suffix;

	// Percent
	if ( prefixNSuffix.indexOf( "%" ) !== -1 ) {
		number /= 100;

	// Per mille
	} else if ( prefixNSuffix.indexOf( "\u2030" ) !== -1 ) {
		number /= 1000;
	}

	// Negative number
	if ( negative ) {
		number *= -1;
	}

	return number;
};




var numberParserFn = function( properties ) {
	return function numberParser( value ) {
		validateParameterPresence( value, "value" );
		validateParameterTypeString( value, "value" );

		return numberParse( value, properties );
	};

};




var numberTruncate = function( value ) {
	if ( isNaN( value ) ) {
		return NaN;
	}
	return Math[ value < 0 ? "ceil" : "floor" ]( value );
};




/**
 * round( method )
 *
 * @method [String] with either "round", "ceil", "floor", or "truncate".
 *
 * Return function( value, incrementOrExp ):
 *
 *   @value [Number] eg. 123.45.
 *
 *   @incrementOrExp [Number] optional, eg. 0.1; or
 *     [Object] Either { increment: <value> } or { exponent: <value> }
 *
 *   Return the rounded number, eg:
 *   - round( "round" )( 123.45 ): 123;
 *   - round( "ceil" )( 123.45 ): 124;
 *   - round( "floor" )( 123.45 ): 123;
 *   - round( "truncate" )( 123.45 ): 123;
 *   - round( "round" )( 123.45, 0.1 ): 123.5;
 *   - round( "round" )( 123.45, 10 ): 120;
 *
 *   Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round
 *   Ref: #376
 */
var numberRound = function( method ) {
	method = method || "round";
	method = method === "truncate" ? numberTruncate : Math[ method ];

	return function( value, incrementOrExp ) {
		var exp, increment;

		value = +value;

		// If the value is not a number, return NaN.
		if ( isNaN( value ) ) {
			return NaN;
		}

		// Exponent given.
		if ( typeof incrementOrExp === "object" && incrementOrExp.exponent ) {
			exp = +incrementOrExp.exponent;
			increment = 1;

			if ( exp === 0 ) {
				return method( value );
			}

			// If the exp is not an integer, return NaN.
			if ( !( typeof exp === "number" && exp % 1 === 0 ) ) {
				return NaN;
			}

		// Increment given.
		} else {
			increment = +incrementOrExp || 1;

			if ( increment === 1 ) {
				return method( value );
			}

			// If the increment is not a number, return NaN.
			if ( isNaN( increment ) ) {
				return NaN;
			}

			increment = increment.toExponential().split( "e" );
			exp = +increment[ 1 ];
			increment = +increment[ 0 ];
		}

		// Shift & Round
		value = value.toString().split( "e" );
		value[ 0 ] = +value[ 0 ] / increment;
		value[ 1 ] = value[ 1 ] ? ( +value[ 1 ] - exp ) : -exp;
		value = method( +( value[ 0 ] + "e" + value[ 1 ] ) );

		// Shift back
		value = value.toString().split( "e" );
		value[ 0 ] = +value[ 0 ] * increment;
		value[ 1 ] = value[ 1 ] ? ( +value[ 1 ] + exp ) : exp;
		return +( value[ 0 ] + "e" + value[ 1 ] );
	};
};




Globalize._createErrorUnsupportedFeature = createErrorUnsupportedFeature;
Globalize._looseMatching = looseMatching;
Globalize._numberFormat = numberFormat;
Globalize._numberFormatterFn = numberFormatterFn;
Globalize._numberParse = numberParse;
Globalize._numberParserFn = numberParserFn;
Globalize._numberRound = numberRound;
Globalize._removeLiteralQuotes = removeLiteralQuotes;
Globalize._validateParameterPresence = validateParameterPresence;
Globalize._validateParameterTypeNumber = validateParameterTypeNumber;
Globalize._validateParameterTypeString = validateParameterTypeString;

Globalize.numberFormatter =
Globalize.prototype.numberFormatter = function( options ) {
	options = options || {};
	return Globalize[ runtimeKey( "numberFormatter", this._locale, [ options ] ) ];
};

Globalize.numberParser =
Globalize.prototype.numberParser = function( options ) {
	options = options || {};
	return Globalize[ runtimeKey( "numberParser", this._locale, [ options ] ) ];
};

Globalize.formatNumber =
Globalize.prototype.formatNumber = function( value, options ) {
	validateParameterPresence( value, "value" );
	validateParameterTypeNumber( value, "value" );

	return this.numberFormatter( options )( value );
};

Globalize.parseNumber =
Globalize.prototype.parseNumber = function( value, options ) {
	validateParameterPresence( value, "value" );
	validateParameterTypeString( value, "value" );

	return this.numberParser( options )( value );
};

return Globalize;




})));


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Globalize Runtime v1.3.0
 *
 * http://github.com/jquery/globalize
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2017-07-03T21:37Z
 */
/*!
 * Globalize Runtime v1.3.0 2017-07-03T21:37Z Released under the MIT license
 * http://git.io/TrdQbw
 */
(function( root, factory ) {

	"use strict";

	// UMD returnExports
	if ( true ) {

		// AMD
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [
			__webpack_require__(0)
		], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else if ( typeof exports === "object" ) {

		// Node, CommonJS
		module.exports = factory( require( "../globalize-runtime" ) );
	} else {

		// Extend global
		factory( root.Globalize );
	}
}(this, (function( Globalize ) {



var runtimeKey = Globalize._runtimeKey,
	validateParameterPresence = Globalize._validateParameterPresence,
	validateParameterType = Globalize._validateParameterType;


var validateParameterTypeNumber = function( value, name ) {
	validateParameterType(
		value,
		name,
		value === undefined || typeof value === "number",
		"Number"
	);
};




var pluralGeneratorFn = function( plural ) {
	return function pluralGenerator( value ) {
		validateParameterPresence( value, "value" );
		validateParameterTypeNumber( value, "value" );

		return plural( value );
	};
};




Globalize._pluralGeneratorFn = pluralGeneratorFn;
Globalize._validateParameterTypeNumber = validateParameterTypeNumber;

Globalize.plural =
Globalize.prototype.plural = function( value, options ) {
	validateParameterPresence( value, "value" );
	validateParameterTypeNumber( value, "value" );
	return this.pluralGenerator( options )( value );
};

Globalize.pluralGenerator =
Globalize.prototype.pluralGenerator = function( options ) {
	options = options || {};
	return Globalize[ runtimeKey( "pluralGenerator", this._locale, [ options ] ) ];
};

return Globalize;




})));


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(4);


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

(function (factory) {
  module.exports = factory(__webpack_require__(1),
                           __webpack_require__(2),
                           __webpack_require__(5),
                           __webpack_require__(6));
})((function (Globalize) {
  var validateParameterTypeNumber = Globalize._validateParameterTypeNumber;
  var validateParameterPresence = Globalize._validateParameterPresence;
  var numberRound = Globalize._numberRound;
  var numberFormat = Globalize._numberFormat;
  var numberFormatterFn = Globalize._numberFormatterFn;
  var validateParameterTypeString = Globalize._validateParameterTypeString;
  var numberParse = Globalize._numberParse;
  var numberParserFn = Globalize._numberParserFn;
  var pluralGeneratorFn = Globalize._pluralGeneratorFn;
  var validateParameterTypeDate = Globalize._validateParameterTypeDate;
  var dateToPartsFormat = Globalize._dateToPartsFormat;
  var dateToPartsFormatterFn = Globalize._dateToPartsFormatterFn;
  var dateFormat = Globalize._dateFormat;
  var dateFormatterFn = Globalize._dateFormatterFn;
  var dateTokenizer = Globalize._dateTokenizer;
  var dateParse = Globalize._dateParse;
  var dateParserFn = Globalize._dateParserFn;
  var relativeTimeFormatterFn = Globalize._relativeTimeFormatterFn;
  
  Globalize.b468386326 = numberFormatterFn(["",,1,0,3,,,,3,,"","#,##0.###","-#,##0.###","-","",numberRound(),"∞","NaN",{".":".",",":",","%":"%","+":"+","-":"-","E":"E","‰":"‰"},]);
  Globalize.b181291879 = numberFormatterFn(["",,1,0,3,,,,null,,"","#,##0.###","-#,##0.###","-","",numberRound(),"∞","NaN",{".":".",",":",","%":"%","+":"+","-":"-","E":"E","‰":"‰"},]);
  Globalize.b722249502 = numberFormatterFn(["",,1,0,3,,,,3,,"","#,##0.###","-#,##0.###","-","",numberRound(),"∞","NaN",{".":".",",":",","%":"%","+":"+","-":"-","E":"E","‰":"‰"},]);
  Globalize.a340063086 = numberFormatterFn(["",,1,,,,,,3,,"%","#,##0%","-#,##0%%","-","%",numberRound(),"∞","NaN",{".":".",",":",","%":"%","+":"+","-":"-","E":"E","‰":"‰"},]);
  Globalize.b1468696839 = numberFormatterFn(["",,1,0,3,,,,null,,"","#,##0.###","-#,##0.###","-","",numberRound(),"∞","NaN",{".":".",",":",","%":"%","+":"+","-":"-","E":"E","‰":"‰"},]);
  Globalize.b56863867 = numberFormatterFn(["",,1,,,,,,null,,"%","#,##0%","-#,##0%%","-","%",numberRound(),"∞","NaN",{".":".",",":",","%":"%","+":"+","-":"-","E":"E","‰":"‰"},]);
  Globalize.a785028024 = numberFormatterFn(["",,1,0,3,,,,3,,"","#,##0.###","-#,##0.###","-","",numberRound(),"∞","NaN",{".":".",",":",","%":"%","+":"+","-":"-","E":"E","‰":"‰"},]);
  Globalize.a1800402348 = numberFormatterFn(["",,1,,,,,,3,,"%","#,##0%","-#,##0%%","-","%",numberRound(),"∞","NaN",{".":".",",":",","%":"%","+":"+","-":"-","E":"E","‰":"‰"},]);
  Globalize.b1675899250 = numberFormatterFn(["",,1,1,1,,,,3,,"%","#,##0%","-#,##0%%","-","%",numberRound(),"∞","NaN",{".":".",",":",","%":"%","+":"+","-":"-","E":"E","‰":"‰"},]);
  Globalize.b1432985947 = numberFormatterFn(["",,1,1,1,,,,null,,"%","#,##0%","-#,##0%%","-","%",numberRound(),"∞","NaN",{".":".",",":",","%":"%","+":"+","-":"-","E":"E","‰":"‰"},]);
  Globalize.a509085324 = numberFormatterFn(["",,1,1,1,,,,3,,"%","#,##0%","-#,##0%%","-","%",numberRound(),"∞","NaN",{".":".",",":",","%":"%","+":"+","-":"-","E":"E","‰":"‰"},]);
  Globalize.a549462552 = numberFormatterFn(["",,1,0,3,,,,3,,"","#,##0.###","-#,##0.###","-","",numberRound(),"∞","NaN",{".":".",",":",","%":"%","+":"+","-":"-","E":"E","‰":"‰"},]);
  Globalize.a1378886668 = numberFormatterFn(["",,1,,,,,,,,"","0","-0","-","",numberRound(),"∞","NaN",{".":".",",":",","%":"%","+":"+","-":"-","E":"E","‰":"‰"},]);
  Globalize.b2024223860 = numberFormatterFn(["",,3,,,,,,,,"","000","-000","-","",numberRound(),"∞","NaN",{".":".",",":",","%":"%","+":"+","-":"-","E":"E","‰":"‰"},]);
  Globalize.a1673900488 = numberFormatterFn(["",,4,,,,,,,,"","0000","-0000","-","",numberRound(),"∞","NaN",{".":".",",":",","%":"%","+":"+","-":"-","E":"E","‰":"‰"},]);
  Globalize.b203855544 = numberFormatterFn(["",,2,,,,,,,,"","00","-00","-","",numberRound(),"∞","NaN",{".":".",",":",","%":"%","+":"+","-":"-","E":"E","‰":"‰"},]);
  Globalize.a1069192345 = numberFormatterFn(["",,1,0,3,,,,3,,"","#,##0.###","-#,##0.###","-","",numberRound(),"∞","NaN",{".":".",",":",","%":"%","+":"+","-":"-","E":"E","‰":"‰"},]);
  Globalize.a1297611572 = numberFormatterFn(["",,1,0,3,,,,3,,"","#,##0.###","-#,##0.###","-","",numberRound(),"∞","NaN",{".":".",",":",","%":"%","+":"+","-":"-","E":"E","‰":"‰"},]);
  Globalize.b1965900303 = numberParserFn([{".":".",",":",","%":"%","+":"+","-":"-","E":"E","‰":"‰"},,{"infinity":/^∞/,"nan":/^NaN/,"negativePrefix":/^-/,"negativeSuffix":/^/,"number":/^((\d{1,3}(,\d{3})+|\d+)(\.\d+|\.)?|((\d{1,3}(,\d{3})+|\d+))?\.\d+)/,"prefix":/^/,"suffix":/^/}]);
  Globalize.b1452619845 = numberParserFn([{".":".",",":",","%":"%","+":"+","-":"-","E":"E","‰":"‰"},,{"infinity":/^∞/,"nan":/^NaN/,"negativePrefix":/^-/,"negativeSuffix":/^/,"number":/^((\d{1,3}(,\d{3})+|\d+)(\.\d+|\.)?|((\d{1,3}(,\d{3})+|\d+))?\.\d+)/,"prefix":/^/,"suffix":/^/}]);
  Globalize.b390307257 = numberParserFn([{".":".",",":",","%":"%","+":"+","-":"-","E":"E","‰":"‰"},,{"infinity":/^∞/,"nan":/^NaN/,"negativePrefix":/^-/,"negativeSuffix":/^%/,"number":/^(\d{1,3}(,\d{3})+|\d+)/,"prefix":/^/,"suffix":/^%/}]);
  Globalize.b1293124635 = numberParserFn([{".":".",",":",","%":"%","+":"+","-":"-","E":"E","‰":"‰"},,{"infinity":/^∞/,"nan":/^NaN/,"negativePrefix":/^-/,"negativeSuffix":/^/,"number":/^\d+/,"prefix":/^/,"suffix":/^/}]);
  Globalize.a1662346136 = pluralGeneratorFn((function(n) {
    var s = String(n).split('.'), v0 = !s[1];
    return (n == 1 && v0) ? 'one' : 'other';
  }));
  Globalize.b264236978 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"QQQ y, HH:mm","timeSeparator":":","quarters":{"Q":{"3":{"1":"Q1","2":"Q2","3":"Q3","4":"Q4"}}}});
  Globalize.b1360749955 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"EEEE, MMMM d, y","timeSeparator":":","days":{"E":{"4":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.b2037331145 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"EEEE, MMMM d, y","timeSeparator":":","days":{"E":{"4":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.b733216714 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"EEEE, MMMM d, y","timeSeparator":":","days":{"E":{"4":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.b676283814 = dateToPartsFormatterFn({"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"ss","timeSeparator":":"});
  Globalize.b1177353174 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"EEEE, MMMM d, y","timeSeparator":":","days":{"E":{"4":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.a947940663 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"s","timeSeparator":":"});
  Globalize.b1957820202 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"EEEE, MMMM d, y","timeSeparator":":","days":{"E":{"4":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.b682003686 = dateToPartsFormatterFn({"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"mm","timeSeparator":":"});
  Globalize.b1097842231 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"EEEE, MMMM d, y","timeSeparator":":","days":{"E":{"4":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.a947761917 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"m","timeSeparator":":"});
  Globalize.b671838864 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"EEEE, MMMM d, y","timeSeparator":":","days":{"E":{"4":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.b717276230 = dateToPartsFormatterFn({"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"HH","timeSeparator":":"});
  Globalize.a2059952867 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"EEEE, MMMM d, y","timeSeparator":":","days":{"E":{"4":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.a946659650 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"H","timeSeparator":":"});
  Globalize.a227556241 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"EEEE, MMMM d, y","timeSeparator":":","days":{"E":{"4":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.b683910310 = dateToPartsFormatterFn({"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"kk","timeSeparator":":"});
  Globalize.a1533460477 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"EEEE, MMMM d, y","timeSeparator":":","days":{"E":{"4":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.a947702335 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"k","timeSeparator":":"});
  Globalize.b1901528848 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"EEEE, MMMM d, y","timeSeparator":":","days":{"E":{"4":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.b714416294 = dateToPartsFormatterFn({"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"KK","timeSeparator":":"});
  Globalize.a79435479 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"EEEE, MMMM d, y","timeSeparator":":","days":{"E":{"4":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.a946749023 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"K","timeSeparator":":"});
  Globalize.b1379495780 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"EEEE, MMMM d, y","timeSeparator":":","days":{"E":{"4":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.b686770246 = dateToPartsFormatterFn({"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"hh","timeSeparator":":"});
  Globalize.b404886366 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"EEEE, MMMM d, y","timeSeparator":":","days":{"E":{"4":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.a947612962 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"h","timeSeparator":":"});
  Globalize.a1459404622 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"EEEE, MMMM d, y","timeSeparator":":","days":{"E":{"4":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.a1344992136 = dateToPartsFormatterFn({}, {"pattern":"BBBBB","timeSeparator":":"});
  Globalize.b1975584703 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"EEEE, MMMM d, y","timeSeparator":":","days":{"E":{"4":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.a1013190202 = dateToPartsFormatterFn({}, {"pattern":"BBBB","timeSeparator":":"});
  Globalize.a1926202856 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"EEEE, MMMM d, y","timeSeparator":":","days":{"E":{"4":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.b937175736 = dateToPartsFormatterFn({}, {"pattern":"BBB","timeSeparator":":"});
  Globalize.a619740011 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"EEEE, MMMM d, y","timeSeparator":":","days":{"E":{"4":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.b722996102 = dateToPartsFormatterFn({}, {"pattern":"BB","timeSeparator":":"});
  Globalize.a1748993417 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"EEEE, MMMM d, y","timeSeparator":":","days":{"E":{"4":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.a946480904 = dateToPartsFormatterFn({}, {"pattern":"B","timeSeparator":":"});
  Globalize.b1685995908 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"EEEE, MMMM d, y","timeSeparator":":","days":{"E":{"4":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.a562333544 = dateToPartsFormatterFn({}, {"pattern":"bbbbb","timeSeparator":":"});
  Globalize.a1048160611 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"EEEE, MMMM d, y","timeSeparator":":","days":{"E":{"4":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.a295175738 = dateToPartsFormatterFn({}, {"pattern":"bbbb","timeSeparator":":"});
  Globalize.a1007058064 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"EEEE, MMMM d, y","timeSeparator":":","days":{"E":{"4":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.a9463080 = dateToPartsFormatterFn({}, {"pattern":"bbb","timeSeparator":":"});
  Globalize.b683761904 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMMM d, y","timeSeparator":":","months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.b692490118 = dateToPartsFormatterFn({}, {"pattern":"bb","timeSeparator":":"});
  Globalize.a1205402672 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMMM d, y","timeSeparator":":","months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.a947434216 = dateToPartsFormatterFn({}, {"pattern":"b","timeSeparator":":"});
  Globalize.a2065380643 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMMM d, y","timeSeparator":":","months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.b2097562935 = dateToPartsFormatterFn({}, {"pattern":"aaaaa","timeSeparator":":","dayPeriods":{"am":"AM","pm":"PM"}});
  Globalize.b1651502518 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMMM d, y","timeSeparator":":","months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.b621910406 = dateToPartsFormatterFn({}, {"pattern":"aaaa","timeSeparator":":","dayPeriods":{"am":"AM","pm":"PM"}});
  Globalize.b1418736278 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMMM d, y","timeSeparator":":","months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.b20119383 = dateToPartsFormatterFn({}, {"pattern":"aaa","timeSeparator":":","dayPeriods":{"am":"AM","pm":"PM"}});
  Globalize.a959554070 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMMM d, y","timeSeparator":":","months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.b693443430 = dateToPartsFormatterFn({}, {"pattern":"aa","timeSeparator":":","dayPeriods":{"am":"AM","pm":"PM"}});
  Globalize.a1819532041 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMMM d, y","timeSeparator":":","months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.a947404425 = dateToPartsFormatterFn({}, {"pattern":"a","timeSeparator":":","dayPeriods":{"am":"AM","pm":"PM"}});
  Globalize.b1688807760 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMMM d, y","timeSeparator":":","months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.a1106732954 = dateToPartsFormatterFn({}, {"pattern":"cccccc","timeSeparator":":","days":{"c":{"6":{"sun":"Su","mon":"Mo","tue":"Tu","wed":"We","thu":"Th","fri":"Fr","sat":"Sa"}}}});
  Globalize.b1990725213 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMMM d, y","timeSeparator":":","months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.b1072737273 = dateToPartsFormatterFn({}, {"pattern":"ccccc","timeSeparator":":","days":{"c":{"5":{"sun":"S","mon":"M","tue":"T","wed":"W","thu":"T","fri":"F","sat":"S"}}}});
  Globalize.b558758307 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMMM d, y","timeSeparator":":","months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.a1212261882 = dateToPartsFormatterFn({}, {"pattern":"cccc","timeSeparator":":","days":{"c":{"4":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}}});
  Globalize.b612911671 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMMM d, y","timeSeparator":":","months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.a39045543 = dateToPartsFormatterFn({}, {"pattern":"ccc","timeSeparator":":","days":{"c":{"3":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"}}}});
  Globalize.a247066300 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMMM d, y","timeSeparator":":","months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.b691536806 = dateToPartsFormatterFn({"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"cc","timeSeparator":":","firstDay":0});
  Globalize.b999896669 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMMM d, y","timeSeparator":":","months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.a947464007 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"c","timeSeparator":":","firstDay":0});
  Globalize.a802444368 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMMM d, y","timeSeparator":":","months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.b1483350310 = dateToPartsFormatterFn({}, {"pattern":"eeeeee","timeSeparator":":","days":{"e":{"6":{"sun":"Su","mon":"Mo","tue":"Tu","wed":"We","thu":"Th","fri":"Fr","sat":"Sa"}}}});
  Globalize.a1991736580 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMMM d, y","timeSeparator":":","months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.b47911611 = dateToPartsFormatterFn({}, {"pattern":"eeeee","timeSeparator":":","days":{"e":{"5":{"sun":"S","mon":"M","tue":"T","wed":"W","thu":"T","fri":"F","sat":"S"}}}});
  Globalize.a1335614153 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMMM d, y","timeSeparator":":","months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.b1248533126 = dateToPartsFormatterFn({}, {"pattern":"eeee","timeSeparator":":","days":{"e":{"4":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}}});
  Globalize.a1591685327 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMMM d, y","timeSeparator":":","months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.a98210469 = dateToPartsFormatterFn({}, {"pattern":"eee","timeSeparator":":","days":{"e":{"3":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"}}}});
  Globalize.a201896123 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMMM d, y","timeSeparator":":","months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.b689630182 = dateToPartsFormatterFn({"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"ee","timeSeparator":":","firstDay":0});
  Globalize.a1061874094 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMMM d, y","timeSeparator":":","months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.a947523589 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"e","timeSeparator":":","firstDay":0});
  Globalize.a346345493 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMMM d, y","timeSeparator":":","months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.a1303276250 = dateToPartsFormatterFn({}, {"pattern":"EEEEEE","timeSeparator":":","days":{"E":{"6":{"sun":"Su","mon":"Mo","tue":"Tu","wed":"We","thu":"Th","fri":"Fr","sat":"Sa"}}}});
  Globalize.a291682206 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMMM d, y","timeSeparator":":","months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.a734746981 = dateToPartsFormatterFn({}, {"pattern":"EEEEE","timeSeparator":":","days":{"E":{"5":{"sun":"S","mon":"M","tue":"T","wed":"W","thu":"T","fri":"F","sat":"S"}}}});
  Globalize.a176527676 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMMM d, y","timeSeparator":":","months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.b530518662 = dateToPartsFormatterFn({}, {"pattern":"EEEE","timeSeparator":":","days":{"E":{"4":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}}});
  Globalize.a1036505647 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMMM d, y","timeSeparator":":","months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.b848428347 = dateToPartsFormatterFn({}, {"pattern":"EEE","timeSeparator":":","days":{"E":{"3":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"}}}});
  Globalize.a1737071702 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMMM d, y","timeSeparator":":","months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.b720136166 = dateToPartsFormatterFn({}, {"pattern":"EE","timeSeparator":":","days":{"E":{"2":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"}}}});
  Globalize.b494739651 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMMM d, y","timeSeparator":":","months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.a946570277 = dateToPartsFormatterFn({}, {"pattern":"E","timeSeparator":":","days":{"E":{"1":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"}}}});
  Globalize.a2122364151 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMM d, y","timeSeparator":":","months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.a946600068 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"F","timeSeparator":":"});
  Globalize.a1731006794 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMM d, y","timeSeparator":":","months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.b878010810 = dateToPartsFormatterFn({"3":Globalize("en").numberFormatter({"raw":"000"})}, {"pattern":"DDD","timeSeparator":":"});
  Globalize.a1425332113 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMM d, y","timeSeparator":":","months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.b721089478 = dateToPartsFormatterFn({"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"DD","timeSeparator":":"});
  Globalize.b1735762947 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMM d, y","timeSeparator":":","months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.a946540486 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"D","timeSeparator":":"});
  Globalize.b875784976 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMM d, y","timeSeparator":":","months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.b690583494 = dateToPartsFormatterFn({"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"dd","timeSeparator":":"});
  Globalize.b2023181609 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMM d, y","timeSeparator":":","months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.a947493798 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"d","timeSeparator":":"});
  Globalize.a353793180 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMM d, y","timeSeparator":":","months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.a947106515 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"W","timeSeparator":":","firstDay":0,"minDays":1});
  Globalize.b2009657212 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMM d, y","timeSeparator":":","months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.b672470566 = dateToPartsFormatterFn({"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"ww","timeSeparator":":","firstDay":0,"minDays":1});
  Globalize.a986738608 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMM d, y","timeSeparator":":","months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.a948059827 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"w","timeSeparator":":","firstDay":0,"minDays":1});
  Globalize.a1846716579 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMM d, y","timeSeparator":":","months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.b2120814146 = dateToPartsFormatterFn({}, {"pattern":"LLLLL","timeSeparator":":","months":{"L":{"5":{"1":"J","2":"F","3":"M","4":"A","5":"M","6":"J","7":"J","8":"A","9":"S","10":"O","11":"N","12":"D"}}}});
  Globalize.b1334270518 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMM d, y","timeSeparator":":","months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.a1594117050 = dateToPartsFormatterFn({}, {"pattern":"LLLL","timeSeparator":":","months":{"L":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.b1148004535 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMM d, y","timeSeparator":":","months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.b641351106 = dateToPartsFormatterFn({}, {"pattern":"LLL","timeSeparator":":","months":{"L":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.b752707221 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMM d, y","timeSeparator":":","months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.b713462982 = dateToPartsFormatterFn({"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"LL","timeSeparator":":"});
  Globalize.a871028823 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMM d, y","timeSeparator":":","months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.a946778814 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"L","timeSeparator":":"});
  Globalize.b862224207 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMM d, y","timeSeparator":":","months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.a539082333 = dateToPartsFormatterFn({}, {"pattern":"MMMMM","timeSeparator":":","months":{"M":{"5":{"1":"J","2":"F","3":"M","4":"A","5":"M","6":"J","7":"J","8":"A","9":"S","10":"O","11":"N","12":"D"}}}});
  Globalize.b440040574 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMM d, y","timeSeparator":":","months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.b1783764102 = dateToPartsFormatterFn({}, {"pattern":"MMMM","timeSeparator":":","months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.b436507768 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMM d, y","timeSeparator":":","months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.b611768643 = dateToPartsFormatterFn({}, {"pattern":"MMM","timeSeparator":":","months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.b1748552780 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMM d, y","timeSeparator":":","months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.b712509670 = dateToPartsFormatterFn({"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"MM","timeSeparator":":"});
  Globalize.b888574809 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMM d, y","timeSeparator":":","months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.a946808605 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"M","timeSeparator":":"});
  Globalize.b1429309234 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMM d, y","timeSeparator":":","months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.a1806075065 = dateToPartsFormatterFn({}, {"pattern":"qqqqq","timeSeparator":":","quarters":{"q":{"5":{"1":"1","2":"2","3":"3","4":"4"}}}});
  Globalize.b42691643 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMM d, y","timeSeparator":":","months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.a1166566010 = dateToPartsFormatterFn({}, {"pattern":"qqqq","timeSeparator":":","quarters":{"q":{"4":{"1":"1st quarter","2":"2nd quarter","3":"3rd quarter","4":"4th quarter"}}}});
  Globalize.b352596253 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMM d, y","timeSeparator":":","months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.a453200025 = dateToPartsFormatterFn({}, {"pattern":"qqq","timeSeparator":":","quarters":{"q":{"3":{"1":"Q1","2":"Q2","3":"Q3","4":"Q4"}}}});
  Globalize.a507381718 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMM d, y","timeSeparator":":","months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.b678190438 = dateToPartsFormatterFn({"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"qq","timeSeparator":":"});
  Globalize.a55116861 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMM d, y","timeSeparator":":","months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.a947881081 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"q","timeSeparator":":"});
  Globalize.a282287734 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMM d, y","timeSeparator":":","months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.b1706233639 = dateToPartsFormatterFn({}, {"pattern":"QQQQQ","timeSeparator":":","quarters":{"Q":{"5":{"1":"1","2":"2","3":"3","4":"4"}}}});
  Globalize.a2011541116 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"M/d/yy","timeSeparator":":"});
  Globalize.a747080009 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"M/d/y","timeSeparator":":"});
  Globalize.a1884580474 = dateToPartsFormatterFn({}, {"pattern":"QQQQ","timeSeparator":":","quarters":{"Q":{"4":{"1":"1st quarter","2":"2nd quarter","3":"3rd quarter","4":"4th quarter"}}}});
  Globalize.a1219455375 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"M/d/yy","timeSeparator":":"});
  Globalize.b493438791 = dateToPartsFormatterFn({}, {"pattern":"QQQ","timeSeparator":":","quarters":{"Q":{"3":{"1":"Q1","2":"Q2","3":"Q3","4":"Q4"}}}});
  Globalize.b806200874 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"M/d/yy","timeSeparator":":"});
  Globalize.b708696422 = dateToPartsFormatterFn({"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"QQ","timeSeparator":":"});
  Globalize.a954204546 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"M/d/yy","timeSeparator":":"});
  Globalize.a946927769 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"Q","timeSeparator":":"});
  Globalize.a1814182517 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"M/d/yy","timeSeparator":":"});
  Globalize.a947910872 = dateToPartsFormatterFn({}, {"pattern":"r","timeSeparator":":"});
  Globalize.a1760234268 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"M/d/yy","timeSeparator":":"});
  Globalize.a631335034 = dateToPartsFormatterFn({"4":Globalize("en").numberFormatter({"raw":"0000"})}, {"pattern":"YYYY","timeSeparator":":","firstDay":0,"minDays":1});
  Globalize.a2138406839 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"M/d/yy","timeSeparator":":"});
  Globalize.b256779087 = dateToPartsFormatterFn({"3":Globalize("en").numberFormatter({"raw":"000"})}, {"pattern":"YYY","timeSeparator":":","firstDay":0,"minDays":1});
  Globalize.a53777097 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"M/d/yy","timeSeparator":":"});
  Globalize.b701069926 = dateToPartsFormatterFn({"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"YY","timeSeparator":":","firstDay":0,"minDays":1});
  Globalize.b618261195 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"M/d/yy","timeSeparator":":"});
  Globalize.a947166097 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"Y","timeSeparator":":","firstDay":0,"minDays":1});
  Globalize.a241716776 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"M/d/yy","timeSeparator":":"});
  Globalize.b385354461 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"EEEE, MMMM d, y","timeSeparator":":","days":{"E":{"4":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.b1845821937 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"M/d/yy","timeSeparator":":"});
  Globalize.b86679430 = dateToPartsFormatterFn({"4":Globalize("en").numberFormatter({"raw":"0000"})}, {"pattern":"yyyy","timeSeparator":":"});
  Globalize.a636609124 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"M/d/yy","timeSeparator":":"});
  Globalize.b1543739875 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"EEEE, MMMM d, y","timeSeparator":":","days":{"E":{"4":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.b2067227024 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"M/d/yy","timeSeparator":":"});
  Globalize.a689859729 = dateToPartsFormatterFn({"3":Globalize("en").numberFormatter({"raw":"000"})}, {"pattern":"yyy","timeSeparator":":"});
  Globalize.a359477404 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"M/d/yy","timeSeparator":":"});
  Globalize.b670563942 = dateToPartsFormatterFn({"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"yy","timeSeparator":":"});
  Globalize.a1458101174 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"M/d/yy","timeSeparator":":"});
  Globalize.a948119409 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"y","timeSeparator":":"});
  Globalize.a881734621 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"M/d/yy","timeSeparator":":"});
  Globalize.a1759572643 = dateToPartsFormatterFn({}, {"pattern":"GGGGG","timeSeparator":":","eras":{"0":"B","1":"A","0-alt-variant":"BCE","1-alt-variant":"CE"}});
  Globalize.b894553629 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"M/d/yy","timeSeparator":":"});
  Globalize.a1303653626 = dateToPartsFormatterFn({}, {"pattern":"GGGG","timeSeparator":":","eras":{"0":"Before Christ","1":"Anno Domini","0-alt-variant":"Before Common Era","1-alt-variant":"Common Era"}});
  Globalize.a36060879 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"M/d/yy","timeSeparator":":"});
  Globalize.b789263421 = dateToPartsFormatterFn({}, {"pattern":"GGG","timeSeparator":":","eras":{"0":"BC","1":"AD","0-alt-variant":"BCE","1-alt-variant":"CE"}});
  Globalize.a896038850 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"M/d/yy","timeSeparator":":"});
  Globalize.b718229542 = dateToPartsFormatterFn({}, {"pattern":"GG","timeSeparator":":","eras":{"0":"BC","1":"AD","0-alt-variant":"BCE","1-alt-variant":"CE"}});
  Globalize.b107534039 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"M/d/yy","timeSeparator":":"});
  Globalize.a946629859 = dateToPartsFormatterFn({}, {"pattern":"G","timeSeparator":":","eras":{"0":"BC","1":"AD","0-alt-variant":"BCE","1-alt-variant":"CE"}});
  Globalize.b554243062 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"M/d/yy","timeSeparator":":"});
  Globalize.b562514272 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"QQQQ y","timeSeparator":":","quarters":{"Q":{"4":{"1":"1st quarter","2":"2nd quarter","3":"3rd quarter","4":"4th quarter"}}}});
  Globalize.b1095287896 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"M/d/yy","timeSeparator":":"});
  Globalize.a474623510 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"EEEE, MMMM d, y","timeSeparator":":","days":{"E":{"4":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.b235309925 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"M/d/yy","timeSeparator":":"});
  Globalize.a1782927315 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"QQQ y","timeSeparator":":","quarters":{"Q":{"3":{"1":"Q1","2":"Q2","3":"Q3","4":"Q4"}}}});
  Globalize.b706980926 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"M/d/yy","timeSeparator":":"});
  Globalize.a64793641 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMM d, y","timeSeparator":":","months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.b1266316719 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"M/d/yy","timeSeparator":":"});
  Globalize.a1981853560 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"E, MMM d, y","timeSeparator":":","days":{"E":{"1":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"}}},"months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.b2072821078 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"EEEE, MMMM d, y 'at' h:mm:ss a zzzz","timeSeparator":":","days":{"E":{"4":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}},"dayPeriods":{"am":"AM","pm":"PM"},"gmtFormat":"GMT{0}","gmtZeroFormat":"GMT","hourFormat":"+HH:mm;-HH:mm"});
  Globalize.a1664597463 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMM y","timeSeparator":":","months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.a1331619670 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"h:mm:ss a zzzz","timeSeparator":":","dayPeriods":{"am":"AM","pm":"PM"},"gmtFormat":"GMT{0}","gmtZeroFormat":"GMT","hourFormat":"+HH:mm;-HH:mm"});
  Globalize.a1657894488 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"E, M/d/y","timeSeparator":":","days":{"E":{"1":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"}}}});
  Globalize.b2103369655 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"h:mm:ss a z","timeSeparator":":","dayPeriods":{"am":"AM","pm":"PM"},"gmtFormat":"GMT{0}","gmtZeroFormat":"GMT","hourFormat":["+H;-H","+H:mm;-H:mm"]});
  Globalize.b114508617 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"M/y","timeSeparator":":"});
  Globalize.b616051728 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"h:mm:ss a","timeSeparator":":","dayPeriods":{"am":"AM","pm":"PM"}});
  Globalize.b696469024 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"y","timeSeparator":":"});
  Globalize.a953373795 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"h:mm a","timeSeparator":":","dayPeriods":{"am":"AM","pm":"PM"}});
  Globalize.b124458811 = dateToPartsFormatterFn({"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"mm:ss","timeSeparator":":"});
  Globalize.b1212843107 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"MMMM d, y 'at' h:mm:ss a z","timeSeparator":":","months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}},"dayPeriods":{"am":"AM","pm":"PM"},"gmtFormat":"GMT{0}","gmtZeroFormat":"GMT","hourFormat":["+H;-H","+H:mm;-H:mm"]});
  Globalize.a290383979 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"h:mm:ss a","timeSeparator":":","dayPeriods":{"am":"AM","pm":"PM"}});
  Globalize.b240846071 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"h:mm:ss a zzzz","timeSeparator":":","dayPeriods":{"am":"AM","pm":"PM"},"gmtFormat":"GMT{0}","gmtZeroFormat":"GMT","hourFormat":"+HH:mm;-HH:mm"});
  Globalize.b129255162 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"h:mm a","timeSeparator":":","dayPeriods":{"am":"AM","pm":"PM"}});
  Globalize.a619131900 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"h:mm:ss a z","timeSeparator":":","dayPeriods":{"am":"AM","pm":"PM"},"gmtFormat":"GMT{0}","gmtZeroFormat":"GMT","hourFormat":["+H;-H","+H:mm;-H:mm"]});
  Globalize.b696975471 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"h a","timeSeparator":":","dayPeriods":{"am":"AM","pm":"PM"}});
  Globalize.a72859363 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"h:mm:ss a","timeSeparator":":","dayPeriods":{"am":"AM","pm":"PM"}});
  Globalize.b697094635 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"d","timeSeparator":":"});
  Globalize.b548423920 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"h:mm a","timeSeparator":":","dayPeriods":{"am":"AM","pm":"PM"}});
  Globalize.b154458348 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"M/d","timeSeparator":":"});
  Globalize.a481468996 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"MMM d, y, h:mm:ss a","timeSeparator":":","months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}},"dayPeriods":{"am":"AM","pm":"PM"}});
  Globalize.a1269826356 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMM d","timeSeparator":":","months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.b2016808592 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"h:mm:ss a zzzz","timeSeparator":":","dayPeriods":{"am":"AM","pm":"PM"},"gmtFormat":"GMT{0}","gmtZeroFormat":"GMT","hourFormat":"+HH:mm;-HH:mm"});
  Globalize.a690550229 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMMM d","timeSeparator":":","months":{"M":{"4":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}}});
  Globalize.b1156830621 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"h:mm:ss a z","timeSeparator":":","dayPeriods":{"am":"AM","pm":"PM"},"gmtFormat":"GMT{0}","gmtZeroFormat":"GMT","hourFormat":["+H;-H","+H:mm;-H:mm"]});
  Globalize.b547138584 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"E, MMM d, h:mm a","timeSeparator":":","days":{"E":{"1":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"}}},"months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}},"dayPeriods":{"am":"AM","pm":"PM"}});
  Globalize.b1525106806 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"h:mm:ss a","timeSeparator":":","dayPeriods":{"am":"AM","pm":"PM"}});
  Globalize.a683162061 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"E, MMM d","timeSeparator":":","days":{"E":{"1":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"}}},"months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.a231312777 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"h:mm a","timeSeparator":":","dayPeriods":{"am":"AM","pm":"PM"}});
  Globalize.b513287828 = dateToPartsFormatterFn({}, {"pattern":"LLL","timeSeparator":":","months":{"L":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}}});
  Globalize.b1505074289 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"M/d/yy, h:mm a","timeSeparator":":","dayPeriods":{"am":"AM","pm":"PM"}});
  Globalize.b519990803 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"E, M/d","timeSeparator":":","days":{"E":{"1":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"}}}});
  Globalize.b1148972165 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"h:mm:ss a zzzz","timeSeparator":":","dayPeriods":{"am":"AM","pm":"PM"},"gmtFormat":"GMT{0}","gmtZeroFormat":"GMT","hourFormat":"+HH:mm;-HH:mm"});
  Globalize.b697779828 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"L","timeSeparator":":"});
  Globalize.b288994194 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"h:mm:ss a z","timeSeparator":":","dayPeriods":{"am":"AM","pm":"PM"},"gmtFormat":"GMT{0}","gmtZeroFormat":"GMT","hourFormat":["+H;-H","+H:mm;-H:mm"]});
  Globalize.b625748853 = dateToPartsFormatterFn({"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"HH:mm:ss","timeSeparator":":"});
  Globalize.b757955883 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"h:mm:ss a","timeSeparator":":","dayPeriods":{"am":"AM","pm":"PM"}});
  Globalize.b158807834 = dateToPartsFormatterFn({"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"HH:mm","timeSeparator":":"});
  Globalize.a1364438238 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"h:mm a","timeSeparator":":","dayPeriods":{"am":"AM","pm":"PM"}});
  Globalize.b697928783 = dateToPartsFormatterFn({"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"HH","timeSeparator":":"});
  Globalize.a1420924 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"h:mm:ss a zzzz","timeSeparator":":","dayPeriods":{"am":"AM","pm":"PM"},"gmtFormat":"GMT{0}","gmtZeroFormat":"GMT","hourFormat":"+HH:mm;-HH:mm"});
  Globalize.a1541895074 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMM d, y G","timeSeparator":":","months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}},"eras":{"0":"BC","1":"AD","0-alt-variant":"BCE","1-alt-variant":"CE"}});
  Globalize.a861398895 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"h:mm:ss a z","timeSeparator":":","dayPeriods":{"am":"AM","pm":"PM"},"gmtFormat":"GMT{0}","gmtZeroFormat":"GMT","hourFormat":["+H;-H","+H:mm;-H:mm"]});
  Globalize.a1513632567 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"E, MMM d, y G, h:mm:ss a","timeSeparator":":","days":{"E":{"1":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"}}},"months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}},"eras":{"0":"BC","1":"AD","0-alt-variant":"BCE","1-alt-variant":"CE"},"dayPeriods":{"am":"AM","pm":"PM"}});
  Globalize.a963207574 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"h:mm:ss a","timeSeparator":":","dayPeriods":{"am":"AM","pm":"PM"}});
  Globalize.a527357727 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"E, MMM d, y G","timeSeparator":":","days":{"E":{"1":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"}}},"months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}},"eras":{"0":"BC","1":"AD","0-alt-variant":"BCE","1-alt-variant":"CE"}});
  Globalize.b1628081667 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"h:mm a","timeSeparator":":","dayPeriods":{"am":"AM","pm":"PM"}});
  Globalize.b781606082 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"MMM y G","timeSeparator":":","months":{"M":{"3":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}}},"eras":{"0":"BC","1":"AD","0-alt-variant":"BCE","1-alt-variant":"CE"}});
  Globalize.b698018156 = dateToPartsFormatterFn({}, {"pattern":"ccc","timeSeparator":":","days":{"c":{"3":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"}}}});
  Globalize.b159373863 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"y G","timeSeparator":":","eras":{"0":"BC","1":"AD","0-alt-variant":"BCE","1-alt-variant":"CE"}});
  Globalize.b745985329 = dateToPartsFormatterFn({"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"E HH:mm","timeSeparator":":","days":{"E":{"1":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"}}}});
  Globalize.b732249182 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"E h:mm:ss a","timeSeparator":":","days":{"E":{"1":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"}}},"dayPeriods":{"am":"AM","pm":"PM"}});
  Globalize.b1648382014 = dateToPartsFormatterFn({"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"E HH:mm:ss","timeSeparator":":","days":{"E":{"1":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"}}}});
  Globalize.b716432657 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"}),"2":Globalize("en").numberFormatter({"raw":"00"})}, {"pattern":"E h:mm a","timeSeparator":":","days":{"E":{"1":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"}}},"dayPeriods":{"am":"AM","pm":"PM"}});
  Globalize.b161846516 = dateToPartsFormatterFn({"1":Globalize("en").numberFormatter({"raw":"0"})}, {"pattern":"d E","timeSeparator":":","days":{"E":{"1":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"}}}});
  Globalize.a800428129 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"long","datetime":"medium","time":"medium"}));
  Globalize.b867606024 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"Ehm"}));
  Globalize.b1123656263 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"Ehms"}));
  Globalize.b2039789095 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"EHms"}));
  Globalize.b995534416 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"Gy"}));
  Globalize.b897158696 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"EHm"}));
  Globalize.b30323705 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"GyMMM"}));
  Globalize.a1491766237 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"E"}));
  Globalize.a955216296 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"GyMMMEd"}));
  Globalize.a561702726 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"time":"short"}));
  Globalize.a385327118 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"GyMMMEdhms"}));
  Globalize.a127047021 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"time":"medium"}));
  Globalize.b938155015 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"GyMMMd"}));
  Globalize.a1763321094 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"time":"long"}));
  Globalize.a1491855610 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"H"}));
  Globalize.a903343123 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"time":"full"}));
  Globalize.b994968387 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"Hm"}));
  Globalize.b221366027 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"datetime":"short","time":"short"}));
  Globalize.b776922220 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"Hms"}));
  Globalize.a1621719454 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"datetime":"short","time":"medium"}));
  Globalize.a1492004565 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"M"}));
  Globalize.a1045324151 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"datetime":"short","time":"long"}));
  Globalize.b671164170 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"MEd"}));
  Globalize.a185346180 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"datetime":"short","time":"full"}));
  Globalize.b664461195 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"MMM"}));
  Globalize.b753791912 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"datetime":"short"}));
  Globalize.a1434444438 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"MMMEd"}));
  Globalize.b1683979182 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"datetime":"medium","time":"short"}));
  Globalize.b119280015 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"MMMEdhm"}));
  Globalize.b769615391 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"datetime":"medium","time":"medium"}));
  Globalize.a1441832606 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"MMMMd"}));
  Globalize.a1552332410 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"datetime":"medium","time":"long"}));
  Globalize.a878419275 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"MMMd"}));
  Globalize.a692354439 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"datetime":"medium","time":"full"}));
  Globalize.b990618901 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"Md"}));
  Globalize.b1998581093 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"datetime":"medium"}));
  Globalize.a1492689758 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"d"}));
  Globalize.a785894425 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"datetime":"long","time":"short"}));
  Globalize.a1492808922 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"h"}));
  Globalize.b1512944902 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"datetime":"long","time":"medium"}));
  Globalize.b965415715 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"hm"}));
  Globalize.a385079763 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"datetime":"long","time":"long"}));
  Globalize.a139210612 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"hms"}));
  Globalize.b474898208 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"datetime":"long","time":"full"}));
  Globalize.b960619364 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"ms"}));
  Globalize.b1604250188 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"datetime":"long"}));
  Globalize.a1493315369 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"y"}));
  Globalize.b2007275156 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"datetime":"full","time":"short"}));
  Globalize.b950669170 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"yM"}));
  Globalize.a2093111303 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"datetime":"full","time":"medium"}));
  Globalize.a1266487407 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"yMEd"}));
  Globalize.a1957545504 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"datetime":"full","time":"long"}));
  Globalize.a1273190382 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"yMMM"}));
  Globalize.a1097567533 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"datetime":"full","time":"full"}));
  Globalize.b498196529 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"yMMMEd"}));
  Globalize.a1830739137 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"datetime":"full"}));
  Globalize.a816076018 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"yMMMd"}));
  Globalize.a878688744 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"short","time":"short"}));
  Globalize.a1391520234 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"yQQQ"}));
  Globalize.a1363678987 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"short","time":"medium"}));
  Globalize.a1550680229 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"yQQQHm"}));
  Globalize.a249525796 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"short","time":"long"}));
  Globalize.a188768105 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"yQQQQ"}));
  Globalize.b610452175 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"short","time":"full"}));
  Globalize.b618459654 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"G"}));
  Globalize.b475148525 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"short","datetime":"short","time":"short"}));
  Globalize.b1991364189 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"GG"}));
  Globalize.b1950570688 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"short","datetime":"short","time":"medium"}));
  Globalize.b1601731814 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"GGG"}));
  Globalize.b902525031 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"short","datetime":"short","time":"long"}));
  Globalize.a1886937219 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"GGGG"}));
  Globalize.b1762503002 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"short","datetime":"short","time":"full"}));
  Globalize.b1633472454 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"GGGGG"}));
  Globalize.a1814609402 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"short","datetime":"short"}));
  Globalize.b616970104 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"y"}));
  Globalize.b961302028 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"short","datetime":"medium","time":"short"}));
  Globalize.b1943698589 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"yy"}));
  Globalize.a158539903 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"short","datetime":"medium","time":"medium"}));
  Globalize.b122608664 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"yyy"}));
  Globalize.a438571941 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"short","datetime":"medium","time":"full"}));
  Globalize.a312448313 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"short","datetime":"medium"}));
  Globalize.a496604163 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"yyyy"}));
  Globalize.b1161954757 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"short","datetime":"long","time":"short"}));
  Globalize.b1766727400 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"short","datetime":"long","time":"medium"}));
  Globalize.b617923416 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"Y"}));
  Globalize.b1201774735 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"short","datetime":"long","time":"long"}));
  Globalize.b1974204573 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"YY"}));
  Globalize.b2061752706 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"short","datetime":"long","time":"full"}));
  Globalize.b1069247480 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"YYY"}));
  Globalize.a1388095442 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"short","datetime":"long"}));
  Globalize.a1214618627 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"YYYY"}));
  Globalize.a339842958 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"short","datetime":"full","time":"short"}));
  Globalize.b617178641 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"r"}));
  Globalize.a1839328805 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"short","datetime":"full","time":"medium"}));
  Globalize.b618161744 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"Q"}));
  Globalize.a370691006 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"short","datetime":"full","time":"long"}));
  Globalize.b1981831069 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"QQ"}));
  Globalize.b489286965 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"short","datetime":"full","time":"full"}));
  Globalize.b1305907184 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"QQQ"}));
  Globalize.a528117471 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"short","datetime":"full"}));
  Globalize.b1827103229 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"QQQQ"}));
  Globalize.a1298549912 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"short","datetime":"medium","time":"long"}));
  Globalize.b804311440 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"QQQQQ"}));
  Globalize.b93641787 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"short"}));
  Globalize.b617208432 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"q"}));
  Globalize.b1942019649 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"medium","time":"short"}));
  Globalize.b1951325085 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"qq"}));
  Globalize.b178935276 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"medium","time":"medium"}));
  Globalize.b359268368 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"qqq"}));
  Globalize.b1642580115 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"medium","time":"long"}));
  Globalize.a1749849603 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"qqqq"}));
  Globalize.a1792409210 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"medium","time":"full"}));
  Globalize.b1586970032 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"qqqqq"}));
  Globalize.b1885728292 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"medium","datetime":"short","time":"short"}));
  Globalize.b618280908 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"M"}));
  Globalize.a1566096791 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"medium","datetime":"short","time":"medium"}));
  Globalize.b1985644317 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"MM"}));
  Globalize.b809480272 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"medium","datetime":"short","time":"long"}));
  Globalize.b1424237036 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"MMM"}));
  Globalize.b1669458243 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"medium","datetime":"short","time":"full"}));
  Globalize.b1200480509 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"MMMM"}));
  Globalize.a1943167569 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"medium","datetime":"short"}));
  Globalize.a1441004532 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"MMMMM"}));
  Globalize.b1739601845 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"medium","datetime":"medium","time":"short"}));
  Globalize.b618310699 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"L"}));
  Globalize.a1801049352 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"medium","datetime":"medium","time":"medium"}));
  Globalize.b1986597629 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"LL"}));
  Globalize.b972007826 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"medium","datetime":"medium","time":"full"}));
  Globalize.b1453819499 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"LLL"}));
  Globalize.a2784194 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"medium","datetime":"medium"}));
  Globalize.b2117566653 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"LLLL"}));
  Globalize.b1068909998 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"medium","datetime":"long","time":"short"}));
  Globalize.b1218891947 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"LLLLL"}));
  Globalize.a1117660129 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"medium","datetime":"long","time":"medium"}));
  Globalize.b617029686 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"w"}));
  Globalize.a48152698 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"medium","datetime":"long","time":"long"}));
  Globalize.b1945605213 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"ww"}));
  Globalize.b811825273 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"medium","datetime":"long","time":"full"}));
  Globalize.b617982998 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"W"}));
  Globalize.a699505819 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"medium","datetime":"long"}));
  Globalize.b617595715 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"d"}));
  Globalize.a432887717 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"medium","datetime":"full","time":"short"}));
  Globalize.b1963718141 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"dd"}));
  Globalize.a428749038 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"medium","datetime":"full","time":"medium"}));
  Globalize.b618549027 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"D"}));
  Globalize.a1620618439 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"medium","datetime":"full","time":"long"}));
  Globalize.b1994224125 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"DD"}));
  Globalize.a760640468 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"medium","datetime":"full","time":"full"}));
  Globalize.b1690479203 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"DDD"}));
  Globalize.b160472152 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"medium","datetime":"full"}));
  Globalize.b618489445 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"F"}));
  Globalize.b112029855 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"medium","datetime":"medium","time":"long"}));
  Globalize.b618519236 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"E"}));
  Globalize.a1286203598 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"medium"}));
  Globalize.b1993270813 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"EE"}));
  Globalize.b9903930 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"long","time":"short"}));
  Globalize.b1660896740 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"EEE"}));
  Globalize.b412890131 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"long","time":"medium"}));
  Globalize.a52764931 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"EEEE"}));
  Globalize.b2134443130 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"long","time":"long"}));
  Globalize.a1636669180 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"EEEEE"}));
  Globalize.a1300546195 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"long","time":"full"}));
  Globalize.b801906653 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"EEEEEE"}));
  Globalize.b1506881675 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"long","datetime":"short","time":"short"}));
  Globalize.b617565924 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"e"}));
  Globalize.a425440030 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"long","datetime":"short","time":"medium"}));
  Globalize.b1962764829 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"ee"}));
  Globalize.b381617417 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"long","datetime":"short","time":"long"}));
  Globalize.b714257924 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"eee"}));
  Globalize.b1241595388 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"long","datetime":"short","time":"full"}));
  Globalize.b665249533 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"eeee"}));
  Globalize.b1368963624 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"long","datetime":"short"}));
  Globalize.a854010588 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"eeeee"}));
  Globalize.a1414708690 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"long","datetime":"medium","time":"short"}));
  Globalize.a706434083 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"eeeeee"}));
  Globalize.a405932315 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"long","datetime":"medium"}));
  Globalize.b617625506 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"c"}));
  Globalize.b641047143 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"long","datetime":"long","time":"short"}));
  Globalize.b1964671453 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"cc"}));
  Globalize.a1496506746 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"long","datetime":"long","time":"medium"}));
  Globalize.b773422850 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"ccc"}));
  Globalize.a1585975379 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"long","datetime":"long","time":"long"}));
  Globalize.a1795545475 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"cccc"}));
  Globalize.a725997408 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"long","datetime":"long","time":"full"}));
  Globalize.b170815074 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"ccccc"}));
  Globalize.b792810444 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"long","datetime":"long"}));
  Globalize.b998449949 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"cccccc"}));
  Globalize.a860750572 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"long","datetime":"full","time":"short"}));
  Globalize.b617685088 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"a"}));
  Globalize.a807595655 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"long","datetime":"full","time":"medium"}));
  Globalize.b1966578077 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"aa"}));
  Globalize.b1136526176 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"long","datetime":"full","time":"long"}));
  Globalize.b832587776 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"aaa"}));
  Globalize.b1996504147 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"long","datetime":"full","time":"full"}));
  Globalize.b38626813 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"aaaa"}));
  Globalize.b1652788415 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"long","datetime":"full"}));
  Globalize.b1195640736 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"aaaaa"}));
  Globalize.b998007069 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"Ed"}));
  Globalize.b617655297 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"b"}));
  Globalize.a266816762 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"long","datetime":"medium","time":"long"}));
  Globalize.b1965624765 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"bb"}));
  Globalize.b593161209 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"long","datetime":"medium","time":"full"}));
  Globalize.b803005313 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"bbb"}));
  Globalize.a218160295 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"long"}));
  Globalize.a878459331 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"bbbb"}));
  Globalize.a1491893785 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"full","time":"short"}));
  Globalize.a1464255743 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"bbbbb"}));
  Globalize.b1101801222 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"full","time":"medium"}));
  Globalize.b618608609 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"B"}));
  Globalize.b561977389 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"full","time":"long"}));
  Globalize.b1996130749 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"BB"}));
  Globalize.b1421955360 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"full","time":"full"}));
  Globalize.b1749644129 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"BBB"}));
  Globalize.b1178823870 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"full","datetime":"short","time":"short"}));
  Globalize.a1596473795 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"BBBB"}));
  Globalize.a2005297393 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"full","datetime":"short","time":"medium"}));
  Globalize.b2048052961 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"BBBBB"}));
  Globalize.a875891082 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"full","datetime":"short","time":"long"}));
  Globalize.b617476551 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"h"}));
  Globalize.a15913111 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"full","datetime":"short","time":"full"}));
  Globalize.b1959904893 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"hh"}));
  Globalize.a929431979 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"full","datetime":"short"}));
  Globalize.b618340490 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"K"}));
  Globalize.b1300401243 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"full","datetime":"medium","time":"short"}));
  Globalize.b1987550941 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"KK"}));
  Globalize.b1763601170 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"full","datetime":"medium","time":"medium"}));
  Globalize.b617387178 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"k"}));
  Globalize.a594874567 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"full","datetime":"medium","time":"long"}));
  Globalize.b1957044957 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"kk"}));
  Globalize.b265103404 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"full","datetime":"medium","time":"full"}));
  Globalize.b618429863 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"H"}));
  Globalize.b1358248024 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"full","datetime":"medium"}));
  Globalize.b1990410877 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"HH"}));
  Globalize.a616461356 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"full","datetime":"long","time":"short"}));
  Globalize.b617327596 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"m"}));
  Globalize.a1824564551 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"full","datetime":"long","time":"medium"}));
  Globalize.b1955138333 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"mm"}));
  Globalize.a241066848 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"full","datetime":"long","time":"long"}));
  Globalize.b617148850 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"s"}));
  Globalize.b618911123 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"full","datetime":"long","time":"full"}));
  Globalize.b1949418461 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"raw":"ss"}));
  Globalize.b1411405311 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"full","datetime":"long"}));
  Globalize.a595906642 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"skeleton":"yMd"}));
  Globalize.a2118259071 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"full","datetime":"full","time":"short"}));
  Globalize.b641817676 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"full"}));
  Globalize.a2023584014 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"full","datetime":"full"}));
  Globalize.a953554618 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"full","datetime":"full","time":"full"}));
  Globalize.a1813532589 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"full","datetime":"full","time":"long"}));
  Globalize.a1135653460 = dateFormatterFn(Globalize("en").dateToPartsFormatter({"date":"full","datetime":"full","time":"medium"}));
  Globalize.b269196400 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMM d, y","digitsRe":/\d/,"gregorian/months/format/abbreviated":[["7",/^Jul/],["1",/^Jan/],["3",/^Mar/],["4",/^Apr/],["5",/^May/],["6",/^Jun/],["2",/^Feb/],["8",/^Aug/],["9",/^Sep/],["10",/^Oct/],["11",/^Nov/],["12",/^Dec/]]});
  Globalize.b1823007369 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"h:mm a","digitsRe":/\d/,"gregorian/dayPeriods/format/wide":[["am",/^AM/],["am-alt-variant",/^am/],["pm",/^PM/],["pm-alt-variant",/^pm/]]});
  Globalize.b784521892 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"h:mm:ss a","digitsRe":/\d/,"gregorian/dayPeriods/format/wide":[["am",/^AM/],["am-alt-variant",/^am/],["pm",/^PM/],["pm-alt-variant",/^pm/]]});
  Globalize.a716563637 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"h:mm:ss a z","digitsRe":/\d/,"gregorian/dayPeriods/format/wide":[["am",/^AM/],["am-alt-variant",/^am/],["pm",/^PM/],["pm-alt-variant",/^pm/]],"timeZoneNames/gmtZeroFormat":"GMT","timeZoneNames/hourFormat":[/^GMT\+((\d){1,2}):((\d){2})|GMT-((\d){1,2}):((\d){2})/,/^GMT\+((\d){1,2})|GMT-((\d){1,2})/],"timeZoneNames/gmtZeroFormatRe":/^GMT/,"x":[/^\+((\d){2})((\d){2})|-((\d){2})((\d){2})/,/^\+((\d){2})|-((\d){2})/]});
  Globalize.b143414334 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"h:mm:ss a zzzz","digitsRe":/\d/,"gregorian/dayPeriods/format/wide":[["am",/^AM/],["am-alt-variant",/^am/],["pm",/^PM/],["pm-alt-variant",/^pm/]],"timeZoneNames/gmtZeroFormat":"GMT","timeZoneNames/hourFormat":[/^GMT\+((\d){2}):((\d){2})|GMT-((\d){2}):((\d){2})/],"timeZoneNames/gmtZeroFormatRe":/^GMT/,"x":[/^\+((\d){2})((\d){2})((\d){2})|-((\d){2})((\d){2})((\d){2})/,/^\+((\d){2})((\d){2})|-((\d){2})((\d){2})/]});
  Globalize.b1801172188 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"h:mm a","digitsRe":/\d/,"gregorian/dayPeriods/format/wide":[["am",/^AM/],["am-alt-variant",/^am/],["pm",/^PM/],["pm-alt-variant",/^pm/]]});
  Globalize.b107631281 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"h:mm:ss a","digitsRe":/\d/,"gregorian/dayPeriods/format/wide":[["am",/^AM/],["am-alt-variant",/^am/],["pm",/^PM/],["pm-alt-variant",/^pm/]]});
  Globalize.b1083847320 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"h:mm:ss a z","digitsRe":/\d/,"gregorian/dayPeriods/format/wide":[["am",/^AM/],["am-alt-variant",/^am/],["pm",/^PM/],["pm-alt-variant",/^pm/]],"timeZoneNames/gmtZeroFormat":"GMT","timeZoneNames/hourFormat":[/^GMT\+((\d){1,2}):((\d){2})|GMT-((\d){1,2}):((\d){2})/,/^GMT\+((\d){1,2})|GMT-((\d){1,2})/],"timeZoneNames/gmtZeroFormatRe":/^GMT/,"x":[/^\+((\d){2})((\d){2})|-((\d){2})((\d){2})/,/^\+((\d){2})|-((\d){2})/]});
  Globalize.b1943825291 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"h:mm:ss a zzzz","digitsRe":/\d/,"gregorian/dayPeriods/format/wide":[["am",/^AM/],["am-alt-variant",/^am/],["pm",/^PM/],["pm-alt-variant",/^pm/]],"timeZoneNames/gmtZeroFormat":"GMT","timeZoneNames/hourFormat":[/^GMT\+((\d){2}):((\d){2})|GMT-((\d){2}):((\d){2})/],"timeZoneNames/gmtZeroFormatRe":/^GMT/,"x":[/^\+((\d){2})((\d){2})((\d){2})|-((\d){2})((\d){2})((\d){2})/,/^\+((\d){2})((\d){2})|-((\d){2})((\d){2})/]});
  Globalize.b225066487 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"M/d/yy, h:mm a","digitsRe":/\d/,"gregorian/dayPeriods/format/wide":[["am",/^AM/],["am-alt-variant",/^am/],["pm",/^PM/],["pm-alt-variant",/^pm/]]});
  Globalize.a881637379 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"h:mm a","digitsRe":/\d/,"gregorian/dayPeriods/format/wide":[["am",/^AM/],["am-alt-variant",/^am/],["pm",/^PM/],["pm-alt-variant",/^pm/]]});
  Globalize.a1455086672 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"h:mm:ss a","digitsRe":/\d/,"gregorian/dayPeriods/format/wide":[["am",/^AM/],["am-alt-variant",/^am/],["pm",/^PM/],["pm-alt-variant",/^pm/]]});
  Globalize.b27473751 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"h:mm:ss a z","digitsRe":/\d/,"gregorian/dayPeriods/format/wide":[["am",/^AM/],["am-alt-variant",/^am/],["pm",/^PM/],["pm-alt-variant",/^pm/]],"timeZoneNames/gmtZeroFormat":"GMT","timeZoneNames/hourFormat":[/^GMT\+((\d){1,2}):((\d){2})|GMT-((\d){1,2}):((\d){2})/,/^GMT\+((\d){1,2})|GMT-((\d){1,2})/],"timeZoneNames/gmtZeroFormatRe":/^GMT/,"x":[/^\+((\d){2})((\d){2})|-((\d){2})((\d){2})/,/^\+((\d){2})|-((\d){2})/]});
  Globalize.b887451722 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"h:mm:ss a zzzz","digitsRe":/\d/,"gregorian/dayPeriods/format/wide":[["am",/^AM/],["am-alt-variant",/^am/],["pm",/^PM/],["pm-alt-variant",/^pm/]],"timeZoneNames/gmtZeroFormat":"GMT","timeZoneNames/hourFormat":[/^GMT\+((\d){2}):((\d){2})|GMT-((\d){2}):((\d){2})/],"timeZoneNames/gmtZeroFormatRe":/^GMT/,"x":[/^\+((\d){2})((\d){2})((\d){2})|-((\d){2})((\d){2})((\d){2})/,/^\+((\d){2})((\d){2})|-((\d){2})((\d){2})/]});
  Globalize.a1507005194 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMM d, y, h:mm:ss a","digitsRe":/\d/,"gregorian/months/format/abbreviated":[["7",/^Jul/],["1",/^Jan/],["3",/^Mar/],["4",/^Apr/],["5",/^May/],["6",/^Jun/],["2",/^Feb/],["8",/^Aug/],["9",/^Sep/],["10",/^Oct/],["11",/^Nov/],["12",/^Dec/]],"gregorian/dayPeriods/format/wide":[["am",/^AM/],["am-alt-variant",/^am/],["pm",/^PM/],["pm-alt-variant",/^pm/]]});
  Globalize.b1343277046 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"h:mm a","digitsRe":/\d/,"gregorian/dayPeriods/format/wide":[["am",/^AM/],["am-alt-variant",/^am/],["pm",/^PM/],["pm-alt-variant",/^pm/]]});
  Globalize.a1202216233 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"h:mm:ss a","digitsRe":/\d/,"gregorian/dayPeriods/format/wide":[["am",/^AM/],["am-alt-variant",/^am/],["pm",/^PM/],["pm-alt-variant",/^pm/]]});
  Globalize.a2117512130 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"h:mm:ss a z","digitsRe":/\d/,"gregorian/dayPeriods/format/wide":[["am",/^AM/],["am-alt-variant",/^am/],["pm",/^PM/],["pm-alt-variant",/^pm/]],"timeZoneNames/gmtZeroFormat":"GMT","timeZoneNames/hourFormat":[/^GMT\+((\d){1,2}):((\d){2})|GMT-((\d){1,2}):((\d){2})/,/^GMT\+((\d){1,2})|GMT-((\d){1,2})/],"timeZoneNames/gmtZeroFormatRe":/^GMT/,"x":[/^\+((\d){2})((\d){2})|-((\d){2})((\d){2})/,/^\+((\d){2})|-((\d){2})/]});
  Globalize.a1257534159 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"h:mm:ss a zzzz","digitsRe":/\d/,"gregorian/dayPeriods/format/wide":[["am",/^AM/],["am-alt-variant",/^am/],["pm",/^PM/],["pm-alt-variant",/^pm/]],"timeZoneNames/gmtZeroFormat":"GMT","timeZoneNames/hourFormat":[/^GMT\+((\d){2}):((\d){2})|GMT-((\d){2}):((\d){2})/],"timeZoneNames/gmtZeroFormatRe":/^GMT/,"x":[/^\+((\d){2})((\d){2})((\d){2})|-((\d){2})((\d){2})((\d){2})/,/^\+((\d){2})((\d){2})|-((\d){2})((\d){2})/]});
  Globalize.b1448647197 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMMM d, y 'at' h:mm:ss a z","digitsRe":/\d/,"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]],"gregorian/dayPeriods/format/wide":[["am",/^AM/],["am-alt-variant",/^am/],["pm",/^PM/],["pm-alt-variant",/^pm/]],"timeZoneNames/gmtZeroFormat":"GMT","timeZoneNames/hourFormat":[/^GMT\+((\d){1,2}):((\d){2})|GMT-((\d){1,2}):((\d){2})/,/^GMT\+((\d){1,2})|GMT-((\d){1,2})/],"timeZoneNames/gmtZeroFormatRe":/^GMT/,"x":[/^\+((\d){2})((\d){2})|-((\d){2})((\d){2})/,/^\+((\d){2})|-((\d){2})/]});
  Globalize.b1892925885 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"M/d/y","digitsRe":/\d/});
  Globalize.a158520669 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"h:mm a","digitsRe":/\d/,"gregorian/dayPeriods/format/wide":[["am",/^AM/],["am-alt-variant",/^am/],["pm",/^PM/],["pm-alt-variant",/^pm/]]});
  Globalize.b1688575133 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"EEEE, MMMM d, y","digitsRe":/\d/,"gregorian/days/format/wide":[["wed",/^Wednesday/],["thu",/^Thursday/],["sat",/^Saturday/],["tue",/^Tuesday/],["sun",/^Sunday/],["mon",/^Monday/],["fri",/^Friday/]],"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.b538950915 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"EEEE, MMMM d, y","digitsRe":/\d/,"gregorian/days/format/wide":[["wed",/^Wednesday/],["thu",/^Thursday/],["sat",/^Saturday/],["tue",/^Tuesday/],["sun",/^Sunday/],["mon",/^Monday/],["fri",/^Friday/]],"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.b902866327 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"EEEE, MMMM d, y","digitsRe":/\d/,"gregorian/days/format/wide":[["wed",/^Wednesday/],["thu",/^Thursday/],["sat",/^Saturday/],["tue",/^Tuesday/],["sun",/^Sunday/],["mon",/^Monday/],["fri",/^Friday/]],"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.b42888356 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"EEEE, MMMM d, y","digitsRe":/\d/,"gregorian/days/format/wide":[["wed",/^Wednesday/],["thu",/^Thursday/],["sat",/^Saturday/],["tue",/^Tuesday/],["sun",/^Sunday/],["mon",/^Monday/],["fri",/^Friday/]],"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.b473446845 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"EEEE, MMMM d, y","digitsRe":/\d/,"gregorian/days/format/wide":[["wed",/^Wednesday/],["thu",/^Thursday/],["sat",/^Saturday/],["tue",/^Tuesday/],["sun",/^Sunday/],["mon",/^Monday/],["fri",/^Friday/]],"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.a403784624 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"EEEE, MMMM d, y","digitsRe":/\d/,"gregorian/days/format/wide":[["wed",/^Wednesday/],["thu",/^Thursday/],["sat",/^Saturday/],["tue",/^Tuesday/],["sun",/^Sunday/],["mon",/^Monday/],["fri",/^Friday/]],"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.a321027056 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"EEEE, MMMM d, y","digitsRe":/\d/,"gregorian/days/format/wide":[["wed",/^Wednesday/],["thu",/^Thursday/],["sat",/^Saturday/],["tue",/^Tuesday/],["sun",/^Sunday/],["mon",/^Monday/],["fri",/^Friday/]],"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.a1819635228 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"EEEE, MMMM d, y","digitsRe":/\d/,"gregorian/days/format/wide":[["wed",/^Wednesday/],["thu",/^Thursday/],["sat",/^Saturday/],["tue",/^Tuesday/],["sun",/^Sunday/],["mon",/^Monday/],["fri",/^Friday/]],"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.b1615354097 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"EEEE, MMMM d, y","digitsRe":/\d/,"gregorian/days/format/wide":[["wed",/^Wednesday/],["thu",/^Thursday/],["sat",/^Saturday/],["tue",/^Tuesday/],["sun",/^Sunday/],["mon",/^Monday/],["fri",/^Friday/]],"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.a215464246 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"EEEE, MMMM d, y","digitsRe":/\d/,"gregorian/days/format/wide":[["wed",/^Wednesday/],["thu",/^Thursday/],["sat",/^Saturday/],["tue",/^Tuesday/],["sun",/^Sunday/],["mon",/^Monday/],["fri",/^Friday/]],"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.b1098013091 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"EEEE, MMMM d, y","digitsRe":/\d/,"gregorian/days/format/wide":[["wed",/^Wednesday/],["thu",/^Thursday/],["sat",/^Saturday/],["tue",/^Tuesday/],["sun",/^Sunday/],["mon",/^Monday/],["fri",/^Friday/]],"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.a1356913111 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"EEEE, MMMM d, y","digitsRe":/\d/,"gregorian/days/format/wide":[["wed",/^Wednesday/],["thu",/^Thursday/],["sat",/^Saturday/],["tue",/^Tuesday/],["sun",/^Sunday/],["mon",/^Monday/],["fri",/^Friday/]],"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.b1874203709 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"EEEE, MMMM d, y","digitsRe":/\d/,"gregorian/days/format/wide":[["wed",/^Wednesday/],["thu",/^Thursday/],["sat",/^Saturday/],["tue",/^Tuesday/],["sun",/^Sunday/],["mon",/^Monday/],["fri",/^Friday/]],"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.b1014225738 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"EEEE, MMMM d, y","digitsRe":/\d/,"gregorian/days/format/wide":[["wed",/^Wednesday/],["thu",/^Thursday/],["sat",/^Saturday/],["tue",/^Tuesday/],["sun",/^Sunday/],["mon",/^Monday/],["fri",/^Friday/]],"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.b1920767715 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"EEEE, MMMM d, y","digitsRe":/\d/,"gregorian/days/format/wide":[["wed",/^Wednesday/],["thu",/^Thursday/],["sat",/^Saturday/],["tue",/^Tuesday/],["sun",/^Sunday/],["mon",/^Monday/],["fri",/^Friday/]],"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.a357096854 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"EEEE, MMMM d, y","digitsRe":/\d/,"gregorian/days/format/wide":[["wed",/^Wednesday/],["thu",/^Thursday/],["sat",/^Saturday/],["tue",/^Tuesday/],["sun",/^Sunday/],["mon",/^Monday/],["fri",/^Friday/]],"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.b1199739492 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"EEEE, MMMM d, y","digitsRe":/\d/,"gregorian/days/format/wide":[["wed",/^Wednesday/],["thu",/^Thursday/],["sat",/^Saturday/],["tue",/^Tuesday/],["sun",/^Sunday/],["mon",/^Monday/],["fri",/^Friday/]],"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.b1698561336 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"EEEE, MMMM d, y","digitsRe":/\d/,"gregorian/days/format/wide":[["wed",/^Wednesday/],["thu",/^Thursday/],["sat",/^Saturday/],["tue",/^Tuesday/],["sun",/^Sunday/],["mon",/^Monday/],["fri",/^Friday/]],"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.b838583365 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"EEEE, MMMM d, y","digitsRe":/\d/,"gregorian/days/format/wide":[["wed",/^Wednesday/],["thu",/^Thursday/],["sat",/^Saturday/],["tue",/^Tuesday/],["sun",/^Sunday/],["mon",/^Monday/],["fri",/^Friday/]],"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.b632171806 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"EEEE, MMMM d, y","digitsRe":/\d/,"gregorian/days/format/wide":[["wed",/^Wednesday/],["thu",/^Thursday/],["sat",/^Saturday/],["tue",/^Tuesday/],["sun",/^Sunday/],["mon",/^Monday/],["fri",/^Friday/]],"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.a1507043121 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"EEEE, MMMM d, y","digitsRe":/\d/,"gregorian/days/format/wide":[["wed",/^Wednesday/],["thu",/^Thursday/],["sat",/^Saturday/],["tue",/^Tuesday/],["sun",/^Sunday/],["mon",/^Monday/],["fri",/^Friday/]],"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.a584962127 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"EEEE, MMMM d, y","digitsRe":/\d/,"gregorian/days/format/wide":[["wed",/^Wednesday/],["thu",/^Thursday/],["sat",/^Saturday/],["tue",/^Tuesday/],["sun",/^Sunday/],["mon",/^Monday/],["fri",/^Friday/]],"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.a1444940098 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"EEEE, MMMM d, y","digitsRe":/\d/,"gregorian/days/format/wide":[["wed",/^Wednesday/],["thu",/^Thursday/],["sat",/^Saturday/],["tue",/^Tuesday/],["sun",/^Sunday/],["mon",/^Monday/],["fri",/^Friday/]],"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.b894412119 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"EEEE, MMMM d, y","digitsRe":/\d/,"gregorian/days/format/wide":[["wed",/^Wednesday/],["thu",/^Thursday/],["sat",/^Saturday/],["tue",/^Tuesday/],["sun",/^Sunday/],["mon",/^Monday/],["fri",/^Friday/]],"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.b718173558 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"EEEE, MMMM d, y","digitsRe":/\d/,"gregorian/days/format/wide":[["wed",/^Wednesday/],["thu",/^Thursday/],["sat",/^Saturday/],["tue",/^Tuesday/],["sun",/^Sunday/],["mon",/^Monday/],["fri",/^Friday/]],"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.b828597162 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMMM d, y","digitsRe":/\d/,"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.a2092705782 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMMM d, y","digitsRe":/\d/,"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.b1342283543 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMMM d, y","digitsRe":/\d/,"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.a643261584 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMMM d, y","digitsRe":/\d/,"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.a79643952 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMMM d, y","digitsRe":/\d/,"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.a442042204 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMMM d, y","digitsRe":/\d/,"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.a1302020175 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMMM d, y","digitsRe":/\d/,"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.b801504650 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMMM d, y","digitsRe":/\d/,"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.b853723875 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMMM d, y","digitsRe":/\d/,"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.a939621923 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMMM d, y","digitsRe":/\d/,"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.b1130423537 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMMM d, y","digitsRe":/\d/,"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.b270445566 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMMM d, y","digitsRe":/\d/,"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.b112593559 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMMM d, y","digitsRe":/\d/,"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.a1939445706 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMMM d, y","digitsRe":/\d/,"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.b1173873846 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMMM d, y","digitsRe":/\d/,"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.b1222760509 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMMM d, y","digitsRe":/\d/,"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.a796832201 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMMM d, y","digitsRe":/\d/,"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.a1338897461 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMMM d, y","digitsRe":/\d/,"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.b2096091864 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMMM d, y","digitsRe":/\d/,"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.a2082938127 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMMM d, y","digitsRe":/\d/,"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.a1178985316 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMMM d, y","digitsRe":/\d/,"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.b987503614 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMMM d, y","digitsRe":/\d/,"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.b127525643 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMMM d, y","digitsRe":/\d/,"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.b205501028 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMMM d, y","digitsRe":/\d/,"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.a2074996023 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMMM d, y","digitsRe":/\d/,"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]]});
  Globalize.a374634685 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMM d, y","digitsRe":/\d/,"gregorian/months/format/abbreviated":[["7",/^Jul/],["1",/^Jan/],["3",/^Mar/],["4",/^Apr/],["5",/^May/],["6",/^Jun/],["2",/^Feb/],["8",/^Aug/],["9",/^Sep/],["10",/^Oct/],["11",/^Nov/],["12",/^Dec/]]});
  Globalize.a513305142 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"h:mm:ss a","digitsRe":/\d/,"gregorian/dayPeriods/format/wide":[["am",/^AM/],["am-alt-variant",/^am/],["pm",/^PM/],["pm-alt-variant",/^pm/]]});
  Globalize.b1740278313 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMM d, y","digitsRe":/\d/,"gregorian/months/format/abbreviated":[["7",/^Jul/],["1",/^Jan/],["3",/^Mar/],["4",/^Apr/],["5",/^May/],["6",/^Jun/],["2",/^Feb/],["8",/^Aug/],["9",/^Sep/],["10",/^Oct/],["11",/^Nov/],["12",/^Dec/]]});
  Globalize.b848459837 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMM d, y","digitsRe":/\d/,"gregorian/months/format/abbreviated":[["7",/^Jul/],["1",/^Jan/],["3",/^Mar/],["4",/^Apr/],["5",/^May/],["6",/^Jun/],["2",/^Feb/],["8",/^Aug/],["9",/^Sep/],["10",/^Oct/],["11",/^Nov/],["12",/^Dec/]]});
  Globalize.a11518134 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMM d, y","digitsRe":/\d/,"gregorian/months/format/abbreviated":[["7",/^Jul/],["1",/^Jan/],["3",/^Mar/],["4",/^Apr/],["5",/^May/],["6",/^Jun/],["2",/^Feb/],["8",/^Aug/],["9",/^Sep/],["10",/^Oct/],["11",/^Nov/],["12",/^Dec/]]});
  Globalize.a271582493 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMM d, y","digitsRe":/\d/,"gregorian/months/format/abbreviated":[["7",/^Jul/],["1",/^Jan/],["3",/^Mar/],["4",/^Apr/],["5",/^May/],["6",/^Jun/],["2",/^Feb/],["8",/^Aug/],["9",/^Sep/],["10",/^Oct/],["11",/^Nov/],["12",/^Dec/]]});
  Globalize.a2090385814 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMM d, y","digitsRe":/\d/,"gregorian/months/format/abbreviated":[["7",/^Jul/],["1",/^Jan/],["3",/^Mar/],["4",/^Apr/],["5",/^May/],["6",/^Jun/],["2",/^Feb/],["8",/^Aug/],["9",/^Sep/],["10",/^Oct/],["11",/^Nov/],["12",/^Dec/]]});
  Globalize.b880300342 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMM d, y","digitsRe":/\d/,"gregorian/months/format/abbreviated":[["7",/^Jul/],["1",/^Jan/],["3",/^Mar/],["4",/^Apr/],["5",/^May/],["6",/^Jun/],["2",/^Feb/],["8",/^Aug/],["9",/^Sep/],["10",/^Oct/],["11",/^Nov/],["12",/^Dec/]]});
  Globalize.a1874041718 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMM d, y","digitsRe":/\d/,"gregorian/months/format/abbreviated":[["7",/^Jul/],["1",/^Jan/],["3",/^Mar/],["4",/^Apr/],["5",/^May/],["6",/^Jun/],["2",/^Feb/],["8",/^Aug/],["9",/^Sep/],["10",/^Oct/],["11",/^Nov/],["12",/^Dec/]]});
  Globalize.b1560947607 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMM d, y","digitsRe":/\d/,"gregorian/months/format/abbreviated":[["7",/^Jul/],["1",/^Jan/],["3",/^Mar/],["4",/^Apr/],["5",/^May/],["6",/^Jun/],["2",/^Feb/],["8",/^Aug/],["9",/^Sep/],["10",/^Oct/],["11",/^Nov/],["12",/^Dec/]]});
  Globalize.a960493584 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMM d, y","digitsRe":/\d/,"gregorian/months/format/abbreviated":[["7",/^Jul/],["1",/^Jan/],["3",/^Mar/],["4",/^Apr/],["5",/^May/],["6",/^Jun/],["2",/^Feb/],["8",/^Aug/],["9",/^Sep/],["10",/^Oct/],["11",/^Nov/],["12",/^Dec/]]});
  Globalize.a588588099 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMM d, y","digitsRe":/\d/,"gregorian/months/format/abbreviated":[["7",/^Jul/],["1",/^Jan/],["3",/^Mar/],["4",/^Apr/],["5",/^May/],["6",/^Jun/],["2",/^Feb/],["8",/^Aug/],["9",/^Sep/],["10",/^Oct/],["11",/^Nov/],["12",/^Dec/]]});
  Globalize.b2067481039 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMM d, y","digitsRe":/\d/,"gregorian/months/format/abbreviated":[["7",/^Jul/],["1",/^Jan/],["3",/^Mar/],["4",/^Apr/],["5",/^May/],["6",/^Jun/],["2",/^Feb/],["8",/^Aug/],["9",/^Sep/],["10",/^Oct/],["11",/^Nov/],["12",/^Dec/]]});
  Globalize.b1129174371 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMM d, y","digitsRe":/\d/,"gregorian/months/format/abbreviated":[["7",/^Jul/],["1",/^Jan/],["3",/^Mar/],["4",/^Apr/],["5",/^May/],["6",/^Jun/],["2",/^Feb/],["8",/^Aug/],["9",/^Sep/],["10",/^Oct/],["11",/^Nov/],["12",/^Dec/]]});
  Globalize.a1087854967 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMM d, y","digitsRe":/\d/,"gregorian/months/format/abbreviated":[["7",/^Jul/],["1",/^Jan/],["3",/^Mar/],["4",/^Apr/],["5",/^May/],["6",/^Jun/],["2",/^Feb/],["8",/^Aug/],["9",/^Sep/],["10",/^Oct/],["11",/^Nov/],["12",/^Dec/]]});
  Globalize.a1978169852 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMM d, y","digitsRe":/\d/,"gregorian/months/format/abbreviated":[["7",/^Jul/],["1",/^Jan/],["3",/^Mar/],["4",/^Apr/],["5",/^May/],["6",/^Jun/],["2",/^Feb/],["8",/^Aug/],["9",/^Sep/],["10",/^Oct/],["11",/^Nov/],["12",/^Dec/]]});
  Globalize.a213816834 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMM d, y","digitsRe":/\d/,"gregorian/months/format/abbreviated":[["7",/^Jul/],["1",/^Jan/],["3",/^Mar/],["4",/^Apr/],["5",/^May/],["6",/^Jun/],["2",/^Feb/],["8",/^Aug/],["9",/^Sep/],["10",/^Oct/],["11",/^Nov/],["12",/^Dec/]]});
  Globalize.b11960146 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMM d, y","digitsRe":/\d/,"gregorian/months/format/abbreviated":[["7",/^Jul/],["1",/^Jan/],["3",/^Mar/],["4",/^Apr/],["5",/^May/],["6",/^Jun/],["2",/^Feb/],["8",/^Aug/],["9",/^Sep/],["10",/^Oct/],["11",/^Nov/],["12",/^Dec/]]});
  Globalize.a848017825 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMM d, y","digitsRe":/\d/,"gregorian/months/format/abbreviated":[["7",/^Jul/],["1",/^Jan/],["3",/^Mar/],["4",/^Apr/],["5",/^May/],["6",/^Jun/],["2",/^Feb/],["8",/^Aug/],["9",/^Sep/],["10",/^Oct/],["11",/^Nov/],["12",/^Dec/]]});
  Globalize.a988901192 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMM d, y","digitsRe":/\d/,"gregorian/months/format/abbreviated":[["7",/^Jul/],["1",/^Jan/],["3",/^Mar/],["4",/^Apr/],["5",/^May/],["6",/^Jun/],["2",/^Feb/],["8",/^Aug/],["9",/^Sep/],["10",/^Oct/],["11",/^Nov/],["12",/^Dec/]]});
  Globalize.b2042894837 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMM d, y","digitsRe":/\d/,"gregorian/months/format/abbreviated":[["7",/^Jul/],["1",/^Jan/],["3",/^Mar/],["4",/^Apr/],["5",/^May/],["6",/^Jun/],["2",/^Feb/],["8",/^Aug/],["9",/^Sep/],["10",/^Oct/],["11",/^Nov/],["12",/^Dec/]]});
  Globalize.a1999798313 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMM d, y","digitsRe":/\d/,"gregorian/months/format/abbreviated":[["7",/^Jul/],["1",/^Jan/],["3",/^Mar/],["4",/^Apr/],["5",/^May/],["6",/^Jun/],["2",/^Feb/],["8",/^Aug/],["9",/^Sep/],["10",/^Oct/],["11",/^Nov/],["12",/^Dec/]]});
  Globalize.b1435191012 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMM d, y","digitsRe":/\d/,"gregorian/months/format/abbreviated":[["7",/^Jul/],["1",/^Jan/],["3",/^Mar/],["4",/^Apr/],["5",/^May/],["6",/^Jun/],["2",/^Feb/],["8",/^Aug/],["9",/^Sep/],["10",/^Oct/],["11",/^Nov/],["12",/^Dec/]]});
  Globalize.a1553497091 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMM d, y","digitsRe":/\d/,"gregorian/months/format/abbreviated":[["7",/^Jul/],["1",/^Jan/],["3",/^Mar/],["4",/^Apr/],["5",/^May/],["6",/^Jun/],["2",/^Feb/],["8",/^Aug/],["9",/^Sep/],["10",/^Oct/],["11",/^Nov/],["12",/^Dec/]]});
  Globalize.a192075248 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"MMM d, y","digitsRe":/\d/,"gregorian/months/format/abbreviated":[["7",/^Jul/],["1",/^Jan/],["3",/^Mar/],["4",/^Apr/],["5",/^May/],["6",/^Jun/],["2",/^Feb/],["8",/^Aug/],["9",/^Sep/],["10",/^Oct/],["11",/^Nov/],["12",/^Dec/]]});
  Globalize.a1816615414 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"M/d/yy","digitsRe":/\d/});
  Globalize.b1338919287 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"M/d/yy","digitsRe":/\d/});
  Globalize.b1601054000 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"M/d/yy","digitsRe":/\d/});
  Globalize.a2091205884 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"M/d/yy","digitsRe":/\d/});
  Globalize.b1343783441 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"M/d/yy","digitsRe":/\d/});
  Globalize.b798140394 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"M/d/yy","digitsRe":/\d/});
  Globalize.b1269257347 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"M/d/yy","digitsRe":/\d/});
  Globalize.b741076029 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"M/d/yy","digitsRe":/\d/});
  Globalize.a518740143 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"M/d/yy","digitsRe":/\d/});
  Globalize.a1378718114 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"M/d/yy","digitsRe":/\d/});
  Globalize.b109229303 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"M/d/yy","digitsRe":/\d/});
  Globalize.a1523912234 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"M/d/yy","digitsRe":/\d/});
  Globalize.b1416902422 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"M/d/yy","digitsRe":/\d/});
  Globalize.a2096070038 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"M/d/yy","digitsRe":/\d/});
  Globalize.b418655696 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"M/d/yy","digitsRe":/\d/});
  Globalize.b1118468573 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"M/d/yy","digitsRe":/\d/});
  Globalize.a234803241 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"M/d/yy","digitsRe":/\d/});
  Globalize.a923363989 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"M/d/yy","digitsRe":/\d/});
  Globalize.a1783341960 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"M/d/yy","digitsRe":/\d/});
  Globalize.b2107737233 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"M/d/yy","digitsRe":/\d/});
  Globalize.a1182349572 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"M/d/yy","digitsRe":/\d/});
  Globalize.a1474447778 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"M/d/yy","digitsRe":/\d/});
  Globalize.b1960541547 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"M/d/yy","digitsRe":/\d/});
  Globalize.b797193412 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"M/d/yy","digitsRe":/\d/});
  Globalize.a1086077847 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"M/d/yy","digitsRe":/\d/});
  Globalize.a1986342128 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"EEEE, MMMM d, y 'at' h:mm:ss a zzzz","digitsRe":/\d/,"gregorian/days/format/wide":[["wed",/^Wednesday/],["thu",/^Thursday/],["sat",/^Saturday/],["tue",/^Tuesday/],["sun",/^Sunday/],["mon",/^Monday/],["fri",/^Friday/]],"gregorian/months/format/wide":[["9",/^September/],["12",/^December/],["11",/^November/],["2",/^February/],["1",/^January/],["10",/^October/],["8",/^August/],["4",/^April/],["3",/^March/],["6",/^June/],["7",/^July/],["5",/^May/]],"gregorian/dayPeriods/format/wide":[["am",/^AM/],["am-alt-variant",/^am/],["pm",/^PM/],["pm-alt-variant",/^pm/]],"timeZoneNames/gmtZeroFormat":"GMT","timeZoneNames/hourFormat":[/^GMT\+((\d){2}):((\d){2})|GMT-((\d){2}):((\d){2})/],"timeZoneNames/gmtZeroFormatRe":/^GMT/,"x":[/^\+((\d){2})((\d){2})((\d){2})|-((\d){2})((\d){2})((\d){2})/,/^\+((\d){2})((\d){2})|-((\d){2})((\d){2})/]});
  Globalize.b1464967396 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"h:mm:ss a zzzz","digitsRe":/\d/,"gregorian/dayPeriods/format/wide":[["am",/^AM/],["am-alt-variant",/^am/],["pm",/^PM/],["pm-alt-variant",/^pm/]],"timeZoneNames/gmtZeroFormat":"GMT","timeZoneNames/hourFormat":[/^GMT\+((\d){2}):((\d){2})|GMT-((\d){2}):((\d){2})/],"timeZoneNames/gmtZeroFormatRe":/^GMT/,"x":[/^\+((\d){2})((\d){2})((\d){2})|-((\d){2})((\d){2})((\d){2})/,/^\+((\d){2})((\d){2})|-((\d){2})((\d){2})/]});
  Globalize.b604989425 = dateParserFn(Globalize("en").numberParser({"raw":"0"}), {"preferredTimeData":"h"}, {"pattern":"h:mm:ss a z","digitsRe":/\d/,"gregorian/dayPeriods/format/wide":[["am",/^AM/],["am-alt-variant",/^am/],["pm",/^PM/],["pm-alt-variant",/^pm/]],"timeZoneNames/gmtZeroFormat":"GMT","timeZoneNames/hourFormat":[/^GMT\+((\d){1,2}):((\d){2})|GMT-((\d){1,2}):((\d){2})/,/^GMT\+((\d){1,2})|GMT-((\d){1,2})/],"timeZoneNames/gmtZeroFormatRe":/^GMT/,"x":[/^\+((\d){2})((\d){2})|-((\d){2})((\d){2})/,/^\+((\d){2})|-((\d){2})/]});
  Globalize.a1959977447 = relativeTimeFormatterFn(Globalize("en").numberFormatter({"form":"narrow"}), Globalize("en").pluralGenerator({}), {"relativeTime-type-future":{"relativeTimePattern-count-one":"in {0} min.","relativeTimePattern-count-other":"in {0} min."},"relativeTime-type-past":{"relativeTimePattern-count-one":"{0} min. ago","relativeTimePattern-count-other":"{0} min. ago"},"relative-type-0":"this minute"});
  Globalize.b1692806714 = relativeTimeFormatterFn(Globalize("en").numberFormatter({"form":"short"}), Globalize("en").pluralGenerator({}), {"relativeTime-type-future":{"relativeTimePattern-count-one":"in {0} sec.","relativeTimePattern-count-other":"in {0} sec."},"relativeTime-type-past":{"relativeTimePattern-count-one":"{0} sec. ago","relativeTimePattern-count-other":"{0} sec. ago"},"relative-type-0":"now"});
  Globalize.b1889436068 = relativeTimeFormatterFn(Globalize("en").numberFormatter({}), Globalize("en").pluralGenerator({}), {"relativeTime-type-future":{"relativeTimePattern-count-one":"in {0} minute","relativeTimePattern-count-other":"in {0} minutes"},"relativeTime-type-past":{"relativeTimePattern-count-one":"{0} minute ago","relativeTimePattern-count-other":"{0} minutes ago"},"relative-type-0":"this minute"});
  Globalize.b1108782004 = relativeTimeFormatterFn(Globalize("en").numberFormatter({}), Globalize("en").pluralGenerator({}), {"relativeTime-type-future":{"relativeTimePattern-count-one":"in {0} hour","relativeTimePattern-count-other":"in {0} hours"},"relativeTime-type-past":{"relativeTimePattern-count-one":"{0} hour ago","relativeTimePattern-count-other":"{0} hours ago"},"relative-type-0":"this hour"});
  Globalize.b687161418 = relativeTimeFormatterFn(Globalize("en").numberFormatter({}), Globalize("en").pluralGenerator({}), {"relativeTime-type-future":{"relativeTimePattern-count-one":"in {0} day","relativeTimePattern-count-other":"in {0} days"},"relativeTime-type-past":{"relativeTimePattern-count-one":"{0} day ago","relativeTimePattern-count-other":"{0} days ago"},"relative-type--1":"yesterday","relative-type-0":"today","relative-type-1":"tomorrow"});
  Globalize.b1317119536 = relativeTimeFormatterFn(Globalize("en").numberFormatter({"form":"narrow"}), Globalize("en").pluralGenerator({}), {"relativeTime-type-future":{"relativeTimePattern-count-one":"in {0} yr.","relativeTimePattern-count-other":"in {0} yr."},"relativeTime-type-past":{"relativeTimePattern-count-one":"{0} yr. ago","relativeTimePattern-count-other":"{0} yr. ago"},"relative-type--1":"last yr.","relative-type-0":"this yr.","relative-type-1":"next yr."});
  Globalize.a2022150769 = relativeTimeFormatterFn(Globalize("en").numberFormatter({"form":"narrow"}), Globalize("en").pluralGenerator({}), {"relativeTime-type-future":{"relativeTimePattern-count-one":"in {0} mo.","relativeTimePattern-count-other":"in {0} mo."},"relativeTime-type-past":{"relativeTimePattern-count-one":"{0} mo. ago","relativeTimePattern-count-other":"{0} mo. ago"},"relative-type--1":"last mo.","relative-type-0":"this mo.","relative-type-1":"next mo."});
  Globalize.a2070114311 = relativeTimeFormatterFn(Globalize("en").numberFormatter({"form":"narrow"}), Globalize("en").pluralGenerator({}), {"relativeTime-type-future":{"relativeTimePattern-count-one":"in {0} wk.","relativeTimePattern-count-other":"in {0} wk."},"relativeTime-type-past":{"relativeTimePattern-count-one":"{0} wk. ago","relativeTimePattern-count-other":"{0} wk. ago"},"relative-type--1":"last wk.","relative-type-0":"this wk.","relative-type-1":"next wk."});
  Globalize.a480739661 = relativeTimeFormatterFn(Globalize("en").numberFormatter({"form":"narrow"}), Globalize("en").pluralGenerator({}), {"relativeTime-type-future":{"relativeTimePattern-count-one":"in {0} day","relativeTimePattern-count-other":"in {0} days"},"relativeTime-type-past":{"relativeTimePattern-count-one":"{0} day ago","relativeTimePattern-count-other":"{0} days ago"},"relative-type--1":"yesterday","relative-type-0":"today","relative-type-1":"tomorrow"});
  Globalize.a1573285367 = relativeTimeFormatterFn(Globalize("en").numberFormatter({"form":"narrow"}), Globalize("en").pluralGenerator({}), {"relativeTime-type-future":{"relativeTimePattern-count-one":"in {0} hr.","relativeTimePattern-count-other":"in {0} hr."},"relativeTime-type-past":{"relativeTimePattern-count-one":"{0} hr. ago","relativeTimePattern-count-other":"{0} hr. ago"},"relative-type-0":"this hour"});
  Globalize.a776330236 = relativeTimeFormatterFn(Globalize("en").numberFormatter({}), Globalize("en").pluralGenerator({}), {"relativeTime-type-future":{"relativeTimePattern-count-one":"in {0} second","relativeTimePattern-count-other":"in {0} seconds"},"relativeTime-type-past":{"relativeTimePattern-count-one":"{0} second ago","relativeTimePattern-count-other":"{0} seconds ago"},"relative-type-0":"now"});
  Globalize.a80376892 = relativeTimeFormatterFn(Globalize("en").numberFormatter({}), Globalize("en").pluralGenerator({}), {"relativeTime-type-future":{"relativeTimePattern-count-one":"in {0} week","relativeTimePattern-count-other":"in {0} weeks"},"relativeTime-type-past":{"relativeTimePattern-count-one":"{0} week ago","relativeTimePattern-count-other":"{0} weeks ago"},"relative-type--1":"last week","relative-type-0":"this week","relative-type-1":"next week"});
  Globalize.b1439461305 = relativeTimeFormatterFn(Globalize("en").numberFormatter({"form":"narrow"}), Globalize("en").pluralGenerator({}), {"relativeTime-type-future":{"relativeTimePattern-count-one":"in {0} sec.","relativeTimePattern-count-other":"in {0} sec."},"relativeTime-type-past":{"relativeTimePattern-count-one":"{0} sec. ago","relativeTimePattern-count-other":"{0} sec. ago"},"relative-type-0":"now"});
  Globalize.a804991773 = relativeTimeFormatterFn(Globalize("en").numberFormatter({"form":"short"}), Globalize("en").pluralGenerator({}), {"relativeTime-type-future":{"relativeTimePattern-count-one":"in {0} yr.","relativeTimePattern-count-other":"in {0} yr."},"relativeTime-type-past":{"relativeTimePattern-count-one":"{0} yr. ago","relativeTimePattern-count-other":"{0} yr. ago"},"relative-type--1":"last yr.","relative-type-0":"this yr.","relative-type-1":"next yr."});
  Globalize.b1165499812 = relativeTimeFormatterFn(Globalize("en").numberFormatter({"form":"short"}), Globalize("en").pluralGenerator({}), {"relativeTime-type-future":{"relativeTimePattern-count-one":"in {0} mo.","relativeTimePattern-count-other":"in {0} mo."},"relativeTime-type-past":{"relativeTimePattern-count-one":"{0} mo. ago","relativeTimePattern-count-other":"{0} mo. ago"},"relative-type--1":"last mo.","relative-type-0":"this mo.","relative-type-1":"next mo."});
  Globalize.a2022636038 = relativeTimeFormatterFn(Globalize("en").numberFormatter({"form":"short"}), Globalize("en").pluralGenerator({}), {"relativeTime-type-future":{"relativeTimePattern-count-one":"in {0} wk.","relativeTimePattern-count-other":"in {0} wk."},"relativeTime-type-past":{"relativeTimePattern-count-one":"{0} wk. ago","relativeTimePattern-count-other":"{0} wk. ago"},"relative-type--1":"last wk.","relative-type-0":"this wk.","relative-type-1":"next wk."});
  Globalize.a1971365888 = relativeTimeFormatterFn(Globalize("en").numberFormatter({"form":"short"}), Globalize("en").pluralGenerator({}), {"relativeTime-type-future":{"relativeTimePattern-count-one":"in {0} day","relativeTimePattern-count-other":"in {0} days"},"relativeTime-type-past":{"relativeTimePattern-count-one":"{0} day ago","relativeTimePattern-count-other":"{0} days ago"},"relative-type--1":"yesterday","relative-type-0":"today","relative-type-1":"tomorrow"});
  Globalize.a2145156630 = relativeTimeFormatterFn(Globalize("en").numberFormatter({"form":"short"}), Globalize("en").pluralGenerator({}), {"relativeTime-type-future":{"relativeTimePattern-count-one":"in {0} hr.","relativeTimePattern-count-other":"in {0} hr."},"relativeTime-type-past":{"relativeTimePattern-count-one":"{0} hr. ago","relativeTimePattern-count-other":"{0} hr. ago"},"relative-type-0":"this hour"});
  Globalize.b59126746 = relativeTimeFormatterFn(Globalize("en").numberFormatter({"form":"short"}), Globalize("en").pluralGenerator({}), {"relativeTime-type-future":{"relativeTimePattern-count-one":"in {0} min.","relativeTimePattern-count-other":"in {0} min."},"relativeTime-type-past":{"relativeTimePattern-count-one":"{0} min. ago","relativeTimePattern-count-other":"{0} min. ago"},"relative-type-0":"this minute"});
  Globalize.b837350638 = relativeTimeFormatterFn(Globalize("en").numberFormatter({}), Globalize("en").pluralGenerator({}), {"relativeTime-type-future":{"relativeTimePattern-count-one":"in {0} month","relativeTimePattern-count-other":"in {0} months"},"relativeTime-type-past":{"relativeTimePattern-count-one":"{0} month ago","relativeTimePattern-count-other":"{0} months ago"},"relative-type--1":"last month","relative-type-0":"this month","relative-type-1":"next month"});
  Globalize.a1705791891 = relativeTimeFormatterFn(Globalize("en").numberFormatter({}), Globalize("en").pluralGenerator({}), {"relativeTime-type-future":{"relativeTimePattern-count-one":"in {0} year","relativeTimePattern-count-other":"in {0} years"},"relativeTime-type-past":{"relativeTimePattern-count-one":"{0} year ago","relativeTimePattern-count-other":"{0} years ago"},"relative-type--1":"last year","relative-type-0":"this year","relative-type-1":"next year"});

  Globalize.locale('en');

  return Globalize;
}));


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Globalize Runtime v1.3.0
 *
 * http://github.com/jquery/globalize
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2017-07-03T21:37Z
 */
/*!
 * Globalize Runtime v1.3.0 2017-07-03T21:37Z Released under the MIT license
 * http://git.io/TrdQbw
 */
(function( root, factory ) {

	"use strict";

	// UMD returnExports
	if ( true ) {

		// AMD
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [
			__webpack_require__(0),
			__webpack_require__(1)
		], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else if ( typeof exports === "object" ) {

		// Node, CommonJS
		module.exports = factory(
			require( "../globalize-runtime" ),
			require( "./number" )
		);
	} else {

		// Extend global
		factory( root.Globalize );
	}
}(this, (function( Globalize ) {



var createErrorUnsupportedFeature = Globalize._createErrorUnsupportedFeature,
	looseMatching = Globalize._looseMatching,
	regexpEscape = Globalize._regexpEscape,
	removeLiteralQuotes = Globalize._removeLiteralQuotes,
	runtimeKey = Globalize._runtimeKey,
	stringPad = Globalize._stringPad,
	validateParameterPresence = Globalize._validateParameterPresence,
	validateParameterType = Globalize._validateParameterType,
	validateParameterTypeString = Globalize._validateParameterTypeString;


var validateParameterTypeDate = function( value, name ) {
	validateParameterType( value, name, value === undefined || value instanceof Date, "Date" );
};


var ZonedDateTime = (function() {
function definePrivateProperty(object, property, value) {
  Object.defineProperty(object, property, {
    value: value
  });
}

function getUntilsIndex(original, untils) {
  var index = 0;
  var originalTime = original.getTime();

  // TODO Should we do binary search for improved performance?
  while (index < untils.length - 1 && originalTime >= untils[index]) {
    index++;
  }
  return index;
}

function setWrap(fn) {
  var offset1 = this.getTimezoneOffset();
  var ret = fn();
  this.original.setTime(new Date(this.getTime()));
  var offset2 = this.getTimezoneOffset();
  if (offset2 - offset1) {
    this.original.setMinutes(this.original.getMinutes() + offset2 - offset1);
  }
  return ret;
}

var ZonedDateTime = function(date, timeZoneData) {
  definePrivateProperty(this, "original", new Date(date.getTime()));
  definePrivateProperty(this, "local", new Date(date.getTime()));
  definePrivateProperty(this, "timeZoneData", timeZoneData);
  definePrivateProperty(this, "setWrap", setWrap);
  if (!(timeZoneData.untils && timeZoneData.offsets && timeZoneData.isdsts)) {
    throw new Error("Invalid IANA data");
  }
  this.setTime(this.local.getTime() - this.getTimezoneOffset() * 60 * 1000);
};

ZonedDateTime.prototype.clone = function() {
  return new ZonedDateTime(this.original, this.timeZoneData);
};

// Date field getters.
["getFullYear", "getMonth", "getDate", "getDay", "getHours", "getMinutes",
"getSeconds", "getMilliseconds"].forEach((function(method) {
  // Corresponding UTC method, e.g., "getUTCFullYear" if method === "getFullYear".
  var utcMethod = "getUTC" + method.substr(3);
  ZonedDateTime.prototype[method] = function() {
    return this.local[utcMethod]();
  };
}));

// Note: Define .valueOf = .getTime for arithmetic operations like date1 - date2.
ZonedDateTime.prototype.valueOf =
ZonedDateTime.prototype.getTime = function() {
  return this.local.getTime() + this.getTimezoneOffset() * 60 * 1000;
};

ZonedDateTime.prototype.getTimezoneOffset = function() {
  var index = getUntilsIndex(this.original, this.timeZoneData.untils);
  return this.timeZoneData.offsets[index];
};

// Date field setters.
["setFullYear", "setMonth", "setDate", "setHours", "setMinutes", "setSeconds", "setMilliseconds"].forEach((function(method) {
  // Corresponding UTC method, e.g., "setUTCFullYear" if method === "setFullYear".
  var utcMethod = "setUTC" + method.substr(3);
  ZonedDateTime.prototype[method] = function(value) {
    var local = this.local;
    // Note setWrap is needed for seconds and milliseconds just because
    // abs(value) could be >= a minute.
    return this.setWrap((function() {
      return local[utcMethod](value);
    }));
  };
}));

ZonedDateTime.prototype.setTime = function(time) {
  return this.local.setTime(time);
};

ZonedDateTime.prototype.isDST = function() {
  var index = getUntilsIndex(this.original, this.timeZoneData.untils);
  return Boolean(this.timeZoneData.isdsts[index]);
};

ZonedDateTime.prototype.inspect = function() {
  var index = getUntilsIndex(this.original, this.timeZoneData.untils);
  var abbrs = this.timeZoneData.abbrs;
  return this.local.toISOString().replace(/Z$/, "") + " " +
    (abbrs && abbrs[index] + " " || (this.getTimezoneOffset() * -1) + " ") +
    (this.isDST() ? "(daylight savings)" : "");
};

ZonedDateTime.prototype.toDate = function() {
  return new Date(this.getTime());
};

// Type cast getters.
["toISOString", "toJSON", "toUTCString"].forEach((function(method) {
  ZonedDateTime.prototype[method] = function() {
    return this.toDate()[method]();
  };
}));

return ZonedDateTime;
}());


/**
 * dayOfWeek( date, firstDay )
 *
 * @date
 *
 * @firstDay the result of `dateFirstDayOfWeek( cldr )`
 *
 * Return the day of the week normalized by the territory's firstDay [0-6].
 * Eg for "mon":
 * - return 0 if territory is GB, or BR, or DE, or FR (week starts on "mon");
 * - return 1 if territory is US (week starts on "sun");
 * - return 2 if territory is EG (week starts on "sat");
 */
var dateDayOfWeek = function( date, firstDay ) {
	return ( date.getDay() - firstDay + 7 ) % 7;
};




/**
 * distanceInDays( from, to )
 *
 * Return the distance in days between from and to Dates.
 */
var dateDistanceInDays = function( from, to ) {
	var inDays = 864e5;
	return ( to.getTime() - from.getTime() ) / inDays;
};




/**
 * startOf changes the input to the beginning of the given unit.
 *
 * For example, starting at the start of a day, resets hours, minutes
 * seconds and milliseconds to 0. Starting at the month does the same, but
 * also sets the date to 1.
 *
 * Returns the modified date
 */
var dateStartOf = function( date, unit ) {
	date = date instanceof ZonedDateTime ? date.clone() : new Date( date.getTime() );
	switch ( unit ) {
		case "year":
			date.setMonth( 0 );
		/* falls through */
		case "month":
			date.setDate( 1 );
		/* falls through */
		case "day":
			date.setHours( 0 );
		/* falls through */
		case "hour":
			date.setMinutes( 0 );
		/* falls through */
		case "minute":
			date.setSeconds( 0 );
		/* falls through */
		case "second":
			date.setMilliseconds( 0 );
	}
	return date;
};




/**
 * dayOfYear
 *
 * Return the distance in days of the date to the begin of the year [0-d].
 */
var dateDayOfYear = function( date ) {
	return Math.floor( dateDistanceInDays( dateStartOf( date, "year" ), date ) );
};




/**
 * Returns a new object created by using `object`'s values as keys, and the keys as values.
 */
var objectInvert = function( object, fn ) {
	fn = fn || function( object, key, value ) {
		object[ value ] = key;
		return object;
	};
	return Object.keys( object ).reduce((function( newObject, key ) {
		return fn( newObject, key, object[ key ] );
	}), {});
};




// Invert key and values, e.g., {"year": "yY"} ==> {"y": "year", "Y": "year"}
var dateFieldsMap = objectInvert({
	"era": "G",
	"year": "yY",
	"quarter": "qQ",
	"month": "ML",
	"week": "wW",
	"day": "dDF",
	"weekday": "ecE",
	"dayperiod": "a",
	"hour": "hHkK",
	"minute": "m",
	"second": "sSA",
	"zone": "zvVOxX"
}, (function( object, key, value ) {
	value.split( "" ).forEach((function( symbol ) {
		object[ symbol ] = key;
	}));
	return object;
}));




/**
 * millisecondsInDay
 */
var dateMillisecondsInDay = function( date ) {

	// TODO Handle daylight savings discontinuities
	return date - dateStartOf( date, "day" );
};




var datePatternRe = ( /([a-z])\1*|'([^']|'')+'|''|./ig );




/**
 * hourFormat( date, format, timeSeparator, formatNumber )
 *
 * Return date's timezone offset according to the format passed.
 * Eg for format when timezone offset is 180:
 * - "+H;-H": -3
 * - "+HHmm;-HHmm": -0300
 * - "+HH:mm;-HH:mm": -03:00
 * - "+HH:mm:ss;-HH:mm:ss": -03:00:00
 */
var dateTimezoneHourFormat = function( date, format, timeSeparator, formatNumber ) {
	var absOffset,
		offset = date.getTimezoneOffset();

	absOffset = Math.abs( offset );
	formatNumber = formatNumber || {
		1: function( value ) {
			return stringPad( value, 1 );
		},
		2: function( value ) {
			return stringPad( value, 2 );
		}
	};

	return format

		// Pick the correct sign side (+ or -).
		.split( ";" )[ offset > 0 ? 1 : 0 ]

		// Localize time separator
		.replace( ":", timeSeparator )

		// Update hours offset.
		.replace( /HH?/, (function( match ) {
			return formatNumber[ match.length ]( Math.floor( absOffset / 60 ) );
		}))

		// Update minutes offset and return.
		.replace( /mm/, (function() {
			return formatNumber[ 2 ]( Math.floor( absOffset % 60 ) );
		}))

		// Update minutes offset and return.
		.replace( /ss/, (function() {
			return formatNumber[ 2 ]( Math.floor( absOffset % 1 * 60 ) );
		}));
};




var dateWeekDays = [ "sun", "mon", "tue", "wed", "thu", "fri", "sat" ];




/**
 * format( date, properties )
 *
 * @date [Date instance].
 *
 * @properties
 *
 * TODO Support other calendar types.
 *
 * Disclosure: this function borrows excerpts of dojo/date/locale.
 */
var dateFormat = function( date, numberFormatters, properties ) {
	var parts = [];

	var timeSeparator = properties.timeSeparator;

	// create globalize date with given timezone data
	if ( properties.timeZoneData ) {
		date = new ZonedDateTime( date, properties.timeZoneData() );
	}

	properties.pattern.replace( datePatternRe, (function( current ) {
		var aux, dateField, type, value,
			chr = current.charAt( 0 ),
			length = current.length;

		if ( chr === "j" ) {

			// Locale preferred hHKk.
			// http://www.unicode.org/reports/tr35/tr35-dates.html#Time_Data
			chr = properties.preferredTime;
		}

		if ( chr === "Z" ) {

			// Z..ZZZ: same as "xxxx".
			if ( length < 4 ) {
				chr = "x";
				length = 4;

			// ZZZZ: same as "OOOO".
			} else if ( length < 5 ) {
				chr = "O";
				length = 4;

			// ZZZZZ: same as "XXXXX"
			} else {
				chr = "X";
				length = 5;
			}
		}

		// z...zzz: "{shortRegion}", e.g., "PST" or "PDT".
		// zzzz: "{regionName} {Standard Time}" or "{regionName} {Daylight Time}",
		//       e.g., "Pacific Standard Time" or "Pacific Daylight Time".
		if ( chr === "z" ) {
			if ( date.isDST ) {
				value = date.isDST() ? properties.daylightTzName : properties.standardTzName;
			}

			// Fall back to "O" format.
			if ( !value ) {
				chr = "O";
				if ( length < 4 ) {
					length = 1;
				}
			}
		}

		switch ( chr ) {

			// Era
			case "G":
				value = properties.eras[ date.getFullYear() < 0 ? 0 : 1 ];
				break;

			// Year
			case "y":

				// Plain year.
				// The length specifies the padding, but for two letters it also specifies the
				// maximum length.
				value = date.getFullYear();
				if ( length === 2 ) {
					value = String( value );
					value = +value.substr( value.length - 2 );
				}
				break;

			case "Y":

				// Year in "Week of Year"
				// The length specifies the padding, but for two letters it also specifies the
				// maximum length.
				// yearInWeekofYear = date + DaysInAWeek - (dayOfWeek - firstDay) - minDays
				value = new Date( date.getTime() );
				value.setDate(
					value.getDate() + 7 -
					dateDayOfWeek( date, properties.firstDay ) -
					properties.firstDay -
					properties.minDays
				);
				value = value.getFullYear();
				if ( length === 2 ) {
					value = String( value );
					value = +value.substr( value.length - 2 );
				}
				break;

			// Quarter
			case "Q":
			case "q":
				value = Math.ceil( ( date.getMonth() + 1 ) / 3 );
				if ( length > 2 ) {
					value = properties.quarters[ chr ][ length ][ value ];
				}
				break;

			// Month
			case "M":
			case "L":
				value = date.getMonth() + 1;
				if ( length > 2 ) {
					value = properties.months[ chr ][ length ][ value ];
				}
				break;

			// Week
			case "w":

				// Week of Year.
				// woy = ceil( ( doy + dow of 1/1 ) / 7 ) - minDaysStuff ? 1 : 0.
				// TODO should pad on ww? Not documented, but I guess so.
				value = dateDayOfWeek( dateStartOf( date, "year" ), properties.firstDay );
				value = Math.ceil( ( dateDayOfYear( date ) + value ) / 7 ) -
					( 7 - value >= properties.minDays ? 0 : 1 );
				break;

			case "W":

				// Week of Month.
				// wom = ceil( ( dom + dow of `1/month` ) / 7 ) - minDaysStuff ? 1 : 0.
				value = dateDayOfWeek( dateStartOf( date, "month" ), properties.firstDay );
				value = Math.ceil( ( date.getDate() + value ) / 7 ) -
					( 7 - value >= properties.minDays ? 0 : 1 );
				break;

			// Day
			case "d":
				value = date.getDate();
				break;

			case "D":
				value = dateDayOfYear( date ) + 1;
				break;

			case "F":

				// Day of Week in month. eg. 2nd Wed in July.
				value = Math.floor( date.getDate() / 7 ) + 1;
				break;

			// Week day
			case "e":
			case "c":
				if ( length <= 2 ) {

					// Range is [1-7] (deduced by example provided on documentation)
					// TODO Should pad with zeros (not specified in the docs)?
					value = dateDayOfWeek( date, properties.firstDay ) + 1;
					break;
				}

			/* falls through */
			case "E":
				value = dateWeekDays[ date.getDay() ];
				value = properties.days[ chr ][ length ][ value ];
				break;

			// Period (AM or PM)
			case "a":
				value = properties.dayPeriods[ date.getHours() < 12 ? "am" : "pm" ];
				break;

			// Hour
			case "h": // 1-12
				value = ( date.getHours() % 12 ) || 12;
				break;

			case "H": // 0-23
				value = date.getHours();
				break;

			case "K": // 0-11
				value = date.getHours() % 12;
				break;

			case "k": // 1-24
				value = date.getHours() || 24;
				break;

			// Minute
			case "m":
				value = date.getMinutes();
				break;

			// Second
			case "s":
				value = date.getSeconds();
				break;

			case "S":
				value = Math.round( date.getMilliseconds() * Math.pow( 10, length - 3 ) );
				break;

			case "A":
				value = Math.round( dateMillisecondsInDay( date ) * Math.pow( 10, length - 3 ) );
				break;

			// Zone
			case "z":
				break;

			case "v":

				// v...vvv: "{shortRegion}", eg. "PT".
				// vvvv: "{regionName} {Time}",
				//       e.g., "Pacific Time".
				if ( properties.genericTzName ) {
					value = properties.genericTzName;
					break;
				}

			/* falls through */
			case "V":

				//VVVV: "{explarCity} {Time}", e.g., "Los Angeles Time"
				if ( properties.timeZoneName ) {
					value = properties.timeZoneName;
					break;
				}

				if ( current === "v" ) {
					length = 1;
				}

			/* falls through */
			case "O":

				// O: "{gmtFormat}+H;{gmtFormat}-H" or "{gmtZeroFormat}", eg. "GMT-8" or "GMT".
				// OOOO: "{gmtFormat}{hourFormat}" or "{gmtZeroFormat}", eg. "GMT-08:00" or "GMT".
				if ( date.getTimezoneOffset() === 0 ) {
					value = properties.gmtZeroFormat;
				} else {

					// If O..OOO and timezone offset has non-zero minutes, show minutes.
					if ( length < 4 ) {
						aux = date.getTimezoneOffset();
						aux = properties.hourFormat[ aux % 60 - aux % 1 === 0 ? 0 : 1 ];
					} else {
						aux = properties.hourFormat;
					}

					value = dateTimezoneHourFormat(
						date,
						aux,
						timeSeparator,
						numberFormatters
					);
					value = properties.gmtFormat.replace( /\{0\}/, value );
				}
				break;

			case "X":

				// Same as x*, except it uses "Z" for zero offset.
				if ( date.getTimezoneOffset() === 0 ) {
					value = "Z";
					break;
				}

			/* falls through */
			case "x":

				// x: hourFormat("+HH[mm];-HH[mm]")
				// xx: hourFormat("+HHmm;-HHmm")
				// xxx: hourFormat("+HH:mm;-HH:mm")
				// xxxx: hourFormat("+HHmm[ss];-HHmm[ss]")
				// xxxxx: hourFormat("+HH:mm[:ss];-HH:mm[:ss]")
				aux = date.getTimezoneOffset();

				// If x and timezone offset has non-zero minutes, use xx (i.e., show minutes).
				if ( length === 1 && aux % 60 - aux % 1 !== 0 ) {
					length += 1;
				}

				// If (xxxx or xxxxx) and timezone offset has zero seconds, use xx or xxx
				// respectively (i.e., don't show optional seconds).
				if ( ( length === 4 || length === 5 ) && aux % 1 === 0 ) {
					length -= 2;
				}

				value = [
					"+HH;-HH",
					"+HHmm;-HHmm",
					"+HH:mm;-HH:mm",
					"+HHmmss;-HHmmss",
					"+HH:mm:ss;-HH:mm:ss"
				][ length - 1 ];

				value = dateTimezoneHourFormat( date, value, ":" );
				break;

			// timeSeparator
			case ":":
				value = timeSeparator;
				break;

			// ' literals.
			case "'":
				value = removeLiteralQuotes( current );
				break;

			// Anything else is considered a literal, including [ ,:/.@#], chinese, japonese, and
			// arabic characters.
			default:
				value = current;

		}
		if ( typeof value === "number" ) {
			value = numberFormatters[ length ]( value );
		}

		dateField = dateFieldsMap[ chr ];
		type = dateField ? dateField : "literal";

		// Concat two consecutive literals
		if ( type === "literal" && parts.length && parts[ parts.length - 1 ].type === "literal" ) {
			parts[ parts.length - 1 ].value += value;
			return;
		}

		parts.push( { type: type, value: value } );

	}));

	return parts;

};




var dateFormatterFn = function( dateToPartsFormatter ) {
	return function dateFormatter( value ) {
		return dateToPartsFormatter( value ).map( (function( part ) {
			return part.value;
		})).join( "" );
	};
};




/**
 * isLeapYear( year )
 *
 * @year [Number]
 *
 * Returns an indication whether the specified year is a leap year.
 */
var dateIsLeapYear = function( year ) {
	return new Date( year, 1, 29 ).getMonth() === 1;
};




/**
 * lastDayOfMonth( date )
 *
 * @date [Date]
 *
 * Return the last day of the given date's month
 */
var dateLastDayOfMonth = function( date ) {
	return new Date( date.getFullYear(), date.getMonth() + 1, 0 ).getDate();
};




/**
 * Differently from native date.setDate(), this function returns a date whose
 * day remains inside the month boundaries. For example:
 *
 * setDate( FebDate, 31 ): a "Feb 28" date.
 * setDate( SepDate, 31 ): a "Sep 30" date.
 */
var dateSetDate = function( date, day ) {
	var lastDay = new Date( date.getFullYear(), date.getMonth() + 1, 0 ).getDate();

	date.setDate( day < 1 ? 1 : day < lastDay ? day : lastDay );
};




/**
 * Differently from native date.setMonth(), this function adjusts date if
 * needed, so final month is always the one set.
 *
 * setMonth( Jan31Date, 1 ): a "Feb 28" date.
 * setDate( Jan31Date, 8 ): a "Sep 30" date.
 */
var dateSetMonth = function( date, month ) {
	var originalDate = date.getDate();

	date.setDate( 1 );
	date.setMonth( month );
	dateSetDate( date, originalDate );
};




var outOfRange = function( value, low, high ) {
	return value < low || value > high;
};




/**
 * parse( value, tokens, properties )
 *
 * @value [String] string date.
 *
 * @tokens [Object] tokens returned by date/tokenizer.
 *
 * @properties [Object] output returned by date/tokenizer-properties.
 *
 * ref: http://www.unicode.org/reports/tr35/tr35-dates.html#Date_Format_Patterns
 */
var dateParse = function( value, tokens, properties ) {
	var amPm, day, daysOfYear, month, era, hour, hour12, timezoneOffset, valid,
		YEAR = 0,
		MONTH = 1,
		DAY = 2,
		HOUR = 3,
		MINUTE = 4,
		SECOND = 5,
		MILLISECONDS = 6,
		date = new Date(),
		truncateAt = [],
		units = [ "year", "month", "day", "hour", "minute", "second", "milliseconds" ];

	// Create globalize date with given timezone data.
	if ( properties.timeZoneData ) {
		date = new ZonedDateTime( date, properties.timeZoneData() );
	}

	if ( !tokens.length ) {
		return null;
	}

	valid = tokens.every((function( token ) {
		var century, chr, value, length;

		if ( token.type === "literal" ) {

			// continue
			return true;
		}

		chr = token.type.charAt( 0 );
		length = token.type.length;

		if ( chr === "j" ) {

			// Locale preferred hHKk.
			// http://www.unicode.org/reports/tr35/tr35-dates.html#Time_Data
			chr = properties.preferredTimeData;
		}

		switch ( chr ) {

			// Era
			case "G":
				truncateAt.push( YEAR );
				era = +token.value;
				break;

			// Year
			case "y":
				value = token.value;
				if ( length === 2 ) {
					if ( outOfRange( value, 0, 99 ) ) {
						return false;
					}

					// mimic dojo/date/locale: choose century to apply, according to a sliding
					// window of 80 years before and 20 years after present year.
					century = Math.floor( date.getFullYear() / 100 ) * 100;
					value += century;
					if ( value > date.getFullYear() + 20 ) {
						value -= 100;
					}
				}
				date.setFullYear( value );
				truncateAt.push( YEAR );
				break;

			case "Y": // Year in "Week of Year"
				throw createErrorUnsupportedFeature({
					feature: "year pattern `" + chr + "`"
				});

			// Quarter (skip)
			case "Q":
			case "q":
				break;

			// Month
			case "M":
			case "L":
				if ( length <= 2 ) {
					value = token.value;
				} else {
					value = +token.value;
				}
				if ( outOfRange( value, 1, 12 ) ) {
					return false;
				}

				// Setting the month later so that we have the correct year and can determine
				// the correct last day of February in case of leap year.
				month = value;
				truncateAt.push( MONTH );
				break;

			// Week (skip)
			case "w": // Week of Year.
			case "W": // Week of Month.
				break;

			// Day
			case "d":
				day = token.value;
				truncateAt.push( DAY );
				break;

			case "D":
				daysOfYear = token.value;
				truncateAt.push( DAY );
				break;

			case "F":

				// Day of Week in month. eg. 2nd Wed in July.
				// Skip
				break;

			// Week day
			case "e":
			case "c":
			case "E":

				// Skip.
				// value = arrayIndexOf( dateWeekDays, token.value );
				break;

			// Period (AM or PM)
			case "a":
				amPm = token.value;
				break;

			// Hour
			case "h": // 1-12
				value = token.value;
				if ( outOfRange( value, 1, 12 ) ) {
					return false;
				}
				hour = hour12 = true;
				date.setHours( value === 12 ? 0 : value );
				truncateAt.push( HOUR );
				break;

			case "K": // 0-11
				value = token.value;
				if ( outOfRange( value, 0, 11 ) ) {
					return false;
				}
				hour = hour12 = true;
				date.setHours( value );
				truncateAt.push( HOUR );
				break;

			case "k": // 1-24
				value = token.value;
				if ( outOfRange( value, 1, 24 ) ) {
					return false;
				}
				hour = true;
				date.setHours( value === 24 ? 0 : value );
				truncateAt.push( HOUR );
				break;

			case "H": // 0-23
				value = token.value;
				if ( outOfRange( value, 0, 23 ) ) {
					return false;
				}
				hour = true;
				date.setHours( value );
				truncateAt.push( HOUR );
				break;

			// Minute
			case "m":
				value = token.value;
				if ( outOfRange( value, 0, 59 ) ) {
					return false;
				}
				date.setMinutes( value );
				truncateAt.push( MINUTE );
				break;

			// Second
			case "s":
				value = token.value;
				if ( outOfRange( value, 0, 59 ) ) {
					return false;
				}
				date.setSeconds( value );
				truncateAt.push( SECOND );
				break;

			case "A":
				date.setHours( 0 );
				date.setMinutes( 0 );
				date.setSeconds( 0 );

			/* falls through */
			case "S":
				value = Math.round( token.value * Math.pow( 10, 3 - length ) );
				date.setMilliseconds( value );
				truncateAt.push( MILLISECONDS );
				break;

			// Zone
			case "z":
			case "Z":
			case "O":
			case "v":
			case "V":
			case "X":
			case "x":
				if ( typeof token.value === "number" ) {
					timezoneOffset = token.value;
				}
				break;
		}

		return true;
	}));

	if ( !valid ) {
		return null;
	}

	// 12-hour format needs AM or PM, 24-hour format doesn't, ie. return null
	// if amPm && !hour12 || !amPm && hour12.
	if ( hour && !( !amPm ^ hour12 ) ) {
		return null;
	}

	if ( era === 0 ) {

		// 1 BC = year 0
		date.setFullYear( date.getFullYear() * -1 + 1 );
	}

	if ( month !== undefined ) {
		dateSetMonth( date, month - 1 );
	}

	if ( day !== undefined ) {
		if ( outOfRange( day, 1, dateLastDayOfMonth( date ) ) ) {
			return null;
		}
		date.setDate( day );
	} else if ( daysOfYear !== undefined ) {
		if ( outOfRange( daysOfYear, 1, dateIsLeapYear( date.getFullYear() ) ? 366 : 365 ) ) {
			return null;
		}
		date.setMonth( 0 );
		date.setDate( daysOfYear );
	}

	if ( hour12 && amPm === "pm" ) {
		date.setHours( date.getHours() + 12 );
	}

	if ( timezoneOffset !== undefined ) {
		date.setMinutes( date.getMinutes() + timezoneOffset - date.getTimezoneOffset() );
	}

	// Truncate date at the most precise unit defined. Eg.
	// If value is "12/31", and pattern is "MM/dd":
	// => new Date( <current Year>, 12, 31, 0, 0, 0, 0 );
	truncateAt = Math.max.apply( null, truncateAt );
	date = dateStartOf( date, units[ truncateAt ] );

	// Get date back from globalize date.
	if ( date instanceof ZonedDateTime ) {
		date = date.toDate();
	}

	return date;
};




/**
 * tokenizer( value, numberParser, properties )
 *
 * @value [String] string date.
 *
 * @numberParser [Function]
 *
 * @properties [Object] output returned by date/tokenizer-properties.
 *
 * Returns an Array of tokens, eg. value "5 o'clock PM", pattern "h 'o''clock' a":
 * [{
 *   type: "h",
 *   lexeme: "5"
 * }, {
 *   type: "literal",
 *   lexeme: " "
 * }, {
 *   type: "literal",
 *   lexeme: "o'clock"
 * }, {
 *   type: "literal",
 *   lexeme: " "
 * }, {
 *   type: "a",
 *   lexeme: "PM",
 *   value: "pm"
 * }]
 *
 * OBS: lexeme's are always String and may return invalid ranges depending of the token type.
 * Eg. "99" for month number.
 *
 * Return an empty Array when not successfully parsed.
 */
var dateTokenizer = function( value, numberParser, properties ) {
	var digitsRe, valid,
		tokens = [],
		widths = [ "abbreviated", "wide", "narrow" ];

	digitsRe = properties.digitsRe;
	value = looseMatching( value );

	valid = properties.pattern.match( datePatternRe ).every((function( current ) {
		var aux, chr, length, numeric, tokenRe,
			token = {};

		function hourFormatParse( tokenRe, numberParser ) {
			var aux, isPositive,
				match = value.match( tokenRe );
			numberParser = numberParser || function( value ) {
				return +value;
			};

			if ( !match ) {
				return false;
			}

			isPositive = match[ 1 ];

			// hourFormat containing H only, e.g., `+H;-H`
			if ( match.length < 6 ) {
				aux = isPositive ? 1 : 3;
				token.value = numberParser( match[ aux ] ) * 60;

			// hourFormat containing H and m, e.g., `+HHmm;-HHmm`
			} else if ( match.length < 10 ) {
				aux = isPositive ? [ 1, 3 ] : [ 5, 7 ];
				token.value = numberParser( match[ aux[ 0 ] ] ) * 60 +
					numberParser( match[ aux[ 1 ] ] );

			// hourFormat containing H, m, and s e.g., `+HHmmss;-HHmmss`
			} else {
				aux = isPositive ? [ 1, 3, 5 ] : [ 7, 9, 11 ];
				token.value = numberParser( match[ aux[ 0 ] ] ) * 60 +
					numberParser( match[ aux[ 1 ] ] ) +
					numberParser( match[ aux[ 2 ] ] ) / 60;
			}

			if ( isPositive ) {
				token.value *= -1;
			}

			return true;
		}

		function oneDigitIfLengthOne() {
			if ( length === 1 ) {

				// Unicode equivalent to /\d/
				numeric = true;
				return tokenRe = digitsRe;
			}
		}

		function oneOrTwoDigitsIfLengthOne() {
			if ( length === 1 ) {

				// Unicode equivalent to /\d\d?/
				numeric = true;
				return tokenRe = new RegExp( "^(" + digitsRe.source + "){1,2}" );
			}
		}

		function oneOrTwoDigitsIfLengthOneOrTwo() {
			if ( length === 1 || length === 2 ) {

				// Unicode equivalent to /\d\d?/
				numeric = true;
				return tokenRe = new RegExp( "^(" + digitsRe.source + "){1,2}" );
			}
		}

		function twoDigitsIfLengthTwo() {
			if ( length === 2 ) {

				// Unicode equivalent to /\d\d/
				numeric = true;
				return tokenRe = new RegExp( "^(" + digitsRe.source + "){2}" );
			}
		}

		// Brute-force test every locale entry in an attempt to match the given value.
		// Return the first found one (and set token accordingly), or null.
		function lookup( path ) {
			var array = properties[ path.join( "/" ) ];

			if ( !array ) {
				return null;
			}

			// array of pairs [key, value] sorted by desc value length.
			array.some((function( item ) {
				var valueRe = item[ 1 ];
				if ( valueRe.test( value ) ) {
					token.value = item[ 0 ];
					tokenRe = item[ 1 ];
					return true;
				}
			}));
			return null;
		}

		token.type = current;
		chr = current.charAt( 0 );
		length = current.length;

		if ( chr === "Z" ) {

			// Z..ZZZ: same as "xxxx".
			if ( length < 4 ) {
				chr = "x";
				length = 4;

			// ZZZZ: same as "OOOO".
			} else if ( length < 5 ) {
				chr = "O";
				length = 4;

			// ZZZZZ: same as "XXXXX"
			} else {
				chr = "X";
				length = 5;
			}
		}

		if ( chr === "z" ) {
			if ( properties.standardOrDaylightTzName ) {
				token.value = null;
				tokenRe = properties.standardOrDaylightTzName;
			}
		}

		// v...vvv: "{shortRegion}", eg. "PT".
		// vvvv: "{regionName} {Time}" or "{regionName} {Time}",
		// e.g., "Pacific Time"
		// http://unicode.org/reports/tr35/tr35-dates.html#Date_Format_Patterns
		if ( chr === "v" ) {
			if ( properties.genericTzName ) {
				token.value = null;
				tokenRe = properties.genericTzName;

			// Fall back to "V" format.
			} else {
				chr = "V";
				length = 4;
			}
		}

		if ( chr === "V" && properties.timeZoneName ) {
			token.value = length === 2 ? properties.timeZoneName : null;
			tokenRe = properties.timeZoneNameRe;
		}

		switch ( chr ) {

			// Era
			case "G":
				lookup([
					"gregorian/eras",
					length <= 3 ? "eraAbbr" : ( length === 4 ? "eraNames" : "eraNarrow" )
				]);
				break;

			// Year
			case "y":
			case "Y":
				numeric = true;

				// number l=1:+, l=2:{2}, l=3:{3,}, l=4:{4,}, ...
				if ( length === 1 ) {

					// Unicode equivalent to /\d+/.
					tokenRe = new RegExp( "^(" + digitsRe.source + ")+" );
				} else if ( length === 2 ) {

					// Lenient parsing: there's no year pattern to indicate non-zero-padded 2-digits
					// year, so parser accepts both zero-padded and non-zero-padded for `yy`.
					//
					// Unicode equivalent to /\d\d?/
					tokenRe = new RegExp( "^(" + digitsRe.source + "){1,2}" );
				} else {

					// Unicode equivalent to /\d{length,}/
					tokenRe = new RegExp( "^(" + digitsRe.source + "){" + length + ",}" );
				}
				break;

			// Quarter
			case "Q":
			case "q":

				// number l=1:{1}, l=2:{2}.
				// lookup l=3...
				oneDigitIfLengthOne() || twoDigitsIfLengthTwo() ||
					lookup([
						"gregorian/quarters",
						chr === "Q" ? "format" : "stand-alone",
						widths[ length - 3 ]
					]);
				break;

			// Month
			case "M":
			case "L":

				// number l=1:{1,2}, l=2:{2}.
				// lookup l=3...
				//
				// Lenient parsing: skeleton "yMd" (i.e., one M) may include MM for the pattern,
				// therefore parser accepts both zero-padded and non-zero-padded for M and MM.
				// Similar for L.
				oneOrTwoDigitsIfLengthOneOrTwo() || lookup([
					"gregorian/months",
					chr === "M" ? "format" : "stand-alone",
					widths[ length - 3 ]
				]);
				break;

			// Day
			case "D":

				// number {l,3}.
				if ( length <= 3 ) {

					// Equivalent to /\d{length,3}/
					numeric = true;
					tokenRe = new RegExp( "^(" + digitsRe.source + "){" + length + ",3}" );
				}
				break;

			case "W":
			case "F":

				// number l=1:{1}.
				oneDigitIfLengthOne();
				break;

			// Week day
			case "e":
			case "c":

				// number l=1:{1}, l=2:{2}.
				// lookup for length >=3.
				if ( length <= 2 ) {
					oneDigitIfLengthOne() || twoDigitsIfLengthTwo();
					break;
				}

			/* falls through */
			case "E":
				if ( length === 6 ) {

					// Note: if short day names are not explicitly specified, abbreviated day
					// names are used instead http://www.unicode.org/reports/tr35/tr35-dates.html#months_days_quarters_eras
					lookup([
						"gregorian/days",
						[ chr === "c" ? "stand-alone" : "format" ],
						"short"
					]) || lookup([
						"gregorian/days",
						[ chr === "c" ? "stand-alone" : "format" ],
						"abbreviated"
					]);
				} else {
					lookup([
						"gregorian/days",
						[ chr === "c" ? "stand-alone" : "format" ],
						widths[ length < 3 ? 0 : length - 3 ]
					]);
				}
				break;

			// Period (AM or PM)
			case "a":
				lookup([
					"gregorian/dayPeriods/format/wide"
				]);
				break;

			// Week
			case "w":

				// number l1:{1,2}, l2:{2}.
				oneOrTwoDigitsIfLengthOne() || twoDigitsIfLengthTwo();
				break;

			// Day, Hour, Minute, or Second
			case "d":
			case "h":
			case "H":
			case "K":
			case "k":
			case "j":
			case "m":
			case "s":

				// number l1:{1,2}, l2:{2}.
				//
				// Lenient parsing:
				// - skeleton "hms" (i.e., one m) always includes mm for the pattern, i.e., it's
				//   impossible to use a different skeleton to parse non-zero-padded minutes,
				//   therefore parser accepts both zero-padded and non-zero-padded for m. Similar
				//   for seconds s.
				// - skeleton "hms" (i.e., one h) may include h or hh for the pattern, i.e., it's
				//   impossible to use a different skeleton to parser non-zero-padded hours for some
				//   locales, therefore parser accepts both zero-padded and non-zero-padded for h.
				//   Similar for d (in skeleton yMd).
				oneOrTwoDigitsIfLengthOneOrTwo();
				break;

			case "S":

				// number {l}.

				// Unicode equivalent to /\d{length}/
				numeric = true;
				tokenRe = new RegExp( "^(" + digitsRe.source + "){" + length + "}" );
				break;

			case "A":

				// number {l+5}.

				// Unicode equivalent to /\d{length+5}/
				numeric = true;
				tokenRe = new RegExp( "^(" + digitsRe.source + "){" + ( length + 5 ) + "}" );
				break;

			// Zone
			case "v":
			case "V":
			case "z":
				if ( tokenRe && tokenRe.test( value ) ) {
					break;
				}
				if ( chr === "V" && length === 2 ) {
					break;
				}

			/* falls through */
			case "O":

				// O: "{gmtFormat}+H;{gmtFormat}-H" or "{gmtZeroFormat}", eg. "GMT-8" or "GMT".
				// OOOO: "{gmtFormat}{hourFormat}" or "{gmtZeroFormat}", eg. "GMT-08:00" or "GMT".
				if ( value === properties[ "timeZoneNames/gmtZeroFormat" ] ) {
					token.value = 0;
					tokenRe = properties[ "timeZoneNames/gmtZeroFormatRe" ];
				} else {
					aux = properties[ "timeZoneNames/hourFormat" ].some((function( hourFormatRe ) {
						if ( hourFormatParse( hourFormatRe, numberParser ) ) {
							tokenRe = hourFormatRe;
							return true;
						}
					}));
					if ( !aux ) {
						return null;
					}
				}
				break;

			case "X":

				// Same as x*, except it uses "Z" for zero offset.
				if ( value === "Z" ) {
					token.value = 0;
					tokenRe = /^Z/;
					break;
				}

			/* falls through */
			case "x":

				// x: hourFormat("+HH[mm];-HH[mm]")
				// xx: hourFormat("+HHmm;-HHmm")
				// xxx: hourFormat("+HH:mm;-HH:mm")
				// xxxx: hourFormat("+HHmm[ss];-HHmm[ss]")
				// xxxxx: hourFormat("+HH:mm[:ss];-HH:mm[:ss]")
				aux = properties.x.some((function( hourFormatRe ) {
					if ( hourFormatParse( hourFormatRe ) ) {
						tokenRe = hourFormatRe;
						return true;
					}
				}));
				if ( !aux ) {
					return null;
				}
				break;

			case "'":
				token.type = "literal";
				tokenRe = new RegExp( "^" + regexpEscape( removeLiteralQuotes( current ) ) );
				break;

			default:
				token.type = "literal";
				tokenRe = new RegExp( "^" + regexpEscape( current ) );
		}

		if ( !tokenRe ) {
			return false;
		}

		// Get lexeme and consume it.
		value = value.replace( tokenRe, (function( lexeme ) {
			token.lexeme = lexeme;
			if ( numeric ) {
				token.value = numberParser( lexeme );
			}
			return "";
		}));

		if ( !token.lexeme ) {
			return false;
		}

		if ( numeric && isNaN( token.value ) ) {
			return false;
		}

		tokens.push( token );
		return true;
	}));

	if ( value !== "" ) {
		valid = false;
	}

	return valid ? tokens : [];
};




var dateParserFn = function( numberParser, parseProperties, tokenizerProperties ) {
	return function dateParser( value ) {
		var tokens;

		validateParameterPresence( value, "value" );
		validateParameterTypeString( value, "value" );

		tokens = dateTokenizer( value, numberParser, tokenizerProperties );
		return dateParse( value, tokens, parseProperties ) || null;
	};
};




var dateToPartsFormatterFn = function( numberFormatters, properties ) {
	return function dateToPartsFormatter( value ) {
		validateParameterPresence( value, "value" );
		validateParameterTypeDate( value, "value" );

		return dateFormat( value, numberFormatters, properties );
	};

};




Globalize._dateFormat = dateFormat;
Globalize._dateFormatterFn = dateFormatterFn;
Globalize._dateParser = dateParse;
Globalize._dateParserFn = dateParserFn;
Globalize._dateTokenizer = dateTokenizer;
Globalize._dateToPartsFormatterFn = dateToPartsFormatterFn;
Globalize._validateParameterTypeDate = validateParameterTypeDate;

function optionsHasStyle( options ) {
	return options.skeleton !== undefined ||
		options.date !== undefined ||
		options.time !== undefined ||
		options.datetime !== undefined ||
		options.raw !== undefined;
}

Globalize.dateFormatter =
Globalize.prototype.dateFormatter = function( options ) {
	options = options || {};
	if ( !optionsHasStyle( options ) ) {
		options.skeleton = "yMd";
	}
	return Globalize[ runtimeKey( "dateFormatter", this._locale, [ options ] ) ];
};

Globalize.dateToPartsFormatter =
Globalize.prototype.dateToPartsFormatter = function( options ) {
	options = options || {};
	if ( !optionsHasStyle( options ) ) {
		options.skeleton = "yMd";
	}
	return Globalize[ runtimeKey( "dateToPartsFormatter", this._locale, [ options ] ) ];
};

Globalize.dateParser =
Globalize.prototype.dateParser = function( options ) {
	options = options || {};
	if ( !optionsHasStyle( options ) ) {
		options.skeleton = "yMd";
	}
	return Globalize[ runtimeKey( "dateParser", this._locale, [ options ] ) ];
};

Globalize.formatDate =
Globalize.prototype.formatDate = function( value, options ) {
	validateParameterPresence( value, "value" );
	validateParameterTypeDate( value, "value" );

	return this.dateFormatter( options )( value );
};

Globalize.formatDateToParts =
Globalize.prototype.formatDateToParts = function( value, options ) {
	validateParameterPresence( value, "value" );
	validateParameterTypeDate( value, "value" );

	return this.dateToPartsFormatter( options )( value );
};

Globalize.parseDate =
Globalize.prototype.parseDate = function( value, options ) {
	validateParameterPresence( value, "value" );
	validateParameterTypeString( value, "value" );

	return this.dateParser( options )( value );
};

return Globalize;




})));


/***/ }),
/* 6 */
/***/ ((function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Globalize Runtime v1.3.0
 *
 * http://github.com/jquery/globalize
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2017-07-03T21:37Z
 */
/*!
 * Globalize Runtime v1.3.0 2017-07-03T21:37Z Released under the MIT license
 * http://git.io/TrdQbw
 */
(function( root, factory ) {

	"use strict";

	// UMD returnExports
	if ( true ) {

		// AMD
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [
			__webpack_require__(0),
			__webpack_require__(1),
			__webpack_require__(2)
		], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else if ( typeof exports === "object" ) {

		// Node, CommonJS
		module.exports = factory(
			require( "../globalize-runtime" ),
			require( "./number" ),
			require( "./plural" )
		);
	} else {

		// Extend global
		factory( root.Globalize );
	}
}(this, (function( Globalize ) {



var formatMessage = Globalize._formatMessage,
	runtimeKey = Globalize._runtimeKey,
	validateParameterPresence = Globalize._validateParameterPresence,
	validateParameterTypeNumber = Globalize._validateParameterTypeNumber;


/**
 * format( value, numberFormatter, pluralGenerator, properties )
 *
 * @value [Number] The number to format
 *
 * @numberFormatter [String] A numberFormatter from Globalize.numberFormatter
 *
 * @pluralGenerator [String] A pluralGenerator from Globalize.pluralGenerator
 *
 * @properties [Object] containing relative time plural message.
 *
 * Format relative time.
 */
var relativeTimeFormat = function( value, numberFormatter, pluralGenerator, properties ) {

	var relativeTime,
		message = properties[ "relative-type-" + value ];

	if ( message ) {
		return message;
	}

	relativeTime = value <= 0 ? properties[ "relativeTime-type-past" ]
		: properties[ "relativeTime-type-future" ];

	value = Math.abs( value );

	message = relativeTime[ "relativeTimePattern-count-" + pluralGenerator( value ) ];
	return formatMessage( message, [ numberFormatter( value ) ] );
};




var relativeTimeFormatterFn = function( numberFormatter, pluralGenerator, properties ) {
	return function relativeTimeFormatter( value ) {
		validateParameterPresence( value, "value" );
		validateParameterTypeNumber( value, "value" );

		return relativeTimeFormat( value, numberFormatter, pluralGenerator, properties );
	};

};




Globalize._relativeTimeFormatterFn = relativeTimeFormatterFn;

Globalize.formatRelativeTime =
Globalize.prototype.formatRelativeTime = function( value, unit, options ) {
	validateParameterPresence( value, "value" );
	validateParameterTypeNumber( value, "value" );

	return this.relativeTimeFormatter( unit, options )( value );
};

Globalize.relativeTimeFormatter =
Globalize.prototype.relativeTimeFormatter = function( unit, options ) {
	options = options || {};
	return Globalize[ runtimeKey( "relativeTimeFormatter", this._locale, [ unit, options ] ) ];
};

return Globalize;




})));


/***/ }))
/******/ ])}.call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));;


/***/ }),
/* 3 */
/***/ ((function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_3__;

/***/ }))
/******/ ])}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));;


/***/ }),
/* 134 */,
/* 135 */,
/* 136 */,
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var ReactDOM = __webpack_require__(17);
var sp_a11y_1 = __webpack_require__(11);
var sp_application_base_1 = __webpack_require__(139);
var sp_loader_1 = __webpack_require__(140);
var sp_core_library_1 = __webpack_require__(5);
var ErrorDialog_1 = __webpack_require__(141);
var Workbench_1 = __webpack_require__(143);
var PageStore_1 = __webpack_require__(372);
var spWebpartWorkbench_resx_1 = __webpack_require__(373);
__webpack_require__(374);
var SpWebpartWorkbench = (function (_super) {
    tslib_1.__extends(SpWebpartWorkbench, _super);
    function SpWebpartWorkbench() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SpWebpartWorkbench.prototype.onLoad = function () {
        var _this = this;
        this._pageStore = new PageStore_1.PageStore(this.context.serviceScope);
        if (window.ENVIRONMENTTYPE !== 'Local') {
            sp_loader_1.SPComponentLoader._forceLocalManifests()
                .then((function () {
                console.debug(spWebpartWorkbench_resx_1.default.SuccessfullyLoadedText); 
                _this._pageStore.setPageReady();
            }), (function (error) {
                var errorMessage = sp_core_library_1.Text.format(spWebpartWorkbench_resx_1.default.ErrorLoadingText, error.toString());
                console.error(errorMessage); 
                _this._renderErrorDialog();
                _this._pageStore.setPageReady();
            }));
        }
        else {
            this._pageStore.setPageReady();
        }
    };
    SpWebpartWorkbench.prototype.onRender = function () {
        var a11yManager = sp_a11y_1.A11yManager.create(this.domElement);
        ReactDOM.render(
        React.createElement("div", null,
            React.createElement(Workbench_1.WorkBench, { pageStore: this._pageStore, a11yManagerId: a11yManager.id })), this.domElement);
    };
    SpWebpartWorkbench.prototype._renderErrorDialog = function () {
        if (!this._errorDialog) {
            var div = document.createElement('div');
            this._errorDialog = ReactDOM.render(React.createElement(ErrorDialog_1.default, null), div);
            document.body.insertBefore(div, document.body.lastChild.nextSibling);
        }
        this._errorDialog.open();
    };
    return SpWebpartWorkbench;
}(sp_application_base_1.BaseApplication));
exports.default = new SpWebpartWorkbench();


/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DomTraversal_1 = __webpack_require__(37);
var Focus_1 = __webpack_require__(64);
var Keyboard_1 = __webpack_require__(65);
var ScreenReader_1 = __webpack_require__(66);
var A11yAttribute_1 = __webpack_require__(67);
var FocusTransition_1 = __webpack_require__(68);
var A11yManager = (function () {
    function A11yManager(rootElement, config) {
        if (!rootElement) {
            throw Error('Invalid root element for constructing A11yManager');
        }
        var count = A11yManager._instances.size;
        var id = "A11yManager" + count;
        this._handleKeyDown = this._handleKeyDown.bind(this);
        this._handleFocusIn = this._handleFocusIn.bind(this);
        this._handleFocusOut = this._handleFocusOut.bind(this);
        this._checkFocusTransition = this._checkFocusTransition.bind(this);
        this._onFocusTransition = this._onFocusTransition.bind(this);
        this._rootElement = rootElement;
        this._id = id;
        this._config = config || {};
        this._savedFocusMap = new Map();
        this._focusListeners = new Map();
        this._rootElement.addEventListener('keydown', this._handleKeyDown);
        this._rootElement.addEventListener('focusin', this._handleFocusIn);
        this._rootElement.addEventListener('focusout', this._handleFocusOut);
    }
    A11yManager.create = function (domElement, config) {
        if (A11yManager._findInstanceForElement(domElement)) {
            console.warn('Creating an A11yManager on an element already managed by a parent A11yManager is not supported' +
                ' and may result in unexpected behavior. Inseatd you should use getInsanceById to get the existing manager.');
        }
        var instance = new A11yManager(domElement, config);
        this._instances.set(instance.id, instance);
        return instance;
    };
    A11yManager.getInstanceById = function (id) {
        return this._instances.get(id);
    };
    A11yManager.isElementManaged = function (domElement) {
        return !!this._findInstanceForElement(domElement);
    };
    A11yManager._findInstanceForElement = function (domElement) {
        if (!domElement) {
            return undefined;
        }
        A11yManager._instances.forEach((function (manager) {
            if (manager.manages(domElement)) {
                return manager;
            }
        }));
        return undefined;
    };
    Object.defineProperty(A11yManager.prototype, "_skipEventFlag", {
        get: function () {
            return this.prefix + 'skip-event';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(A11yManager.prototype, "id", {
        get: function () {
            return this._id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(A11yManager.prototype, "root", {
        get: function () {
            return this._rootElement;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(A11yManager.prototype, "config", {
        get: function () {
            return this._config;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(A11yManager.prototype, "prefix", {
        get: function () {
            return 'data-sp-a11y-';
        },
        enumerable: true,
        configurable: true
    });
    A11yManager.prototype.addFocusListener = function (element, direction, handler) {
        var listener = {
            element: element,
            direction: direction,
            handler: handler,
            id: A11yManager._focusListenerIdCounter++
        };
        this._focusListeners.set(listener.id, listener);
        return listener.id;
    };
    A11yManager.prototype.removeFocusListener = function (id) {
        if (this._focusListeners.has(id)) {
            this._focusListeners.delete(id);
        }
    };
    A11yManager.prototype.createA11yAttribute = function (type, params, value) {
        return new A11yAttribute_1.default(this.prefix, type, params, value);
    };
    A11yManager.prototype.setA11yAttributesOnElement = function (attributes, element) {
        for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {
            var attr = attributes_1[_i];
            attr.setOnElement(element);
        }
    };
    A11yManager.prototype.alert = function (msg) {
        ScreenReader_1.default.alert(this._id, msg, false);
        if (this.config.debug) {
            console.log(this._id + " A11y Log: Alerted '" + msg + "'");
        }
    };
    A11yManager.prototype.focusInside = function (element) {
        return Focus_1.default.focusInside(element);
    };
    A11yManager.prototype.focusTo = function (element) {
        var done = Focus_1.default.focusTo(element);
        return done;
    };
    A11yManager.prototype.focusById = function (id) {
        var nextElement = this.getElementByA11yId(id);
        return this.focusTo(nextElement);
    };
    A11yManager.prototype.focusOutOf = function (element) {
        Focus_1.default.focusOutOf(element, this._rootElement);
    };
    A11yManager.prototype.undoFocus = function () {
        return this.focusTo(this._lastActiveElement);
    };
    A11yManager.prototype.saveActiveElementAs = function (key) {
        this._savedFocusMap.set(key, this._activeElement);
    };
    A11yManager.prototype.forgetSavedActiveElement = function (key) {
        this._savedFocusMap.delete(key);
    };
    A11yManager.prototype.saveLastActiveElementAs = function (key) {
        this._savedFocusMap.set(key, this._lastActiveElement);
    };
    A11yManager.prototype.getSavedActiveElement = function (key) {
        return this._savedFocusMap.get(key);
    };
    A11yManager.prototype.restoreFocus = function (key) {
        return this.focusTo(this.getSavedActiveElement(key));
    };
    A11yManager.prototype.hasFocus = function () {
        return this.manages(document.activeElement);
    };
    A11yManager.prototype.manages = function (element) {
        return DomTraversal_1.default.contains(this.root, element);
    };
    A11yManager.prototype.skipEvent = function (e) {
        e[this._skipEventFlag] = true;
    };
    A11yManager.prototype.getElementByA11yId = function (id, root) {
        if (!id) {
            return undefined;
        }
        root = root || this._rootElement;
        var idAttribute = A11yAttribute_1.default.getPrefix(this.prefix, A11yAttribute_1.A11yAttributeType.Id);
        return root.querySelector("[" + idAttribute + "='" + id + "']");
    };
    A11yManager.prototype.getElementsByA11yClass = function (className, root) {
        if (!className) {
            return [];
        }
        root = root || this._rootElement;
        var classAttribute = A11yAttribute_1.default.getPrefix(this.prefix, A11yAttribute_1.A11yAttributeType.Class);
        var nodeList = root.querySelectorAll("[" + classAttribute + "='" + className + "']");
        return Array.prototype.slice.call(nodeList);
    };
    A11yManager.prototype._getElementFocusListeners = function (element) {
        var listeners = [];
        this._focusListeners.forEach((function (fl) {
            if (fl.element === element) {
                listeners.push(fl);
            }
        }));
        return listeners;
    };
    A11yManager.prototype._hasSkipKeyAttribute = function (keyCode, element) {
        var skipAttr = A11yAttribute_1.default.getAllFromElement(this.prefix, element)
            .filter((function (attr) { return attr.type === A11yAttribute_1.A11yAttributeType.SkipKeys; }))[0];
        if (skipAttr && skipAttr.value) {
            if (skipAttr.value === 'all' ||
                skipAttr.value.split(',').filter((function (keyCodeStr) { return parseInt(keyCodeStr, 10) === keyCode; })).length > 0) {
                return true;
            }
        }
        return false;
    };
    A11yManager.prototype._shouldSkipKey = function (keyCode, element) {
        var _this = this;
        var markedElement = DomTraversal_1.default.getFirstMatchingParent(element, (function (e) { return _this._hasSkipKeyAttribute(keyCode, e); }), this._rootElement);
        return markedElement !== undefined;
    };
    A11yManager.prototype._hasStopKeyAttribute = function (keyCode, element) {
        var stopAttr = A11yAttribute_1.default.getAllFromElement(this.prefix, element)
            .filter((function (attr) { return attr.type === A11yAttribute_1.A11yAttributeType.StopKeys; }))[0];
        if (stopAttr && stopAttr.value) {
            if (stopAttr.value === 'all' ||
                stopAttr.value.split(',').filter((function (keyCodeStr) { return parseInt(keyCodeStr, 10) === keyCode; })).length > 0) {
                return true;
            }
        }
        return false;
    };
    A11yManager.prototype._shouldStopKey = function (keyCode, element) {
        var _this = this;
        var markedElement = DomTraversal_1.default.getFirstMatchingParent(element, (function (e) { return _this._hasStopKeyAttribute(keyCode, e); }), this._rootElement);
        return markedElement !== undefined;
    };
    A11yManager.prototype._shouldSkipEvent = function (evt) {
        if (evt[this._skipEventFlag]) {
            return true;
        }
        else {
            return this._shouldSkipKey(evt.keyCode, evt.target);
        }
    };
    A11yManager.prototype._shouldStopEvent = function (evt) {
        return this._shouldStopKey(evt.keyCode, evt.target);
    };
    A11yManager.prototype._getElementByNavigationOperator = function (operator, element) {
        switch (operator) {
            case 'next':
                return this._getNextElementByHierarchicalNavigation(element);
            case 'prev':
                return this._getPrevElementByHierarchicalNavigation(element);
            case 'outside':
                return this._getOutsideElementByHierarchicalNavigation(element);
            case 'inside':
                return this._getInsideElementByHierarchicalNavigation(element);
        }
        return undefined;
    };
    A11yManager.prototype._navigateByAttribute = function (evt) {
        var path = this._getElementPath(this._rootElement, evt.target);
        if (path) {
            path = path.reverse();
            for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {
                var elem = path_1[_i];
                var navOnKeyAttrs = A11yAttribute_1.default.getFromElementByType(this.prefix, elem, A11yAttribute_1.A11yAttributeType.NavigateOnKey);
                for (var _a = 0, navOnKeyAttrs_1 = navOnKeyAttrs; _a < navOnKeyAttrs_1.length; _a++) {
                    var navAttr = navOnKeyAttrs_1[_a];
                    if (navAttr.value && navAttr.params) {
                        var keyCode = parseInt(navAttr.params[0], 10);
                        var alt = navAttr.params.indexOf('a') > 0;
                        var ctrl = navAttr.params.indexOf('c') > 0;
                        var shift = navAttr.params.indexOf('s') > 0;
                        if (Keyboard_1.default.isKey(keyCode, evt, { alt: alt, ctrl: ctrl, shift: shift })) {
                            var value = navAttr.value.trim();
                            var token = value[0];
                            var selector = value.substr(1);
                            var nextElement = void 0;
                            switch (token) {
                                case '#':
                                    nextElement = this.getElementByA11yId(selector, this._rootElement);
                                    break;
                                case '.':
                                    var elems = this.getElementsByA11yClass(selector, elem);
                                    nextElement = elems && elems.length > 0 ? elems[0] : undefined;
                                    break;
                                case '$':
                                    nextElement = this._getElementByNavigationOperator(selector, elem);
                                    break;
                                default:
                                    nextElement = undefined;
                            }
                            return nextElement;
                        }
                    }
                }
                var hierNavAttrs = A11yAttribute_1.default.getFromElementByType(this.prefix, elem, A11yAttribute_1.A11yAttributeType.NavigateByHierarchy);
                if (hierNavAttrs && hierNavAttrs.length > 0) {
                    return this._navigateByHierarchicalNavigation(evt);
                }
            }
        }
        return undefined;
    };
    A11yManager.prototype._getElementPath = function (higher, lower) {
        return DomTraversal_1.default.getElementPath(higher, lower, this._rootElement);
    };
    A11yManager.prototype._getParent = function (element) {
        var _this = this;
        var result = DomTraversal_1.default.getFirstMatchingParent(element, (function (it) {
            var hierAttr = A11yAttribute_1.default.getFromElementByType(_this.prefix, it, A11yAttribute_1.A11yAttributeType.NavigateByHierarchy)[0];
            return !!hierAttr || Focus_1.default.isElementFocusable(it);
        }), this._rootElement, false);
        return result || this._rootElement;
    };
    A11yManager.prototype._getHierarchyRoot = function (element) {
        var _this = this;
        var result = DomTraversal_1.default.getFirstMatchingParent(element, (function (it) {
            var hierAttr = A11yAttribute_1.default.getFromElementByType(_this.prefix, it, A11yAttribute_1.A11yAttributeType.NavigateByHierarchy)[0];
            return !!hierAttr;
        }), this._rootElement, false);
        return result || this._rootElement;
    };
    A11yManager.prototype._getSiblings = function (element) {
        var _this = this;
        var parent = this._getParent(element);
        var siblings = Focus_1.default.getFocusableSiblings(element, parent);
        return siblings.filter((function (sib) {
            return parent === _this._getParent(sib);
        }));
    };
    A11yManager.prototype._getChildren = function (element) {
        var _this = this;
        var children = Focus_1.default.getFocusableChildren(element);
        return children.filter((function (child) {
            return element === _this._getParent(child);
        }));
    };
    A11yManager.prototype._getNextElementByHierarchicalNavigation = function (element) {
        var siblings = this._getSiblings(element);
        return siblings.length > 0 ? siblings[0] : undefined;
    };
    A11yManager.prototype._getPrevElementByHierarchicalNavigation = function (element) {
        var siblings = this._getSiblings(element);
        return siblings.length > 0 ? siblings[siblings.length - 1] : undefined;
    };
    A11yManager.prototype._getInsideElementByHierarchicalNavigation = function (element) {
        return Focus_1.default.getFirstFocusableChild(element);
    };
    A11yManager.prototype._getOutsideElementByHierarchicalNavigation = function (element) {
        var parent = Focus_1.default.getFocusableParent(element, this._rootElement);
        if (parent !== this._rootElement || Focus_1.default.isElementFocusable(this._rootElement)) {
            return parent;
        }
        else {
            return undefined;
        }
    };
    A11yManager.prototype._navigateByHierarchicalNavigation = function (evt) {
        var elementToGo;
        var currentElement = Focus_1.default.isElementFocusable(evt.target) ?
            evt.target : Focus_1.default.getFocusableParent(evt.target, this._rootElement);
        if (Keyboard_1.default.isTab(evt)) {
            var topChildren = this._getChildren(this._getHierarchyRoot(currentElement));
            if (topChildren.length && currentElement !== topChildren[topChildren.length - 1]) {
                elementToGo = this._getNextElementByHierarchicalNavigation(currentElement);
            }
            else {
                var descendents = Focus_1.default.getFocusableDescendants(this._rootElement);
                if (descendents.length > 0) {
                    descendents[descendents.length - 1].focus();
                }
            }
        }
        else if (Keyboard_1.default.isShiftTab(evt)) {
            var firstChild = this._getChildren(this._rootElement)[0];
            if (currentElement !== firstChild) {
                elementToGo = this._getPrevElementByHierarchicalNavigation(currentElement);
            }
        }
        else if (Keyboard_1.default.isEnter(evt)) {
            elementToGo = this._getInsideElementByHierarchicalNavigation(currentElement);
        }
        else if (Keyboard_1.default.isEscape(evt)) {
            elementToGo = this._getOutsideElementByHierarchicalNavigation(currentElement);
        }
        return elementToGo;
    };
    A11yManager.prototype._handleKeyDown = function (evt) {
        if (this._shouldStopEvent(evt)) {
            evt.preventDefault();
            evt.stopPropagation();
            return;
        }
        if (this._shouldSkipEvent(evt)) {
            return;
        }
        var elementToGo = this._navigateByAttribute(evt);
        if (!elementToGo && this.config.useHierarchicalNavigation) {
            elementToGo = this._navigateByHierarchicalNavigation(evt);
        }
        if (elementToGo) {
            this.focusTo(elementToGo);
            evt.preventDefault();
            evt.stopPropagation();
        }
    };
    A11yManager.prototype._handleFocusIn = function (evt) {
        this._lastFocusInEvent = evt;
        this._lastFocusInEventTime = Date.now();
        this._activeElement = evt.target;
        this._checkFocusTransition();
    };
    A11yManager.prototype._handleFocusOut = function (evt) {
        this._lastFocusInEvent = undefined;
        this._lastFocusOutEvent = evt;
        this._lastFocusOutEventTime = Date.now();
        if (this._lastActiveElement !== evt.target) {
            this._lastActiveElement = evt.target;
        }
        this._focusDetectionTimer = window.setTimeout(this._checkFocusTransition, A11yManager._focusDetectionDelay);
    };
    A11yManager.prototype._checkFocusTransition = function () {
        window.clearTimeout(this._focusDetectionTimer);
        if (this._lastFocusInEvent || this._lastFocusOutEvent) {
            this._onFocusTransition(this._lastFocusOutEvent ? this._lastFocusOutEvent.target : undefined, this._lastFocusInEvent ? this._lastFocusInEvent.target : undefined);
        }
        this._lastFocusInEvent = undefined;
        this._lastFocusOutEvent = undefined;
    };
    A11yManager.prototype._onFocusTransition = function (src, dest) {
        var _this = this;
        if (!src && !dest) {
            return;
        }
        var transition = new FocusTransition_1.default(src, dest, this.root);
        if (this.config.debug) {
            console.log(this.id + " A11y Log: Focus transition:");
            console.log({
                from: transition.src || 'external element',
                to: transition.dest || 'external element'
            });
        }
        var messages = [];
        transition.forEachElementInPath((function (element, isOutward) {
            var attr = A11yAttribute_1.default.getFromElementByType(_this.prefix, element, isOutward ? A11yAttribute_1.A11yAttributeType.AlertOnFocusOut : A11yAttribute_1.A11yAttributeType.AlertOnFocusIn)[0];
            if (attr && attr.value) {
                messages.push(attr.value);
            }
            var elementFocusListeners = _this._getElementFocusListeners(element);
            for (var _i = 0, elementFocusListeners_1 = elementFocusListeners; _i < elementFocusListeners_1.length; _i++) {
                var listener = elementFocusListeners_1[_i];
                if ((listener.direction === 'outward' && isOutward) ||
                    (listener.direction === 'inward' && !isOutward)) {
                    var handler = listener.handler;
                    if (handler) {
                        handler(transition);
                    }
                }
            }
        }));
        if (messages && messages.length > 0) {
            var msg = messages.join(' ');
            this.alert(msg);
        }
    };
    A11yManager._focusDetectionDelay = 50;
    A11yManager._focusListenerIdCounter = 0;
    A11yManager._instances = new Map();
    return A11yManager;
}());
exports.default = A11yManager;


/***/ }),
/* 139 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_139__;

/***/ }),
/* 140 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_140__;

/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(2);
var ErrorDialog_resx_1 = __webpack_require__(142);
var ErrorDialog = (function (_super) {
    tslib_1.__extends(ErrorDialog, _super);
    function ErrorDialog() {
        var _this = _super.call(this) || this;
        _this.state = {
            showDialog: false
        };
        return _this;
    }
    ErrorDialog.prototype.render = function () {
        return (React.createElement(office_ui_fabric_react_1.Dialog, { isOpen: this.state.showDialog, type: office_ui_fabric_react_1.DialogType.largeHeader, title: ErrorDialog_resx_1.default.Title, subText: ErrorDialog_resx_1.default.SubText, isBlocking: false },
            React.createElement("span", null, ErrorDialog_resx_1.default.ClickHerePrefix),
            React.createElement(office_ui_fabric_react_1.Link, tslib_1.__assign({}, {
                href: 'https://dev.office.com/sharepoint/docs/spfx/web-parts/get-started/build-a-hello-world-web-part'
            } ), ErrorDialog_resx_1.default.ClickHereLink),
            React.createElement("span", null, ErrorDialog_resx_1.default.ClickHereSuffix),
            React.createElement(office_ui_fabric_react_1.DialogFooter, null,
                React.createElement(office_ui_fabric_react_1.PrimaryButton, { onClick: this._close, "data-automation-id": 'GulpServeWarningOkButton', text: ErrorDialog_resx_1.default.OkButtonText }))));
    };
    ErrorDialog.prototype.open = function () {
        this.setState({ showDialog: true });
    };
    ErrorDialog.prototype._close = function () {
        this.setState({ showDialog: false });
    };
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], ErrorDialog.prototype, "open", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], ErrorDialog.prototype, "_close", null);
    return ErrorDialog;
}(React.Component));
exports.default = ErrorDialog;


/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var strings = ( false)
    ? require('../../resx-strings/en-us.json')
    : __webpack_require__(13);
exports.default = strings['_FQya7ZjwIyrOEutOa+omIA'];


/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var sp_a11y_1 = __webpack_require__(11);
var sp_core_library_1 = __webpack_require__(5);
var office_ui_fabric_react_1 = __webpack_require__(2);
var WorkbenchCommandBar_1 = __webpack_require__(144);
var CanvasHost_1 = __webpack_require__(146);
var MobilePreview_1 = __webpack_require__(35);
var SerializedCanvasView_1 = __webpack_require__(360);
var Workbench_resx_1 = __webpack_require__(368);
var Workbench_module_scss_1 = __webpack_require__(369);
var WorkBench = (function (_super) {
    tslib_1.__extends(WorkBench, _super);
    function WorkBench(props, context) {
        var _this = _super.call(this, props, context) || this;
        var urlParams = new sp_core_library_1.UrlQueryParameterCollection(window.location.href);
        _this.state = {
            displayMobilePreview: false,
            showSerializedCanvasView: false,
            mobilePreviewDeviceType: MobilePreview_1.DeviceType.Phone,
            isEditing: (urlParams.getValue('Mode') !== 'Read'),
            officeHeaderTitle: Workbench_resx_1.default.Office365Title,
            hasOfficeHeader: false,
            hasCommandBar: false
        };
        _this._a11yManager = sp_a11y_1.A11yManager.getInstanceById(_this.props.a11yManagerId);
        return _this;
    }
    WorkBench.prototype.getChildContext = function () {
        return {
            a11yManager: this._a11yManager
        };
    };
    WorkBench.prototype.render = function () {
        var mobilePreview = undefined;
        var pageStore = this.props.pageStore;
        if (this.state.displayMobilePreview) {
            mobilePreview = React.createElement(MobilePreview_1.default, { onExit: this._closeMobilePreview, deviceType: this.state.mobilePreviewDeviceType });
        }
        var serializeCallback = pageStore.getSerializeCallback();
        return (React.createElement("div", { className: office_ui_fabric_react_1.css(Workbench_module_scss_1.default.workbench, 'ms-Fabric is-focusVisible') },
            React.createElement("div", { className: Workbench_module_scss_1.default.header },
                React.createElement("div", { className: Workbench_module_scss_1.default.headerMenu },
                    React.createElement(office_ui_fabric_react_1.Icon, { iconName: 'Waffle' })),
                React.createElement("div", { className: office_ui_fabric_react_1.css(Workbench_module_scss_1.default.headerTitle, 'ms-font-xl') },
                    React.createElement("em", null, this.state.officeHeaderTitle),
                    Workbench_resx_1.default.SharePointWorkbenchTitle),
                React.createElement("div", { className: Workbench_module_scss_1.default.headerPerson },
                    React.createElement(office_ui_fabric_react_1.Icon, { iconName: 'Contact' }))),
            React.createElement("div", null,
                React.createElement("div", { id: 'workbenchCommandBar', className: Workbench_module_scss_1.default.commandBar },
                    React.createElement(WorkbenchCommandBar_1.default, { isEditing: this.state.isEditing, onClickMobileView: this._onClickMobileView, onClickTabletView: this._onClickTabletView, toggleEdit: this._toggleEdit, clearPage: pageStore.clearPageState, savePage: pageStore.savePageState, onClickSerializeCanvasView: this._onClickSerializeCanvasView })),
                React.createElement("div", { id: 'workbenchPageContent', className: Workbench_module_scss_1.default.pageContent },
                    React.createElement(CanvasHost_1.default, { store: pageStore, isEditing: this.state.isEditing, hasOfficeHeader: this.state.hasOfficeHeader, hasCommandBar: this.state.hasCommandBar }))),
            mobilePreview,
            React.createElement(SerializedCanvasView_1.default, { getSerializedData: function (json) { return (serializeCallback) ? serializeCallback(json) : undefined; }, isVisible: this.state.showSerializedCanvasView, closeCallback: this._closeClickSerializeCanvasView })));
    };
    WorkBench.prototype.componentDidUpdate = function (prevProps, prevState) {
        if (this.state.isEditing !== prevState.isEditing) {
            if (this.state.isEditing) {
                this._a11yManager.focusById('previewButton');
                this._a11yManager.alert(Workbench_resx_1.default.ScreenReaderDisplayModeSwitchToEditMode);
            }
            else {
                this._a11yManager.focusById('editButton');
                this._a11yManager.alert(Workbench_resx_1.default.ScreenReaderDisplayModeSwitchToReadMode);
            }
        }
    };
    WorkBench.prototype._toggleEdit = function () {
        this.setState({
            isEditing: !this.state.isEditing
        });
    };
    WorkBench.prototype._onClickMobileView = function () {
        this.setState({
            displayMobilePreview: true,
            mobilePreviewDeviceType: MobilePreview_1.DeviceType.Phone
        });
        this._setSuiteNavZIndex('0');
    };
    WorkBench.prototype._onClickSerializeCanvasView = function () {
        this.setState({
            showSerializedCanvasView: true
        });
    };
    WorkBench.prototype._closeClickSerializeCanvasView = function () {
        this.setState({
            showSerializedCanvasView: false
        });
    };
    WorkBench.prototype._onClickTabletView = function () {
        this.setState({
            displayMobilePreview: true,
            mobilePreviewDeviceType: MobilePreview_1.DeviceType.Tablet
        });
        this._setSuiteNavZIndex('0');
    };
    WorkBench.prototype._closeMobilePreview = function () {
        this.setState({
            displayMobilePreview: false,
            mobilePreviewDeviceType: MobilePreview_1.DeviceType.Phone
        });
        this._setSuiteNavZIndex('5');
    };
    WorkBench.prototype._setSuiteNavZIndex = function (value) {
        var suiteNav = document.getElementById('SuiteNavPlaceHolder');
        if (suiteNav) {
            suiteNav.style.zIndex = value;
        }
    };
    WorkBench.childContextTypes = {
        a11yManager: React.PropTypes.object.isRequired
    };
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], WorkBench.prototype, "_toggleEdit", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], WorkBench.prototype, "_onClickMobileView", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], WorkBench.prototype, "_onClickSerializeCanvasView", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], WorkBench.prototype, "_closeClickSerializeCanvasView", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], WorkBench.prototype, "_onClickTabletView", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], WorkBench.prototype, "_closeMobilePreview", null);
    return WorkBench;
}(React.Component));
exports.WorkBench = WorkBench;


/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(2);
var WorkbenchCommandBar_resx_1 = __webpack_require__(145);
var WorkbenchCommandBar = (function (_super) {
    tslib_1.__extends(WorkbenchCommandBar, _super);
    function WorkbenchCommandBar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WorkbenchCommandBar.prototype.render = function () {
        var items = this.props.isEditing ? [
            {
                key: 'save',
                name: WorkbenchCommandBar_resx_1.default.Save,
                icon: 'Save',
                ariaLabel: WorkbenchCommandBar_resx_1.default.Save,
                title: WorkbenchCommandBar_resx_1.default.SaveAltText,
                onClick: this.props.savePage,
                'data-automation-id': 'workbench-command-bar-save'
            },
            {
                key: 'discard',
                name: WorkbenchCommandBar_resx_1.default.Discard,
                icon: 'RevToggleKey',
                ariaLabel: WorkbenchCommandBar_resx_1.default.Discard,
                title: WorkbenchCommandBar_resx_1.default.DiscardAltText,
                onClick: this.props.clearPage,
                'data-automation-id': 'workbench-command-bar-discard'
            },
            {
                key: 'wpData',
                name: WorkbenchCommandBar_resx_1.default.WebPartData,
                icon: 'TriangleUp12',
                ariaLabel: WorkbenchCommandBar_resx_1.default.WebPartData,
                title: WorkbenchCommandBar_resx_1.default.WebPartDataAltText,
                onClick: this.props.onClickSerializeCanvasView,
                'data-automation-id': 'workbench-command-bar-serialize'
            }
        ] : [];
        var farItems = this.props.isEditing ? [
            {
                key: 'mobilePreview',
                name: WorkbenchCommandBar_resx_1.default.Mobile,
                icon: 'CellPhone',
                ariaLabel: WorkbenchCommandBar_resx_1.default.Mobile,
                title: WorkbenchCommandBar_resx_1.default.MobleAltText,
                onClick: this.props.onClickMobileView,
                'data-automation-id': 'workbench-command-bar-mobile-cellphone'
            },
            {
                key: 'tabletPreview',
                name: WorkbenchCommandBar_resx_1.default.Tablet,
                icon: 'Tablet',
                ariaLabel: WorkbenchCommandBar_resx_1.default.Tablet,
                title: WorkbenchCommandBar_resx_1.default.TabletAltText,
                onClick: this.props.onClickTabletView,
                'data-automation-id': 'workbench-command-bar-mobile-tablet'
            },
            {
                key: 'preview',
                name: WorkbenchCommandBar_resx_1.default.Preview,
                icon: 'View',
                ariaLabel: WorkbenchCommandBar_resx_1.default.Preview,
                title: WorkbenchCommandBar_resx_1.default.PreviewAltText,
                onClick: this.props.toggleEdit,
                'data-automation-id': 'workbench-command-bar-preview',
                'data-sp-a11y-id': 'previewButton'
            }
        ] : [
            {
                key: 'edit',
                name: WorkbenchCommandBar_resx_1.default.Edit,
                icon: 'Edit',
                ariaLabel: WorkbenchCommandBar_resx_1.default.Edit,
                title: WorkbenchCommandBar_resx_1.default.EditAltText,
                onClick: this.props.toggleEdit,
                'data-automation-id': 'workbench-command-bar-edit',
                'data-sp-a11y-id': 'editButton'
            }
        ];
        return (React.createElement(office_ui_fabric_react_1.CommandBar, { "aria-live": 'polite', isSearchBoxVisible: false, items: items, farItems: farItems, role: 'toolbar' }));
    };
    return WorkbenchCommandBar;
}(React.Component));
exports.default = WorkbenchCommandBar;


/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var strings = ( false)
    ? require('../../resx-strings/en-us.json')
    : __webpack_require__(13);
exports.default = strings['_nCtJlVOXBHa59LgYtajnjA'];


/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var sp_canvas_1 = __webpack_require__(69);
var sp_core_library_1 = __webpack_require__(5);
var office_ui_fabric_react_1 = __webpack_require__(2);
var PropertyPaneController_module_scss_1 = __webpack_require__(317);
var CanvasHost_module_scss_1 = __webpack_require__(320);
var CanvasHost_resx_1 = __webpack_require__(323);
var CanvasHost = (function (_super) {
    tslib_1.__extends(CanvasHost, _super);
    function CanvasHost() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CanvasHost.prototype.componentDidMount = function () {
        var _this = this;
        var canvasOptions = {
            serviceScope: this.props.store.serviceScope,
            mode: this._getDisplayMode()
        };
        this._canvas = new sp_canvas_1.Canvas(this._canvasElement, canvasOptions);
        this.props.store.getPageReadyPromise().then((function () {
            var render = function () {
                _this._canvas.render(_this._getDisplayMode(), _this.props.store.getPageState());
                _this.props.store.setClearCallback(_this._clearPage);
                _this.props.store.setSerializeCallback(_this._canvas.serialize);
            };
            _this._canvas.fetchWebparts(true)
                .then(render)
                .catch((function (error) {
                console.error(sp_core_library_1.Text.format(CanvasHost_resx_1.default.FetchFailedError, error));
                render();
            }));
        }));
    };
    CanvasHost.prototype.componentDidUpdate = function (props) {
        if (this._canvas) {
            this._canvas.displayMode = this._getDisplayMode();
        }
    };
    CanvasHost.prototype.serialize = function (toJson) {
        return this._canvas.serialize(toJson);
    };
    CanvasHost.prototype.render = function () {
        var _this = this;
        var rootClass = office_ui_fabric_react_1.css(CanvasHost_module_scss_1.default.canvasHost, (_a = {},
            _a[CanvasHost_module_scss_1.default.hasHeader] = this.props.hasOfficeHeader,
            _a[CanvasHost_module_scss_1.default.hasCommandBar] = this.props.hasCommandBar,
            _a));
        return (React.createElement("div", { className: rootClass },
            React.createElement("div", { className: CanvasHost_module_scss_1.default.belowHeader },
                React.createElement("div", { className: CanvasHost_module_scss_1.default.content },
                    React.createElement("div", { ref: function (canvasElement) { return _this._canvasElement = canvasElement; } })))));
        var _a;
    };
    CanvasHost.prototype._getDisplayMode = function () {
        return this.props.isEditing ? sp_core_library_1.DisplayMode.Edit : sp_core_library_1.DisplayMode.Read;
    };
    CanvasHost.prototype._clearPage = function () {
        this._canvas.render(this._getDisplayMode());
        var propertyPaneContainer = document.getElementById('propertyPaneContainer');
        if (propertyPaneContainer) {
            propertyPaneContainer.classList.remove(PropertyPaneController_module_scss_1.default.showPane);
            window.setTimeout((function () {
                while (propertyPaneContainer.firstChild) {
                    propertyPaneContainer.removeChild(propertyPaneContainer.firstChild);
                }
            }), 1000);
        }
    };
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], CanvasHost.prototype, "serialize", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], CanvasHost.prototype, "_clearPage", null);
    return CanvasHost;
}(React.Component));
exports.default = CanvasHost;


/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var reactDOM = __webpack_require__(17);
var sp_core_library_1 = __webpack_require__(5);
var sp_a11y_1 = __webpack_require__(11);
var sp_telemetry_1 = __webpack_require__(6);
var sp_core_library_2 = __webpack_require__(5);
var office_ui_fabric_react_1 = __webpack_require__(2);
var CanvasComponent_1 = __webpack_require__(148);
var CreateEmptyZoneLayout_1 = __webpack_require__(59);
var CanvasStore_1 = __webpack_require__(15);
__webpack_require__(312);
var Canvas = (function () {
    function Canvas(container, canvasOptions) {
        this._render = this._render.bind(this);
        this._container = container;
        var a11yManager;
        if (canvasOptions.a11yManagerId) {
            a11yManager = sp_a11y_1.A11yManager.getInstanceById(canvasOptions.a11yManagerId);
        }
        if (!a11yManager) {
            a11yManager = sp_a11y_1.A11yManager.create(container);
        }
        this._store = new CanvasStore_1.default(canvasOptions.serviceScope, this._render, a11yManager, canvasOptions.mode, canvasOptions.serializedCanvasContent, canvasOptions.handleCanvasChanged, canvasOptions.scrollThreshold, canvasOptions.handleViewportRendered, canvasOptions.shouldCenterAlign, canvasOptions.mobileBrowser);
    }
    Canvas.prototype.render = function (displayMode, serializedCanvas) {
        this._internalDispose();
        this._store.webPartManager.disposeWebparts();
        window.addEventListener('blur', this._store.handleWindowBlur, true);
        this._store.deserialize(displayMode, serializedCanvas);
        this._render();
        if (!this._store.webPartsCount) {
            this._store.onViewportWebPartsRendered(sp_telemetry_1._PerformanceLogger.now());
        }
    };
    Object.defineProperty(Canvas.prototype, "count", {
        get: function () {
            return this._store.controlsProps.length;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Canvas.prototype, "previewImageUrl", {
        get: function () {
            return this._store.tryGeneratePreviewImageUrl();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Canvas.prototype, "displayMode", {
        get: function () {
            return this._store.displayMode;
        },
        set: function (newMode) {
            this._store.displayMode = newMode;
        },
        enumerable: true,
        configurable: true
    });
    Canvas.prototype.dispose = function () {
        this._internalDispose();
        if (!sp_core_library_2._SPKillSwitch.isActivated(Canvas._unmountLayoutKillSwitch, '03/28/2017', 'Unmount page layout')) {
            this._store.dispose();
        }
    };
    Canvas.prototype.openToolbox = function (row) {
        var didToolboxOpen = false;
        if (this._store.displayMode === sp_core_library_1.DisplayMode.Edit &&
            0 <= row &&
            row <= this._store.controlsProps.length) {
            var hint = document.querySelectorAll('.CanvasToolboxHint')[row];
            this._store.openToolbox(CreateEmptyZoneLayout_1.CreateEmptyZoneLayout(row), hint.offsetTop);
            didToolboxOpen = true;
        }
        return didToolboxOpen;
    };
    Canvas.prototype.serialize = function (toJson) {
        return this._store.serialize(toJson);
    };
    Canvas.prototype.fetchWebparts = function (force) {
        return this._store.fetchWebparts(force);
    };
    Canvas.prototype._internalDispose = function () {
        window.removeEventListener('blur', this._store.handleWindowBlur, true);
        reactDOM.unmountComponentAtNode(this._container);
    };
    Canvas.prototype._render = function () {
        var props = {
            store: this._store
        };
        var coreElement = React.createElement(CanvasComponent_1.default, props);
        this._coreComponent = reactDOM.render(coreElement, this._container);
    };
    Canvas._unmountLayoutKillSwitch = sp_core_library_2.Guid.tryParse('{7FA46D79-8E10-4B16-AC6B-7EE901B81746}');
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], Canvas.prototype, "serialize", null);
    return Canvas;
}());
exports.default = Canvas;


/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var ReactDOM = __webpack_require__(17);
var sp_telemetry_1 = __webpack_require__(6);
var office_ui_fabric_react_1 = __webpack_require__(2);
var sp_core_library_1 = __webpack_require__(5);
var sp_page_context_1 = __webpack_require__(47);
var odsp_utilities_bundle_1 = __webpack_require__(9);
var sp_canvas_toolbox_1 = __webpack_require__(102);
var sp_webpart_base_1 = __webpack_require__(16);
var CanvasControlType_1 = __webpack_require__(7);
var CanvasDragZone_1 = __webpack_require__(234);
var CanvasLayout_1 = __webpack_require__(21);
var CanvasStore_1 = __webpack_require__(15);
var CanvasToolboxHint_1 = __webpack_require__(117);
var CanvasZone_1 = __webpack_require__(307);
var CanvasZonePart_1 = __webpack_require__(60);
var ConfirmationDialog_1 = __webpack_require__(311);
var CreateEmptyZoneLayout_1 = __webpack_require__(59);
var Flights_1 = __webpack_require__(28);
var ICanvasZone_1 = __webpack_require__(118);
var ToolboxSmall_1 = __webpack_require__(63);
var CanvasStrings_resx_1 = __webpack_require__(10);
var CanvasComponent = (function (_super) {
    tslib_1.__extends(CanvasComponent, _super);
    function CanvasComponent(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this._narrowMediaQuery = window.matchMedia('screen and (max-width: 640px)');
        _this._zonesMap = new Map();
        _this._handleScroll = _this._async.debounce(_this._handleScroll, 50);
        return _this;
    }
    CanvasComponent.prototype.getChildContext = function () {
        return {
            store: this.props.store
        };
    };
    CanvasComponent.prototype.componentDidMount = function () {
        sp_telemetry_1._TraceLogger.logVerbose(CanvasComponent._logSource, "CanvasComponent is mounted");
        var isEdit = this.props.store.displayMode === sp_core_library_1.DisplayMode.Edit;
        var canvasElement = ReactDOM.findDOMNode(this);
        this.props.store.canvasElement = canvasElement;
        var canvasContainer = canvasElement;
        var hasScrollbar = false;
        do {
            canvasContainer = canvasContainer.parentElement;
            if (canvasContainer) {
                var overflowY = window.getComputedStyle(canvasContainer)['overflow-y'];
                hasScrollbar = (overflowY === 'scroll' || overflowY === 'auto');
            }
        } while (!hasScrollbar && canvasContainer && canvasContainer.tagName !== 'BODY');
        this.props.store.scrollableParent = canvasContainer;
        if (CanvasStore_1.default.isScrollAnimationsEnabled) {
            if (this.props.store.isMobileBrowser) {
                sp_webpart_base_1._Animations.instance.setScrollableParent(window.document.documentElement);
            }
            else {
                sp_webpart_base_1._Animations.instance.setScrollableParent(this.props.store.scrollableParent);
            }
        }
        if (isEdit && this.props.store.scrollableParent) {
            this.props.store.scrollableParent.addEventListener('scroll', this._handleScroll);
        }
        this._narrowMediaQuery.addListener(this._handleNarrowMediaQuery);
    };
    CanvasComponent.prototype.componentWillUnmount = function () {
        if (this.props.store.displayMode === sp_core_library_1.DisplayMode.Edit && this.props.store.scrollableParent) {
            this.props.store.scrollableParent.removeEventListener('scroll', this._handleScroll);
        }
        this._narrowMediaQuery.removeListener(this._handleNarrowMediaQuery);
        if (CanvasStore_1.default.isScrollAnimationsEnabled) {
            sp_webpart_base_1._Animations.instance.clear();
        }
    };
    CanvasComponent.prototype.componentDidUpdate = function () {
        if (this.props.store.displayMode === sp_core_library_1.DisplayMode.Edit && this.props.store.scrollableParent) {
            this.props.store.scrollableParent.addEventListener('scroll', this._handleScroll);
        }
        else if (this.props.store.displayMode === sp_core_library_1.DisplayMode.Read && this.props.store.scrollableParent) {
            this.props.store.scrollableParent.removeEventListener('scroll', this._handleScroll);
        }
    };
    CanvasComponent.prototype.render = function () {
        var _this = this;
        sp_telemetry_1._TraceLogger.logVerbose(CanvasComponent._logSource, "CanvasComponent _render() is called");
        var store = this.props.store;
        var displayMode = store.displayMode;
        var toolboxProps = store.toolboxProps;
        var deletedControlLayout = store.deletedControlLayout;
        var canvasLayout = store.canvasLayout;
        var selectedLayout = canvasLayout.fetchCurrentSelection();
        var shouldCenterAlign = store.shouldCenterAlign;
        var isEdit = displayMode === sp_core_library_1.DisplayMode.Edit;
        var zoneComponents = [];
        var zones = canvasLayout.zones;
        var numZones = zones.length;
        zones.forEach((function (curZone, curIdx) {
            zoneComponents.push(React.createElement(CanvasZone_1.default, { ref: function (zoneControl) {
                    if (zoneControl) {
                        _this._zonesMap.set(curZone.elementKey, zoneControl);
                    }
                    else {
                        _this._zonesMap.delete(curZone.elementKey);
                    }
                }, fullWidth: _this._isFullWidthSectionEnabled(curZone), selectedPosition: selectedLayout, key: curZone.elementKey, zone: curZone, shouldCenterAlign: shouldCenterAlign, zoneLabel: _this._getZoneAriaLabel(curIdx + 1, numZones) }));
            var nextZoneIndex = (curIdx + 1 === numZones) ?
                curZone.index + 1 :
                zones[curIdx + 1].index;
            var nextZoneLayout = CreateEmptyZoneLayout_1.CreateEmptyZoneLayout(nextZoneIndex);
            var zoneBeforeState = _this._getZoneSelectionState(selectedLayout, zones[curIdx].index);
            var zoneAfterState = curIdx < zones.length - 1 &&
                _this._getZoneSelectionState(selectedLayout, zones[curIdx + 1].index);
            var adjacentZoneState = zoneBeforeState > zoneAfterState ?
                zoneBeforeState : zoneAfterState;
            if (CanvasStore_1.default.isPolarisMultiColumnEditEnabled) {
                zoneComponents.push(React.createElement(CanvasToolboxHint_1.default, { adjacentZoneState: adjacentZoneState, ariaLabel: Flights_1.default.isHintDiscoverabilityEnabled ?
                        CanvasStrings_resx_1.default.ToolboxHintSectionTitleOnlyLayouts : CanvasStrings_resx_1.default.ToolboxHintSectionTitle, isVisible: true, key: "hint." + nextZoneLayout.zoneIndex, layout: nextZoneLayout, shouldCenterAlign: shouldCenterAlign, shouldFocus: deletedControlLayout.zoneIndex === nextZoneIndex, type: 1  }));
            }
        }));
        if (Flights_1.default.isHintDiscoverabilityEnabled && isEdit) {
            var latestZoneIndex = numZones > 0 ?
                zones[numZones - 1].index + 1 :
                CanvasLayout_1.default.firstLayoutIndex;
            var emptyCanvasSectionLayout = CreateEmptyZoneLayout_1.CreateEmptyZoneLayout(latestZoneIndex, CanvasLayout_1.default.firstLayoutIndex);
            zoneComponents.push(React.createElement("div", { className: numZones === 0 && 'EmptyCanvasHint' },
                React.createElement(CanvasZone_1.default, { hintLayout: emptyCanvasSectionLayout, selectedPosition: selectedLayout, zone: undefined, shouldCenterAlign: shouldCenterAlign })));
        }
        store.deletedControlLayout = CanvasLayout_1.default.undefinedControlPosition;
        var className = office_ui_fabric_react_1.css('Canvas', 'ms-Grid', {
            'Canvas--withLayout': CanvasStore_1.default.isPolarisMultiColumnEditEnabled,
            'Canvas--edit': isEdit
        });
        var firstZoneIdx = zones.length > 0 ?
            zones[0].index :
            CanvasLayout_1.default.firstLayoutIndex;
        var firstZoneLayout = CreateEmptyZoneLayout_1.CreateEmptyZoneLayout(firstZoneIdx);
        var toolBoxHintHasFocus = deletedControlLayout.zoneIndex === firstZoneLayout.zoneIndex;
        if (!CanvasStore_1.default.isPolarisMultiColumnEditEnabled &&
            zoneComponents && zoneComponents.length === 0) {
            zoneComponents.push(this._getEmptyZone());
        }
        var toolboxContainerItems;
        if (Flights_1.default.isToolboxLargeEnabled && !toolboxProps.onlyLayouts) {
            if (toolboxProps.errorMessage) {
                toolboxContainerItems = new Error(toolboxProps.errorMessage);
            }
            else if (toolboxProps.isLoading) {
                toolboxContainerItems = undefined;
            }
            else {
                toolboxContainerItems = toolboxProps.toolboxItems;
            }
        }
        var cultureName = store.serviceScope.consume(sp_page_context_1.PageContext.serviceKey).cultureInfo.currentUICultureName;
        var canvasContent = (React.createElement("div", { className: className, role: isEdit ? 'application' : undefined },
            CanvasStore_1.default.isPolarisMultiColumnEditEnabled &&
                React.createElement(CanvasToolboxHint_1.default, { adjacentZoneState: zones.length > 0 ?
                        this._getZoneSelectionState(selectedLayout, zones[0].index) :
                        ICanvasZone_1.CanvasZoneSelectionState.None, ariaLabel: Flights_1.default.isHintDiscoverabilityEnabled ?
                        CanvasStrings_resx_1.default.ToolboxHintSectionTitleOnlyLayouts : CanvasStrings_resx_1.default.ToolboxHintSectionTitle, isVisible: true, shouldCenterAlign: shouldCenterAlign, shouldFocus: toolBoxHintHasFocus, type: 1 , layout: firstZoneLayout }),
            zoneComponents,
            Flights_1.default.isToolboxLargeEnabled && !toolboxProps.onlyLayouts
                ? React.createElement(sp_canvas_toolbox_1.Toolbox, { items: toolboxContainerItems, onClickItem: toolboxProps.onItemClick, onCloseToolbox: toolboxProps.onClose, instanceRef: function (instance) { return store.toolbox = instance; }, a11yManager: store.a11yManager, siteSupportsFullWidth: store.siteSupportsFullWidth, scrollableParent: store.scrollableParent, canvasElement: store.canvasElement, cultureName: cultureName })
                : React.createElement(ToolboxSmall_1.default, tslib_1.__assign({}, toolboxProps)),
            React.createElement(ConfirmationDialog_1.default, tslib_1.__assign({}, store.confirmationDialogProps))));
        return (React.createElement("div", { className: 'CanvasComponent' },
            isEdit && CanvasStore_1.default.isPolarisMultiColumnEditEnabled ?
                React.createElement("div", { className: 'CanvasSectionBarBg' }) : undefined,
            React.createElement(office_ui_fabric_react_1.Dialog, { isOpen: isEdit && this.props.store.isNarrowMode, isBlocking: true, title: CanvasStrings_resx_1.default.NarrowModeDialogTitle, subText: CanvasStrings_resx_1.default.NarrowModeDialogSubtitle }),
            CanvasStore_1.default.isReorderingSupported
                ?
                    React.createElement(CanvasDragZone_1.default, { store: store, isEnabled: isEdit }, canvasContent)
                :
                    canvasContent));
    };
    CanvasComponent.prototype._handleScroll = function () {
        this._zonesMap.forEach((function (zoneControl, key) {
            if (zoneControl) {
                zoneControl.handleScroll();
            }
        }));
    };
    CanvasComponent.prototype._handleNarrowMediaQuery = function () {
        this.props.store.isNarrowMode = this._narrowMediaQuery.matches;
    };
    CanvasComponent.prototype._getZoneAriaLabel = function (zoneIndex, zonesLength) {
        return odsp_utilities_bundle_1.StringHelper.format(CanvasStrings_resx_1.default.SectionPositionAriaLabel, zoneIndex, zonesLength);
    };
    CanvasComponent.prototype._getEmptyZone = function () {
        var store = this.props.store;
        var canvasLayout = store.canvasLayout;
        var emptySection = {
            controlType: CanvasControlType_1.default.OneColumn,
            displayMode: sp_core_library_1.DisplayMode.Edit,
            id: sp_core_library_1.Guid.newGuid().toString(),
            position: {
                zoneIndex: CanvasLayout_1.default.firstLayoutIndex,
                sectionIndex: CanvasLayout_1.default.firstLayoutIndex,
                controlIndex: CanvasLayout_1.default.firstLayoutIndex,
                sectionFactor: CanvasZonePart_1.default.columnDefinitionMap.get(CanvasControlType_1.default.OneColumn).factor[0]
            }
        };
        canvasLayout.addControl(emptySection);
        var zones = canvasLayout.zones;
        return React.createElement(CanvasZone_1.default, { fullWidth: this._isFullWidthSectionEnabled(zones[0]), selectedPosition: canvasLayout.fetchCurrentSelection(), key: zones[0].elementKey, zone: zones[0], shouldCenterAlign: store.shouldCenterAlign, zoneLabel: this._getZoneAriaLabel(1, zones.length) });
    };
    CanvasComponent.prototype._isFullWidthSectionEnabled = function (zone) {
        return zone.sections[0] &&
            zone.sections[0].factor === 0 &&
            this.props.store.siteSupportsFullWidth;
    };
    CanvasComponent.prototype._getZoneSelectionState = function (selectedLayout, zoneIndex) {
        if (!selectedLayout) {
            return ICanvasZone_1.CanvasZoneSelectionState.None;
        }
        var isZoneSelected = selectedLayout.zoneIndex === zoneIndex;
        var isZoneActive = (!!selectedLayout.controlIndex || this.props.store.toolboxProps.isOpen) &&
            isZoneSelected;
        if (isZoneActive) {
            return ICanvasZone_1.CanvasZoneSelectionState.Active;
        }
        if (isZoneSelected) {
            return ICanvasZone_1.CanvasZoneSelectionState.Selected;
        }
        return ICanvasZone_1.CanvasZoneSelectionState.None;
    };
    CanvasComponent.childContextTypes = {
        store: React.PropTypes.object.isRequired
    };
    CanvasComponent._logSource = sp_telemetry_1._LogSource.create('CanvasComponent');
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], CanvasComponent.prototype, "_handleScroll", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], CanvasComponent.prototype, "_handleNarrowMediaQuery", null);
    return CanvasComponent;
}(office_ui_fabric_react_1.BaseComponent));
exports.default = CanvasComponent;


/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var EventBase_1 = __webpack_require__(24);
exports.ClonedEventType = EventBase_1.ClonedEventType;
exports.ValidationErrorType = EventBase_1.ValidationErrorType;
exports.AccountType = EventBase_1.AccountType;
exports.EventBase = EventBase_1.EventBase;
var Engagement_event_1 = __webpack_require__(39);
exports.Engagement = Engagement_event_1.Engagement;
var Nav_event_1 = __webpack_require__(150);
exports.Nav = Nav_event_1.Nav;
var PLTHttpRequest_event_1 = __webpack_require__(72);
exports.PLTHttpRequest = PLTHttpRequest_event_1.PLTHttpRequest;
var Qos_event_1 = __webpack_require__(29);
exports.Qos = Qos_event_1.Qos;
var ResultTypeEnum_1 = __webpack_require__(30);
exports.ResultTypeEnum = ResultTypeEnum_1.ResultTypeEnum;
var APICallPerformanceData_1 = __webpack_require__(152);
exports.APICallPerformanceData = APICallPerformanceData_1.default;
var AriaLoggerCore_1 = __webpack_require__(153);
exports.AriaLoggerCore = AriaLoggerCore_1.default;
var Beacon_1 = __webpack_require__(155);
exports.Beacon = Beacon_1.default;
var BeaconCache_1 = __webpack_require__(79);
exports.BeaconCache = BeaconCache_1.default;
var ControlPerformanceData_1 = __webpack_require__(162);
exports.ControlPerformanceData = ControlPerformanceData_1.default;
var CorrelationVector_1 = __webpack_require__(70);
exports.CorrelationVector = CorrelationVector_1.default;
var ErrorHelper_1 = __webpack_require__(14);
exports.ErrorHelper = ErrorHelper_1.default;
var PageTransitionType_1 = __webpack_require__(76);
exports.PageTransitionType = PageTransitionType_1.default;
var RUMOneLogger_1 = __webpack_require__(53);
exports.RumOneLogger = RUMOneLogger_1.default;


/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var SingleEventBase_1 = __webpack_require__(8);
exports.Nav = SingleEventBase_1.createSingleEvent({
    eventName: 'Nav,',
    shortEventName: 'Nav'
}, {
    viewParams: 4 /* Object */,
    url: 1 /* String */
});
exports.default = exports.Nav;


/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:CoverageThreshold(100)
Object.defineProperty(exports, "__esModule", { value: true });
var CircularBuffer = (function () {
    function CircularBuffer(size) {
        this._length = 0;
        this._head = -1;
        if (size <= 0) {
            throw new Error("Size must be positive");
        }
        this._size = size;
        this._buffer = new Array(size);
    }
    CircularBuffer.prototype.push = function (item) {
        if (this._length < this._size) {
            this._length++;
        }
        this._head++;
        if (this._head === this._size) {
            this._head = 0;
        }
        this._buffer[this._head] = item;
    };
    CircularBuffer.prototype.popOldest = function () {
        if (this._length === 0) {
            return null;
        }
        var tail = (this._head - this._length + 1 + this._size) % this._size;
        this._length--;
        return this._buffer[tail];
    };
    return CircularBuffer;
}());
exports.default = CircularBuffer;


/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var RUMOneLogger_1 = __webpack_require__(53);
exports.default = RUMOneLogger_1.APICallPerformanceData;


/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var EventBase_1 = __webpack_require__(24);
var Manager_1 = __webpack_require__(18);
var Beacon_event_1 = __webpack_require__(41);
var ErrorHelper_1 = __webpack_require__(14);
var BeforeUnload_1 = __webpack_require__(154);
var PlatformDetection_1 = __webpack_require__(40);
var StringHelper_1 = __webpack_require__(31);
var ARIA_QOS_NAME = "AriaBeacon";
var ariaTelemetry;
var logger;
var config = {
    logStartEvents: false,
    Init: init
};
exports.default = config;
function init(tenantToken, context, aria) {
    try {
        ariaTelemetry = aria;
        config.logStartEvents = true;
        var platformDetection = new PlatformDetection_1.default();
        var logConfiguration = {
            disableCookies: context.disableCookies
        };
        ariaTelemetry.LogManager.initialize(tenantToken, logConfiguration);
        logger = new ariaTelemetry.Logger();
        var semanticContext = logger.getSemanticContext();
        var contextMap = semanticContext['contextMap'];
        contextMap["AppInfo.Session"] = context.session;
        semanticContext.setAppVersion(context.version);
        contextMap["AppInfo.Manifest"] = context.manifest;
        semanticContext.setUserLanguage(context.market || '');
        semanticContext.setUserId(context.userId);
        semanticContext.setDeviceOsName(platformDetection.osName);
        semanticContext.setDeviceOsVersion(platformDetection.osVersion);
        BeforeUnload_1.default.init();
        BeforeUnload_1.default.registerHandler((function (unload) {
            if (unload) {
                ariaTelemetry.LogManager.flush(null);
            }
            return null;
        }));
        var loggerContext = {
            AccountType: EventBase_1.AccountType[context.accountType],
            Environment: context.environment,
            Workload: context.workload,
            IsAuthenticated: context.isAuthenticated ? 1 : 0,
            BrowserName: platformDetection.browserName,
            BrowserMajVer: platformDetection.browserMajor,
            BrowserMinVer: platformDetection.browserMinor,
            BrowserUserAgent: platformDetection.userAgent,
            BrowserIsMobile: platformDetection.isMobile,
            SiteSubscriptionId: context.siteSubscriptionId || ""
        };
        if (context.farmLabel) {
            loggerContext.FarmLabel = context.farmLabel;
        }
        for (var key in loggerContext) {
            logger.setContext(key, loggerContext[key]);
        }
        // Listen to aria beaconing and send qos events to monitor its success rate
        ariaTelemetry.LogManager.addCallbackListener((function (isSuccess, statusCode, tenantToken, events) {
            new Beacon_event_1.Beacon({
                name: ARIA_QOS_NAME,
                retryCount: 0,
                totalRetries: 0,
                eventCount: events ? events.length : 0
            }).end({
                success: isSuccess === 0,
                status: statusCode + ''
            });
            if (true) {
                // Display errors if the aria logger is failing to log
                if (isSuccess !== 0) {
                    ErrorHelper_1.default.log(new Error("Aria logger failed with status code " + statusCode));
                }
            }
        }));
        Manager_1.Manager.addLogHandler(safeLogEvent).forEach(safeLogEvent);
    }
    catch (e) {
        if (e instanceof ariaTelemetry.Exception) {
            e = new Error("Aria error: " + e.toString());
        }
        ErrorHelper_1.default.log(e);
    }
}
function safeLogEvent(event) {
    // Try/catch individual events so that one bad event doesn't cause the rest to fail to get logged
    try {
        logEvent(event);
    }
    catch (exception) {
        var error = void 0;
        if (exception instanceof ariaTelemetry.Exception) {
            error = new Error("Aria error: " + exception.toString());
        }
        if (!exception || !exception.handled) {
            // Only log the exception if it was not already logged before
            ErrorHelper_1.default.log(error || exception);
        }
    }
}
function logEvent(event) {
    if (event.enabled && (event.eventType !== EventBase_1.ClonedEventType.Start || config.logStartEvents) &&
        !(Beacon_event_1.Beacon.isTypeOf(event) && event.data && event.data.name === ARIA_QOS_NAME)) {
        var eventProperties = new ariaTelemetry.EventProperties();
        var values = {
            "CorrelationVector": event.vector.toString(),
            "ValidationErrors": event.validationErrors,
            "WebLog_FullName": event.eventName,
            "WebLog_EventType": EventBase_1.ClonedEventType[event.eventType]
        };
        if (event.eventType === EventBase_1.ClonedEventType.End) {
            values['Duration'] = event.endTime - event.startTime;
        }
        var names = event.eventName.split(',');
        for (var _i = 0, names_1 = names; _i < names_1.length; _i++) {
            var name_1 = names_1[_i];
            if (name_1) {
                values["WebLog_Type_" + name_1] = 1;
            }
        }
        var data = event.data;
        if (data) {
            for (var field in data) {
                var value = data[field];
                if (value === undefined || value === null) {
                    continue;
                }
                var propertyMetadata = event.metadata[field];
                if (propertyMetadata) {
                    var loggingName = propertyMetadata.isPrefixingDisabled ? StringHelper_1.capitalize(field) : StringHelper_1.capitalize(propertyMetadata.definedInName) + "_" + field;
                    var type = propertyMetadata.type;
                    if (type === 4 /* Object */) {
                        for (var subField in value) {
                            if (value[subField] !== undefined) {
                                values[loggingName + "_" + subField.replace('.', '_')] = value[subField];
                            }
                        }
                    }
                    else {
                        values[loggingName] = type === 6 /* Enum */ ? propertyMetadata.typeRef[value] : value;
                    }
                }
            }
        }
        eventProperties.name = "ev_" + names[names.length - 2];
        setProperties(eventProperties, values);
        logger.logEvent(eventProperties);
    }
}
function setProperties(properties, values) {
    // We are getting a lot of errorCode 3 aria errors complaining about invalid property keys
    // In order to fix the problem we need to know what the problematic keys are
    var key;
    try {
        for (key in values) {
            properties.setProperty(key, values[key]);
        }
    }
    catch (exception) {
        var errorCode = void 0;
        var error = void 0;
        if (exception instanceof ariaTelemetry.Exception) {
            errorCode = exception.ErrorCode();
            error = new Error("Aria error: " + exception.toString());
        }
        if (error) {
            // If it is an aria error that is thrown then log it with the error code and the key we tried to set
            exception.handled = true;
            ErrorHelper_1.default.logError(error, {
                errorCode: errorCode,
                propertyKey: key
            });
        }
        // Regardless of what kind of error it was, rethrow the error so we don't try to log the event
        throw exception;
    }
}


/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var ErrorHelper_1 = __webpack_require__(14);
var Async_1 = __webpack_require__(25);
var BeforeUnload = (function () {
    function BeforeUnload() {
        this._localHandlers = [];
    }
    BeforeUnload.init = function () {
        var _this = this;
        if (!this._initialized) {
            this._initialized = true;
            // Wire up before unload
            this._originalBeforeUnload = window.onbeforeunload;
            window.onbeforeunload = window['__onbeforeunload'] = function (ev) {
                return _this._handleBeforeUnload(ev);
            };
        }
    };
    BeforeUnload.registerHandler = function (callback) {
        this._handlers.push(callback);
    };
    BeforeUnload.unRegisterHandler = function (callback) {
        for (var x = 0; x < this._handlers.length; x++) {
            if (this._handlers[x] === callback) {
                this._handlers.splice(x, 1);
                break;
            }
        }
    };
    BeforeUnload.dispose = function () {
        if (this._originalBeforeUnload) {
            window.onbeforeunload = this._originalBeforeUnload;
        }
        else {
            window.onbeforeunload = null;
        }
    };
    BeforeUnload._handleBeforeUnload = function (ev) {
        var response = undefined;
        if (!this._allowNavs) {
            for (var x = 0; x < this._handlers.length; x++) {
                try {
                    response = this._handlers[x](true);
                    if (response) {
                        break;
                    }
                }
                catch (e) {
                    ErrorHelper_1.default.log(e);
                }
            }
            if (!response && this._originalBeforeUnload) {
                try {
                    response = this._originalBeforeUnload(ev);
                }
                catch (e) {
                    ErrorHelper_1.default.log(e);
                }
            }
        }
        // Make sure the response is undefined so ie will not block
        return response ? response : undefined;
    };
    BeforeUnload.prototype.registerHashNavDialogCallback = function (callback) {
        this._hashNavDialogCallback = callback;
    };
    BeforeUnload.prototype.allowHashNav = function (allowNavCallback, disallowNavCallback) {
        var response = undefined;
        if (!BeforeUnload._isDialogOpen && !BeforeUnload._allowNavs) {
            for (var x = 0; x < BeforeUnload._handlers.length; x++) {
                try {
                    response = BeforeUnload._handlers[x](false);
                    if (response) {
                        break;
                    }
                }
                catch (e) {
                    ErrorHelper_1.default.log(e);
                }
            }
            if (response) {
                BeforeUnload._isDialogOpen = true;
                this._hashNavDialogCallback(response)
                    .then((function () {
                    BeforeUnload._isDialogOpen = false;
                    BeforeUnload._allowNavs = true;
                    // Dont block until we have a new stack
                    if (!BeforeUnload._blockNavsAgainId) {
                        BeforeUnload._blockNavsAgainId = BeforeUnload._async.setImmediate((function () {
                            BeforeUnload._allowNavs = false;
                            BeforeUnload._blockNavsAgainId = null;
                        }));
                    }
                    if (allowNavCallback) {
                        allowNavCallback();
                    }
                }), (function () {
                    BeforeUnload._isDialogOpen = false;
                    if (disallowNavCallback) {
                        disallowNavCallback();
                    }
                }));
            }
        }
        return !response && !BeforeUnload._isDialogOpen;
    };
    BeforeUnload.prototype.registerHandler = function (callback) {
        this._localHandlers.push(callback);
        BeforeUnload.registerHandler(callback);
    };
    BeforeUnload.prototype.unRegisterHandler = function (callback) {
        for (var x = 0; x < this._localHandlers.length; x++) {
            if (this._localHandlers[x] === callback) {
                this._localHandlers.splice(x, 1);
                break;
            }
        }
        BeforeUnload.unRegisterHandler(callback);
    };
    BeforeUnload.prototype.dispose = function () {
        // Clean up any hanging handlers
        for (var _i = 0, _a = this._localHandlers; _i < _a.length; _i++) {
            var handler = _a[_i];
            BeforeUnload.unRegisterHandler(handler);
        }
    };
    BeforeUnload._handlers = [];
    BeforeUnload._async = new Async_1.default();
    BeforeUnload._initialized = false;
    return BeforeUnload;
}());
exports.default = BeforeUnload;
BeforeUnload.init();


/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ErrorHelper_1 = __webpack_require__(14);
var BeaconBase_1 = __webpack_require__(156);
var BeaconCache_1 = __webpack_require__(79);
var BaseDataStore_1 = __webpack_require__(42);
var DataStoreCachingType_1 = __webpack_require__(32);
var LogProcessor_1 = __webpack_require__(80);
var Beacon;
(function (Beacon) {
    "use strict";
    var LOGGING_REQUEST_TIMEOUT = 10000; // 10 seconds
    var FLUSH_TIMEOUT = 5000; // 5 seconds
    var BEACON_BATCH_SIZE = 100;
    var BEACON_MAX_CRITICAL_FLUSH_INTERVAL_SIZE = 5000; // 5 seconds
    // SLAPI
    var SLAPI_STREAM_ID = 1234;
    var SLAPI_JSON_VERSION = "V1";
    var SLAPI_IDX_VERSION = 0;
    var SLAPI_IDX_EVENTNAME = 1;
    var SLAPI_IDX_PROPERTY_START = 2;
    // BSQM Constants
    var SLAPI_MAX_DATA_SIZE = 64 * 1024;
    var SLAPI_MAX_ROWS_IN_STREAM = 1000;
    var SLAPI_SIZE_DWORD = 4;
    var SLAPI_SIZE_DATAPOINT_ENTRY = 3 * 4 /*SIZE_DWORD*/;
    var SLAPI_SIZE_STREAM_ENTRY = 3 * 4 /*SIZE_DATAPOINT_ENTRY*/;
    var SLAPI_MS_BTN_EPOCHS = 11644473600000; // Milliseconds between 1/1/1070 and 1/1/1601
    var SLAPI_MAX_INT32 = 0xFFFFFFFF;
    var SLAPI_MAX_SQM_DATAID = 0x7FFFFFFF;
    var SLAPI_DATAKEY_SESSION_NORMAL = 0;
    var SLAPI_DATAKEY_SESSION_CONTINUATION = 1;
    var SLAPI_FLAG_BSQM_ENABLED = 0x00000010;
    // const SLAPI_FLAG_QOS_ENABLED = 0x00000020;
    // SQM Datapoints
    var SLAPI_DATAID_BSQM_MAXSTREAMROWSSTREAMID = 8048;
    var SLAPI_DATAID_BSQM_MAXSTREAMROWS = 7993;
    var SLAPI_DATAID_SESSION_TYPE = 60;
    var WSAStreamRow = (function () {
        function WSAStreamRow(values) {
            this.Tic = 0;
            this.Vals = null;
            var _this = this;
            _this.Tic = _getTicks32();
            var numValues = values.length;
            _this.Vals = new Array(numValues);
            for (var i = 0; i < numValues; i++) {
                _this.Vals[i] = values[i];
            }
        }
        return WSAStreamRow;
    }());
    var WSADatapoint = (function () {
        function WSADatapoint(id, value) {
            var _this = this;
            _this.Id = id;
            _this.Val = value;
            _this.Tic = _getTicks32();
        }
        return WSADatapoint;
    }());
    var WSAStream = (function () {
        function WSAStream(id, width) {
            var _this = this;
            _this.Id = id;
            _this.Width = width;
            _this.Rows = new Array(0);
        }
        return WSAStream;
    }());
    var WSAData = (function () {
        function WSAData() {
            this.StartTime = null;
            this.EndTime = null;
            this.Flags = 0;
            this.wsaDatapoints = null;
            this.wsaStreams = null;
            var _this = this;
            _this.StartTime = _getTicks64();
            _this.EndTime = null;
            _this.CorrelationId = null;
            _this.Flags = SLAPI_FLAG_BSQM_ENABLED;
            _this.wsaDatapoints = new Array(0);
            _this.wsaStreams = new Array(0);
        }
        return WSAData;
    }());
    var _startTicks = 0;
    var _wsaData = null;
    var _numDatapoints = 0;
    var _numStreams = 0;
    var _numStreamBytes = 0;
    var _dictStreams = null;
    var _dictDatapoints = null;
    var _streamRowCount = 0;
    var _isDataAvailableForUpload = false;
    var _isContinuation = false;
    var _isInitialized = false;
    var _emptyCorrelationId = '00000000-0000-0000-0000-000000000000';
    var _eventNamePrefix = "";
    var _store = null;
    var _storeSize = null;
    var _instance = null;
    var _handlers = null;
    if (true) {
        try {
            console.log("Beacon: To disable logging to the console set \"window.disableBeaconLogToConsole = true\" in the debug window");
        }
        catch (error) {
            // Ignore errors here. This code path, console.log, is only called during debug and it can throw while
            // debugging or stepping through the code polluting the UI with unhandled errors.
        }
    }
    var OdbBeacon = (function (_super) {
        __extends(OdbBeacon, _super);
        function OdbBeacon(eventNamePrefix, handlers, cacheEnabled, correlationId, flushTimeout) {
            if (flushTimeout === void 0) { flushTimeout = FLUSH_TIMEOUT; }
            var _this = _super.call(this, '/_layouts/15/WsaUpload.ashx', BEACON_BATCH_SIZE, [flushTimeout], true, /* useSlidingWindow */ BEACON_MAX_CRITICAL_FLUSH_INTERVAL_SIZE, BeaconBase_1.default.DEFAULT_TOTAL_RETRIES, BeaconBase_1.default.DEFAULT_RESET_TOTAL_RETRIES_AFTER, cacheEnabled /* ignorePreviousEvents */) || this;
            _eventNamePrefix = eventNamePrefix;
            _handlers = handlers;
            _store = new BaseDataStore_1.default(LogProcessor_1.default.STORE_KEY,  true ? DataStoreCachingType_1.default.sharedMemory : DataStoreCachingType_1.default.session);
            _storeSize = _store.getValue(LogProcessor_1.default.STORE_SIZE_KEY);
            if (!_storeSize) {
                _storeSize = 0;
            }
            if (correlationId) {
                _this._cid = correlationId;
            }
            return _this;
        }
        OdbBeacon.prototype.beacon = function () {
            if (false) {
                var json = _getUploadData();
                if (json != null && json.length > 0) {
                    var headers = {};
                    headers["Content-Type"] = "application/json";
                    this.sendBeacon(json, headers, LOGGING_REQUEST_TIMEOUT);
                }
            }
            else if (!window["disableBeaconLogToConsole"]) {
                try {
                    console.log("Beacon: Uploaded to COSMOS (To disable logging to the console set \"window.disableBeaconLogToConsole = true\" in the debug window)");
                }
                catch (error) {
                    // Ignore errors here. This code path, console.log, is only called during debug and it can throw while
                    // debugging or stepping through the code polluting the UI with unhandled errors.
                }
            }
            // Set session storage size to zero instead of clearing
            _storeSize = 0;
            _store.setValue(LogProcessor_1.default.STORE_SIZE_KEY, _storeSize);
        };
        OdbBeacon.prototype._createBeaconRequest = function (events) {
            _SetCorrelationId(this._correlationId);
            // Converts to SP logging format
            for (var x = 0; x < events.length; x++) {
                var event = events[x];
                LogProcessor_1.default.processAndLogEvent({
                    event: event,
                    logFunc: function (streamName, dictProperties) {
                        _WriteLog(streamName, dictProperties);
                    },
                    eventNamePrefix: _eventNamePrefix,
                    handlers: _handlers
                });
            }
            this.beacon();
        };
        OdbBeacon.prototype._onNewEvent = function (event) {
            // BeaconCache puts every new event to the session storage so that Sharepoint can upload it for us
            // if user navigates away before Beacon event. So we do nothing here.
        };
        Object.defineProperty(OdbBeacon.prototype, "_correlationId", {
            get: function () {
                // Avoid reading from the global variable if correlationId has been passed in.
                // The _spPageContextInfo may not always exist.
                if (this._cid) {
                    return this._cid;
                }
                var spPageContextInfo = window['_spPageContextInfo'];
                if (spPageContextInfo) {
                    return spPageContextInfo.CorrelationId;
                }
                return _emptyCorrelationId;
            },
            enumerable: true,
            configurable: true
        });
        return OdbBeacon;
    }(BeaconBase_1.default));
    function addToLoggingManager(eventNamePrefix, handlers, correlationId, flushTimeout) {
        if (!_instance) {
            var cacheEnabled = false;
            if (BeaconCache_1.default.instance) {
                eventNamePrefix = BeaconCache_1.default.eventNamePrefix;
                handlers = BeaconCache_1.default.handlers;
                cacheEnabled = true;
            }
            if (!eventNamePrefix || !handlers) {
                throw new Error("You have to pass in eventNamePrefix and IBeaconHandlers object if no BeaconCache present.");
            }
            _instance = new OdbBeacon(eventNamePrefix, handlers, cacheEnabled, correlationId, flushTimeout);
            // read any events Sharepoint (or BeaconCache) put into session storage but haven't uploaded
            for (var i = 0; i < _storeSize; i++) {
                var item = _store.getValue(i.toString());
                if (!item || !item['name'] || !item['props']) {
                    continue;
                }
                _WriteLog(item['name'], item['props']);
            }
        }
        else {
            throw new Error("The beacon has already been added to the logging manager with event name prefix " + _eventNamePrefix + ".");
        }
    }
    Beacon.addToLoggingManager = addToLoggingManager;
    function _initialize() {
        if (_isInitialized) {
            return;
        }
        _wsaData = new WSAData();
        _dictStreams = new Array(0);
        _dictDatapoints = new Array(0);
        _createStream(SLAPI_STREAM_ID, 1);
        _isInitialized = true;
    }
    function _createStream(streamId, width) {
        if (!Boolean(_dictStreams[streamId])) {
            var wsaStream = new WSAStream(streamId, width);
            var idxStream = _numStreams;
            _wsaData.wsaStreams[idxStream] = wsaStream;
            _numStreams++;
            _numStreamBytes += SLAPI_SIZE_STREAM_ENTRY;
            _dictStreams[streamId] = idxStream;
        }
    }
    function _addToStream(streamId, dictValues) {
        try {
            var wsaStreamRow = new WSAStreamRow(dictValues);
            if (_isMaxSizeReachedCheck()) {
                return;
            }
            _isDataAvailableForUpload = true;
            _setDatapoint(SLAPI_DATAID_BSQM_MAXSTREAMROWSSTREAMID, streamId);
            var wsaStream = _wsaData.wsaStreams[_dictStreams[streamId]];
            if (Boolean(wsaStream)) {
                if (_streamRowCount < SLAPI_MAX_ROWS_IN_STREAM) {
                    wsaStream.Rows[_streamRowCount++] = wsaStreamRow;
                    _numStreamBytes += _getTotalBytesForRow(wsaStreamRow);
                    _setDatapoint(SLAPI_DATAID_BSQM_MAXSTREAMROWS, _streamRowCount); // update row count datapoint
                }
                else {
                    throw ("Beacon: MAX_ROWS_IN_STREAM exceeded for stream ID " + String(streamId));
                }
            }
        }
        catch (e) {
            ErrorHelper_1.default.log(e);
        }
    }
    function _getTotalBytesForRow(row) {
        var numTotalBytes = SLAPI_SIZE_DWORD;
        for (var i = 0; i < row.Vals.length; i++) {
            var value = String(row.Vals[i]);
            numTotalBytes += value.length * 2; // A JavaScript char is 16 bit 2 byte
        }
        numTotalBytes += (row.Vals.length - 1) * 6; // plus the commas and quotes when serialized
        return numTotalBytes;
    }
    function _setDatapoint(datapointId, datapointValue) {
        if (datapointId < 1 || datapointId > SLAPI_MAX_SQM_DATAID) {
            return;
        }
        if (datapointValue < 0 || datapointValue > SLAPI_MAX_INT32) {
            return;
        }
        var savedDatapoint = null;
        var idxDP = _dictDatapoints[datapointId];
        if (Boolean(idxDP)) {
            savedDatapoint = _wsaData.wsaDatapoints[idxDP];
        }
        if (savedDatapoint == null) {
            var datapoint = new WSADatapoint(datapointId, datapointValue);
            var idxDatapoint = _numDatapoints;
            _wsaData.wsaDatapoints[idxDatapoint] = datapoint;
            _dictDatapoints[datapointId] = idxDatapoint;
            _numDatapoints++;
        }
        else {
            savedDatapoint.Val = datapointValue;
        }
    }
    function _uploadData() {
        if (_wsaData == null) {
            return "";
        }
        try {
            if (_isDataAvailableForUpload) {
                // Add final datapoints
                if (Boolean(_isContinuation)) {
                    _setDatapoint(SLAPI_DATAID_SESSION_TYPE, SLAPI_DATAKEY_SESSION_CONTINUATION);
                }
                else {
                    _setDatapoint(SLAPI_DATAID_SESSION_TYPE, SLAPI_DATAKEY_SESSION_NORMAL);
                    _isContinuation = true;
                }
                _wsaData.EndTime = _getTicks64();
                var jsonString = null;
                try {
                    jsonString = JSON.stringify(_wsaData);
                }
                catch (e) {
                    ErrorHelper_1.default.log(e);
                }
                // Initialize the session data for continuation session
                _initContinuationSession();
                return jsonString;
            }
        }
        catch (e) {
            ErrorHelper_1.default.log(e);
            return "";
        }
    }
    function _initContinuationSession() {
        _dictStreams = new Array(0);
        _dictDatapoints = new Array(0);
        _numDatapoints = 0;
        _numStreams = 0;
        _streamRowCount = 0;
        _numStreamBytes = 0;
        _numDatapoints = 0;
        var sessID = _wsaData.CorrelationId;
        _wsaData = new WSAData();
        _wsaData.CorrelationId = sessID;
        _createStream(SLAPI_STREAM_ID, 1);
        _isDataAvailableForUpload = false;
    }
    function _isMaxSizeReachedCheck() {
        var size = _numDatapoints * SLAPI_SIZE_DATAPOINT_ENTRY + _numStreamBytes;
        if (size >= SLAPI_MAX_DATA_SIZE) {
            _instance.beacon();
            size = _numDatapoints * SLAPI_SIZE_DATAPOINT_ENTRY + _numStreamBytes;
            return size >= SLAPI_MAX_DATA_SIZE;
        }
        return false;
    }
    function _SetCorrelationId(correlationId) {
        _initialize();
        if (Boolean(_wsaData)) {
            if (correlationId !== null && correlationId !== undefined) {
                _wsaData.CorrelationId = correlationId;
            }
            else {
                _wsaData.CorrelationId = _emptyCorrelationId;
            }
        }
    }
    function _WriteLog(eventName, dictProperties) {
        _initialize();
        if ((!Boolean(eventName)) || (!Boolean(dictProperties))) {
            return;
        }
        if (false) {
            var values = new Array(SLAPI_IDX_PROPERTY_START + 1);
            values[SLAPI_IDX_VERSION] = SLAPI_JSON_VERSION;
            values[SLAPI_IDX_EVENTNAME] = eventName;
            var index = SLAPI_IDX_PROPERTY_START;
            for (var key in dictProperties) {
                var propVal = dictProperties[key];
                if (propVal !== undefined && propVal !== null) {
                    if (propVal instanceof Date) {
                        propVal = propVal.getTime();
                    }
                    values[index++] = key;
                    values[index++] = propVal;
                }
            }
            _addToStream(SLAPI_STREAM_ID, values);
        }
        else if (!window["disableBeaconLogToConsole"]) {
            try {
                console.log("Beacon: Logged to " + eventName + " with properties: " + JSON.stringify(dictProperties));
            }
            catch (error) {
                // Ignore errors here. This code path, console.log, is only called during debug and it can throw while
                // debugging or stepping through the code polluting the UI with unhandled errors.
            }
        }
    }
    function _getUploadData() {
        _initialize();
        return _uploadData();
    }
    function _getTicks32() {
        var timeNow = new Date();
        var ticks64 = timeNow.getTime();
        if (_startTicks === 0) {
            _startTicks = ticks64;
        }
        return ((1 + ticks64 - _startTicks) & 0x7FFFFFFF);
    }
    function _getTicks64() {
        var timeNow = new Date();
        var ticks64 = timeNow.getTime();
        ticks64 = ticks64 + SLAPI_MS_BTN_EPOCHS; // Epoch change from 1/1/1070 to 1/1/1601
        ticks64 = ticks64 * 10000; // 1ms to 100ns resolution
        return ticks64;
    }
})(Beacon || (Beacon = {}));
exports.default = Beacon;


/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var Manager_1 = __webpack_require__(18);
var EventBatchCache_1 = __webpack_require__(157);
var XHR_1 = __webpack_require__(158);
var Beacon_event_1 = __webpack_require__(41);
var BeaconBase = (function () {
    function BeaconBase(endPointUrl, batchSize, flushTimeouts, useSlidingWindow, maxCriticalFlushInterval, totalRetries, resetTotalRetriesAfter, ignorePreviousEvents) {
        var _this = this;
        this._lastSendBeacon = 0;
        this._endPointUrl = endPointUrl;
        this._maxCriticalFlushInterval = maxCriticalFlushInterval;
        this._totalRetries = totalRetries === undefined ? BeaconBase.DEFAULT_TOTAL_RETRIES : totalRetries;
        this._totalRetriesStartValue = this._totalRetries;
        this._resetTotalRetriesAfter = resetTotalRetriesAfter === undefined ? BeaconBase.DEFAULT_RESET_TOTAL_RETRIES_AFTER : resetTotalRetriesAfter;
        this._ignorePreviousEvents = ignorePreviousEvents === undefined ? false : ignorePreviousEvents;
        this._eventBatchCache = new EventBatchCache_1.default(batchSize, flushTimeouts, function (event) {
            if (_this._onNewEvent) {
                _this._onNewEvent(event);
            }
        }, function (events) {
            // Create the beacon request
            _this._createBeaconRequest(events);
        }, useSlidingWindow);
        this.init();
    }
    BeaconBase.prototype.sendBeacon = function (json, headers, requestTimeoutInMS) {
        this._sendBeacon(json, headers, requestTimeoutInMS, 0);
    };
    BeaconBase.prototype._sendBeacon = function (json, headers, requestTimeoutInMS, retryCount) {
        var _this = this;
        if (retryCount === 0) {
            this._lastSendBeacon = Manager_1.Manager.getTime();
        }
        var xhr = new XHR_1.default({
            url: this._endPointUrl,
            json: json,
            headers: headers,
            requestTimeoutInMS: requestTimeoutInMS
        });
        var beaconEvent = new Beacon_event_1.Beacon({
            retryCount: retryCount,
            totalRetries: this._totalRetries
        });
        xhr.start((function (xhr, status) {
            beaconEvent.end({ status: status + '', success: true });
            if (++_this._successfulLogRequests >= _this._resetTotalRetriesAfter) {
                _this._successfulLogRequests = _this._resetTotalRetriesAfter;
                _this._totalRetries = _this._totalRetriesStartValue;
            }
        }), (function (xhr, status, timeout) {
            _this._successfulLogRequests = 0;
            beaconEvent.end({ status: status + '', success: false });
            // Retry if we timed out since we failed
            if (status === -2 /* timeout */ && _this._totalRetries > 0) {
                _this._totalRetries--;
                _this._sendBeacon(json, headers, requestTimeoutInMS, retryCount + 1);
            }
        }));
    };
    BeaconBase.prototype.init = function () {
        var _this = this;
        var bufferedEvents = Manager_1.Manager.addLogHandler((function (event) {
            _this.addEvent(event);
        }));
        if (!this._ignorePreviousEvents) {
            for (var x = 0; x < bufferedEvents.length; x++) {
                this.addEvent(bufferedEvents[x]);
            }
        }
    };
    BeaconBase.prototype.addEvent = function (event) {
        if (event.enabled) {
            this._eventBatchCache.addEvent(event);
            if (event.critical &&
                (!this._lastSendBeacon ||
                    Manager_1.Manager.getTime() - this._lastSendBeacon > this._maxCriticalFlushInterval)) {
                this._eventBatchCache.flush();
            }
        }
    };
    BeaconBase.DEFAULT_TOTAL_RETRIES = 3;
    BeaconBase.DEFAULT_RESET_TOTAL_RETRIES_AFTER = 3;
    return BeaconBase;
}());
exports.default = BeaconBase;


/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var Async_1 = __webpack_require__(25);
var Beacon_event_1 = __webpack_require__(41);
var ErrorHelper_1 = __webpack_require__(14);
var EventBatchCache = (function () {
    function EventBatchCache(maxSize, maxFlushTimes, newEventHandler, flushHandler, useSlidingWindow) {
        this._events = [];
        this._flushCount = 0;
        this._async = new Async_1.default(this);
        this._maxSize = maxSize;
        this._newEventHandler = newEventHandler;
        this._flushHandler = flushHandler;
        this._maxFlushTimes = maxFlushTimes;
        this._useSlidingWindow = useSlidingWindow;
    }
    EventBatchCache.prototype.addEvent = function (event) {
        this._events.push(event);
        if (this._newEventHandler) {
            try {
                this._newEventHandler(event);
            }
            catch (e) {
                ErrorHelper_1.default.log(e);
            }
        }
        // Dont create a timer for events that are of type beacon
        if (Beacon_event_1.Beacon.isTypeOf(event)) {
            return;
        }
        if (this._events.length >= this._maxSize) {
            this.flush();
        }
        else {
            this._setFlushTimeout(false);
        }
    };
    EventBatchCache.prototype.flush = function () {
        this._setFlushTimeout(true);
    };
    EventBatchCache.prototype._handleFlush = function () {
        this._clearFlushTimeout();
        if (this._events.length) {
            this._flushHandler(this._events);
            // Reset the events array
            this._events = [];
        }
    };
    EventBatchCache.prototype._clearFlushTimeout = function () {
        if (this._flushTimeoutId) {
            this._async.clearTimeout(this._flushTimeoutId);
            this._flushTimeoutId = null;
        }
        if (this._immediateflushTimeoutId) {
            this._async.clearTimeout(this._immediateflushTimeoutId);
            this._immediateflushTimeoutId = null;
        }
    };
    EventBatchCache.prototype._setFlushTimeout = function (immediate) {
        var _this = this;
        // if another immediate flush is already queued, disregard
        if (!!this._immediateflushTimeoutId) {
            return;
        }
        if (this._useSlidingWindow) {
            this._clearFlushTimeout();
            if (immediate) {
                this._immediateflushTimeoutId = this._async.setTimeout((function () {
                    _this._handleFlush();
                }), 0);
            }
            else {
                this._flushTimeoutId = this._async.setTimeout((function () {
                    _this._handleFlush();
                }), this._getFlushTime());
            }
        }
        else {
            if (immediate) {
                if (!this._immediateflushTimeoutId) {
                    this._immediateflushTimeoutId = this._async.setTimeout((function () {
                        _this._handleFlush();
                    }), 0);
                }
            }
            else if (!this._flushTimeoutId) {
                this._flushTimeoutId = this._async.setTimeout((function () {
                    _this._handleFlush();
                }), this._getFlushTime());
            }
        }
    };
    EventBatchCache.prototype._getFlushTime = function () {
        if (this._flushCount < this._maxFlushTimes.length) {
            var flushCount = this._flushCount;
            this._flushCount++;
            return this._maxFlushTimes[flushCount];
        }
        else {
            return this._maxFlushTimes[this._maxFlushTimes.length - 1];
        }
    };
    return EventBatchCache;
}());
exports.default = EventBatchCache;


/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Async_1 = __webpack_require__(25);
var ErrorHelper_1 = __webpack_require__(14);
var ObjectUtil_1 = __webpack_require__(19);
var XHR = (function () {
    function XHR(options) {
        this._async = new Async_1.default(this);
        var url = options.url, _a = options.requestTimeoutInMS, requestTimeoutInMS = _a === void 0 ? XHR.DEFAULT_TIMEOUT_MS : _a, postData = options.json, _b = options.responseType, responseType = _b === void 0 ? '' : _b, _c = options.headers, headers = _c === void 0 ? {} : _c, _d = options.withCredentials, withCredentials = _d === void 0 ? false : _d, _e = options.needsCors, needsCors = _e === void 0 ? false : _e, progressCallback = options.onProgress, uploadProgressCallback = options.onUploadProgress;
        var _f = options.method, method = _f === void 0 ? postData ? 'POST' : 'GET' : _f;
        this._url = url;
        this._requestTimeoutInMS = requestTimeoutInMS;
        this._postData = postData;
        this._headers = headers;
        this._method = method;
        this._withCredentials = withCredentials;
        this._needsCors = needsCors;
        this._responseType = responseType;
        this._progressCallback = progressCallback;
        this._uploadProgressCallback = uploadProgressCallback;
    }
    XHR.prototype.abort = function (isCancelled) {
        var aborted = this._abortRequest();
        if (aborted && !isCancelled) {
            this._callFailureCallback(this._request, -3 /* abort */, false);
        }
    };
    XHR.prototype.start = function (successCallback, failureCallback) {
        var _this = this;
        this._successCallback = successCallback;
        this._failureCallback = failureCallback;
        var _a = this, method = _a._method, headers = _a._headers;
        try {
            this._request = this._getRequest();
            var _b = this, progressCallback_1 = _b._progressCallback, uploadProgressCallback_1 = _b._uploadProgressCallback, request_1 = _b._request, responseType = _b._responseType;
            if (progressCallback_1) {
                request_1.onprogress = function (event) {
                    try {
                        progressCallback_1(event);
                    }
                    catch (error) {
                        ErrorHelper_1.default.logError(error);
                    }
                };
            }
            if (uploadProgressCallback_1) {
                request_1.upload.onprogress = function (event) {
                    try {
                        uploadProgressCallback_1(event);
                    }
                    catch (error) {
                        ErrorHelper_1.default.logError(error);
                    }
                };
            }
            this._async.setTimeout((function () {
                // Check if we havent logged this event already
                if (!_this._completed) {
                    _this._timeoutCallback();
                }
            }), this._requestTimeoutInMS);
            // Report Qos on the actual qos calls
            request_1.onreadystatechange = function () {
                // Check if we havent logged this event in a timeout
                if (!_this._completed) {
                    var DONE = 4; // Default done readystate
                    try {
                        DONE = request_1.DONE || 4;
                    }
                    catch (e) {
                        // IE 9 will throw here if the request was aborted just swallow this
                    }
                    if (request_1.readyState === DONE) {
                        _this._requestEndCallback();
                    }
                }
            };
            request_1.open(method, this._url, true);
            if ("withCredentials" in request_1) {
                request_1.withCredentials = this._withCredentials;
            }
            // In IE, responseType has to be set after open is called
            request_1.responseType = responseType;
            // Headers have to be set after open is called
            for (var x in headers) {
                request_1.setRequestHeader(x, headers[x]);
            }
            request_1.send(this._postData);
        }
        catch (error) {
            ErrorHelper_1.default.logError(error, {
                origin: location ? location.origin : 'unknown',
                withCredentials: this._withCredentials,
                requestUrl: this._url,
                headers: ObjectUtil_1.safeSerialize(headers),
                method: method
            });
            // abort the request and set the exception status code
            this._abortRequest();
            this._callFailureCallback(this._request, -1 /* exception */, false);
        }
    };
    XHR.prototype._getRequest = function () {
        var _this = this;
        if (!this._needsCors || !window['XDomainRequest']) {
            return new XMLHttpRequest();
        }
        // This is only needed for IE 9 to support CORS requests
        // Note: we can not set headers on XDomainRequest
        var request = new XDomainRequest();
        request.setRequestHeader = function () { };
        request.onprogress = function () { };
        request.ontimeout = function () { };
        request.onload = function () {
            _this._requestEndCallback();
        };
        return request;
    };
    XHR.prototype._abortRequest = function () {
        var actuallyAborted = false;
        if (!this._completed) {
            this._completed = true;
            // Clear the timeout for the request
            this._async.dispose();
            // Cancel the request
            try {
                if (this._request) {
                    this._request.abort();
                }
            }
            catch (error) {
                // IE 9 will throw here if the request was aborted just swallow this
            }
            actuallyAborted = true;
        }
        return actuallyAborted;
    };
    XHR.prototype._timeoutCallback = function () {
        if (!this._completed) {
            this._abortRequest();
            this._callFailureCallback(this._request, -2 /* timeout */, true);
        }
    };
    XHR.prototype._callSuccessCallback = function (xhr, statusCode) {
        try {
            if (this._successCallback) {
                this._successCallback(xhr, statusCode);
            }
        }
        catch (error) {
            ErrorHelper_1.default.log(error);
        }
    };
    XHR.prototype._callFailureCallback = function (xhr, statusCode, timeout) {
        try {
            if (this._failureCallback) {
                this._failureCallback(xhr, statusCode, timeout);
            }
        }
        catch (error) {
            ErrorHelper_1.default.log(error);
        }
    };
    XHR.prototype._requestEndCallback = function () {
        if (!this._completed) {
            this._completed = true;
            var status_1 = -1 /* exception */;
            try {
                // Clear the timeout for the request
                this._async.dispose();
                try {
                    status_1 = this._request.status;
                }
                catch (error) {
                    // IE 9 will throw here if the request was aborted just swallow this
                }
            }
            catch (error) {
                status_1 = -1 /* exception */;
                ErrorHelper_1.default.log(error);
            }
            if (status_1 < 400 && status_1 > 0) {
                this._callSuccessCallback(this._request, status_1);
            }
            else {
                this._callFailureCallback(this._request, status_1, false);
            }
        }
    };
    XHR.DEFAULT_TIMEOUT_MS = 30000;
    return XHR;
}());
exports.default = XHR;


/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var SingleEventBase_1 = __webpack_require__(8);
exports.UnhandledError = SingleEventBase_1.createSingleEvent({
    eventName: 'UnhandledError,',
    shortEventName: 'UnhandledError',
    critical: true,
    requiresParent: false
}, {
    message: 1 /* String */,
    stack: 1 /* String */,
    builtStack: 1 /* String */,
    line: 2 /* Number */,
    col: 2 /* Number */,
    url: 1 /* String */
});
exports.default = exports.UnhandledError;


/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var SingleEventBase_1 = __webpack_require__(8);
exports.PageInit = SingleEventBase_1.createSingleEvent({
    eventName: 'PageInit,',
    shortEventName: 'PageInit',
    requiresParent: false
}, {
    screenWidth: 2 /* Number */,
    screenHeight: 2 /* Number */,
    availableScreenWidth: 2 /* Number */,
    availableScreenHeight: 2 /* Number */,
    renderWidth: 2 /* Number */,
    renderHeight: 2 /* Number */,
    browserWidth: 2 /* Number */,
    browserHeight: 2 /* Number */,
    devicePixelRatio: 2 /* Number */,
    referrer: 1 /* String */
});
exports.default = exports.PageInit;


/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var DebugPriorityLevel;
(function (DebugPriorityLevel) {
    DebugPriorityLevel[DebugPriorityLevel["Low"] = 0] = "Low";
    DebugPriorityLevel[DebugPriorityLevel["Normal"] = 1] = "Normal";
})(DebugPriorityLevel || (DebugPriorityLevel = {}));
exports.default = DebugPriorityLevel;


/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// OneDrive:IgnoreCodeCoverage
var RUMOneLogger_1 = __webpack_require__(53);
exports.default = RUMOneLogger_1.ControlPerformanceData;


/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DateTime = __webpack_require__(164);
exports.DateTime = DateTime;
var StringHelper = __webpack_require__(31);
exports.StringHelper = StringHelper;
var StringUtilities = __webpack_require__(82);
exports.StringUtilities = StringUtilities;
var IconSelector = __webpack_require__(83);
exports.IconSelector = IconSelector;
var SharingTypeHelper = __webpack_require__(85);
exports.SharingTypeHelper = SharingTypeHelper;
var SingleEventBase = __webpack_require__(8);
exports.SingleEventBase = SingleEventBase;
var Signal = __webpack_require__(33);
exports.Signal = Signal;
var ObjectUtil = __webpack_require__(19);
exports.ObjectUtil = ObjectUtil;
var AddressParser = __webpack_require__(166);
exports.AddressParser = AddressParser;
var AddressWriter = __webpack_require__(167);
exports.AddressWriter = AddressWriter;
var SPAlternativeUrls = __webpack_require__(168);
exports.SPAlternativeUrls = SPAlternativeUrls;
var OfficeFileNameHelper = __webpack_require__(169);
exports.OfficeFileNameHelper = OfficeFileNameHelper;
var ImageHelper = __webpack_require__(170);
exports.ImageHelper = ImageHelper;
var Path = __webpack_require__(90);
exports.Path = Path;
var Graft = __webpack_require__(171);
exports.Graft = Graft;
var FileEntries = __webpack_require__(172);
exports.FileEntries = FileEntries;
var Api_event_1 = __webpack_require__(91);
exports.Api = Api_event_1.Api;
var PLT_event_1 = __webpack_require__(54);
exports.PLT = PLT_event_1.PLT;
var ABExperiment_1 = __webpack_require__(173);
exports.ABExperiment = ABExperiment_1.ABExperiment;
exports.TargetType = ABExperiment_1.TargetType;
var Killswitch_1 = __webpack_require__(175);
exports.Killswitch = Killswitch_1.Killswitch;
var Modules_1 = __webpack_require__(176);
exports.loadModule = Modules_1.loadModule;
var Async_1 = __webpack_require__(25);
exports.Async = Async_1.default;
var Component_1 = __webpack_require__(179);
exports.Component = Component_1.default;
var BaseDataStore_1 = __webpack_require__(42);
exports.DataStore = BaseDataStore_1.default;
var DataStoreCachingType_1 = __webpack_require__(32);
exports.DataStoreCachingType = DataStoreCachingType_1.default;
var EventGroup_1 = __webpack_require__(89);
exports.EventGroup = EventGroup_1.default;
var FabricTheming_1 = __webpack_require__(96);
exports.FabricTheming = FabricTheming_1.default;
var Features_1 = __webpack_require__(50);
exports.Features = Features_1.default;
var GroupDataSource_1 = __webpack_require__(182);
exports.GroupDataSource = GroupDataSource_1.default;
var Guid_1 = __webpack_require__(71);
exports.Guid = Guid_1.default;
var HtmlEncoding_1 = __webpack_require__(184);
exports.HtmlEncoding = HtmlEncoding_1.default;
var Locale_1 = __webpack_require__(55);
exports.Locale = Locale_1.default;
var Manager_1 = __webpack_require__(18);
exports.Manager = Manager_1.default;
var PerformanceCollection_1 = __webpack_require__(92);
exports.PerformanceCollection = PerformanceCollection_1.default;
var PlatformDetection_1 = __webpack_require__(40);
exports.PlatformDetection = PlatformDetection_1.default;
var Promise_1 = __webpack_require__(20);
exports.Promise = Promise_1.default;
var ProtocolHandlerHelper_1 = __webpack_require__(185);
exports.ProtocolHandlerHelper = ProtocolHandlerHelper_1.default;
exports.ProtocolHandlerEncodeOption = ProtocolHandlerHelper_1.ProtocolHandlerEncodeOption;
var RgbaColor_1 = __webpack_require__(26);
exports.RgbaColor = RgbaColor_1.default;
var SiteHeaderLogoAcronym_1 = __webpack_require__(186);
exports.SiteHeaderLogoAcronym = SiteHeaderLogoAcronym_1.default;
var ThemeCache_1 = __webpack_require__(98);
exports.ThemeCache = ThemeCache_1.default;
var ThemeProvider_1 = __webpack_require__(187);
exports.ThemeProvider = ThemeProvider_1.default;
var Uri_1 = __webpack_require__(88);
exports.Uri = Uri_1.default;
var SimpleUri_1 = __webpack_require__(188);
exports.SimpleUri = SimpleUri_1.default;
var UriEncoding_1 = __webpack_require__(38);
exports.UriEncoding = UriEncoding_1.default;
var WebTheme_1 = __webpack_require__(189);
exports.WebTheme = WebTheme_1.default;
var ItemType_1 = __webpack_require__(56);
exports.ItemType = ItemType_1.default;
var DriveSpaceHelper_1 = __webpack_require__(190);
exports.DriveSpaceHelper = DriveSpaceHelper_1.default;
var ShortcutUtilities_1 = __webpack_require__(191);
exports.ShortcutUtilities = ShortcutUtilities_1.default;
var FileTypeIconMap_1 = __webpack_require__(84);
exports.FileTypeIconMap = FileTypeIconMap_1.default;
var SharingType_1 = __webpack_require__(86);
exports.SharingType = SharingType_1.default;
var Sanitize_1 = __webpack_require__(192);
exports.Sanitize = Sanitize_1.default;
var DomUtils_1 = __webpack_require__(193);
exports.DomUtils = DomUtils_1.default;
var Rectangle_1 = __webpack_require__(99);
exports.Rectangle = Rectangle_1.default;
var Size_1 = __webpack_require__(101);
exports.Size = Size_1.default;
var Point_1 = __webpack_require__(100);
exports.Point = Point_1.default;
var Semaphore_1 = __webpack_require__(194);
exports.Semaphore = Semaphore_1.default;
var Html5FileUpload_1 = __webpack_require__(195);
exports.Html5FileUpload = Html5FileUpload_1.default;
var Retry_1 = __webpack_require__(196);
exports.Retry = Retry_1.default;


/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var DatetimeResx = __webpack_require__(165);
var Locale_1 = __webpack_require__(55);
var StringHelper_1 = __webpack_require__(31);
// this is the difference between the .net ticks and the javascript Date ticks
var TICKS_CONVERSION_CONSTANT = 62135596800000;
// number of milliseconds for the given timespan
// copied from SPRelativeDateTime, including 32 days to a month
var ONE_SECOND = 1000;
var ONE_MINUTE = 60 * ONE_SECOND;
var TWO_MINUTES = 2 * ONE_MINUTE;
var ONE_HOUR = 60 * ONE_MINUTE;
var TWO_HOURS = 2 * ONE_HOUR;
var ONE_DAY = 24 * ONE_HOUR;
var TWO_DAYS = 2 * ONE_DAY;
var ONE_WEEK = 7 * ONE_DAY;
var ONE_MONTH = 32 * ONE_DAY;
var _getLocale;
var supportsTimeZoneDateOptions;
var shortDateFormat;
var shortTimeFormat;
var shortDateFormatUTC;
var shortTimeFormatUTC;
var formatShortDate;
var formatShortTime;
var formatShortDateUTC;
var formatShortTimeUTC;
/**
 * Convert a date-time string to a JavaScript Date object, for IE8 compat.
 *  Modern browsers and IE9+ can just take the string directly to the Date constructor.
 *  Format is: 1999-12-31T12:34:56.0000000Z
 *  Trailing Z indicates UTC timezone, otherwise it uses the browser's time zone.
 */
function iso8601DateTimeToJsDate(dateTime) {
    'use strict';
    // note that Date.parse() doesn't work for this format in IE8 either
    var isUTC = false;
    if (dateTime.toUpperCase().indexOf('Z') === dateTime.length - 1) {
        isUTC = true;
    }
    var timeValues = dateTime.split(/[^0-9]/);
    if (timeValues.length < 6) {
        return; // error
    }
    // note that Date 0-indexes months
    if (!isUTC) {
        return new Date(Number(timeValues[0]), Number(timeValues[1]) - 1, Number(timeValues[2]), Number(timeValues[3]), Number(timeValues[4]), Number(timeValues[5]));
    }
    else {
        return new Date(Date.UTC(Number(timeValues[0]), Number(timeValues[1]) - 1, Number(timeValues[2]), Number(timeValues[3]), Number(timeValues[4]), Number(timeValues[5])));
    }
}
exports.iso8601DateTimeToJsDate = iso8601DateTimeToJsDate;
/**
 * Get a string like "X minutes ago" that reflects the time elapsed since the input time.
 * Only works for past times, future times just return a browser-determined localized time string.
 */
function getRelativeDateTimeStringPast(pastTime, startWithLowerCase) {
    'use strict';
    if (startWithLowerCase === void 0) { startWithLowerCase = false; }
    var timespan = Date.now() - pastTime.getTime(); // time elapsed in ms
    if (timespan < -5 * ONE_MINUTE) {
        return pastTime.toLocaleDateString(Locale_1.default.language);
    }
    else if (timespan < ONE_MINUTE) {
        // "Less than a minute ago"
        return startWithLowerCase ? DatetimeResx.strings.RelativeDateTime_LessThanAMinute_StartWithLowerCase : DatetimeResx.strings.RelativeDateTime_LessThanAMinute;
    }
    else if (timespan < TWO_MINUTES) {
        // "About a minute ago"
        return startWithLowerCase ? DatetimeResx.strings.RelativeDateTime_AboutAMinute_StartWithLowerCase : DatetimeResx.strings.RelativeDateTime_AboutAMinute;
    }
    else if (timespan < ONE_HOUR) {
        // "{0} minutes ago"
        var minutes = Math.floor(timespan / ONE_MINUTE);
        return StringHelper_1.getLocalizedCountValue(DatetimeResx.strings.RelativeDateTime_XMinutes, DatetimeResx.strings.RelativeDateTime_XMinutesIntervals, minutes).replace("{0}", String(minutes));
    }
    else if (timespan < TWO_HOURS) {
        // "About an hour ago"
        return startWithLowerCase ? DatetimeResx.strings.RelativeDateTime_AboutAnHour_StartWithLowerCase : DatetimeResx.strings.RelativeDateTime_AboutAnHour;
    }
    else if (timespan < ONE_DAY) {
        // "{0} hours ago"
        var hours = Math.floor(timespan / ONE_HOUR);
        return StringHelper_1.getLocalizedCountValue(DatetimeResx.strings.RelativeDateTime_XHours, DatetimeResx.strings.RelativeDateTime_XHoursIntervals, hours).replace("{0}", String(hours));
    }
    else if (timespan < TWO_DAYS) {
        // "Yesterday at {0}"
        return startWithLowerCase ? DatetimeResx.strings.RelativeDateTime_YesterdayAndTime_StartWithLowerCase.replace("{0}", pastTime.toLocaleTimeString(Locale_1.default.language)) :
            DatetimeResx.strings.RelativeDateTime_YesterdayAndTime.replace("{0}", pastTime.toLocaleTimeString(Locale_1.default.language));
    }
    else if (timespan < ONE_MONTH) {
        // "{0} days ago" (in the past month-ish)
        var days = Math.floor(timespan / ONE_DAY);
        return StringHelper_1.getLocalizedCountValue(DatetimeResx.strings.RelativeDateTime_XDays, DatetimeResx.strings.RelativeDateTime_XDaysIntervals, days).replace("{0}", String(days));
    }
    // Any other time, just return the regular full original time
    return pastTime.toLocaleDateString(Locale_1.default.language); // browser-determined localized date (no time)
}
exports.getRelativeDateTimeStringPast = getRelativeDateTimeStringPast;
/**
 * Get a string that reflects the time elapsed since the input time.
 * Only works for past times, future times just return a browser-determined localized time string.
 */
function getFriendlyDateTimeStringPast(pastTime, shortDate, startWithLowerCase, useUTCTimezone) {
    'use strict';
    if (shortDate === void 0) { shortDate = false; }
    if (startWithLowerCase === void 0) { startWithLowerCase = false; }
    if (useUTCTimezone === void 0) { useUTCTimezone = false; }
    var timespan = Date.now() - pastTime.getTime(); // time elapsed in ms
    var todayMidnight = _getLocalMidnight(new Date());
    var yesterday = _addDays(todayMidnight, -1);
    var startOfWeek = _addDays(todayMidnight, -6);
    if (timespan < -5 * ONE_MINUTE) {
        return pastTime.toLocaleDateString(Locale_1.default.language, _computeFormatOptionsWithTimeZoneParam({ month: 'short', day: 'numeric' }, useUTCTimezone));
    }
    else if (timespan < TWO_MINUTES) {
        // "Just now"
        return startWithLowerCase ? DatetimeResx.strings.FriendlyDateTime_JustNow_withinSentence : DatetimeResx.strings.FriendlyDateTime_JustNow_asSentence;
    }
    else if (timespan < ONE_HOUR) {
        // "{0}m ago"
        return _getTimespanString(timespan, DatetimeResx.strings.FriendlyDateTime_minutesShort, ONE_MINUTE);
    }
    else if (isSameDay(todayMidnight, pastTime)) {
        // "{0}h ago"
        return _getTimespanString(timespan, DatetimeResx.strings.FriendlyDateTime_hoursShort, ONE_HOUR);
    }
    else if (pastTime >= yesterday) {
        if (shortDate) {
            return startWithLowerCase ? DatetimeResx.strings.RelativeDateTime_Yesterday_StartWithLowerCase : DatetimeResx.strings.RelativeDateTime_Yesterday;
        }
        // "Yesterday at {0}"
        return (startWithLowerCase ? DatetimeResx.strings.RelativeDateTime_YesterdayAndTime_StartWithLowerCase :
            DatetimeResx.strings.RelativeDateTime_YesterdayAndTime).replace("{0}", pastTime.toLocaleTimeString(Locale_1.default.language, _computeFormatOptionsWithTimeZoneParam({ hour: 'numeric', minute: '2-digit' }, useUTCTimezone)));
    }
    else if (pastTime >= startOfWeek) {
        var shortWeekday = pastTime.toLocaleDateString(Locale_1.default.language, _computeFormatOptionsWithTimeZoneParam({ weekday: 'short' }, useUTCTimezone));
        if (shortDate) {
            return shortWeekday;
        }
        // {0} at {1}  weekday at time
        return DatetimeResx.strings.RelativeDateTime_DayAndTime.replace("{0}", shortWeekday).replace("{1}", pastTime.toLocaleTimeString(Locale_1.default.language, _computeFormatOptionsWithTimeZoneParam({ hour: 'numeric', minute: '2-digit' }, useUTCTimezone)));
    }
    else if (isSameYear(todayMidnight, pastTime)) {
        return pastTime.toLocaleDateString(Locale_1.default.language, _computeFormatOptionsWithTimeZoneParam({ month: 'short', day: 'numeric' }, useUTCTimezone));
    }
    // Any other time, just return the regular full original time
    return pastTime.toLocaleDateString(Locale_1.default.language, _computeFormatOptionsWithTimeZoneParam({ month: 'short', day: 'numeric', year: 'numeric' }, useUTCTimezone)); // browser-determined localized date (no time)
}
exports.getFriendlyDateTimeStringPast = getFriendlyDateTimeStringPast;
/**
 * This is a modified implementation of DateTime.GetRelativeDateTimeStringPast(...).
 * The differences here are as follows:
 *      (1) The time string for yesterday does not include the seconds
 *      (2) Instead of showing 'X days ago' for dates older than a month, default to showing the full date
 *      (3) The full date will also include the time (also without seconds)
 */
function getRelativeDateTimeStringPastWithHourMinute(pastTime) {
    'use strict';
    var timespan = Date.now() - pastTime.getTime(); // time elapsed in ms
    var date = pastTime.toLocaleDateString(Locale_1.default.language); // browser-determined localized date
    var time = pastTime.toLocaleTimeString(Locale_1.default.language, { hour: 'numeric', minute: '2-digit' }); //time without seconds
    if (timespan < ONE_DAY) {
        return getRelativeDateTimeStringPast(pastTime);
    }
    else if (timespan < TWO_DAYS) {
        // "Yesterday at {0}" without seconds
        return StringHelper_1.format(DatetimeResx.strings.RelativeDateTime_YesterdayAndTime, time);
    }
    // Any other time, just return the regular full original date with time, without seconds
    return StringHelper_1.format(DatetimeResx.strings.DateTime_DateAndTime, date, time);
}
exports.getRelativeDateTimeStringPastWithHourMinute = getRelativeDateTimeStringPastWithHourMinute;
/**
 * True if the given dates have the same day month and year.
 */
function isSameDay(a, b) {
    return a.getDate() === b.getDate() && Math.abs(b.getTime() - a.getTime()) < ONE_DAY;
}
exports.isSameDay = isSameDay;
/**
 * True if the given dates have the same month and year.
 */
function isSameMonth(a, b) {
    return a.getFullYear() === b.getFullYear() && b.getMonth() === a.getMonth();
}
exports.isSameMonth = isSameMonth;
function isSameYear(a, b) {
    return a.getFullYear() === b.getFullYear();
}
exports.isSameYear = isSameYear;
/**
 * True if the date is on or between the first and last day of the current week. This uses the Date function getDay()
 * which returns the day of the week for the specified date according to local time, where 0 represents Sunday.
 * You can optionally specify the date to use as the current date/time.
 */
function isThisWeek(pastTime, now) {
    'use strict';
    now = now || new Date();
    var start = new Date(now.getTime() - now.getDay() * ONE_DAY);
    var end = new Date(start.getTime() + ONE_WEEK - ONE_DAY);
    var isThisWeek = (start.getTime() <= pastTime.getTime() && pastTime.getTime() <= end.getTime());
    return isThisWeek;
}
exports.isThisWeek = isThisWeek;
/**
 * True if the date is on or between the first and last day of the previous week. This uses the Date function getDay()
 * which returns the day of the week for the specified date according to local time, where 0 represents Sunday.
 * You can optionally specify the date to use as the current date/time.
 */
function isLastWeek(pastTime, now) {
    'use strict';
    now = now || new Date();
    var start = new Date(now.getTime() - now.getDay() * ONE_DAY - ONE_WEEK);
    var end = new Date(start.getTime() + ONE_WEEK - ONE_DAY);
    var isLastWeek = (start.getTime() <= pastTime.getTime() && pastTime.getTime() <= end.getTime());
    return isLastWeek;
}
exports.isLastWeek = isLastWeek;
// for use with lists' server-processed date value
/**
 * @param relativeDateTimeJSString: list server-processed date value string
 * @startWithLowerCase: use this option when the return string is not at beginning of the sentence.
 */
function getRelativeDateTimeStringForLists(relativeDateTimeJSString, startWithLowerCase) {
    'use strict';
    if (startWithLowerCase === void 0) { startWithLowerCase = false; }
    var ret = null;
    var retTemplate = null;
    var codes = relativeDateTimeJSString.split('|');
    // Passthrough case
    if (codes[0] === "0") {
        return relativeDateTimeJSString.substring(2);
    }
    var bFuture = codes[1] === "1";
    var timeBucket = codes[2];
    var timeValue = codes.length >= 4 ? codes[3] : null;
    var timeValue2 = codes.length >= 5 ? codes[4] : null;
    switch (timeBucket) {
        // a few seconds
        case "1":
            ret = bFuture ? (startWithLowerCase ? DatetimeResx.strings.RelativeDateTime_AFewSecondsFuture_StartWithLowerCase : DatetimeResx.strings.RelativeDateTime_AFewSecondsFuture) :
                (startWithLowerCase ? DatetimeResx.strings.RelativeDateTime_AFewSeconds_StartWithLowerCase : DatetimeResx.strings.RelativeDateTime_AFewSeconds);
            break;
        // about a minute
        case "2":
            ret = bFuture ? (startWithLowerCase ? DatetimeResx.strings.RelativeDateTime_AboutAMinuteFuture_StartWithLowerCase : DatetimeResx.strings.RelativeDateTime_AboutAMinuteFuture) :
                (startWithLowerCase ? DatetimeResx.strings.RelativeDateTime_AboutAMinute_StartWithLowerCase : DatetimeResx.strings.RelativeDateTime_AboutAMinute);
            break;
        // x minutes
        case "3":
            retTemplate = StringHelper_1.getLocalizedCountValue(bFuture ? (startWithLowerCase ? DatetimeResx.strings.RelativeDateTime_XMinutesFuture_StartWithLowerCase : DatetimeResx.strings.RelativeDateTime_XMinutesFuture)
                : DatetimeResx.strings.RelativeDateTime_XMinutes, bFuture ? DatetimeResx.strings.RelativeDateTime_XMinutesFutureIntervals : DatetimeResx.strings.RelativeDateTime_XMinutesIntervals, Number(timeValue));
            break;
        // about an hour
        case "4":
            ret = bFuture ? (startWithLowerCase ? DatetimeResx.strings.RelativeDateTime_AboutAnHourFuture_StartWithLowerCase : DatetimeResx.strings.RelativeDateTime_AboutAnHourFuture)
                : (startWithLowerCase ? DatetimeResx.strings.RelativeDateTime_AboutAnHour_StartWithLowerCase : DatetimeResx.strings.RelativeDateTime_AboutAnHour);
            break;
        // yesterday / tomorrow
        case "5":
            if (timeValue == null) {
                ret = bFuture ? (startWithLowerCase ? DatetimeResx.strings.RelativeDateTime_Tomorrow_StartWithLowerCase : DatetimeResx.strings.RelativeDateTime_Tomorrow)
                    : (startWithLowerCase ? DatetimeResx.strings.RelativeDateTime_Yesterday_StartWithLowerCase : DatetimeResx.strings.RelativeDateTime_Yesterday);
            }
            else {
                retTemplate = bFuture ? (startWithLowerCase ? DatetimeResx.strings.RelativeDateTime_TomorrowAndTime_StartWithLowerCase : DatetimeResx.strings.RelativeDateTime_TomorrowAndTime)
                    : (startWithLowerCase ? DatetimeResx.strings.RelativeDateTime_YesterdayAndTime_StartWithLowerCase : DatetimeResx.strings.RelativeDateTime_YesterdayAndTime);
            }
            break;
        // x hours
        case "6":
            retTemplate = StringHelper_1.getLocalizedCountValue(bFuture ? (startWithLowerCase ? DatetimeResx.strings.RelativeDateTime_XHoursFuture_StartWithLowerCase : DatetimeResx.strings.RelativeDateTime_XHoursFuture)
                : DatetimeResx.strings.RelativeDateTime_XHours, bFuture ? DatetimeResx.strings.RelativeDateTime_XHoursFutureIntervals : DatetimeResx.strings.RelativeDateTime_XHoursIntervals, Number(timeValue));
            break;
        // day and time
        case "7":
            if (timeValue2 === null) {
                ret = timeValue;
            }
            else {
                retTemplate = DatetimeResx.strings.RelativeDateTime_DayAndTime;
            }
            break;
        // <Days> days
        case "8":
            retTemplate = StringHelper_1.getLocalizedCountValue(bFuture ? DatetimeResx.strings.RelativeDateTime_XDaysFuture : DatetimeResx.strings.RelativeDateTime_XDays, bFuture ? DatetimeResx.strings.RelativeDateTime_XDaysFutureIntervals : DatetimeResx.strings.RelativeDateTime_XDaysIntervals, Number(timeValue));
            break;
        // today
        case "9":
            ret = startWithLowerCase ? DatetimeResx.strings.RelativeDateTime_Today_StartWithLowerCase : DatetimeResx.strings.RelativeDateTime_Today;
            break;
    }
    if (retTemplate !== null) {
        ret = retTemplate.replace("{0}", timeValue);
        if (timeValue2 !== null) {
            ret = ret.replace("{1}", timeValue2);
        }
    }
    return ret;
}
exports.getRelativeDateTimeStringForLists = getRelativeDateTimeStringForLists;
/**
 * Converts a given date string into its UTC/ISO standard format
 */
function convertDateToISOString(expiration) {
    'use strict';
    var expirationDate = new Date(expiration);
    // For more info on the time zone offset and its signage, see:
    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getTimezoneOffset
    var isOffsetNegative = (expirationDate.getTimezoneOffset() < 0) ? true : false;
    var year = expirationDate.getFullYear().toString();
    var month = _padStringWithZeroes((expirationDate.getMonth() + 1).toString(), 2); //zero based month
    var day = _padStringWithZeroes(expirationDate.getDate().toString(), 2);
    var hours = _padStringWithZeroes(expirationDate.getHours().toString(), 2);
    var minutes = _padStringWithZeroes(expirationDate.getMinutes().toString(), 2);
    var seconds = _padStringWithZeroes(expirationDate.getSeconds().toString(), 2);
    var offsetHours = _padStringWithZeroes((isOffsetNegative ? Math.ceil(expirationDate.getTimezoneOffset() / 60).toString().replace("-", "") : Math.floor(expirationDate.getTimezoneOffset() / 60).toString()), 2);
    var offsetMinutes = _padStringWithZeroes((expirationDate.getTimezoneOffset() % 60).toString().replace("-", ""), 2);
    var expirationString = year + month + day + 'T' + hours + minutes + seconds + (isOffsetNegative ? '+' : '-') + offsetHours + offsetMinutes;
    return expirationString;
}
exports.convertDateToISOString = convertDateToISOString;
/**
 * get the last day of the month based on the input date
 */
function getLastDayOfMonth(date) {
    'use strict';
    var lastDay = new Date(Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), 1, 0, 0, 0, 0));
    // To get the last day of the month we will increment the month
    lastDay.setUTCMonth(lastDay.getUTCMonth() + 1);
    // Then subtract a day
    lastDay.setUTCDate(lastDay.getUTCDate() - 1);
    // Then set the time to be the last second of the day
    lastDay.setUTCHours(23, 59, 59, 999);
    return lastDay;
}
exports.getLastDayOfMonth = getLastDayOfMonth;
/**
 * Given the .Net ticks of a date, convert it to a Date
 */
function getDateFromDotNetTicks(dotNetTicks) {
    'use strict';
    if (!dotNetTicks) {
        return null;
    }
    var ticksInMilliseconds = (dotNetTicks / 10000) - TICKS_CONVERSION_CONSTANT;
    return new Date(ticksInMilliseconds);
}
exports.getDateFromDotNetTicks = getDateFromDotNetTicks;
function createShortDateFormatters() {
    'use strict';
    var locale = _getLocale();
    var supportsUTC = _supportsTimeZoneDateOptions();
    if (window['Intl'] && window['Intl']['DateTimeFormat']) {
        var dateOptions = {};
        var timeOptions = { hour: '2-digit', minute: '2-digit' };
        shortDateFormat = new Intl.DateTimeFormat(locale, dateOptions);
        shortTimeFormat = new Intl.DateTimeFormat(locale, timeOptions);
        if (supportsUTC) {
            dateOptions.timeZone = 'UTC';
            timeOptions.timeZone = 'UTC';
        }
        shortDateFormatUTC = new Intl.DateTimeFormat(locale, dateOptions);
        shortTimeFormatUTC = new Intl.DateTimeFormat(locale, timeOptions);
        formatShortDate = shortDateFormat.format;
        formatShortTime = shortTimeFormat.format;
        formatShortDateUTC = shortDateFormatUTC.format;
        formatShortTimeUTC = shortTimeFormatUTC.format;
    }
    else {
        // No support for formatter objects.
        formatShortDate = formatShortDateUTC = function (date) {
            return date.toLocaleDateString(locale);
        };
        formatShortTime = formatShortTimeUTC = function (date) {
            return date.toLocaleTimeString(locale);
        };
    }
}
/**
 * Returns a short version of a date to display (e.g. 11:45 PM if today, or 11/2/2015 if not today)
 */
function getShortDisplayDate(date, useUTCTimezone) {
    'use strict';
    if (!date) {
        return '';
    }
    if (!formatShortDate) {
        createShortDateFormatters();
    }
    var isToday = isSameDay(new Date(), date);
    var formatter;
    if (useUTCTimezone) {
        if (isToday) {
            formatter = formatShortTimeUTC;
        }
        else {
            formatter = formatShortDateUTC;
        }
    }
    else {
        if (isToday) {
            formatter = formatShortTime;
        }
        else {
            formatter = formatShortDate;
        }
    }
    return formatter(date);
}
exports.getShortDisplayDate = getShortDisplayDate;
/**
 * Returns a full version of a date to display (e.g. 11/2/2015 11:45 PM)
 * useUTCTimezone defaults to false
 * useHour12 is ignored, and will be determined by the locale.
 */
function getFullDisplayDate(date, useUTCTimezone, useHour12) {
    'use strict';
    if (!formatShortDate) {
        createShortDateFormatters();
    }
    var dateString = useUTCTimezone ? formatShortDateUTC(date) : formatShortDate(date);
    var timeString = useUTCTimezone ? formatShortTimeUTC(date) : formatShortTime(date);
    return StringHelper_1.format(DatetimeResx.strings.DateAndTime, dateString, timeString);
}
exports.getFullDisplayDate = getFullDisplayDate;
_getLocale = function () {
    'use strict';
    var validLocale;
    var locales = [
        window['$Config'] && window['$Config']['mkt'],
        Locale_1.default.language,
        navigator.language,
        'en'
    ].filter((function (str) { return !!str; }));
    for (var _i = 0, locales_1 = locales; _i < locales_1.length; _i++) {
        var locale = locales_1[_i];
        try {
            new Date().toLocaleDateString(locale);
            validLocale = locale;
            break;
        }
        catch (e) {
            // Fall back to next candidate locale. Eventually the locale will be undefined, if no valid locale exists
        }
    }
    _getLocale = function () { return validLocale; };
    return validLocale;
};
function _supportsTimeZoneDateOptions() {
    'use strict';
    if (supportsTimeZoneDateOptions === void 0) {
        try {
            var locale = _getLocale();
            (new Date()).toLocaleDateString(locale, { timeZone: 'UTC' });
            supportsTimeZoneDateOptions = true;
        }
        catch (E) {
            // We know of some versions of IE 11 that fail when date options with a timezone is specified.
            supportsTimeZoneDateOptions = false;
        }
    }
    return supportsTimeZoneDateOptions;
}
/**
 * Pads a date string with the request number of '0' characters
 */
function _padStringWithZeroes(toPad, numDigits) {
    'use strict';
    var paddedString = toPad;
    while (paddedString.length < numDigits) {
        paddedString = '0' + paddedString;
    }
    return paddedString;
}
function _getLocalMidnight(date) {
    var midnight = new Date(date);
    midnight.setHours(0, 0, 0, 0);
    return midnight;
}
function _addDays(day, days) {
    return new Date(day.getFullYear(), day.getMonth(), day.getDate() + days, day.getHours(), day.getMinutes(), day.getSeconds(), day.getMilliseconds());
}
function _getTimespanString(timespan, locString, periodInSeconds) {
    var displayNumber = Math.round(timespan / periodInSeconds);
    return locString.replace('{0}', String(displayNumber));
}
function _computeFormatOptionsWithTimeZoneParam(options, useUTCTimezone) {
    if (_supportsTimeZoneDateOptions() && useUTCTimezone && options) {
        return __assign({}, options, { timeZone: 'UTC' });
    }
    return options;
}


/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
exports.strings = { "RelativeDateTime_AFewSeconds": "A few seconds ago", "RelativeDateTime_AFewSeconds_StartWithLowerCase": "a few seconds ago", "RelativeDateTime_Format_DateTimeFormattingString_Override": "", "RelativeDateTime_Format_DateTimeFormattingString": "{0}, {1}", "RelativeDateTime_AFewSecondsFuture": "In a few seconds", "RelativeDateTime_AFewSecondsFuture_StartWithLowerCase": "in a few seconds", "RelativeDateTime_AboutAMinuteFuture": "In about a minute", "RelativeDateTime_AboutAMinuteFuture_StartWithLowerCase": "in about a minute", "RelativeDateTime_LessThanAMinute": "Less than a minute ago", "RelativeDateTime_LessThanAMinute_StartWithLowerCase": "less than a minute ago", "RelativeDateTime_AboutAMinute": "About a minute ago", "RelativeDateTime_AboutAMinute_StartWithLowerCase": "about a minute ago", "RelativeDateTime_XMinutesFuture": "In {0} minute||In {0} minutes", "RelativeDateTime_XMinutesFuture_StartWithLowerCase": "in {0} minute||in {0} minutes", "RelativeDateTime_XMinutesFutureIntervals": "1||2-", "RelativeDateTime_XMinutesIntervals": "1||2-", "RelativeDateTime_AboutAnHourFuture": "In about an hour", "RelativeDateTime_AboutAnHourFuture_StartWithLowerCase": "in about an hour", "RelativeDateTime_AboutAnHour": "About an hour ago", "RelativeDateTime_AboutAnHour_StartWithLowerCase": "about an hour ago", "RelativeDateTime_Tomorrow": "Tomorrow", "RelativeDateTime_Tomorrow_StartWithLowerCase": "tomorrow", "RelativeDateTime_Yesterday": "Yesterday", "RelativeDateTime_Yesterday_StartWithLowerCase": "yesterday", "RelativeDateTime_YesterdayAndTime": "Yesterday at {0}", "RelativeDateTime_YesterdayAndTime_StartWithLowerCase": "yesterday at {0}", "DateTime_DateAndTime": "{0} at {1}", "RelativeDateTime_TomorrowAndTime": "Tomorrow at {0}", "RelativeDateTime_TomorrowAndTime_StartWithLowerCase": "tomorrow at {0}", "RelativeDateTime_XHoursFuture": "In {0} hour||In {0} hours", "RelativeDateTime_XHoursFuture_StartWithLowerCase": "in {0} hour||in {0} hours", "RelativeDateTime_XHours": "{0} hour ago||{0} hours ago", "RelativeDateTime_XHoursFutureIntervals": "1||2-", "RelativeDateTime_XHoursIntervals": "1||2-", "RelativeDateTime_DayAndTime": "{0} at {1}", "RelativeDateTime_XDaysFuture": "{0} day from now||{0} days from now", "RelativeDateTime_XDays": "{0} day ago||{0} days ago", "RelativeDateTime_XDaysFutureIntervals": "1||2-", "RelativeDateTime_XDaysIntervals": "1||2-", "RelativeDateTime_Today": "Today", "RelativeDateTime_Today_StartWithLowerCase": "today", "RelativeDateTime_XMinutes": "{0} minute ago||{0} minutes ago", "DateAndTime": "{0} {1}", "MonthAndYear": "{0} {1}", "january": "January", "february": "February", "march": "March", "april": "April", "may": "May", "june": "June", "july": "July", "august": "August", "september": "September", "october": "October", "november": "November", "december": "December", "shortJanuary": "Jan", "shortFebruary": "Feb", "shortMarch": "Mar", "shortApril": "Apr", "shortMay": "May", "shortJune": "Jun", "shortJuly": "Jul", "shortAugust": "Aug", "shortSeptember": "Sep", "shortOctober": "Oct", "shortNovember": "Nov", "shortDecember": "Dec", "sunday": "Sunday", "monday": "Monday", "tuesday": "Tuesday", "wednesday": "Wednesday", "thursday": "Thursday", "friday": "Friday", "saturday": "Saturday", "shortSunday": "S", "shortMonday": "M", "shortTuesday": "T", "shortWednesday": "W", "shortThursday": "T", "shortFriday": "F", "shortSaturday": "S", "today": "Today", "yesterday": "Yesterday", "FriendlyDateTime_JustNow_withinSentence": "just now", "FriendlyDateTime_JustNow_asSentence": "Just now", "FriendlyDateTime_hoursShort": "{0}h ago", "FriendlyDateTime_minutesShort": "{0}m ago" };


/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
function deserializeQuery(paramsString) {
    var viewParams = {};
    if (paramsString) {
        var paramParts = paramsString.split("&");
        for (var i = 0; i < paramParts.length; i++) {
            var param = paramParts[i].split("=");
            // For query strings only, "+" is a valid substitute for a space, but decodeURIComponent
            // doesn't take this into account.
            if (typeof param[1] !== 'undefined') {
                param[1] = param[1].replace(/\+/g, " ");
            }
            viewParams[param[0]] = decodeURIComponent(param[1]);
        }
    }
    return viewParams;
}
exports.deserializeQuery = deserializeQuery;
function getQueryStringFromUrl(url) {
    return url.substring(url.indexOf('?') + 1);
}
exports.getQueryStringFromUrl = getQueryStringFromUrl;
function getUrlWithoutQueryString(url) {
    return url.substring(0, url.indexOf('?'));
}
exports.getUrlWithoutQueryString = getUrlWithoutQueryString;


/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var UriEncoding_1 = __webpack_require__(38);
/**
 * serializeQuery is kept separate from deserializeQuery for performance reasons. serializeQuery is not needed in the
 * ListViewDataPrefetch bundle of SPList and ODB.
 */
function serializeQuery(viewParams, defaultParams, ignoreBlankValues) {
    var paramsString = "";
    var isFirstParam = true;
    if (defaultParams) {
        viewParams = __assign({}, defaultParams, viewParams);
    }
    for (var param in viewParams) {
        var value = viewParams[param];
        if (!ignoreBlankValues ||
            (typeof value !== 'object' && value) ||
            (typeof value === 'object' && !!value && value.uriValue) ||
            typeof value === 'number' ||
            typeof value === 'boolean') {
            if (isFirstParam) {
                isFirstParam = false;
            }
            else {
                paramsString += '&';
            }
            var uriValue = void 0;
            if (typeof value === 'object' && !!value && value.uriValue) {
                uriValue = value.uriValue;
            }
            else {
                uriValue = UriEncoding_1.default.encodeURIComponent("" + value);
            }
            paramsString += param + "=" + uriValue;
        }
    }
    return paramsString;
}
exports.serializeQuery = serializeQuery;


/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Uri_1 = __webpack_require__(88);
var Qos_event_1 = __webpack_require__(29);
var EXPIRATION_TOKEN = '_eat_';
var EXPIRATION_TOKEN_SEPARATOR = '_';
// @internalremarks: Note - 'UserPhotoAspx' is defined by a constant UserPhotoKey specified in
// @internalremarks: depot/devmainoverride/sporel/sts/stsom/SitePages/SitePageAlternativeUrlMapBuilder.cs
var USER_PHOTO_KEY = 'UserPhotoAspx';
var DEFAULT_USER_PHOTO_BASE_URL = '/_layouts/15/userphoto.aspx';
var USER_PHOTO_SIZE_PARAM = 'size';
var USER_PHOTO_ACCOUNT_NAME_PARAM = 'accountname';
var _urlTable = {};
var QOS_TRYGETALTERNATIVEURLFAILURE = 'TryGetAlternativeUrlFailure';
/**
 * If an alternative URL is available, then this returns the URL that should be used
 * for rendering the image.  Otherwise, undefined is returned.
 */
function tryGetAlternativeUrl(primaryUrl) {
    try {
        var alternativeUrl = _urlTable && _urlTable[primaryUrl];
        if (!alternativeUrl) {
            return undefined;
        }
        // Check for expired items.
        // Private CDN item will have a query string parameter _eat_=xxxx_yyyyyyyyyy, where xxxx is an expiration
        // time in Epoch format (number of seconds since 1970/1/1).
        // The real URL example is
        // https://privatecdn.sharepointonline.com/msft.spoppe.com/sites/wex/SiteAssets/SitePages/SamplePage/image.jpg
        //   ?_eat_=1480392900_16330f287fe138cea33c424221c6fa1d79e6cdeb470bc0000894645994ba1a14
        //   &_oat_=1480392900_f312136e0ffd87c26165973f042a98dfd40130d4981d6d3fd71643c7e4fdb485
        //   &width=300
        // If the parameter is available in the alternative Url,
        // check whether this is at least 30 seconds out in the future, and return the alternative
        // URL only if still valid. Return undefined otherwise, falling back to the original non-optimized behavior
        // note that the URLs provided by the server always have at least 15 minutes of the valid time, so it is
        // unlikely expired situation will appear too often.
        var uri = new Uri_1.default(alternativeUrl);
        var authToken = uri.getQueryParameter(EXPIRATION_TOKEN);
        if (authToken) {
            var split = authToken.split(EXPIRATION_TOKEN_SEPARATOR);
            var expirationTime = undefined;
            if (split.length === 2) {
                expirationTime = Number(split[0]);
            }
            if (!expirationTime) {
                // hightly unexpected, but logging nevertheless
                var qosEvent = new Qos_event_1.Qos({ name: QOS_TRYGETALTERNATIVEURLFAILURE });
                qosEvent.end({
                    resultType: Qos_event_1.ResultTypeEnum.Failure,
                    resultCode: 'EatParamUnexpectedFormat',
                    extraData: {
                        eatParam: authToken
                    }
                });
                return alternativeUrl;
            }
            // Shift expiration time by 30 seconds to ensure the browser has ample time to fetch the resource
            // before it actually does expire.
            expirationTime -= 30;
            // getTime() returns Epoch time in milliseconds.
            if (Date.now() / 1000 > expirationTime) {
                delete _urlTable[primaryUrl];
                return undefined;
            }
        }
        return alternativeUrl;
    }
    catch (ex) {
        var qosEvent = new Qos_event_1.Qos({ name: QOS_TRYGETALTERNATIVEURLFAILURE });
        qosEvent.end({
            resultType: Qos_event_1.ResultTypeEnum.Failure,
            resultCode: 'Unexpected',
            extraData: {
                error: ex
            }
        });
    }
    return undefined;
}
exports.tryGetAlternativeUrl = tryGetAlternativeUrl;
/**
 * Updates the map by adding the specified entries, overwriting any previous entries
 * with the same key names.
 */
function updateMap(alternativeUrlTable) {
    if (!alternativeUrlTable) {
        return;
    }
    for (var key in alternativeUrlTable) {
        _urlTable[key] = alternativeUrlTable[key];
    }
}
exports.updateMap = updateMap;
/**
 * For diagnostic purposes, this returns the current map.
 * The key is the primaryUrl, and the value is the alternativeUrl.
 */
function getUrlTable() {
    return _urlTable;
}
exports.getUrlTable = getUrlTable;
/**
 * UserPhoto mapping is auto added into the Alternative URL map when private CDN is enabled
 * and tenant admin configured origin * /userphoto.aspx
 * If CDN is not enabled, the default _layouts/15/userphoto.aspx will be used.
 * @param size Parameter may have value S,L,M. If none or other is provided, S will be used by default.
 */
function getUserPhotoUrl(accountName, size) {
    var userPhotoBaseUrl = tryGetAlternativeUrl(USER_PHOTO_KEY) || DEFAULT_USER_PHOTO_BASE_URL;
    var sizeLetter;
    switch (size) {
        case 2 /* Medium */:
            sizeLetter = 'M';
            break;
        case 3 /* Large */:
            sizeLetter = 'L';
            break;
        default:
            // Default to small if size is not provided. Server will assume small either way, but having the
            // parameter explicitly will reduce variability in CDN, and will increase probability of the cache hit.
            sizeLetter = 'S';
    }
    var userPhotoUri = new Uri_1.default(userPhotoBaseUrl);
    userPhotoUri.setQueryParameter(USER_PHOTO_SIZE_PARAM, sizeLetter);
    // empty accountName will resolve to the default doughboy picture
    userPhotoUri.setQueryParameter(USER_PHOTO_ACCOUNT_NAME_PARAM, accountName || '');
    return userPhotoUri.toString();
}
exports.getUserPhotoUrl = getUserPhotoUrl;


/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var doc = 'ms-word';
var one = 'onenote|UsePlain';
var ppt = 'ms-powerpoint';
var xls = 'ms-excel';
var vsd = 'ms-visio';
var pub = 'ms-publisher';
var accdb = 'ms-access';
var mpp = 'ms-project';
exports.wordType = doc;
exports.onenoteType = one;
exports.powerpointType = ppt;
exports.excelType = xls;
exports.visioType = vsd;
exports.OfficeAppToExtensionsMap = {
    'ms-access': ['accdb'],
    'ms-word': ['doc', 'docm', 'docx', 'dot', 'dotm', 'dotx', 'odt'],
    'ms-project': ['mpp'],
    'onenote|UsePlain': ['one', 'onepkg', 'onetoc2', 'notebook'],
    'ms-powerpoint': ['odp', 'pot', 'potm', 'potx', 'ppa', 'ppam', 'pps', 'ppsm', 'ppsx', 'ppt', 'pptm', 'pptx'],
    'ms-publisher': ['pub'],
    'ms-excel': ['ods', 'xla', 'xlam', 'xll', 'xls', 'xlsb', 'xlsm', 'xlsx', 'xlt', 'xltm', 'xltx'],
    'ms-visio': ['vdw', 'vsd', 'vsdm', 'vsdx', 'vsl', 'vss', 'vssm', 'vssx', 'vst', 'vstm', 'vstx']
};
exports.OfficeIconFileTypeMap = {
    accdb: accdb,
    doc: doc,
    docm: doc,
    docx: doc,
    dot: doc,
    dotm: doc,
    dotx: doc,
    pdf: doc,
    odp: ppt,
    ods: xls,
    odt: doc,
    one: one,
    onepkg: one,
    onetoc2: one,
    mpp: mpp,
    notebook: one,
    pot: ppt,
    potm: ppt,
    potx: ppt,
    ppa: ppt,
    ppam: ppt,
    pps: ppt,
    ppsm: ppt,
    ppsx: ppt,
    ppt: ppt,
    pptm: ppt,
    pptx: ppt,
    pub: pub,
    vdw: vsd,
    vsd: vsd,
    vsdm: vsd,
    vsdx: vsd,
    vsl: vsd,
    vss: vsd,
    vssm: vsd,
    vssx: vsd,
    vst: vsd,
    vstm: vsd,
    vstx: vsd,
    xla: xls,
    xlam: xls,
    xll: xls,
    xls: xls,
    xlsb: xls,
    xlsm: xls,
    xlsx: xls,
    xlt: xls,
    xltm: xls,
    xltx: xls
};
var officeFriendlyNameMap = (_a = {},
    _a[accdb] = 'Access',
    _a[doc] = 'Word',
    _a[one] = 'OneNote',
    _a[ppt] = 'PowerPoint',
    _a[xls] = 'Excel',
    _a[vsd] = 'Visio',
    _a[pub] = 'Publisher',
    _a[mpp] = 'Project',
    _a);
function getOfficeAppFriendlyName(app) {
    return officeFriendlyNameMap[app] || app;
}
exports.getOfficeAppFriendlyName = getOfficeAppFriendlyName;
var officeAppMap = (_b = {},
    _b[doc] = 'Word',
    _b[xls] = 'Excel',
    _b[ppt] = 'PowerPoint',
    _b[one] = 'OneNote',
    _b[vsd] = 'Visio',
    _b);
function getApp(item) {
    var extension = item.extension;
    // Special case pdf, because it's mapped to word but we want to distinguish it
    // on the navigation to wac
    if (extension && extension.toLowerCase() === ".pdf") {
        return 'WordPdf';
    }
    // Default to word in case no match is found
    return officeAppMap[item.appMap] || 'Word';
}
exports.getApp = getApp;
var _a, _b;


/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var EventGroup_1 = __webpack_require__(89);
var Promise_1 = __webpack_require__(20);
function createImageThumbnail(imageBlob, maxWidth, maxHeight) {
    return readBlobAsDataUrl(imageBlob).then((function (sourceImageDataUrl) {
        // create an <img> element from source image file to get dimensions
        var imageElement = document.createElement('img');
        imageElement.src = sourceImageDataUrl;
        var width = imageElement.width;
        var height = imageElement.height;
        // compute thumbnail dimensions by scaling along its largest axis and maintaining
        // the source image's aspect ratio
        if (width > height) {
            if (width > maxWidth) {
                height *= maxWidth / width;
                width = maxWidth;
            }
        }
        else {
            if (height > maxHeight) {
                width *= maxHeight / height;
                height = maxHeight;
            }
        }
        width = Math.floor(width);
        height = Math.floor(height);
        if (width === imageElement.width && height === imageElement.height) {
            // nothing to do, bail out early
            return imageBlob;
        }
        // render image at new dimensions into <canvas>
        var canvasElement = document.createElement('canvas');
        canvasElement.width = width;
        canvasElement.height = height;
        var canvasContext = canvasElement.getContext('2d');
        canvasContext.drawImage(imageElement, 0 /*dstX*/, 0 /*dstY*/, width, height);
        // would be nice to use canvas.toBlob() but appears to be too bleeding edge for now so need to render out
        // to a data URL and then manually convert to a Blob by converting the base64 encoding to a byte array
        // render canvas into an image data URL with a matching MIME type
        // explicitly pass encoder quality for JPEGs to ensure consistency across browsers (Chrome and Firefox
        // both default to a 0.92 encoder quality so go with that)
        var dataUrl = (imageBlob.type === 'image/jpeg') ?
            canvasElement.toDataURL(imageBlob.type, 0.92) :
            canvasElement.toDataURL(imageBlob.type);
        // convert data URL to a Blob
        return getBlobFromDataUrl(dataUrl);
    }));
}
exports.createImageThumbnail = createImageThumbnail;
function getBlobFromDataUrl(dataUrl) {
    // data:[<MIME-type>][;charset=<encoding>][;base64],<data>
    // parse out <data> and <MIME-type> segments
    var byteString = atob(dataUrl.split(',')[1]);
    var byteArray = new Uint8Array(byteString.length);
    var mimeType = dataUrl.split(',')[0].split(':')[1].split(';')[0];
    // copy bytes from decoded base64 string into byte array
    for (var i = 0, len = byteString.length; i < len; i++) {
        byteArray[i] = byteString.charCodeAt(i);
    }
    return new Blob([byteArray], { type: mimeType });
}
function readBlobAsDataUrl(blob) {
    var events = new EventGroup_1.default(this);
    return new Promise_1.default(function (complete, error) {
        var fileReader = new FileReader();
        events.on(fileReader, 'load', (function (ev) {
            complete(fileReader.result);
            events.dispose();
        }));
        events.on(fileReader, 'error', (function (ev) {
            error(fileReader.error); // DOMError
            events.dispose();
        }));
        fileReader.readAsDataURL(blob);
    });
}


/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Attaches a placeholder to a graft extension to remove the target field.
 * Once the graft is applied, the target object will have the key removed.
 *
 * @export
 * @template T
 * @returns {T}
 *
 * @example
 *  let item = {
 *      name: 'Test',
 *      upload: {
 *          percent: 50
 *      }
 *  };
 *
 *  graft(item, {
 *      upload: Graft.remove()
 *  });
 *
 *  expect(item).to.deep.equal({
 *      name: 'Test'
 *  });
 */
function remove() {
    return {
        graftOperationType: 3 /* remove */
    };
}
exports.remove = remove;
/**
 * Attaches a wrapper to a graft extension to ensure that the target field
 * is only replaced or added if the extension value is defined.
 *
 * @export
 * @template T
 * @param {T} [value]
 * @returns {T}
 *
 * @example
 *  let item = {
 *      name: 'Test'
 *  };
 *
 *  let childCount: number = undefined;
 *
 *  graft(item, {
 *      childCount: Graft.optional(childCount)
 *  });
 *
 *  expect(item).to.deep.equal({
 *      name: 'Test'
 *      // Note the lack of a 'childCount' key at all.
 *  });
 */
function optional(value) {
    return {
        graftOperationType: 2 /* optional */,
        value: value
    };
}
exports.optional = optional;
/**
 * Attaches a wrapper to a graft extension to ensure that the target field
 * is only added, and never replaced if already defined.
 *
 * If the extension value is an object but the target already defines the field,
 * the extension values will not be merged with the target values.
 *
 * @export
 * @template T
 * @param {T} value
 * @returns {T}
 *
 * @example
 *  let item = {
 *      name: 'Test',
 *      displayName: 'Existing'
 *  };
 *
 *  graft(item, {
 *      displayName: Graft.backup('Backup')
 *  });
 *
 *  expect(item).to.deep.equal({
 *      name: 'Test',
 *      displayName: 'Existing'
 *  });
 */
function backup(value) {
    return {
        graftOperationType: 4 /* backup */,
        value: value
    };
}
exports.backup = backup;
/**
 * Attaches a wrapper to a graft extension value to ensure that the target field
 * is only ever replaced or added, never merged.
 *
 * The extension value will be used directly, and not copied. Subsequent modifications
 * to the target item may result in changes to the extension value if it is an object.
 *
 * @export
 * @template T
 * @param {T} value
 * @returns {T}
 *
 * @example
 *  let item = {
 *      name: 'Test',
 *      photo: {
 *          width: 500,
 *          height: 300
 *      }
 *  };
 *
 *  graft(item, {
 *      photo: Graft.replace({
 *          originalUrl: 'http://test/unknown/jpg'
 *      })
 *  });
 *
 *  expect(item).to.deep.equal({
 *      name: 'Test',
 *      photo: {
 *          // Note that width and height are no longer present.
 *          originalUrl: 'http://test/unknown.jpg'
 *      }
 *  });
 */
function replace(value) {
    return {
        graftOperationType: 1 /* replace */,
        value: value
    };
}
exports.replace = replace;
/**
 * Grafts new updates to an existing object.
 * By default, `graft` deep-copies all values from `extension` onto `base`,
 * overriding new primitive and function fields, merging matching object fields, and concatenating
 * matching array fields.
 *
 * This function only copies fields defined on the `extension` object and its sub-objects, leaving
 * existing fields on the `base` tree which are not part of `extension` intact.
 *
 * The default merge behavior can be modified by wrapping the values supplied to fields of
 * the `extension` object.
 *
 * @export
 * @template B
 * @template E
 * @param {B} base
 * @param {E} extension
 * @returns {(B & E)}
 *
 * @example
 *  let base = {
 *      id: 'test',
 *      name: 'Test item',
 *      photo: {
 *          width: 400,
 *          height: 300
 *      },
 *      childCount: 7
 *  };
 *
 *  graft(base, {
 *      name: 'Renamed item',
 *      photo: {
 *          originalUrl: 'http://thumbnail/test.jpg'
 *      }
 *  });
 *
 *  expect(base).to.deep.equal({
 *      id: 'test',
 *      name: 'Renamed item',
 *      photo: {
 *          width: 400,
 *          height: 300,
 *          originalUrl: 'http://thumbnail/test.jpg'
 *      },
 *      childCount: 7
 *  });
 */
function graft(base, extension) {
    if (!isObject(base)) {
        throw new Error("Value for 'base' passed to 'graft' is not an object.");
    }
    if (!isObject(extension)) {
        throw new Error("Value for 'extension' passed to 'graft' is not an object");
    }
    if (extension === base) {
        // If the extension is the same object, do nothing.
        return base;
    }
    // Use Object.keys to copy the key list before iterating.
    for (var _i = 0, _a = Object.keys(extension); _i < _a.length; _i++) {
        var key = _a[_i];
        var extensionValue = extension[key];
        var baseValue = base[key];
        if (extensionValue === baseValue) {
            // If the base value is the same value, skip this key.
            continue;
        }
        var patch = extensionValue;
        if (isGraftOperation(patch)) {
            // A patch may perform an override action and skip to the next key,
            // or it may simply produce a new value to use for default grafting.
            if (isReplaceGraftOperation(patch)) {
                var value = patch.value;
                baseValue = undefined;
                extensionValue = value;
            }
            else if (isBackupGraftOperation(patch)) {
                var value = patch.value;
                var baseValue_1 = base[key];
                if (baseValue_1 === void 0) {
                    extensionValue = value;
                }
                else {
                    continue;
                }
            }
            else if (isOptionalGraftOperation(patch)) {
                var value = patch.value;
                if (value === void 0) {
                    continue;
                }
                else {
                    extensionValue = value;
                }
            }
            else if (isRemoveGraftOperation(patch)) {
                delete base[key];
                continue;
            }
            else {
                // Not a valid patch.
                // This would imply a caller assembled an object marked as a patch by circumventing the
                // exported functions of this module.
                throw new Error('Unknown patch specified for grafting. Only use exported functions from Graft to create patches.');
            }
        }
        var newValue = void 0;
        if (isDate(extensionValue)) {
            // The extension value is a date.
            // Dates are objects, but should be treated like primitives.
            // Since they are mutable, they should be copied instead of reused.
            newValue = new Date(extensionValue.getTime());
        }
        else if (isArray(extensionValue)) {
            // The extension value is an array, and the contents
            // should be used in place of the base values.
            var baseValueAsArray = baseValue;
            if (!isArray(baseValueAsArray)) {
                // Start with a new base value.
                baseValueAsArray = [];
            }
            // Replace the old array values with the new array values.
            baseValueAsArray.splice.apply(baseValueAsArray, [0, baseValueAsArray.length].concat(extensionValue));
            newValue = baseValueAsArray;
        }
        else if (isObject(extensionValue)) {
            // The extension value is an object (and not null), and the properties
            // should be merged with the base value.
            var baseValueAsObject = baseValue;
            if (!isObject(baseValueAsObject)) {
                // Start with a new base object.
                baseValueAsObject = {};
            }
            // Merge the new properties.
            graft(baseValueAsObject, extensionValue);
            newValue = baseValueAsObject;
        }
        else {
            // The extension value is a primitive, so the value should be replaced.
            // Note that function values are also handled here. Ultimately, there is no
            // way to copy a function precisely since they may contain closure references.
            newValue = extensionValue;
        }
        // Always re-assign the new value.
        // If the base uses property mutators, it will have a chance to inspect
        // the final value.
        base[key] = newValue;
    }
    return base;
}
exports.default = graft;
// Use of type guards facilitates the type safety of the graft function.
function isObject(value) {
    return typeof value === 'object' && !!value;
}
function isDate(value) {
    return value instanceof Date;
}
function isArray(value) {
    return Array.isArray(value);
}
function isGraftOperation(value) {
    return isObject(value) && !!value.graftOperationType;
}
function isBackupGraftOperation(graftOperation) {
    return graftOperation.graftOperationType === 4 /* backup */;
}
function isRemoveGraftOperation(graftOperation) {
    return graftOperation.graftOperationType === 3 /* remove */;
}
function isOptionalGraftOperation(graftOperation) {
    return graftOperation.graftOperationType === 2 /* optional */;
}
function isReplaceGraftOperation(graftOperation) {
    return graftOperation.graftOperationType === 1 /* replace */;
}


/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// OneDrive:IgnoreCodeCoverage
var Signal_1 = __webpack_require__(33);
var Promise_1 = __webpack_require__(20);
function buildDirectoryEntry(tree) {
    return {
        name: tree.name,
        type: 2 /* directory */,
        getEntries: function () {
            return Promise_1.default.resolve({
                entries: buildEntries(tree)
            });
        }
    };
}
function buildFileEntry(file) {
    var entry;
    if (file.type) {
        entry = {
            name: file.name,
            type: 1 /* file */,
            getFile: function () { return Promise_1.default.resolve(file); }
        };
    }
    else {
        entry = {
            name: file.name,
            type: 0 /* unknown */,
            getFile: function () { return Promise_1.default.resolve(file); }
        };
    }
    return entry;
}
function buildEntries(tree) {
    var entries = [];
    for (var name_1 in tree.directories) {
        if (name_1) {
            entries.push(buildDirectoryEntry(tree.directories[name_1]));
        }
    }
    for (var _i = 0, _a = tree.files; _i < _a.length; _i++) {
        var file = _a[_i];
        entries.push(buildFileEntry(file));
    }
    return entries;
}
function buildEntriesFromFileList(files) {
    var root = {
        name: '',
        directories: {},
        files: []
    };
    for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {
        var file = files_1[_i];
        var _a = file.webkitRelativePath, path = _a === void 0 ? file.name : _a;
        var folder = root;
        for (var _b = 0, _c = path.split('/').slice(0, -1); _b < _c.length; _b++) {
            var part = _c[_b];
            folder = folder.directories[part] || (folder.directories[part] = {
                name: part,
                directories: {},
                files: []
            });
        }
        folder.files.push(file);
    }
    return buildEntries(root);
}
exports.buildEntriesFromFileList = buildEntriesFromFileList;
function readEntries(reader) {
    var signal = new Signal_1.default();
    reader.readEntries((function (entries) { return signal.complete(entries); }), (function (error) { return signal.error(error); }));
    return signal.getPromise();
}
function getFile(fileSystemFileEntry) {
    var signal = new Signal_1.default();
    fileSystemFileEntry.file((function (file) {
        signal.complete(file);
    }), (function (error) {
        signal.error(error);
    }));
    return signal.getPromise();
}
function getPage(reader) {
    return readEntries(reader).then((function (fileSystemEntries) {
        var page;
        if (fileSystemEntries.length) {
            page = {
                entries: fileSystemEntries.map(getEntry),
                getEntries: function () { return getPage(reader); }
            };
        }
        else {
            page = {
                entries: []
            };
        }
        return page;
    }));
}
function getEntry(fileSystemEntry) {
    var entry;
    if (fileSystemEntry.isDirectory) {
        entry = {
            name: fileSystemEntry.name,
            type: 2 /* directory */,
            getEntries: function () {
                return getPage(fileSystemEntry.createReader());
            }
        };
    }
    else if (fileSystemEntry.isFile) {
        entry = {
            name: fileSystemEntry.name,
            type: 1 /* file */,
            getFile: function () {
                return getFile(fileSystemEntry);
            }
        };
    }
    return entry;
}
function buildEntriesFromEntryList(fileSystemEntries) {
    return fileSystemEntries.map(getEntry);
}
exports.buildEntriesFromEntryList = buildEntriesFromEntryList;


/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var Engagement_event_1 = __webpack_require__(39);
var Experiment_event_1 = __webpack_require__(174);
/**
 * Enum for the types of targets that can be used to run an experiment.
 * @enum {number}
 */
var TargetType;
(function (TargetType) {
    /** Value for user population. */
    TargetType[TargetType["user"] = 1] = "user";
    /** Value for tenant population.  */
    TargetType[TargetType["tenant"] = 2] = "tenant";
    /** Value for farm population. */
    TargetType[TargetType["farm"] = 3] = "farm";
    /** Value for site population. */
    TargetType[TargetType["site"] = 4] = "site";
})(TargetType = exports.TargetType || (exports.TargetType = {}));
/**
 * This class will be used for AB Testing type of experiments.
 */
var ABExperiment = (function () {
    /**
     * @constructor
     * @param {IABExperimentData} experimentData The data for the experiment.
     * @example
     * // set the experiment data
     * let newMenuExperimentData: IABExperimentData = { name: "NewMenu", startDate: "11/17/2016", segmentPopulation: 0.4};
     * // create the experiment object
     * let newMenuExperiment: ABExperiment = new ABExperiment(newMenuExperimentData);
     */
    function ABExperiment(experimentData) {
        // set the _experimentData
        // if segementPopulation is not specified set it to half, 0.5
        // if targetType is not specified set it to user type
        this._experimentData = {
            name: experimentData.name,
            startDate: experimentData.startDate,
            segmentPopulation: (experimentData.segmentPopulation === undefined) ? 0.5 : experimentData.segmentPopulation,
            targetType: (experimentData.targetType === undefined) ? TargetType.user : experimentData.targetType
        };
        // set isOn to false, by default
        this._isOn = false;
        if (ABExperiment._pageContext === null || ABExperiment._pageContext === undefined) {
            // log that the App that wasnts to do experiments
            // does not have host settings and quit doing the experiment checks
            Engagement_event_1.Engagement.logData({ name: this._experimentData.name + ".Experiment.HostSettingsMissing" });
        }
        else {
            // set the isOn flag based on the target type
            // if it ever reaches the default then return false
            switch (this._experimentData.targetType) {
                case TargetType.user:
                    this._isOn = this._isUserExperimentOn();
                    break;
                case TargetType.tenant:
                    this._isOn = this._isTenantExperimentOn();
                    break;
                case TargetType.farm:
                    this._isOn = this._isFarmExperimentOn();
                    break;
                case TargetType.site:
                    this._isOn = this._isSiteExperimentOn();
                    break;
            }
        }
    }
    /**
     * Initializes ABExperiment with the pageContext.
     * @param {ISpPageContext} pageContext The _spPageContextInfo of the app where is experiment is running.
     */
    ABExperiment.Init = function (pageContext) {
        ABExperiment._pageContext = __assign({}, pageContext, { userLoginName: pageContext.userLoginName || 'missing_user', siteSubscriptionId: pageContext.siteSubscriptionId || 'missing_tenant', farmLabel: pageContext.farmLabel || 'missing_farm', siteId: pageContext.siteId || 'missing_site' });
    };
    /**
     * Returns the experiment data to be used for logging purposes.
     * @return {IABExperimentData}.
     */
    ABExperiment.prototype.GetExperimentData = function () {
        return this._experimentData;
    };
    /**
     * Checks if the current specified target is being selected to be part of the experiment.
     * @param {string} targetType is the type of target that the experiment will run on. It can be user, tenant, or farm.
     * @return {boolean}.
     */
    ABExperiment.prototype.IsExperimentOn = function () {
        return this._isOn;
    };
    /**
     * Checks if the current user is being selected to be part of the experiment.
     * @return {boolean}.
     */
    ABExperiment.prototype._isUserExperimentOn = function () {
        // in case there are no host settings default to no experiments
        if (ABExperiment._pageContext === null) {
            return false;
        }
        // build an uber token
        var targetToken = this._experimentData.name + '_' +
            ABExperiment._pageContext.userLoginName + '_' +
            ABExperiment._pageContext.siteSubscriptionId + '_' +
            ABExperiment._pageContext.farmLabel;
        return this._isExperimentOn(targetToken);
    };
    /**
     * Checks if the current tenant is being selected to be part of the experiment.
     * @return {boolean}.
     */
    ABExperiment.prototype._isTenantExperimentOn = function () {
        // in case there are no settings default to no experiment path
        if (ABExperiment._pageContext === null) {
            return false;
        }
        // build an uber token
        var targetToken = this._experimentData.name + '_' +
            ABExperiment._pageContext.siteSubscriptionId + '_' +
            ABExperiment._pageContext.farmLabel;
        return this._isExperimentOn(targetToken);
    };
    /**
     * Checks if the current farm is being selected to be part of the experiment.
     * @return {boolean}.
     */
    ABExperiment.prototype._isFarmExperimentOn = function () {
        // in case there are no settings default to no experiment path
        if (ABExperiment._pageContext === null) {
            return false;
        }
        // build the token
        var targetToken = this._experimentData.name + '_' +
            ABExperiment._pageContext.farmLabel;
        return this._isExperimentOn(targetToken);
    };
    /**
     * Checks if the current site in the current tenant is being selected to be part of the experiment.
     * @return {boolean}.
     */
    ABExperiment.prototype._isSiteExperimentOn = function () {
        // in case there are no settings default to no experiment path
        if (ABExperiment._pageContext === null) {
            return false;
        }
        // build the token using siteId and SiteSubscriptionId
        // since siteId is unique inside a tenant
        var targetToken = this._experimentData.name + '_' +
            ABExperiment._pageContext.siteId + '_' +
            ABExperiment._pageContext.siteSubscriptionId + '_' +
            ABExperiment._pageContext.farmLabel;
        return this._isExperimentOn(targetToken);
    };
    /**
     * Returns true if the curent target type is being selected to be part of the experiment.
     * @param {string} targetToken this is the unique identfier for target.
     * @returns {boolean} true if the targetToken is in the segementPopulation defined for the experiment.
     */
    ABExperiment.prototype._isExperimentOn = function (targetToken) {
        if (targetToken === null) {
            return false;
        }
        // get the hash number for the specified targetToken
        var varHash = this._getHashNumber(targetToken);
        // it returns true if varHash is less than segementPopulation
        // same time, it logs experiment info
        if (varHash <= this._experimentData.segmentPopulation) {
            this._logData(true);
            return true;
        }
        else {
            this._logData(false);
            return false;
        }
    };
    /**
     * Returns an unique number based on the string provided.
     * @param {string} inputString this is the unique uber identfier for target.
     * @returns {number}.
     */
    ABExperiment.prototype._getHashNumber = function (inputString) {
        // in case there will be empty strings returns 1
        // this will take it to the experiment off path
        if (inputString.length === 0) {
            return 1;
        }
        var hash = 5381;
        for (var i = 0; i < inputString.length; ++i) {
            hash = ((hash << 5) + hash) + inputString.charCodeAt(i);
            hash = hash & hash;
        }
        hash = hash & 0xFFFF;
        return hash / 0xFFFF;
    };
    /**
     * Log the experiment data for teting purposes.
     */
    ABExperiment.prototype._logData = function (isOn) {
        // prepare the extraData
        var pageContext = ABExperiment._pageContext;
        var extraData = {
            isTreatment: isOn,
            startDate: this._experimentData.startDate,
            isExternalGuestUser: pageContext.isExternalGuestUser,
            isAnonymousGuestUser: pageContext.isAnonymousGuestUser,
            farmLabel: pageContext.farmLabel,
            targetType: this._experimentData.targetType
        };
        // the tag will look like this <ScenarioName>.<experimentName>.Experiment
        Engagement_event_1.Engagement.logData({
            name: this._experimentData.name + ".Experiment",
            siteId: pageContext.siteId,
            webId: pageContext.webId,
            groupId: pageContext.groupId,
            listId: pageContext.listId,
            extraData: extraData
        });
        Experiment_event_1.Experiment.logData({
            name: "",
            isInRamp: isOn,
            experiment: this._experimentData.name,
            variant: isOn.toString()
        });
    };
    return ABExperiment;
}());
exports.ABExperiment = ABExperiment;


/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var SingleEventBase_1 = __webpack_require__(8);
exports.Experiment = SingleEventBase_1.createSingleEvent({
    eventName: 'Experiment,',
    shortEventName: 'Experiment'
}, {
    name: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    isInRamp: {
        isPrefixingDisabled: true,
        type: 3 /* Boolean */
    },
    experiment: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    variant: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    }
});
exports.default = exports.Experiment;


/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Killswitch = (function () {
    function Killswitch() {
    }
    /**
     * Performs the static initialization of the kill switches map.
     * @param {{[key: string]: boolean}} killSwitches - The map of all active killswitches.
     */
    Killswitch.initKillSwitches = function (killSwitches) {
        Killswitch._killSwitches = killSwitches || {};
    };
    /**
     * Returns true if the given SPO killswitch is found in the static map
     * of active killswitches.
     * @requires - The application should initialize the static map
     * of active killswitches using initKillSwitches before invoking this method.
     * @param {string} killSwitch - The string representation of the guid identifying the
     * killswitch to check.
     * @param {string} date - The date when the kill switch check has been added to the codebase.
     * @param {string} message - A text message associated with the kill switch.
     * @returns {boolean} - True if the given kill switch is found active.
     */
    Killswitch.isActivated = function (killSwitch, date, message) {
        // use _spPageContextInfo for backward compatibility while still available
        var _spPageContextInfo = window['_spPageContextInfo'];
        if (!Killswitch._killSwitches && _spPageContextInfo && _spPageContextInfo.killSwitches) {
            Killswitch.initKillSwitches(_spPageContextInfo.killSwitches);
        }
        return killSwitch && Killswitch._killSwitches &&
            Killswitch._killSwitches[killSwitch.toUpperCase()];
    };
    Killswitch._killSwitches = null;
    return Killswitch;
}());
exports.Killswitch = Killswitch;


/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ModuleLoader_1 = __webpack_require__(177);
exports.loadModule = ModuleLoader_1.loadModule;
exports.loadModuleExport = ModuleLoader_1.loadModuleExport;
exports.loadModuleIdentity = ModuleLoader_1.loadModuleIdentity;
var ModuleHelper_1 = __webpack_require__(93);
exports.getDefaultExport = ModuleHelper_1.getDefaultExport;
exports.getIdentityExport = ModuleHelper_1.getIdentityExport;


/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var RequireJSErrorHandler_1 = __webpack_require__(178);
var PerformanceCollection_1 = __webpack_require__(92);
var Promise_1 = __webpack_require__(20);
var ModuleHelper = __webpack_require__(93);
/**
 * Function to load a resource asynchronously which resolves the default export
 * from a given module.
 *
 * This function checks for the presense of a 'default' export in the loaded module
 * and resolves it if present. Otherwise, it assumes the module is a legacy module
 * and returns its identity export.
 *
 * @export
 * @template TExport
 * @param moduleDefinition
 * @returns {Promise<TExport>}
 *
 * @example
 *  import MyComponent from '../myComponent/MyComponent';
 *
 *  loadModule<typeof MyComponent>({
 *      path: '../myComponent/MyComponent',
 *      require: require
 *  }).then((myComponentType: typeof MyComponent) => {
 *      let component = new myComponentType();
 *      return component;
 *  });
 *
 * @example
 *  import MyComponent from '../myComponent/MyComponent';
 *
 *  loadModule<typeof MyComponent>({
 *      path: '../myComponent/MyComponent',
 *      getModule: () => new Promise((resolve: (module: typeof MyComponent) => void, reject: (error: any) => void) => {
 *          require(['../myComponent/MyComponent'], resolve, reject);
 *      })
 *  }).then((myComponentType: typeof MyComponent) => {
 *      let component = new myComponentType();
 *      return component;
 *  });
 */
function loadModule(moduleDefinition) {
    if (isModuleLoaderDefinition(moduleDefinition)) {
        return loadModuleExport({
            path: moduleDefinition.path,
            getModule: moduleDefinition.getModule,
            getExport: ModuleHelper.getDefaultExport
        });
    }
    else {
        return loadModuleExport({
            path: moduleDefinition.path,
            require: moduleDefinition.require,
            getExport: ModuleHelper.getDefaultExport
        });
    }
}
exports.loadModule = loadModule;
/**
 * Function to load a resource asynchronously which resolves directly to the module.
 *
 * @export
 * @template TModule
 * @param {IModuleDefinition<TModule>} exportDefinition
 * @returns {Promise<TModule>}
 *
 * @example
 *  import * as MyUtilitiesModule from '../../utilities/MyUtilities';
 *
 *  loadModuleIdentity<typeof MyUtilitiesModule>({
 *      path: '../../utilities/MyUtilities',
 *      require: require
 *  }).then((myUtilities: typeof MyUtilitiesModule) => {
 *      return myUtilities.doStuff();
 *  });
 */
function loadModuleIdentity(exportDefinition) {
    var path = exportDefinition.path, require = exportDefinition.require;
    return Promise_1.default.resolve(loadRequire(require, path));
}
exports.loadModuleIdentity = loadModuleIdentity;
/**
 * Function to load a resource asynchronously which resolves a specific export
 * from a given module.
 *
 * @export
 * @template TModule
 * @template TExport
 * @param {IExportDefinition<TModule, TExport>} exportDefinition
 * @returns {Promise<TExport>}
 *
 * @example
 *  import * as MyUtilitiesModule from '../../utilities/MyUtilities';
 *
 *  loadModuleExport({
 *      path: '../../utilities/MyUtilities',
 *      require: require,
 *      getExport: (module: typeof MyUtilitiesModule) => module.doStuff
 *  }).then((doStuff: typeof MyUtilitiesModule.doStuff) => {
 *      return doStuff();
 *  });
 *
 * @example
 *  import * as MyUtilitiesModule from '../../utilities/MyUtilities';
 *
 *  loadModuleExport({
 *      path: '../../utilities/MyUtilities',
 *      getModule: () => new Promise((resolve: (module: typeof MyComponent) => void, reject: (error: any) => void) => {
 *          require(['../../utilities/MyUtilities'], resolve, reject);
 *      })
 *      getExport: (module: typeof MyUtilitiesModule) => module.doStuff
 *  }).then((doStuff: typeof MyUtilitiesModule.doStuff) => {
 *      return doStuff();
 *  });
 */
function loadModuleExport(exportDefinition) {
    var path = exportDefinition.path, getExport = exportDefinition.getExport;
    return Promise_1.default.resolve(isModuleExportDefinition(exportDefinition)
        ? loadGetModule(exportDefinition.getModule, path)
        : loadRequire(exportDefinition.require, path)).then(getExport);
}
exports.loadModuleExport = loadModuleExport;
/**
 * Internal helper to invoke `require` on the input path and log performance and errors.
 *
 * @template TModule
 * @param {IRequire<TModule>} require
 * @param {string} path
 * @returns {Promise<TModule>}
 */
function loadRequire(require, path) {
    return loadGetModule((function () { return new Promise_1.default(function (resolve, reject) {
        require([path], resolve, reject);
    }); }), path);
}
/**
 * Internal helper to invoke `getModule` and log performance and errors.
 *
 * @template TModule
 * @param {IRequire<TModule>} require
 * @param {string} path
 * @returns {Promise<TModule>}
 */
function loadGetModule(getModule, path) {
    PerformanceCollection_1.default.mark("Module_" + path, 20);
    return getModule().then((function (module) { return module; }), (function (error) {
        if (!Promise_1.default.isCanceled(error)) {
            RequireJSErrorHandler_1.default.log(error);
        }
        return Promise_1.default.reject(error);
    }));
}
function isModuleLoaderDefinition(moduleDefinition) {
    return moduleDefinition.getModule !== undefined;
}
function isModuleExportDefinition(exportDefinition) {
    return exportDefinition.getModule !== undefined;
}


/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var RequireJSError_event_1 = __webpack_require__(81);
var ErrorHelper_1 = __webpack_require__(14);
var RequireJSErrorHandler = (function () {
    function RequireJSErrorHandler() {
    }
    RequireJSErrorHandler.log = function (err) {
        // Log the error as data an fire log error so it shows up in the error logs
        RequireJSError_event_1.RequireJSError.logData(err);
        // Only log script errors to log error
        if (err &&
            (err.requireType === "define" ||
                err.requireType === "require") &&
            err.stack &&
            err.requireModules) {
            ErrorHelper_1.default.log(err);
        }
    };
    RequireJSErrorHandler.registerRequireOnError = function () {
        if (window["requirejs"] && typeof window["requirejs"] === 'function') {
            var prevOnError = window["requirejs"].onError;
            window["requirejs"].onError = function (err) {
                RequireJSErrorHandler.log(err);
                if (prevOnError && !err.isTest) {
                    prevOnError(err);
                }
            };
        }
    };
    return RequireJSErrorHandler;
}());
exports.default = RequireJSErrorHandler;
RequireJSErrorHandler.registerRequireOnError();


/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Scope_1 = __webpack_require__(94);
var Resources_1 = __webpack_require__(180);
/**
 * Base class for lifetime-managed, scoped components.
 *
 * Many web components ultimately need to set up subscriptions to events,
 * manage HTML elements, wait on asychronous activities, and clean up
 * loaded state. The `Component` base class provides a way to create a hierarchy
 * of objects with lifetime management and automatic resource scoping.
 *
 * `Component` combines the benefits of `ResourceScope` and `Scope` into a single
 *  package for convenience.
 *
 * If a component-like class needs the benefits of lifetime management but cannot
 * extend `Component`, consider wrapping a `Scope` and a `ResourceScope` in order
 * to create child components.
 *
 * @export
 * @class Component
 * @implements {IDisposable}
 *
 * @example
 *  export interface ISearchServiceParams extends IComponentParams {
 *      searchMode: SearchMode;
 *  }
 *
 *  export interface ISearchDependencies extends IComponentDependencies {
 *      context: IContext
 *      DataRequestor?: typeof DataRequestor;
 *  }
 *
 *  export default class SearchService extends Component {
 *      public static readonly dependencies: IResourceDependencies<ISearchDependencies> = {
 *          ...Component.dependencies,
 *          context: contextKey
 *      }
 *
 *      private _dataRequestor: DataRequestor;
 *      private _context: IContext;
 *      private _searchMode: SearchMode;
 *
 *      constructor(params: ISearchServiceParams, dependencies: ISearchServiceDependencies) {
 *          super(params, dependencies);
 *
 *          const {
 *              searchMode
 *          } = params;
 *
 *          const {
 *              context
 *              DataRequestor: dataRequestorType // This parameter is only used in unit tests
 *          } = dependencies;
 *
 *          this._searchMode = searchMode;
 *
 *          this._context = context;
 *
 *          this._dataRequestor = new (this.child(dataRequestorType))();
 *      }
 *
 *      public search(options: ISearchOptions): Promise<ISearchResult> {
 *          return this._dataRequestor.getData(...).then((data: ISearchResponse) => {
 *              return this._processResponse(data);
 *          });
 *      }
 *  }
 */
var Component = (function () {
    /**
     * Creates an instance of Component.
     * In general, derived classes should invoke `super(params, dependencies)`, supplying both
     * `params` and `dependencies` to the `Component` class.
     * When creating a new instance of a derived component, use either
     * `new (resources.injected(MyComponent))()`
     * when outside a `Component` or
     * `new (this.child(MyComponent))()`
     * when inside a `Component`. This will ensure that resources are properly passed and lifetimes
     * are properly managed.
     *
     * @param {IComponentParams} [params={}] Optional params to control behaviors of this class.
     * In general, classes which extend components
     * @param {IComponentDependencies} [dependencies={}] Optional dependencies to override types consumed by this class.
     * `dependencies` is intended for use during unit testing, to override types consumed outside of resourcing.
     * Most dependency injection should be done using `ResourceScope`.
     */
    function Component(params, dependencies) {
        if (params === void 0) { params = {}; }
        if (dependencies === void 0) { dependencies = {}; }
        var _a = this.resources, resources = _a === void 0 ? (dependencies.resources ?
            // If the resource scope comes via dependencies, then it might not be unique to this component instance.
            // To be safe, create a new child resource scope for resource exposures.
            new Resources_1.ResourceScope(dependencies.resources) :
            params.resources) : _a;
        this.resources = resources;
        this._Component_scope = new Scope_1.default();
    }
    Object.defineProperty(Component.prototype, "scope", {
        /**
         * Gets the lifetime scope manager for this component.
         * In general, use `new (this.child(Type))()` to create child components
         * with proper lifetime management.
         * However, `this.scope` can be used to attach arbitrary disposable objects
         * to bind their lifetimes to the current component instance.
         *
         * @protected
         * @type {Scope}
         */
        get: function () {
            return this._Component_scope;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Component.prototype, "isDisposed", {
        /**
         * Determines whether or not this component has been disposed.
         *
         * @readonly
         * @protected
         * @type {boolean}
         */
        get: function () {
            return this.scope.isDisposed;
        },
        enumerable: true,
        configurable: true
    });
    Component.prototype.dispose = function () {
        this._Component_scope.dispose();
    };
    /**
     * Produces a constructor for a type which injects instances
     * with this component's current resources and binds them
     * to this component's lifetime. New code should prefer `this.child`.
     *
     * @protected
     * @template T
     * @param {T} type
     * @returns {T}
     */
    Component.prototype.managed = function (type) {
        if (this.resources) {
            type = this.resources.injected(type);
        }
        return this.scope.attached(type);
    };
    Component.prototype.child = function (keyOrType) {
        var type;
        if (keyOrType instanceof Resources_1.ResourceKey) {
            type = this.resources.consume(keyOrType);
        }
        else if (this.resources) {
            type = this.resources.injected(keyOrType, {
                injectChildResourceScope: true
            });
        }
        else {
            type = keyOrType;
        }
        return this.scope.attached(type);
    };
    Component.dependencies = {
        resources: Resources_1.resourceScopeKey
    };
    return Component;
}());
exports.Component = Component;
exports.default = Component;


/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
var ResourceScope_1 = __webpack_require__(95);
var Disposable_1 = __webpack_require__(57);
/**
 * An implementation of IResourceLoader that constructs a {ResolvedResourceFactory} from the type that the load function resolves to.
 */
var ResolvedResourceLoader = (function () {
    function ResolvedResourceLoader(load, dependencies) {
        this._load = load;
        this._dependencies = dependencies;
    }
    ResolvedResourceLoader.prototype.load = function () {
        var _this = this;
        var promise = this._load().then((function (type) {
            return new ResolvedResourceFactory(type, _this._dependencies);
        }));
        this.load = function () { return promise; };
        return promise;
    };
    return ResolvedResourceLoader;
}());
exports.ResolvedResourceLoader = ResolvedResourceLoader;
/**
 * An implementation of IResourceFactory that instantiates the passed type, resolving any dependencies from resources.
 */
var ResolvedResourceFactory = (function () {
    function ResolvedResourceFactory(type, dependencies) {
        this._type = type;
        this.dependencies = __assign({}, (type.dependencies || {}), (dependencies || {}));
    }
    ResolvedResourceFactory.prototype.create = function (dependencies) {
        var instance = new this._type({}, dependencies);
        return {
            instance: instance,
            disposable: instance
        };
    };
    return ResolvedResourceFactory;
}());
exports.ResolvedResourceFactory = ResolvedResourceFactory;
/**
 * An implementation of IResourceFactory that provides a constructor for the passed type with dependencies resolved from resources.
 */
var ResolvedResourceTypeFactory = (function () {
    function ResolvedResourceTypeFactory(type, dependencies) {
        this._type = type;
        this.dependencies = __assign({}, (type.dependencies || {}), (dependencies || {}));
    }
    ResolvedResourceTypeFactory.prototype.create = function (dependencies) {
        return {
            instance: ResourceScope_1.getResolvedConstructor(this._type, dependencies)
        };
    };
    return ResolvedResourceTypeFactory;
}());
exports.ResolvedResourceTypeFactory = ResolvedResourceTypeFactory;
/**
 * An implementation of IResourceFactory for classes that have no dependencies and take no parameters.
 */
var SimpleResourceFactory = (function () {
    function SimpleResourceFactory(type) {
        this._type = type;
        this.dependencies = {};
    }
    SimpleResourceFactory.prototype.create = function () {
        var instance = new this._type();
        return {
            instance: instance,
            disposable: Disposable_1.isDisposable(instance) && instance
        };
    };
    return SimpleResourceFactory;
}());
exports.SimpleResourceFactory = SimpleResourceFactory;
var AliasResourceLoader = (function () {
    function AliasResourceLoader(load) {
        this._load = load;
    }
    AliasResourceLoader.prototype.load = function () {
        var promise = this._load().then((function (dependency) {
            return new AliasResourceFactory(dependency);
        }));
        this.load = function () { return promise; };
        return promise;
    };
    return AliasResourceLoader;
}());
exports.AliasResourceLoader = AliasResourceLoader;
/**
 * An implementation of IResourceFactory which wraps an existing resource key.
 */
var AliasResourceFactory = (function () {
    function AliasResourceFactory(dependency) {
        this.dependencies = {
            value: dependency.lazy
        };
    }
    AliasResourceFactory.prototype.create = function (dependencies) {
        return {
            instance: dependencies.value()
        };
    };
    return AliasResourceFactory;
}());
exports.AliasResourceFactory = AliasResourceFactory;
function createDefaultResourceKey(syncRequire, type, dependencies) {
    return createResolvedResourceKey(syncRequire('module').id, type, dependencies);
}
exports.createDefaultResourceKey = createDefaultResourceKey;
function createResolvedResourceKey(name, type, dependencies) {
    return new ResourceScope_1.ResourceKey({
        name: name,
        factory: new ResolvedResourceFactory(type, dependencies)
    });
}
exports.createResolvedResourceKey = createResolvedResourceKey;
function createDefaultTypeResourceKey(syncRequire, type, dependencies) {
    return createResolvedTypeResourceKey(syncRequire('module').id, type, dependencies);
}
exports.createDefaultTypeResourceKey = createDefaultTypeResourceKey;
function createResolvedTypeResourceKey(name, type, dependencies) {
    return new ResourceScope_1.ResourceKey({
        name: name,
        factory: new ResolvedResourceTypeFactory(type, dependencies)
    });
}
exports.createResolvedTypeResourceKey = createResolvedTypeResourceKey;
__export(__webpack_require__(95));


/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var HslColor_1 = __webpack_require__(97);
var RgbaColor_1 = __webpack_require__(26);
// Various constants used for generated shades of a color.
var WhiteShadeTable = [0.95, 0.85, 0.75, 0.65, 0.50];
var BlackTintTable = [0.50, 0.65, 0.75, 0.85, 0.95];
var ColorTintTable = [0.20, 0.40, 0.60];
var ColorShadeTable = [0.75, 0.50];
var LumTintTable = [0.10, 0.25, 0.50, 0.75, 0.90];
var LumShadeTable = [0.90, 0.75, 0.50, 0.25, 0.10];
var c_LuminanceLow = 0.2;
var c_LuminanceHigh = 0.8;
var rgbaMax = RgbaColor_1.default.maxComponent;
var rgbaWhite = RgbaColor_1.default.fromRgba(rgbaMax, rgbaMax, rgbaMax);
var rgbaBlack = RgbaColor_1.default.fromRgba(0, 0, 0);
/** Shades of a given color, from Lightest to Darkest. */
var Shades;
(function (Shades) {
    Shades[Shades["Unshaded"] = 0] = "Unshaded";
    Shades[Shades["Lightest"] = 1] = "Lightest";
    Shades[Shades["Lighter"] = 2] = "Lighter";
    Shades[Shades["Medium"] = 3] = "Medium";
    Shades[Shades["Darker"] = 4] = "Darker";
    Shades[Shades["Darkest"] = 5] = "Darkest";
})(Shades = exports.Shades || (exports.Shades = {}));
/**
 * Returns true if the argument is a valid Shades value
 * @param {Shades} shade The Shades value to validate.
 */
function _isValidShade(shade) {
    'use strict';
    return (shade >= Shades.Unshaded) && (shade <= Shades.Darkest);
}
/**
 * Given an RgbaColor and a shade specification, generates the requested shade of the color.
 * @param {RgbaColor} color The base color whose shades are to be computed
 * @param {Shades} shade The shade of the base color to compute.
 */
function getShade(color, shade) {
    'use strict';
    if (!color) {
        return null;
    }
    if (shade === Shades.Unshaded || !_isValidShade(shade)) {
        return RgbaColor_1.default.fromRgba(color.R, color.G, color.B, color.A);
    }
    var hsl = HslColor_1.default.fromRgba(color);
    var lum = hsl.lum;
    var tableIndex = shade - 1;
    if (RgbaColor_1.default.equals(color, rgbaWhite)) {
        hsl.darken(WhiteShadeTable[tableIndex]);
    }
    else if (RgbaColor_1.default.equals(color, rgbaBlack)) {
        hsl.lighten(BlackTintTable[tableIndex]);
    }
    else if (lum < c_LuminanceLow) {
        hsl.lighten(LumTintTable[tableIndex]);
    }
    else if (lum > c_LuminanceHigh) {
        hsl.darken(LumShadeTable[tableIndex]);
    }
    else {
        if (tableIndex < ColorTintTable.length) {
            hsl.lighten(ColorTintTable[tableIndex]);
        }
        else {
            hsl.darken(ColorShadeTable[tableIndex - ColorTintTable.length]);
        }
    }
    color = hsl.toRgbaColor();
    return color;
}
exports.getShade = getShade;


/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var StringHelper_1 = __webpack_require__(31);
var MembersList_1 = __webpack_require__(183);
/**
 * This datasource makes server call to get group related information.
 */
var GroupDataSource = (function () {
    /**
     * @constructor
     */
    function GroupDataSource(pageContext) {
        this._pageContext = pageContext;
    }
    /**
     * Get REST Url to get group properties
     * @param {string} Id (Guid) of the group
     * @returns the REST url that can be used to get group basic properties
     */
    GroupDataSource.prototype.getGroupBasicPropertiesRESTUrl = function (groupId, withMembership) {
        return this._getRESTUrl(StringHelper_1.format(withMembership ? GroupDataSource.groupBasicPropertiesWithMembershipUrlTemplate : GroupDataSource.groupBasicPropertiesUrlTemplate, groupId), 'SP.Directory.DirectorySession');
    };
    GroupDataSource.prototype.getGroupBasicProperties = function (responseText) {
        var group = {};
        try {
            var response = JSON.parse(responseText);
            if (response.d) {
                group = this._copyGroup(response.d);
                this._calculateMissingGroupProperties(group, group.id);
            }
        }
        catch (e) {
            group = {};
        }
        return group;
    };
    GroupDataSource.prototype._getRESTUrl = function (op, ns) {
        return this._pageContext.webServerRelativeUrl + '/_api/' + ns + '/' + op;
    };
    /**
     * Given response from the server convert it into a group
     */
    GroupDataSource.prototype._copyGroup = function (src) {
        var groupInfo = {};
        if (src.description) {
            groupInfo.description = src.description;
        }
        if (src.alias) {
            groupInfo.alias = src.alias;
        }
        if (src.displayName) {
            groupInfo.name = src.displayName;
        }
        if (src.principalName) {
            groupInfo.principalName = src.principalName;
        }
        if (src.creationTime) {
            groupInfo.creationTime = src.creationTime;
        }
        if (src.pictureUrl) {
            groupInfo.pictureUrl = src.pictureUrl;
        }
        if (src.inboxUrl) {
            groupInfo.inboxUrl = src.inboxUrl;
        }
        if (src.calendarUrl) {
            groupInfo.calendarUrl = src.calendarUrl;
        }
        if (src.documentsUrl) {
            groupInfo.filesUrl = src.documentsUrl;
        }
        if (src.siteUrl) {
            groupInfo.sharePointUrl = src.siteUrl;
        }
        if (src.editGroupUrl) {
            groupInfo.editUrl = src.editGroupUrl;
        }
        if (src.peopleUrl) {
            groupInfo.membersUrl = src.peopleUrl;
        }
        if (src.notebookUrl) {
            groupInfo.notebookUrl = src.notebookUrl;
        }
        if (src.isPublic) {
            groupInfo.isPublic = src.isPublic;
        }
        if (src.mail) {
            groupInfo.mail = src.mail;
        }
        // TODO: remove this once all branches get lowerCamelCase changelist
        if (src.Description) {
            groupInfo.description = src.Description;
        }
        if (src.Alias) {
            groupInfo.alias = src.Alias;
        }
        if (src.DisplayName) {
            groupInfo.name = src.DisplayName;
        }
        if (src.PrincipalName) {
            groupInfo.principalName = src.PrincipalName;
        }
        if (src.CreationTime) {
            groupInfo.creationTime = src.CreationTime;
        }
        if (src.PictureUrl) {
            groupInfo.pictureUrl = src.PictureUrl;
        }
        if (src.InboxUrl) {
            groupInfo.inboxUrl = src.InboxUrl;
        }
        if (src.CalendarUrl) {
            groupInfo.calendarUrl = src.CalendarUrl;
        }
        if (src.DocumentsUrl) {
            groupInfo.filesUrl = src.DocumentsUrl;
        }
        if (src.SiteUrl) {
            groupInfo.sharePointUrl = src.SiteUrl;
        }
        if (src.EditGroupUrl) {
            groupInfo.editUrl = src.EditGroupUrl;
        }
        if (src.PeopleUrl) {
            groupInfo.membersUrl = src.PeopleUrl;
        }
        if (src.NotebookUrl) {
            groupInfo.notebookUrl = src.NotebookUrl;
        }
        if (src.IsPublic) {
            groupInfo.isPublic = src.IsPublic;
        }
        if (src.Mail) {
            groupInfo.mail = src.Mail;
        }
        if (src.members || src.owners) {
            this._copyMembership(src);
        }
        return groupInfo;
    };
    /**
     *  Remove once federated directory makes appropriate fixes
     */
    GroupDataSource.prototype._calculateMissingGroupProperties = function (group, groupId) {
        if (!group.creationTime) {
            group.creationTime = Date.now();
        }
        if (!group.pictureUrl) {
            group.pictureUrl = group.pictureUrl.replace("EWS/Exchange.asmx/s/GetUserPhoto", "OWA/service.svc/s/GetPersonaPhoto");
        }
        if (!group.profileUrl) {
            group.profileUrl = this._getProfileUrl(groupId);
        }
        if (!group.notebookUrl && groupId) {
            group.notebookUrl = this._getGroupStatusNotebookUrl(groupId);
        }
    };
    GroupDataSource.prototype._getProfileUrl = function (id) {
        return this._pageContext.siteAbsoluteUrl + StringHelper_1.format(GroupDataSource.groupStatusPageTemplate, id, 'profile');
    };
    GroupDataSource.prototype._getGroupStatusNotebookUrl = function (id) {
        return this._pageContext.siteAbsoluteUrl + StringHelper_1.format(GroupDataSource.groupStatusPageTemplate, id, 'notebook');
    };
    GroupDataSource.prototype._copyMembership = function (src) {
        var membershipInfo = {};
        if (src.members && src.members.results) {
            var membersList = this._copyMembers(src.members.results);
            membershipInfo.membersList = membersList;
        }
        if (src.owners && src.owners.results) {
            var ownersList = this._copyMembers(src.owners.results);
            membershipInfo.ownersList = ownersList;
        }
        return membershipInfo;
    };
    /**
     * Copy from member list json to memberList object
     */
    GroupDataSource.prototype._copyMembers = function (src) {
        var membersList = new MembersList_1.default();
        var members = new Array();
        for (var i = 0; i < src.length; i++) {
            var member = this._copyMember(src[i]);
            members.push(member);
        }
        membersList.members = members;
        membersList.totalCount = members.length;
        return membersList;
    };
    /**
     * Copy from json to IPerson object
     */
    GroupDataSource.prototype._copyMember = function (src) {
        var user = {};
        if (src.alias) {
            user.sip = src.alias;
        }
        if (src.id) {
            user.userId = src.id;
        }
        if (src.principalName) {
            user.email = src.principalName;
        }
        if (src.displayName) {
            user.name = src.displayName;
        }
        if (src.title) {
            user.job = src.title;
        }
        if (src.pictureUrl) {
            user.image = src.pictureUrl;
        }
        if (src.profilePage) {
            user.profilePage = src.profilePage;
        }
        return user;
    };
    /**
     * Static members
     */
    // Url templates
    GroupDataSource.groupBasicPropertiesUrlTemplate = 'Group(\'{0}\')?$select=PrincipalName,DisplayName,Alias,Description,InboxUrl,CalendarUrl,DocumentsUrl,SiteUrl,EditGroupUrl,PictureUrl,PeopleUrl,NotebookUrl,Mail,IsPublic,CreationTime';
    GroupDataSource.groupBasicPropertiesWithMembershipUrlTemplate = 'Group(\'{0}\')?$expand=Members,Owners&$select=PrincipalName,DisplayName,Alias,Description,InboxUrl,CalendarUrl,DocumentsUrl,SiteUrl,EditGroupUrl,PictureUrl,PeopleUrl,NotebookUrl,Mail,IsPublic,CreationTime,Members/PrincipalName,Members/Id,Members/DisplayName,Members/PictureUrl,Owners/PrincipalName,Owners/Id,Owners/DisplayName,Owners/PictureUrl';
    GroupDataSource.groupStatusPageTemplate = '_layouts/15/groupstatus?id={0}&target={1}';
    return GroupDataSource;
}());
exports.default = GroupDataSource;


/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var MembersList = (function () {
    function MembersList() {
        this.totalCount = 0;
        this.members = new Array();
    }
    /**
     * Add given user to the members list of the group
     */
    MembersList.prototype.addUserToList = function (user) {
        this.members.unshift(user);
        this.totalCount++;
    };
    /**
     * Remove user from members list of a group
     */
    MembersList.prototype.removeUserFromList = function (user) {
        var indexToRemove = -1; // not found by default
        for (var i = 0; i < this.members.length; i++) {
            if (this.members[i].userId === user.userId) {
                indexToRemove = i; // find the index
            }
        }
        // If user exists in members list then remove it
        if (indexToRemove >= 0) {
            this.members.splice(indexToRemove, 1);
            this.totalCount--;
        }
    };
    return MembersList;
}());
exports.default = MembersList;


/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// encode <>&'"
var ENCODE_HTML_TEXT_REGEX = /[<>&'"\\]/g;
var CODES = {
    '<': '&lt;',
    '>': '&gt;',
    '&': '&amp;',
    '"': '&quot;',
    '\'': '&#39;',
    '\\': '&#92;'
};
function replacer(match) {
    return CODES[match];
}
var HtmlEncoding = (function () {
    function HtmlEncoding() {
    }
    /**
     * Encodes a string for use in HTML text. Not recommended for attribute values
     * or anything that might be used in a URL.
     */
    HtmlEncoding.encodeText = function (inputString) {
        if (!inputString) {
            return "";
        }
        return inputString.replace(ENCODE_HTML_TEXT_REGEX, replacer);
    };
    return HtmlEncoding;
}());
exports.default = HtmlEncoding;


/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ProtocolHandlerEncodeOption;
(function (ProtocolHandlerEncodeOption) {
    ProtocolHandlerEncodeOption[ProtocolHandlerEncodeOption["none"] = 0] = "none";
    ProtocolHandlerEncodeOption[ProtocolHandlerEncodeOption["encodeUrl"] = 1] = "encodeUrl";
    ProtocolHandlerEncodeOption[ProtocolHandlerEncodeOption["encodeCommand"] = 2] = "encodeCommand";
})(ProtocolHandlerEncodeOption = exports.ProtocolHandlerEncodeOption || (exports.ProtocolHandlerEncodeOption = {}));
var ProtocolHandlerHelper = (function () {
    function ProtocolHandlerHelper() {
    }
    /**
     * Create protocol handler Url based in inputs to laucch Office Client
     * @param strApp Input appName, like ms-excel
     * @param strUrl Input url of the file.
     * @param command Input open command, like ofv or ofe for view or edit.
     * @param defaultSaveUrl Input to specify save Url. Used for new operation.
     * @param encodeOption Input to specify if we need to encode the whole output url, or only encode the command part of the url.
     * @param isSPO Input to specify if this is for SPO output.
     */
    ProtocolHandlerHelper.CreateProtocolHandlerUrl = function (strApp, strUrl, command, defaultSaveUrl, encodeOption, isSPO) {
        var ret = [];
        // OpenApp="protocol[|UsePlain[|IgnoreCheck]]"/>
        var protocolList = strApp.split('|');
        if (protocolList.length === 2) {
            ret.push(protocolList[0]);
            ret.push(':');
            ret.push(strUrl);
            return ret.join('');
        }
        else if (protocolList.length === 3) {
            strApp = protocolList[0];
        }
        ret.push(strApp);
        ret.push(':');
        ret.push(command);
        if (isSPO && strApp === "ms-excel" && command !== this.protocolCommand.New) {
            ret.push(encodeOption === ProtocolHandlerEncodeOption.encodeCommand ? '%7Cofc' : '|ofc');
        }
        ret.push(encodeOption === ProtocolHandlerEncodeOption.encodeCommand ? '%7Cu%7C' : '|u|');
        ret.push(strUrl);
        if (command === this.protocolCommand.New) {
            ret.push(encodeOption === ProtocolHandlerEncodeOption.encodeCommand ? '%7Cs%7C' : '|s|');
            ret.push(defaultSaveUrl);
        }
        // encode uri when necessary.
        var retUrl = ret.join('');
        return encodeOption === ProtocolHandlerEncodeOption.encodeUrl ? encodeURI(retUrl) : retUrl;
    };
    // tslint:disable-next-line:typedef
    ProtocolHandlerHelper.protocolCommand = { View: 'ofv', Edit: 'ofe', New: 'nft' };
    return ProtocolHandlerHelper;
}());
exports.ProtocolHandlerHelper = ProtocolHandlerHelper;
exports.default = ProtocolHandlerHelper;


/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * This datasource makes a call to the Acronyms and Colors service and returns an IAcronymColor object.
 */
var SiteHeaderLogoAcronym = (function () {
    /**
     * @constructor
     */
    function SiteHeaderLogoAcronym(pageContext) {
        this._pageContext = pageContext;
    }
    /**
     * Given a site name, return an URL to a REST endpoint where the site logo acronym and color information can be retrieved from.
     * The REST endpoint is through the GetAcronymsAndColors API.
     * Note: API takes in additional optional arguments like lcid, which as of this writing this method doesn't support.
     *       Please extend as appropriate.
     *
     * @param {string} siteName Name of the site.
     * @returns { string} the REST endpoint relative URL.
     */
    SiteHeaderLogoAcronym.prototype.getAcronymRESTUrl = function (siteName) {
        return this._pageContext.webServerRelativeUrl + ("/_api/sphome/GetAcronymsAndColors?labels=[{Text:" + encodeURIComponent('"' + siteName + '"') + "}]");
    };
    SiteHeaderLogoAcronym.prototype.getAcronymColor = function (responseText) {
        //parse the responseText
        var rtnObj = { acronym: undefined, color: undefined };
        try {
            var response = JSON.parse(responseText);
            var responseResult = response.d.GetAcronymsAndColors.results[0];
            rtnObj.acronym = responseResult.Acronym;
            rtnObj.color = responseResult.Color;
        }
        catch (e) {
            // try xml parsing
            var parser = this._parseFn();
            var elements = void 0;
            var xmlDoc = parser(responseText);
            if (elements = xmlDoc.getElementsByTagName("element")) {
                var element = elements[0];
                for (var i = 0; i < element.childNodes.length; i++) {
                    switch (element.childNodes[i].nodeName) {
                        case 'Acronym':
                            rtnObj.acronym = element.childNodes[i].nodeValue;
                            break;
                        case 'Color':
                            rtnObj.color = element.childNodes[i].nodeValue;
                            break;
                    }
                }
            }
        }
        return rtnObj;
    };
    /**
     * Returns an XML parser.
     */
    SiteHeaderLogoAcronym.prototype._parseFn = function () {
        var parseXml;
        if (DOMParser) {
            parseXml = function (xmlStr) {
                return (new DOMParser()).parseFromString(xmlStr, "text/xml");
            };
        }
        else if (ActiveXObject &&
            new ActiveXObject("Microsoft.XMLDOM")) {
            parseXml = function (xmlStr) {
                var xmlDoc = new ActiveXObject("Microsoft.XMLDOM");
                xmlDoc.async = "false";
                xmlDoc.loadXML(xmlStr);
                return xmlDoc;
            };
        }
        else {
            throw new Error("No XML parser found");
        }
        return parseXml;
    };
    return SiteHeaderLogoAcronym;
}());
exports.default = SiteHeaderLogoAcronym;


/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var RgbaColor_1 = __webpack_require__(26);
var ThemeCache_1 = __webpack_require__(98);
var Promise_1 = __webpack_require__(20);
var Engagement_event_1 = __webpack_require__(39);
var Qos_event_1 = __webpack_require__(29);
/**
 * Provides theme data, either from the local cache or from the server.
 */
var ThemeProvider = (function () {
    /**
     * Constructs a ThemeProvider which acts like the provided loadData function but with caching.
     * @param {() => Promise<IThemeData>} loadData Used to load data on a cache miss.
     */
    function ThemeProvider(loadData) {
        this._loadData = loadData;
    }
    ThemeProvider.getBackgroundUrl = function (data) {
        if (data) {
            return ThemeProvider._makeCssUrl(data.backgroundImageUri);
        }
        else {
            return 'none';
        }
    };
    /**
     * Given a URL, returns a string value which can be safely used as a
     * background-image value in a CSS rule. If the url is falsey, this
     * returns "none" to specify no background-image.
     * @param {string} url The URL of a background image.
     */
    ThemeProvider._makeCssUrl = function (url) {
        var cssUrlValue = "none";
        if (url) {
            cssUrlValue = 'url("' +
                ThemeProvider._escapeQuotesAndParentheses(url) +
                '")';
        }
        return cssUrlValue;
    };
    /**
     * Escapes single- and double-quotes along with parentheses so that the
     * resulting string is safe to use in a CSS background-image: url()
     * @param {string} str The string to escape.
     */
    ThemeProvider._escapeQuotesAndParentheses = function (str) {
        var replacements = { "'": "%27", '"': "%22", "(": "%28", ")": "%29" };
        var result = null;
        if (str != null) {
            result = str.replace(/(['"\(\)])/gm, (function (match, capture) {
                return replacements[capture];
            }));
        }
        return result;
    };
    /**
     * Loads the theme data and returns a map from theme tokens to replacement values.
     * Suitable for use with loadTheme in load-themed-styles.
     * @param {string} cacheToken Cache token used to validate cached data.
     * @param {boolean} forceUpdate Whether to force fresh data to be loaded and cached.
     */
    ThemeProvider.prototype.loadThemeTokenMap = function (cacheToken, forceUpdate) {
        return this.loadThemeData(cacheToken, forceUpdate).then((function (themeData) {
            var themeValues;
            if (themeData && themeData.palette) {
                themeValues = {};
                var palette = themeData.palette;
                for (var colorSlot in palette) {
                    var rgbaValue = palette[colorSlot];
                    themeValues[colorSlot] = rgbaValue ? RgbaColor_1.default.toHtmlString(rgbaValue) : null;
                }
                themeValues["backgroundImageUri"] =
                    ThemeProvider._makeCssUrl(themeData.backgroundImageUri);
            }
            return themeValues;
        }), (function (error) { return null; })); // on error, return null
    };
    /**
     * Loads the theme data from the cache or via the a loadData method.
     * @param {string} cacheToken Cache token used to validate cached data.
     * @param {boolean} forceUpdate Whether to force fresh data to be loaded and cached.
     */
    ThemeProvider.prototype.loadThemeData = function (cacheToken, forceUpdate) {
        if (!forceUpdate && this._dataPromise) {
            return this._dataPromise;
        }
        var _this = this;
        var failureResultCode = null;
        var failureResultType = Qos_event_1.ResultTypeEnum.Failure;
        this._dataPromise = Qos_event_1.Qos.instrumentPromise(
        /*startSchema*/ { name: "ThemeProvider.LoadData" }, 
        /*createPromise*/ (function () { return new Promise_1.default(function loadDataOnExecute(complete, error) {
            var previousData = null;
            if (!forceUpdate) {
                // Checks if we have valid cached data before returning it.
                previousData = ThemeCache_1.default.getCachedTheme(cacheToken);
            }
            // If we have previous data and an update is not forced, use that data.
            if (previousData) {
                Engagement_event_1.Engagement.logData({ name: "ThemeProvider.DataFromCache" });
                complete(previousData);
            }
            else {
                if (forceUpdate) {
                    Engagement_event_1.Engagement.logData({ name: "ThemeProvider.ForceUpdateData" });
                }
                Engagement_event_1.Engagement.logData({ name: "ThemeProvider.DataFromServer" });
                // Get updated data. Might result in a server call.
                _this._loadData(forceUpdate).done((function onComplete(themeData) {
                    if (themeData) {
                        if (themeData.cacheToken) {
                            ThemeCache_1.default.updateThemeCache(themeData, cacheToken);
                            complete(themeData);
                        }
                        else {
                            //TODO what happens if error() is undefined?
                            failureResultCode = "NoCacheToken";
                            if (error) {
                                error("Theme data with no CacheToken returned");
                            }
                        }
                    }
                    else {
                        failureResultCode = "NoData";
                        if (error) {
                            error("No model returned");
                        }
                    }
                }), (function onError(err) {
                    if (Promise_1.default.isCanceled(error)) {
                        failureResultCode = "Canceled";
                        failureResultType = Qos_event_1.ResultTypeEnum.ExpectedFailure;
                    }
                    else {
                        failureResultCode = "ServerLoadFailure";
                    }
                    if (error) {
                        error(err);
                    }
                }));
            }
        }); }), 
        /*getCompleteSchema*/ null, 
        /*getErrorSchema*/ (function getErrorSchema(error) {
            if (Promise_1.default.isCanceled(error)) {
                failureResultType = Qos_event_1.ResultTypeEnum.ExpectedFailure;
                failureResultCode = "Canceled";
            }
            return {
                resultType: failureResultType,
                resultCode: failureResultCode || "Other",
                error: error
            };
        }));
        return this._dataPromise;
    };
    return ThemeProvider;
}());
exports.default = ThemeProvider;


/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Simplified implementation of a URI parser which does not attempt decoding of segments,
 * handling of query strings, or separation of the fragment.
 *
 * This class makes several assumptions about the format of input URLs:
 * - Absolute URLs begin with '<scheme>://<host>'
 * - Relative URLs being with '/'
 * - URLs never have a trailing '/'
 *
 * @class SimpleUri
 */
var SimpleUri = (function () {
    /**
     * Creates an instance of SimpleUri.
     *
     * @param {string} value
     */
    function SimpleUri(value) {
        if (value === void 0) { value = ''; }
        this._value = value;
    }
    Object.defineProperty(SimpleUri.prototype, "format", {
        /**
         * Determines the format of the URL.
         *
         * @readonly
         * @type {UriFormat}
         *
         * @example
         *  expect(new SimpleUri('/').format).to.equal(UriFormat.serverRelative);
         * @example
         *  expect(new SimpleUri('https://test').format).to.equal(UriFormat.absolute);
         * @example
         *  expact(new SimpleUri('test').format).to.equal(UriFormat.relative);
         */
        get: function () {
            return this._getFormat();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SimpleUri.prototype, "authority", {
        /**
         * Gets the authority component of the URI, if the URI is fully-qualified.
         * The authority is formatted as
         * '<scheme>://<host>'
         * and never has a trailing '/'.
         *
         * @readonly
         * @type {string}
         *
         * @example
         *  expect(new SimpleUri('/').authority).to.equal('');
         * @example
         *  expect(new SimpleUri('https://test').authority).to.equal('https://test');
         * @example
         *  expect(new SimpleUri('https://test/').authority).to.equal('https://test');
         * @example
         *  expect(new SimpleUri('/bad/scheme://').authority).to.equal('');
         */
        get: function () {
            return this._getAuthority();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SimpleUri.prototype, "domain", {
        /**
         * Gets the domain of the URI, which is everything in the authority after
         * the scheme and protocol.
         *
         * @readonly
         * @type {string}
         * @memberOf SimpleUri
         *
         * @example
         *  expect(new SimpleUri('/').domain).to.equal('');
         * @example
         *  expect(new SimpleUri('https://test').domain).to.equal('test');
         * @example
         *  expect(new SimpleUri('https://test/').domain).to.equal('test');
         */
        get: function () {
            return this._getDomain();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SimpleUri.prototype, "path", {
        /**
         * Gets the path of the URI, which is everything after the authority.
         * If the URI has no authority, this returns the entire URI.
         * If there is only an authority, this returns ''.
         *
         * @readonly
         * @type {string}
         *
         * @example
         *  expect(new SimpleUri('https://test').path).to.equal('');
         * @example
         *  expect(new SimpleUri('/').path).to.equal('/');
         * @example
         *  expect(new SimpleUri('https://test/').path).to.equal('/');
         * @example
         *  expect(new SimpleUri('/bad/scheme://').path).to.equal('/bad/scheme://');
         */
        get: function () {
            return this._getPath();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SimpleUri.prototype, "segments", {
        /**
         * Gets the segments of the path.
         * If there is no path, this is an empty array.
         * Otherwise, this returns all segments after the first '/'.
         *
         * @readonly
         * @type {string[]}
         *
         * @example
         *  expect(new SimpleUri('https://test').segments).to.deep.equal([]);
         * @example
         *  expect(new SimpleUri('/').segments).to.deep.equal(['']);
         * @example
         *  expect(new SimpleUri('/foo').segments).to.deep.equal(['foo']);
         * @example
         *  expect(new SimpleUri('/foo/').segments).to.deep.equal(['foo', '']);
         * @example
         *  expect(new SimpleUri('/foo/bar').segments).to.deep.equal(['foo', 'bar']);
         * @example
         *  expect(new SimpleUri('/bad/scheme://').segments).to.deep.equal(['bad', 'scheme:', '', '']);
         */
        get: function () {
            return this._getSegments();
        },
        enumerable: true,
        configurable: true
    });
    SimpleUri.prototype._getFormat = function () {
        var format;
        if (this._getAuthority()) {
            format = 0 /* absolute */;
        }
        else {
            var path = this._getPath();
            if (path.indexOf('/') === 0) {
                format = 2 /* serverRelative */;
            }
            else {
                format = 1 /* relative */;
            }
        }
        this._getFormat = function () { return format; };
        return format;
    };
    SimpleUri.prototype._getAuthority = function () {
        var authority;
        var endIndexOfRootDelimeter = this._getEndIndexOfRootDelimeter();
        if (endIndexOfRootDelimeter > -1) {
            var indexOfNextSegment = this._value.indexOf('/', endIndexOfRootDelimeter);
            if (indexOfNextSegment > -1) {
                authority = this._value.substring(0, indexOfNextSegment);
            }
            else {
                authority = this._value;
            }
        }
        else {
            authority = '';
        }
        this._getAuthority = function () { return authority; };
        return authority;
    };
    SimpleUri.prototype._getDomain = function () {
        var domain;
        var authority = this._getAuthority();
        if (authority) {
            var endIndexOfRootDelimeter = this._getEndIndexOfRootDelimeter();
            domain = authority.substring(endIndexOfRootDelimeter);
        }
        else {
            domain = '';
        }
        this._getDomain = function () { return domain; };
        return domain;
    };
    SimpleUri.prototype._getPath = function () {
        var path;
        var endIndexOfSchemeDelimeter = this._getEndIndexOfRootDelimeter();
        if (endIndexOfSchemeDelimeter > -1) {
            var indexOfNextSegment = this._value.indexOf('/', endIndexOfSchemeDelimeter);
            if (indexOfNextSegment > -1) {
                path = this._value.substring(indexOfNextSegment);
            }
            else {
                path = '';
            }
        }
        else {
            path = this._value;
        }
        this._getPath = function () { return path; };
        return path;
    };
    SimpleUri.prototype._getSegments = function () {
        var path = this._getPath();
        var segments = path.split('/');
        this._getSegments = function () { return segments; };
        return segments;
    };
    SimpleUri.prototype._getEndIndexOfRootDelimeter = function () {
        var endIndexOfRootDelimeter;
        var rootDelimeter = '//';
        var indexOfRootDelimeter = this._value.indexOf(rootDelimeter);
        var indexOfPathDelimeter = this._value.indexOf('/');
        if (indexOfRootDelimeter > -1 && indexOfRootDelimeter <= indexOfPathDelimeter) {
            endIndexOfRootDelimeter = indexOfRootDelimeter + rootDelimeter.length;
        }
        else {
            endIndexOfRootDelimeter = -1;
        }
        this._getEndIndexOfRootDelimeter = function () { return endIndexOfRootDelimeter; };
        return endIndexOfRootDelimeter;
    };
    return SimpleUri;
}());
exports.SimpleUri = SimpleUri;
exports.default = SimpleUri;


/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var FabricTheming_1 = __webpack_require__(96);
var RgbaColor_1 = __webpack_require__(26);
var UriEncoding_1 = __webpack_require__(38);
/**
 * Utility methods which can be used to load the theme of a SharePoint site.
 */
var WebTheme = (function () {
    function WebTheme() {
    }
    /**
     * Constructs the URL of a REST endpoint which will return the web theme.
     * @param {IWebContextInfo} webContextInfo Context information about the web.
     * @param {string} cultureName Current UI culture.
     * @param {string} themeOverride URL to a temporary override theme (e.g. preview).
     */
    WebTheme.makeWebThemeRestUrl = function (webServerRelativeUrl, cultureName, themeOverride) {
        "use strict";
        var webUrl = webServerRelativeUrl;
        if (webUrl && webUrl[webUrl.length - 1] === '/') {
            // Trim trailing slash.
            webUrl = webUrl.substring(0, webUrl.length - 1);
        }
        webUrl = UriEncoding_1.default.escapeUrlForCallback(webUrl);
        var webThemeRestEndpoint = UriEncoding_1.default.escapeUrlForCallback(webUrl) +
            '/_api/SP.Web.GetContextWebThemeData?noImages=true&lcid=' +
            UriEncoding_1.default.encodeURIComponent(cultureName);
        if (themeOverride) {
            webThemeRestEndpoint += "&ThemeOverride=" + UriEncoding_1.default.encodeURIComponent(themeOverride);
        }
        return webThemeRestEndpoint;
    };
    /**
     * Constructs the URL of a REST endpoint which will return the web theme.
     * @param {IWebContextInfo} webContextInfo Context information about the web.
     */
    WebTheme.processWebThemeRestResponse = function (responseText) {
        // This could throw if the handler returns an HTML error page or invalis JSON.
        // DataSource will count that as an error and call the error callback.
        "use strict";
        var response = JSON.parse(responseText);
        var rawThemeData;
        if (response && response.d && response.d.GetContextWebThemeData) {
            rawThemeData = JSON.parse(response.d.GetContextWebThemeData);
        }
        var themeData = WebTheme.processRawThemeData(rawThemeData);
        return themeData;
    };
    /**
     * Converts an IThemeDataRaw into an IThemeData.
     * @param {IThemeDataRaw} themeData Raw theme data to process.
     */
    WebTheme.processRawThemeData = function (themeData) {
        "use strict";
        if (themeData) {
            var coerceToColor = WebTheme.coerceToColor;
            var colors = {};
            var inputColors = themeData.Palette ? themeData.Palette.Colors : {};
            colors = WebTheme.convertColorsToRgba(inputColors);
            var fabricColors = colors;
            if (!fabricColors['themePrimary']) {
                fabricColors = FabricTheming_1.default.generateFabricColors(colors['ContentAccent1'], themeData.IsInverted);
                var pageBG = coerceToColor(colors['PageBackground']) || null;
                var bgOverlay = coerceToColor(colors['BackgroundOverlay']) || null;
                var alpha40 = Math.round(0.4 * RgbaColor_1.default.maxComponent);
                fabricColors['white'] = pageBG;
                // RgbaColor.fromRgba and RgbaColor.clone both return new objects.
                // This is important for avoiding duplicate filtering logic in the caching layer.
                fabricColors['primaryBackground'] = RgbaColor_1.default.clone(pageBG);
                fabricColors['primaryText'] = fabricColors['primaryText'] || coerceToColor('#333');
                fabricColors['whiteTranslucent40'] = pageBG && RgbaColor_1.default.fromRgba(pageBG.R, pageBG.G, pageBG.B, alpha40);
                fabricColors['backgroundOverlay'] = bgOverlay;
                fabricColors['suiteBarBackground'] = coerceToColor(colors['SuiteBarBackground']) || null;
                fabricColors['suiteBarText'] = coerceToColor(colors['SuiteBarText']) || null;
                fabricColors['suiteBarDisabledText'] = coerceToColor(colors['SuiteBarDisabledText']) || null;
                fabricColors['topBarBackground'] = coerceToColor(colors['TopBarBackground']) || null;
                fabricColors['topBarText'] = coerceToColor(colors['TopBarText']) || null;
                fabricColors['topBarHoverText'] = coerceToColor(colors['TopBarHoverText']) || null;
                fabricColors['dialogBorder'] = coerceToColor(colors['DialogBorder']) || null;
            }
            return {
                backgroundImageUri: themeData.BackgroundImageUri,
                cacheToken: themeData.ThemeCacheToken,
                isDefault: themeData.IsDefault,
                isInverted: themeData.IsInverted,
                palette: fabricColors,
                version: themeData.Version
            };
        }
        return {
            backgroundImageUri: "",
            cacheToken: "",
            isDefault: true,
            isInverted: false,
            palette: {},
            version: ""
        };
    };
    WebTheme.convertColorsToRgba = function (colors) {
        var convertedColors = {};
        for (var colorKey in colors) {
            if (colors.hasOwnProperty(colorKey)) {
                var colorValue = WebTheme.coerceToColor(colors[colorKey]);
                // TODO: console.warn if colorValue is undefined?
                if (colorValue) {
                    convertedColors[colorKey] = colorValue;
                }
            }
        }
        return convertedColors;
    };
    /**
     * Coerces an HTML color string or a color object in raw web theme data into an RgbaColor.
     * @param {any} toColor Object to be converted into an RgbaColor.
     */
    WebTheme.coerceToColor = function (toColor) {
        "use strict";
        var resultColor;
        // Use duck typing to extract a color
        if (!toColor) {
            resultColor = null;
        }
        else if (typeof toColor === "string" || toColor instanceof String) {
            resultColor = RgbaColor_1.default.fromHtmlColor(String(toColor));
        }
        else if ("DefaultColor" in toColor) {
            resultColor = WebTheme.coerceToColor(toColor["DefaultColor"]);
        }
        else if ("R" in toColor && "G" in toColor && "B" in toColor) {
            resultColor = RgbaColor_1.default.fromRgba(toColor.R, toColor.G, toColor.B, toColor.A);
        }
        return resultColor;
    };
    return WebTheme;
}());
exports.default = WebTheme;


/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var StringUtilities_resx_1 = __webpack_require__(82);
var Locale_1 = __webpack_require__(55);
var oneKiloByte = 1024;
var oneMegaByte = 1048576;
var oneGigaByte = 1073741824;
var oneTeraByte = 1099511627776;
var radix = (1.2).toLocaleString(Locale_1.default.language).replace(/\d+/g, '');
// Regex to remove trailing zeroes (and optional '.').
var trimRegex = /\.?0+$/;
var DriveSpaceHelper;
(function (DriveSpaceHelper) {
    /**
     * Creates a display string for the given number in bytes.
     * This function produces a string value meant to mimic that displyed by file explorer.
     */
    function getDisplayString(value, options) {
        if (options === void 0) { options = {}; }
        if (typeof value !== 'number' || (options.ignoreZero && value === 0) || value < 0) {
            return '';
        }
        var trimDecimal = options.trimDecimal;
        // 1 byte
        if (value === 1) {
            return StringUtilities_resx_1.strings.fileSizeBytesSingular;
        }
        // 0 bytes, 2 bytes - 1023 bytes
        if (value < oneKiloByte) {
            return _format(StringUtilities_resx_1.strings.fileSizeBytesPlural, value, trimDecimal);
        }
        // 1KB - 999 KB
        if (value < 1000 * oneKiloByte) {
            return _format(StringUtilities_resx_1.strings.fileSizeKB, value / oneKiloByte, trimDecimal);
        }
        // 0.97 MB - 999 MB
        if (value < 1000 * oneMegaByte) {
            return _format(StringUtilities_resx_1.strings.fileSizeMB, value / oneMegaByte, trimDecimal);
        }
        // 0.97 GB - 999 GB
        if (value < 1000 * oneGigaByte) {
            return _format(StringUtilities_resx_1.strings.fileSizeGB, value / oneGigaByte, trimDecimal);
        }
        // 0.97 TB ->
        return _format(StringUtilities_resx_1.strings.fileSizeTB, value / oneTeraByte, trimDecimal);
    }
    DriveSpaceHelper.getDisplayString = getDisplayString;
    function _format(template, value, trimDecimal) {
        return template.replace('{0}', _trimNumber(value, trimDecimal));
    }
    function _trimNumber(value, trimDecimal) {
        // TODO: switch to toLocaleString for entire function when we update phantomJS
        // 12.00 -> 12
        if (value >= 100 || value === Math.floor(value)) {
            return value.toFixed(0);
        }
        // 45.678 -> 45.7
        // 4.5678 -> 4.57
        var str = value.toFixed(value >= 10 ? 1 : 2);
        // Since Number(num.toFixed) can trim decimals even when unwanted,
        // get the radix character and replace it manually
        return (trimDecimal ? str.replace(trimRegex, '') : str).replace('.', radix);
    }
})(DriveSpaceHelper || (DriveSpaceHelper = {}));
exports.default = DriveSpaceHelper;


/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Features_1 = __webpack_require__(50);
var ShortcutLink = { ODB: 563, ODC: null, Fallback: false };
var ShortcutUtilities;
(function (ShortcutUtilities) {
    'use strict';
    /**
     * Returns true if item is a Shortcut item, and false otherwise.
     * Checks the file extension for .url and .website
     */
    function isShortcutItem(item) {
        if (!item || !item.extension) {
            return false;
        }
        var fileType;
        if (item.extension[0] !== '.') {
            // Technically, extension should always start with a '.' but that's not actually the case
            fileType = item.extension;
        }
        else {
            fileType = item.extension.slice(1);
        }
        return isShortcutFileType(fileType);
    }
    ShortcutUtilities.isShortcutItem = isShortcutItem;
    /**
     * Identifies whether or not a given file type should be treated as a shortcut item.
     * Note that while a file extension has a preceding '.' character, a file type does not.
     */
    function isShortcutFileType(fileType) {
        // note: lnk files are not supported in odb's SP shortcuts API, we should not treat .lnk files as shortcut files.
        return fileType === 'url' || fileType === 'website';
    }
    ShortcutUtilities.isShortcutFileType = isShortcutFileType;
    function isShortcutEnabled() {
        return Features_1.default.isFeatureEnabled(ShortcutLink);
    }
    ShortcutUtilities.isShortcutEnabled = isShortcutEnabled;
    var ShortcutErrors;
    (function (ShortcutErrors) {
        /** Generic unknown error */
        ShortcutErrors[ShortcutErrors["UnknownError"] = 0] = "UnknownError";
        /** File already exists (error during new file creation). */
        ShortcutErrors[ShortcutErrors["NewFileCreationFileAlreadyExistsError"] = 1] = "NewFileCreationFileAlreadyExistsError";
        /** Filename contains an invalid character, such as # % * : < > ? / | */
        ShortcutErrors[ShortcutErrors["InvalidCharacterError"] = 2] = "InvalidCharacterError";
    })(ShortcutErrors = ShortcutUtilities.ShortcutErrors || (ShortcutUtilities.ShortcutErrors = {}));
})(ShortcutUtilities || (ShortcutUtilities = {}));
exports.default = ShortcutUtilities;


/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var TAG_BODY = '(?:[^"\'>]|"[^"]*"|\'[^\']*\')*';
/** Regex that matches all non-text in an HTML string. */
var NONTEXT_PATTERN = new RegExp('<(?:'
    + '!--(?:(?:-*[^->])*--+|-?)'
    + '|script\\b' + TAG_BODY + '>[\\s\\S]*?</script\\s*'
    + '|style\\b' + TAG_BODY + '>[\\s\\S]*?</style\\s*'
    + '|/?[a-z]' + TAG_BODY
    + ')>', 'gi');
/**
 * Contains utility functions to sanitize user input.
 * This should only be used for DISPLAYING user input, not for sending it to the server. The server itself
 * also needs to sanitize user input to avoid security risks.
 */
var Sanitize = (function () {
    function Sanitize() {
    }
    /**
     * Takes a string with HTML elements and returns only the text contents that the user would read.
     * This differs from .innerText in that it also removes the contents of script tags, and other similar differences.
     */
    Sanitize.getTextFromHtml = function (html) {
        var oldHtml = '';
        do {
            oldHtml = html;
            html = oldHtml.replace(NONTEXT_PATTERN, '');
        } while (oldHtml !== html);
        return html;
    };
    /**
     * Sanitizes the text by calling getTextFromHtml(), then decodes the HTML Entities, for example "&lt" to "<"
     */
    Sanitize.decodeHtmlEntities = function (text) {
        text = Sanitize.getTextFromHtml(text);
        var element = document.createElement('div');
        element.innerHTML = text;
        return element.textContent;
    };
    return Sanitize;
}());
exports.Sanitize = Sanitize;
exports.default = Sanitize;


/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <summary>
/// DOM utilities, including helpers for injecting styles, creating elements, toggling classes.
/// </summary>
var TEXT_SETTING_METHOD;
var Rectangle_1 = __webpack_require__(99);
var PlatformDetection_1 = __webpack_require__(40);
/** This is exported as a one-off to preserve backwards compatibility with the generated style loading. */
function loadStyles(rules) {
    DomUtils.loadStyles(rules);
}
exports.loadStyles = loadStyles;
var DomUtils = (function () {
    function DomUtils() {
    }
    DomUtils.hasClass = function (element, className) {
        if (element.classList) {
            return element.classList.contains(className);
        }
        else {
            var classList = element.className ? element.className.split(' ') : [];
            return classList.indexOf(className) !== -1;
        }
    };
    DomUtils.toggleClass = function (element, className, isEnabled) {
        if (element.classList) {
            if (isEnabled) {
                element.classList.add(className);
            }
            else {
                element.classList.remove(className);
            }
        }
        else {
            var classList = element.className ? element.className.split(' ') : [];
            var index = classList.indexOf(className);
            if (isEnabled) {
                if (index === -1) {
                    classList.push(className);
                }
            }
            else if (index > -1) {
                classList.splice(index, 1);
            }
            element.className = classList.join(' ');
        }
    };
    DomUtils.loadStyles = function (rules) {
        DomUtils._platform.isUnlimitedStyleSheetsSupported ? DomUtils.registerStyle(rules) : DomUtils.registerStyleIE(rules);
    };
    /**
     * Registers a set of style text. If it is registered too early, we will register it when the window.load event is fired.
     * @param {string} styleText Style to register.
     */
    DomUtils.registerStyle = function (styleText) {
        var head = document.getElementsByTagName('head')[0];
        var styleElement = document.createElement("style");
        styleElement.type = "text/css";
        styleElement.appendChild(document.createTextNode(styleText));
        head.appendChild(styleElement);
    };
    /**
     * Registers a set of style text, for IE 9 and below, which has a ~30 style element limit so we need to register slightly differently.
     * @param {string} styleText Style to register.
     */
    DomUtils.registerStyleIE = function (styleText) {
        var head = document.getElementsByTagName('head')[0];
        var lastStyleContent = !!DomUtils._lastStyleElement ? DomUtils._lastStyleElement['styleSheet']['cssText'] : "";
        if (!DomUtils._lastStyleElement || (lastStyleContent.length + DomUtils._styleText.length) > DomUtils.MAX_STYLE_CONTENT_SIZE) {
            DomUtils._lastStyleElement = document.createElement("style");
            DomUtils._lastStyleElement.type = "text/css";
            head.appendChild(DomUtils._lastStyleElement);
        }
        DomUtils._lastStyleElement['styleSheet']['cssText'] += styleText;
    };
    DomUtils.loadStylesheet = function (url) {
        var element = document.createElement('link');
        element.rel = "stylesheet";
        element.type = "text/css";
        element.href = url;
        document.head.appendChild(element);
    };
    DomUtils.setText = function (el, text) {
        if (TEXT_SETTING_METHOD === undefined) {
            TEXT_SETTING_METHOD = (DomUtils.ce('div').textContent !== void (0)) ? 'textContent' : 'innerText';
        }
        el[TEXT_SETTING_METHOD] = text;
    };
    DomUtils.ce = function (tagName, attributes, children) {
        var el = document.createElement(tagName);
        if (attributes) {
            var attributeKeys = Object.keys(attributes);
            for (var i = 0; i < attributeKeys.length; i++) {
                var attribute = attributeKeys[i];
                el.setAttribute(attribute, attributes[attribute]);
            }
        }
        if (children) {
            for (var j = 0; j < children.length; j++) {
                el.appendChild(children[j]);
            }
        }
        return el;
    };
    DomUtils.setShadowParent = function (element, parent) {
        element[DomUtils.SHADOW_PARENT_KEY] = parent;
    };
    DomUtils.getParent = function (element, allowShadow) {
        if (allowShadow === void 0) { allowShadow = true; }
        return (allowShadow && element[DomUtils.SHADOW_PARENT_KEY]) || element.parentElement;
    };
    DomUtils.ct = function (val) {
        return document.createTextNode(val);
    };
    DomUtils.createComment = function (value) {
        return document.createComment(value);
    };
    DomUtils.clickElement = function (element) {
        if (element.onclick) {
            element['onclick'](undefined);
        }
        else if (element.click) {
            element.click();
        }
    };
    DomUtils.insertAfter = function (newChild, sibling) {
        var parent = sibling.parentNode;
        var next = sibling.nextSibling;
        if (next) {
            // IE and Chrome do not like undefined for refChild
            parent.insertBefore(newChild, next);
        }
        else {
            parent.appendChild(newChild);
        }
    };
    DomUtils.getElementByTagAndPartialId = function (document, tagName, partialId) {
        var ret = [];
        var eles = document.getElementsByTagName(tagName);
        for (var index = 0; index < eles.length; index++) {
            if (eles[index].id.indexOf(partialId) >= 0) {
                ret.push(eles[index]);
            }
        }
        if (ret.length > 0) {
            return ret[0];
        }
        return null;
    };
    /**
     *   Finds an element with a given className starting at the provided element and walking up the DOM heirarchy.
     */
    DomUtils.findAncestor = function (element, className, allowShadow) {
        if (allowShadow === void 0) { allowShadow = true; }
        while (element && element !== document.body) {
            if (DomUtils.hasClass(element, className)) {
                return element;
            }
            element = DomUtils.getParent(element, allowShadow);
        }
        return null;
    };
    /**
     * Calculates the minimum Rectangle that includes this element. Coordinates are relative to the viewport and
     * take into account the element border, padding, and optionally the margins.
     */
    DomUtils.calculateRect = function (element, includeMargins) {
        var domRect = element.getBoundingClientRect();
        var marginLeft = 0;
        var marginRight = 0;
        var marginTop = 0;
        var marginBottom = 0;
        if (includeMargins) {
            var style = window.getComputedStyle(element);
            marginLeft = parseFloat(style.marginLeft);
            marginRight = parseFloat(style.marginRight);
            marginTop = parseFloat(style.marginTop);
            marginBottom = parseFloat(style.marginBottom);
        }
        return new Rectangle_1.default(domRect.left - marginLeft, domRect.top - marginTop, domRect.width + marginLeft + marginRight, domRect.height + marginTop + marginBottom);
    };
    /**
     * Calculates the minimum Rectangle that includes this element and all its descendant elements. Coordinates are relative to the viewport.
     */
    DomUtils.calculateSubtreeRect = function (element) {
        var result = null;
        var stack = [element];
        while (stack.length > 0) {
            element = stack.shift();
            var elementRect = DomUtils.calculateRect(element);
            // exclude zero width/height elements
            if ((elementRect.width > 0) && (elementRect.height > 0)) {
                if (result) {
                    result = result.union(elementRect);
                }
                else {
                    result = elementRect;
                }
            }
            for (var i = 0, len = element.children.length; i < len; i++) {
                stack.push(element.children[i]);
            }
        }
        if (!result) {
            result = new Rectangle_1.default();
        }
        return result;
    };
    /* todo: verify this works and use in OverlayHostViewModel
      Calculates the offset FROM the first element TO the second. The returned Rectangle's
      left/top/right/bottom gives the offset for each of the four sides that can be added
      to the first element's offsets to get to the second.

    public static calculateOffsetRect(from: HTMLElement, to: HTMLElement): Rectangle {
        var fromRect = from.getBoundingClientRect();
        var toRect = to.getBoundingClientRect();

        var left = toRect.left - fromRect.left;
        var top = toRect.top - fromRect.top;

        return new Rectangle(
            left,
            top,
            -(left - (toRect.right - fromRect.right)), // width
            -(top - (toRect.bottom - fromRect.bottom))); // height
    }*/
    /**
     * Appends the child node to the parent node at the given index, optionally only including
     * instances of a certain tag when determining index.
     *
     * @param parent - parent element
     * @param child - child element
     * @param index - index to add at, based ONLY on Element children (not text/comments).
     *   index < 0 adds at beginning and too large index adds at end.
     * @param tagName - only count elements with this tag name (UPPERCASE for HTML documents);
     *   element will be added immediately after the last tag with the given name
     */
    DomUtils.insertAtIndex = function (parent, child, index, tagName) {
        if (!parent || !child) {
            return;
        }
        index = index < 0 ? 0 : index;
        var sibling = parent.firstElementChild;
        var count = 0;
        while (count < index && !!sibling) {
            if (!tagName || tagName === sibling.tagName) {
                count++;
            }
            sibling = sibling.nextElementSibling;
        }
        if (sibling) {
            parent.insertBefore(child, sibling);
        }
        else {
            parent.appendChild(child);
        }
    };
    DomUtils.MAX_STYLE_CONTENT_SIZE = 10000;
    DomUtils.SHADOW_PARENT_KEY = '_OneDrive_shadowParent';
    DomUtils._platform = new PlatformDetection_1.default();
    DomUtils._lastStyleElement = null;
    DomUtils._styleText = "";
    return DomUtils;
}());
exports.default = DomUtils;


/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Signal_1 = __webpack_require__(33);
/**
 * Provides a mechanism for limiting the maximum number of promises going on at one time.
 */
var Semaphore = (function () {
    /**
     * @param concurrency How many promises to kick off before waiting for some to finish. Defaults to 1.
     */
    function Semaphore(concurrency) {
        this.concurrency = concurrency || 1;
        this._running = 0;
        this._queue = [];
        this._promiseComplete = this._promiseComplete.bind(this);
    }
    /**
     * Enqueue a callback that kicks off some asynchronous work.
     * @param callback - Does some async work and returns a promise to indicate completion.
     * @returns A promise of the same shape as the one returned by callback, so you can chain seamlessly.
     */
    Semaphore.prototype.enqueue = function (callback) {
        var result;
        if (this._running < this.concurrency) {
            this._running++;
            result = callback();
            result.done(this._promiseComplete, this._promiseComplete);
        }
        else {
            var item = {
                callback: callback,
                signal: null,
                canceled: false,
                result: null
            };
            item.signal = new Signal_1.default(function () {
                item.canceled = true;
                if (item.result) {
                    item.result.cancel();
                }
            });
            this._queue.push(item);
            result = item.signal.getPromise();
        }
        return result;
    };
    Semaphore.prototype._promiseComplete = function () {
        var _this = this;
        this._running--;
        if (this._running < this.concurrency && this._queue.length) {
            var item = this._queue.shift();
            while (item && item.canceled) {
                if (this._queue.length) {
                    item = this._queue.shift();
                }
                else {
                    item = null;
                }
            }
            if (item) {
                this._running++;
                item.result = item.callback();
                item.result.done((function (value) {
                    item.signal.complete(value);
                    _this._promiseComplete();
                }), (function (error) {
                    item.signal.error(error);
                    _this._promiseComplete();
                }));
            }
        }
    };
    return Semaphore;
}());
exports.default = Semaphore;


/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var IconSelector = __webpack_require__(83);
var Path = __webpack_require__(90);
var idSeed = 0;
var Html5FileUpload = (function () {
    function Html5FileUpload(params, dependencies) {
        var file = params.file;
        this._file = file;
        this.eTag = file.eTag;
        var fileName = file.fileName || file.name;
        var _a = Path.splitFileName(fileName), nameWithoutExtension = _a.name, extension = _a.extension;
        this.extension = extension;
        this.iconName = IconSelector.getIconNameFromExtension(extension);
        this.size = file.size;
        var name;
        // when upload images from ios camera roll,
        // all the images are named 'image.jpg'.
        // This part is trying to give unique name for the image.
        if (dependencies.platformDetection.isIOS && nameWithoutExtension === 'image' && this.iconName === 'photo') {
            var _b = file.lastModifiedDate, lastModified = _b === void 0 ? new Date() : _b;
            name = "IMG_" + this._getLastModifiedISO8601(lastModified) + "_" + ++idSeed + extension;
        }
        else {
            name = fileName;
        }
        if (file.lastModifiedDate) {
            this.lastModifiedDate = file.lastModifiedDate;
        }
        this.name = name;
    }
    Html5FileUpload.prototype.slice = function (startByte, endByte) {
        var file = this._file;
        var slice = file.slice || file.mozSlice || file.webkitSlice;
        return slice.call(file, startByte, endByte);
    };
    Html5FileUpload.prototype._getLastModifiedISO8601 = function (date) {
        return date.getUTCFullYear() + "-" + leftPad(date.getUTCMonth() + 1, 2) + "-" + leftPad(date.getUTCDate(), 2) + " " + leftPad(date.getUTCHours(), 2) + "-" + leftPad(date.getUTCMinutes(), 2) + "-" + leftPad(date.getSeconds(), 2);
    };
    return Html5FileUpload;
}());
exports.Html5FileUpload = Html5FileUpload;
function leftPad(value, length) {
    var result = "" + value;
    while (result.length < length) {
        result = "0" + result;
    }
    return result;
}
exports.default = Html5FileUpload;


/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Signal_1 = __webpack_require__(33);
/**
 * Retry allows you to invoke a callback a configurable number of times before giving up.
 */
function Retry(config) {
    "use strict";
    var attempts = 0;
    var promise;
    var signal = new Signal_1.default(function () {
        promise.cancel();
    });
    function onSuccess(value) {
        if (config.shouldRestart && config.shouldRestart()) {
            if (config.resetAttemptsOnRestart) {
                attempts = 0;
            }
            callCallback();
        }
        else {
            signal.complete(value);
        }
    }
    function onError(error) {
        if (config.adjustRetries) {
            config.retries = config.adjustRetries(error);
        }
        if (attempts < config.retries && config.canRetry(error)) {
            attempts++;
            if (config.beforeRetry) {
                config.beforeRetry();
            }
            config.async.setTimeout(callCallback, config.delay);
        }
        else {
            signal.error(error);
        }
    }
    function callCallback() {
        promise = config.callback();
        promise.done(onSuccess, onError);
    }
    callCallback();
    return signal.getPromise();
}
exports.default = Retry;


/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ToolboxOpenLayer_1 = __webpack_require__(198);
exports.Toolbox = ToolboxOpenLayer_1.ToolboxOpenLayer;


/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var sp_telemetry_1 = __webpack_require__(6);
var office_ui_fabric_react_1 = __webpack_require__(2);
var React = __webpack_require__(1);
var toolboxLoading_1 = __webpack_require__(131);
var ToolboxNone_1 = __webpack_require__(211);
undefined/*! require.include @microsoft/office-ui-fabric-react-bundle */;
undefined/*! require.include @microsoft/sp-core-library */;
undefined/*! require.include @microsoft/sp-lodash-subset */;
undefined/*! require.include @ms/odsp-utilities-bundle */;
undefined/*! require.include @ms/sp-a11y */;
undefined/*! require.include @ms/sp-telemetry */;
var TOOLBOX_FOCUS_IDENTIFIER = 'ToolboxFocus';
var ToolboxOpenLayer = (function (_super) {
    tslib_1.__extends(ToolboxOpenLayer, _super);
    function ToolboxOpenLayer(props) {
        var _this = _super.call(this, props) || this;
        _this._toolboxInitialized = false;
        _this.state = {
            open: false,
            toolbox: undefined
        };
        _this._controller = {
            openToolbox: _this.openToolbox,
            closeToolbox: _this.closeToolbox
        };
        props.instanceRef({
            openToolbox: _this.openToolbox,
            closeToolbox: _this.closeToolbox
        });
        return _this;
    }
    ToolboxOpenLayer.prototype.render = function () {
        if (!this.state.open) {
            return (React.createElement(ToolboxNone_1.ToolboxNone, { className: '', controller: this._controller }));
        }
        else if (!this.state.toolbox) {
            return (React.createElement(toolboxLoading_1.ToolboxLoading, { className: '', controller: this._controller, horizontalPosition: this.state.open.horizontalPosition, verticalPosition: this.state.open.verticalPosition, scrollableParent: this.props.scrollableParent, canvasElement: this.props.canvasElement }));
        }
        else {
            return (React.createElement(this.state.toolbox, tslib_1.__assign({}, this.props, { controller: this._controller, position: this.state.open.position, verticalPosition: this.state.open.verticalPosition, horizontalPosition: this.state.open.horizontalPosition })));
        }
    };
    ToolboxOpenLayer.prototype.openToolbox = function (position, verticalPosition, horizontalPosition) {
        this.props.a11yManager.saveActiveElementAs(TOOLBOX_FOCUS_IDENTIFIER);
        this.setState({
            open: {
                position: position,
                verticalPosition: verticalPosition,
                horizontalPosition: horizontalPosition
            }
        });
        if (!this._toolboxInitialized) {
            this._toolboxInitialized = true;
            this._loadToolbox();
        }
    };
    ToolboxOpenLayer.prototype.closeToolbox = function (isKeyboard) {
        var _this = this;
        if (isKeyboard === void 0) { isKeyboard = false; }
        if (this.props.onCloseToolbox) {
            this.props.onCloseToolbox();
        }
        this.setState({
            open: false
        }, (function () {
            if (isKeyboard) {
                _this.props.a11yManager.restoreFocus(TOOLBOX_FOCUS_IDENTIFIER);
                _this.props.a11yManager.forgetSavedActiveElement(TOOLBOX_FOCUS_IDENTIFIER);
            }
        }));
    };
    ToolboxOpenLayer.prototype._loadToolbox = function () {
        var _this = this;
        var monitor = new sp_telemetry_1._QosMonitor('ToolboxLoad');
        __webpack_require__.e/* require.ensure */(1).then((function (require) {
            var toolbox = __webpack_require__(132).ToolboxItemsLayer;
            setTimeout((function () { return _this.setState({ toolbox: toolbox }); }));
            monitor.writeSuccess();
        }).bind(null, __webpack_require__)).catch((function (error) { return monitor.writeUnexpectedFailure('Failure', error); }));
    };
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], ToolboxOpenLayer.prototype, "openToolbox", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], ToolboxOpenLayer.prototype, "closeToolbox", null);
    return ToolboxOpenLayer;
}(React.PureComponent));
exports.ToolboxOpenLayer = ToolboxOpenLayer;


/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var toolboxAnimation_1 = __webpack_require__(46);
var ToolboxLoading_1 = __webpack_require__(203);
exports.ToolboxLoadingAnimationLayer = toolboxAnimation_1.animation(ToolboxLoading_1.ToolboxLoading, 1 );


/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var sp_core_library_1 = __webpack_require__(5);
var office_ui_fabric_react_1 = __webpack_require__(2);
var React = __webpack_require__(1);
var animation_module_scss_1 = __webpack_require__(103);
var currentMode = new WeakMap();
function animation(ToolboxComponent, 
    mode) {
    return (function (_super) {
        tslib_1.__extends(AnimationWrapper, _super);
        function AnimationWrapper() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        AnimationWrapper.prototype.componentDidMount = function () {
            currentMode.set(this.props.controller, mode);
        };
        AnimationWrapper.prototype.render = function () {
            return (React.createElement(ToolboxComponent, tslib_1.__assign({}, this.props, { className: office_ui_fabric_react_1.css(this.props.className, this._animationClassName) })));
        };
        Object.defineProperty(AnimationWrapper.prototype, "_animationClassName", {
            get: function () {
                if (sp_core_library_1._SPKillSwitch.isActivated(sp_core_library_1.Guid.parse('37b0e0b8-d337-4f87-8b4b-7c0ba01b0f65'), '08/24/2017', 'EnabledAnimationForToolbox')) {
                    return '';
                }
                var previousMode = currentMode.get(this.props.controller) || 0 ;
                var nextMode = mode;
                if (previousMode === 0  && nextMode === 1 ) {
                    return animation_module_scss_1.default.fromNoneToSmall;
                }
                else if (previousMode === 0  && nextMode === 3 ) {
                    return animation_module_scss_1.default.fromNoneToSmall;
                }
                else if (previousMode === 3  && nextMode === 4 ) {
                    return animation_module_scss_1.default.fromSmallToLarge;
                }
                else if (previousMode === 4  && nextMode === 3 ) {
                    return animation_module_scss_1.default.fromLargeToSmall;
                }
                else {
                    return '';
                }
            },
            enumerable: true,
            configurable: true
        });
        return AnimationWrapper;
    }(React.PureComponent));
}
exports.animation = animation;


/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(202);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, "@-webkit-keyframes fromNoneToSmallUpIn_143d0bd2{0%{height:30px}to{height:330px}}@keyframes fromNoneToSmallUpIn_143d0bd2{0%{height:30px}to{height:330px}}@-webkit-keyframes fromNoneToSmallDownInLTR_143d0bd2{0%{height:30px;-webkit-transform:translate(-50%,300px);transform:translate(-50%,300px)}to{height:330px;-webkit-transform:translate(-50%);transform:translate(-50%)}}@keyframes fromNoneToSmallDownInLTR_143d0bd2{0%{height:30px;-webkit-transform:translate(-50%,300px);transform:translate(-50%,300px)}to{height:330px;-webkit-transform:translate(-50%);transform:translate(-50%)}}@-webkit-keyframes fromNoneToSmallDownInRTL_143d0bd2{0%{height:30px;-webkit-transform:translate(50%,300px);transform:translate(50%,300px)}to{height:330px;-webkit-transform:translate(50%);transform:translate(50%)}}@keyframes fromNoneToSmallDownInRTL_143d0bd2{0%{height:30px;-webkit-transform:translate(50%,300px);transform:translate(50%,300px)}to{height:330px;-webkit-transform:translate(50%);transform:translate(50%)}}@-webkit-keyframes fromSmallToLarge_143d0bd2{0%{-webkit-transform:scale(.2);transform:scale(.2)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes fromSmallToLarge_143d0bd2{0%{-webkit-transform:scale(.2);transform:scale(.2)}to{-webkit-transform:scale(1);transform:scale(1)}}@-webkit-keyframes fromLargeToSmall_143d0bd2{0%{width:1024px;height:712px}to{width:292px;height:330px}}@keyframes fromLargeToSmall_143d0bd2{0%{width:1024px;height:712px}to{width:292px;height:330px}}.fromNoneToSmall_143d0bd2.upIn_143d0bd2{-webkit-animation:fromNoneToSmallUpIn_143d0bd2 .3s;animation:fromNoneToSmallUpIn_143d0bd2 .3s}[dir=ltr] .fromNoneToSmall_143d0bd2.downIn_143d0bd2{-webkit-animation:fromNoneToSmallDownInLTR_143d0bd2 .3s;animation:fromNoneToSmallDownInLTR_143d0bd2 .3s}[dir=rtl] .fromNoneToSmall_143d0bd2.downIn_143d0bd2{-webkit-animation:fromNoneToSmallDownInRTL_143d0bd2 .3s;animation:fromNoneToSmallDownInRTL_143d0bd2 .3s}.fromSmallToLarge_143d0bd2{-webkit-animation:fromSmallToLarge_143d0bd2 .3s;animation:fromSmallToLarge_143d0bd2 .3s;overflow:hidden}.fromLargeToSmall_143d0bd2{-webkit-animation:fromLargeToSmall_143d0bd2 .3s;animation:fromLargeToSmall_143d0bd2 .3s}", ""]);

// exports


/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var office_ui_fabric_react_1 = __webpack_require__(2);
var React = __webpack_require__(1);
var toolboxCallout_1 = __webpack_require__(127);
var ToolboxLoading_module_scss_1 = __webpack_require__(208);
function ToolboxLoading(props) {
    return (React.createElement(toolboxCallout_1.ToolboxCallout, { className: props.className, onDismiss: props.controller.closeToolbox, horizontalPosition: props.horizontalPosition, verticalPosition: props.verticalPosition, scrollableParent: props.scrollableParent, canvasElement: props.canvasElement },
        React.createElement(office_ui_fabric_react_1.Spinner, { type: office_ui_fabric_react_1.SpinnerType.large, className: ToolboxLoading_module_scss_1.default.spinner })));
}
exports.ToolboxLoading = ToolboxLoading;


/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var office_ui_fabric_react_1 = __webpack_require__(2);
var React = __webpack_require__(1);
var sp_a11y_1 = __webpack_require__(11);
var toolboxAnimation_1 = __webpack_require__(46);
var ToolboxCallout_module_scss_1 = __webpack_require__(205);
var toolboxHeight = 330;
var hintOffset = 28;
var toolboxTotalOffset = toolboxHeight + hintOffset;
var ToolboxCallout = (function (_super) {
    tslib_1.__extends(ToolboxCallout, _super);
    function ToolboxCallout(props) {
        var _this = _super.call(this, props) || this;
        _this._calloutId = "toolbox-callout-" + ToolboxCallout._instanceId++;
        return _this;
    }
    ToolboxCallout.prototype.componentDidMount = function () {
        document.body.addEventListener('click', this._handleClick);
    };
    ToolboxCallout.prototype.componentWillUnmount = function () {
        document.body.removeEventListener('click', this._handleClick);
    };
    ToolboxCallout.prototype.render = function () {
        var renderPosition = this._renderPosition;
        var style = {
            top: renderPosition === 'down' ? this.props.verticalPosition : this.props.verticalPosition - toolboxTotalOffset,
            left: office_ui_fabric_react_1.getRTL() ? 0 : this._horizontalPositionStyle,
            right: office_ui_fabric_react_1.getRTL() ? this._horizontalPositionStyle : 0
        };
        var classNames = office_ui_fabric_react_1.css(ToolboxCallout_module_scss_1.default.callout, this.props.className, renderPosition === 'down' ? toolboxAnimation_1.animationStyles.upIn : toolboxAnimation_1.animationStyles.downIn);
        return (React.createElement(office_ui_fabric_react_1.FocusTrapZone, { isClickableOutsideFocusTrap: true, forceFocusInsideTrap: false, ignoreExternalFocusing: true, "data-sp-a11y-skipkeys": 'all', className: ToolboxCallout_module_scss_1.default.container },
            React.createElement("div", { id: this._calloutId, role: 'toolbar', className: classNames, onKeyDown: this._handleKeyDown, style: style }, this.props.children)));
    };
    ToolboxCallout.prototype._handleClick = function (event) {
        var element = event.target;
        if (this.props.onDismiss &&
            this._isElement(element) &&
            !this._isInsideCallout(element)) {
            this.props.onDismiss(false );
        }
    };
    ToolboxCallout.prototype._handleKeyDown = function (event) {
        if (this.props.onDismiss && sp_a11y_1.Keyboard.isEscape(event)) {
            this.props.onDismiss(true );
        }
    };
    ToolboxCallout.prototype._isInsideCallout = function (element) {
        while (element.tagName !== 'BODY' &&
            element.parentElement) {
            if (element.id === this._calloutId) {
                return true;
            }
            element = element.parentElement;
        }
        return false;
    };
    ToolboxCallout.prototype._isElement = function (element) {
        return Boolean(element &&
            element.tagName &&
            element.parentElement);
    };
    Object.defineProperty(ToolboxCallout.prototype, "_renderPosition", {
        get: function () {
            var _a = this.props.scrollableParent.getBoundingClientRect(), top = _a.top, bottom = _a.bottom;
            var canvasTop = this.props.canvasElement.getBoundingClientRect().top;
            if ((this.props.verticalPosition + toolboxTotalOffset + canvasTop > bottom) &&
                (this.props.verticalPosition + canvasTop - toolboxHeight > top) 
            ) {
                return 'up';
            }
            else {
                return 'down';
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToolboxCallout.prototype, "_horizontalPositionStyle", {
        get: function () {
            if (this.props.horizontalPosition > 0) {
                return this.props.horizontalPosition + "px";
            }
            else {
                return 'calc(50% - ' + (this.props.horizontalPosition) + 'px)';
            }
        },
        enumerable: true,
        configurable: true
    });
    ToolboxCallout._instanceId = 0;
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], ToolboxCallout.prototype, "_handleClick", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], ToolboxCallout.prototype, "_handleKeyDown", null);
    return ToolboxCallout;
}(React.PureComponent));
exports.ToolboxCallout = ToolboxCallout;


/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(206);
var styles = {
    container: 'container_8692a1b8',
    callout: 'callout_8692a1b8',
};
exports.default = styles;


/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(207);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".container_8692a1b8{position:absolute;top:0;width:100%;max-width:1280px}[dir=ltr] .container_8692a1b8{left:0}[dir=rtl] .container_8692a1b8{right:0}.callout_8692a1b8{background:\"[theme:white, default: #ffffff]\";border:1px solid #d6d6d6;box-shadow:0 0 8px 0 rgba(0,0,0,.2);box-sizing:border-box;height:330px;margin-top:26px;position:absolute;width:292px;z-index:10;margin-left:0;margin-right:0}[dir=ltr] .callout_8692a1b8{left:0}[dir=rtl] .callout_8692a1b8{right:0}[dir=ltr] .callout_8692a1b8{-webkit-transform:translateX(-50%);transform:translateX(-50%)}[dir=rtl] .callout_8692a1b8{-webkit-transform:translateX(50%);transform:translateX(50%)}.callout_8692a1b8 .ms-Spinner-container{margin-top:151px}[dir=ltr] .callout_8692a1b8 .ms-Spinner-container{margin-left:132px}[dir=rtl] .callout_8692a1b8 .ms-Spinner-container{margin-right:132px}", ""]);

// exports


/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(209);
var styles = {
    spinner: 'spinner_4e1ce158',
};
exports.default = styles;


/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(210);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".spinner_4e1ce158{margin:0;position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}", ""]);

// exports


/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ToolboxNoneAnimationLayer_1 = __webpack_require__(212);
exports.ToolboxNone = ToolboxNoneAnimationLayer_1.ToolboxNoneAnimationLayer;


/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var toolboxAnimation_1 = __webpack_require__(46);
var ToolboxNone_1 = __webpack_require__(213);
exports.ToolboxNoneAnimationLayer = toolboxAnimation_1.animation(ToolboxNone_1.ToolboxNone, 0 );


/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var toolboxSearch_1 = __webpack_require__(128);
function ToolboxNone(props) {
    toolboxSearch_1.ToolboxSearch.setQuery(props.controller, '');
    return (React.createElement("div", { className: props.className }));
}
exports.ToolboxNone = ToolboxNone;


/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_telemetry_1 = __webpack_require__(6);
var logSource = sp_telemetry_1._LogSource.create('Toolbox');
var queryMap = new WeakMap();
function setQuery(context, query) {
    queryMap.set(context, query);
}
exports.setQuery = setQuery;
function getQuery(context) {
    return queryMap.get(context) || '';
}
exports.getQuery = getQuery;
function bySearch(query) {
    try {
        var queryRegex_1 = new RegExp(query.trim(), 'i');
        return function (item) { return (item.displayName.search(queryRegex_1) >= 0 ||
            item.description.search(queryRegex_1) >= 0); };
    }
    catch (error) {
        sp_telemetry_1._TraceLogger.logError(logSource, error);
        return function () { return false; };
    }
}
function filterItems(items, query, source) {
    var result = items.filter(bySearch(query));
    sp_telemetry_1._EngagementLogger.logEventWithLogEntry(new sp_telemetry_1._LogEntry(logSource.id, 'SearchResult', sp_telemetry_1._LogType.Event, {
        source: source,
        queryLength: query.trim().length.toString(),
        itemCount: result.length.toString()
    }));
    return result;
}
exports.filterItems = filterItems;


/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var CanvasControlType;
(function (CanvasControlType) {
    CanvasControlType[CanvasControlType["WebPartZone"] = 3] = "WebPartZone";
    CanvasControlType[CanvasControlType["RTE"] = 4] = "RTE";
    CanvasControlType[CanvasControlType["TwoColumns"] = 5] = "TwoColumns";
    CanvasControlType[CanvasControlType["ThreeColumns"] = 6] = "ThreeColumns";
    CanvasControlType[CanvasControlType["OneThirdColumnRight"] = 7] = "OneThirdColumnRight";
    CanvasControlType[CanvasControlType["OneThirdColumnLeft"] = 8] = "OneThirdColumnLeft";
    CanvasControlType[CanvasControlType["FullWidth"] = 9] = "FullWidth";
    CanvasControlType[CanvasControlType["OneColumn"] = 10] = "OneColumn";
})(CanvasControlType = exports.CanvasControlType || (exports.CanvasControlType = {}));


/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function mapToolboxItem(itemShim) {
    var id = itemShim.key ? itemShim.key.toString() : Math.random().toString();
    var item = {
        id: id,
        description: itemShim.description,
        groupId: itemShim.groupId,
        displayName: itemShim.displayName,
        imageSrc: itemShim.imageSrc,
        msIconName: itemShim.msIconName
    };
    return {
        id: id,
        item: item,
        control: itemShim.itemProps,
        manifest: itemShim.itemProps.webPartManifest 
    };
}
exports.mapToolboxItem = mapToolboxItem;


/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var office_ui_fabric_react_1 = __webpack_require__(2);
var React = __webpack_require__(1);
var sp_core_library_1 = __webpack_require__(5);
var LessText_1 = __webpack_require__(218);
var LessText_module_scss_1 = __webpack_require__(106);
var DelayLessText = (function (_super) {
    tslib_1.__extends(DelayLessText, _super);
    function DelayLessText(props) {
        var _this = _super.call(this, props) || this;
        if (!_this._isDelayLessTextKillSwitchActivated) {
            _this.state = {
                render: false
            };
            _this._timeout = _this._deferRender();
        }
        return _this;
    }
    DelayLessText.prototype.componentWillUnmount = function () {
        if (!this._isDelayLessTextKillSwitchActivated) {
            clearTimeout(this._timeout);
        }
    };
    DelayLessText.prototype.render = function () {
        if (this._isDelayLessTextKillSwitchActivated || this.state.render) {
            return (React.createElement(LessText_1.LessText, tslib_1.__assign({}, this.props)));
        }
        else {
            return (React.createElement("span", { "data-automation-id": 'less-text', className: office_ui_fabric_react_1.css(LessText_module_scss_1.default.lessText, this.props.className) }, this.props.text));
        }
    };
    DelayLessText.prototype._deferRender = function () {
        var _this = this;
        return setTimeout((function () {
            _this.setState({
                render: true
            });
        }), 300);
    };
    Object.defineProperty(DelayLessText.prototype, "_isDelayLessTextKillSwitchActivated", {
        get: function () {
            return sp_core_library_1._SPKillSwitch.isActivated(sp_core_library_1.Guid.parse('e13b0a81-7323-4cca-b94d-1fbf364018e0'), '10/27/2017', 'DelayLessText');
        },
        enumerable: true,
        configurable: true
    });
    return DelayLessText;
}(React.PureComponent));
exports.DelayLessText = DelayLessText;


/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var office_ui_fabric_react_1 = __webpack_require__(2);
var React = __webpack_require__(1);
var LessText_module_scss_1 = __webpack_require__(106);
var LessText = (function (_super) {
    tslib_1.__extends(LessText, _super);
    function LessText(props) {
        var _this = _super.call(this, props) || this;
        _this._async = new office_ui_fabric_react_1.Async(_this);
        _this._eventGroup = new office_ui_fabric_react_1.EventGroup(_this);
        _this._handleWindowResize = _this._async.debounce(_this._handleWindowResizeCore, _this._delay);
        return _this;
    }
    LessText.prototype.componentDidMount = function () {
        this._async.setTimeout(this.update, 0);
        this._eventGroup.on(window, 'resize', this._handleWindowResize);
    };
    LessText.prototype.componentWillReceiveProps = function (nextProps) {
        if (this.props.resizeDelayInMilliseconds !== nextProps.resizeDelayInMilliseconds) {
            this._handleWindowResize = this._async.debounce(this._handleWindowResizeCore, this._delay);
        }
    };
    LessText.prototype.componentDidUpdate = function () {
        this.update();
    };
    LessText.prototype.componentWillUnmount = function () {
        this._eventGroup.off(window, 'resize', this._handleWindowResize);
        this._eventGroup.dispose();
        this._async.dispose();
    };
    LessText.prototype.render = function () {
        var _this = this;
        return (React.createElement("div", { "data-automation-id": 'less-text', ref: function (ref) { return _this._textContainerElement = ref; }, title: this.props.showTitle ? this.props.text : undefined, className: office_ui_fabric_react_1.css(LessText_module_scss_1.default.lessText, this.props.className) }, this.props.text));
    };
    LessText.prototype.update = function () {
        if (this._textContainerElement) {
            this._async.requestAnimationFrame(this._truncateLines);
        }
    };
    Object.defineProperty(LessText.prototype, "_separator", {
        get: function () {
            return this.props.separator || ''; 
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LessText.prototype, "_omission", {
        get: function () {
            return this.props.omission || '…';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LessText.prototype, "_delay", {
        get: function () {
            return this.props.resizeDelayInMilliseconds || 50;
        },
        enumerable: true,
        configurable: true
    });
    LessText.prototype._handleWindowResizeCore = function () {
        this.update();
    };
    Object.defineProperty(LessText.prototype, "_contentHeight", {
        get: function () {
            if (this._textContainerElement) {
                var contentStyles = window.getComputedStyle(this._textContainerElement);
                var padding = 0;
                if (contentStyles && contentStyles.paddingTop && contentStyles.paddingBottom) {
                    padding = parseFloat(contentStyles.paddingTop) + parseFloat(contentStyles.paddingBottom);
                }
                return this._textContainerElement.offsetHeight - padding;
            }
            return 0;
        },
        enumerable: true,
        configurable: true
    });
    LessText.prototype._truncateLines = function () {
        if (!this._textContainerElement) {
            return;
        }
        var text = this.props.text || '';
        this._textContainerElement.textContent = text;
        var lines = Math.round(this.props.lines);
        var lineHeight = window
            .getComputedStyle(this._textContainerElement, undefined)
            .getPropertyValue('line-height');
        var maxHeight = lines * parseInt(lineHeight, 10);
        var currHeight = this._contentHeight;
        this._textArray = text.split(this._separator);
        var shouldTrim = currHeight > maxHeight && lines > 0;
        if (shouldTrim) {
            var trimmedLength = this._trimAndCalculateLength(currHeight, maxHeight);
            this._applyTextNumber(trimmedLength);
        }
        if (this.props.onAfterTruncate) {
            this.props.onAfterTruncate(shouldTrim);
        }
    };
    LessText.prototype._trimAndCalculateLength = function (currentValue, maxValue) {
        var allowedTextNumber = this._textArray.length;
        if (!this._textContainerElement) {
            return allowedTextNumber;
        }
        var minTextNumber = 1, maxTextNumber = allowedTextNumber;
        do {
            var currentTextNumber = Math.floor((minTextNumber + maxTextNumber + 1) / 2);
            this._applyTextNumber(currentTextNumber);
            currentValue = this._contentHeight;
            if (currentValue > maxValue) {
                maxTextNumber = currentTextNumber - 1;
            }
            else {
                minTextNumber = currentTextNumber;
            }
        } while (minTextNumber < maxTextNumber);
        return minTextNumber;
    };
    LessText.prototype._applyTextNumber = function (newTextNumber) {
        var newText = this._textArray.slice(0, newTextNumber);
        var newTextJoined = newText.join(this._separator);
        if (this._textContainerElement) {
            this._textContainerElement.textContent = this._textContainerElement.textContent === newTextJoined
                ? newTextJoined
                : newTextJoined + this._omission;
        }
    };
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], LessText.prototype, "update", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], LessText.prototype, "_truncateLines", null);
    return LessText;
}(React.PureComponent));
exports.LessText = LessText;


/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(220);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".lessText_e2bbc3d7{word-wrap:break-word!important}", ""]);

// exports


/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(222);
var styles = {
    item: 'item_9d0ee38c',
    flexBox: 'flexBox_9d0ee38c',
    scalableImageIcon: 'scalableImageIcon_9d0ee38c',
    fixedImageIcon: 'fixedImageIcon_9d0ee38c',
    icon: 'icon_9d0ee38c',
    title: 'title_9d0ee38c',
};
exports.default = styles;


/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(223);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".item_9d0ee38c{margin:0;padding:0;border:1px solid transparent;background-clip:padding-box}.item_9d0ee38c:focus,.item_9d0ee38c:hover{background-color:\"[theme:themeLighter, default:#deecf9]\"}.item_9d0ee38c:focus *,.item_9d0ee38c:hover *{color:\"[theme:themeDarkAlt, default:#106ebe]\"}@media screen and (-ms-high-contrast:active){.item_9d0ee38c:focus,.item_9d0ee38c:hover{color:#1aebff}}@media screen and (-ms-high-contrast:black-on-white){.item_9d0ee38c:focus,.item_9d0ee38c:hover{color:#37006e}}.flexBox_9d0ee38c{box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.flexBox_9d0ee38c,.scalableImageIcon_9d0ee38c .ms-Image{width:100%;height:100%}.fixedImageIcon_9d0ee38c .ms-Image-image{max-width:40px}.icon_9d0ee38c{color:\"[theme:neutralPrimary, default: #333333]\"}.title_9d0ee38c{max-width:100%;color:\"[theme:neutralSecondary, default: #666666]\";font-weight:400;line-height:17px}", ""]);

// exports


/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ToolboxFullBleed_1 = __webpack_require__(225);
exports.ToolboxFullBleed = ToolboxFullBleed_1.ToolboxFullBleed;


/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var office_ui_fabric_react_1 = __webpack_require__(2);
var React = __webpack_require__(1);
var ToolboxItemFullBleed_1 = __webpack_require__(226);
var toolboxModel_1 = __webpack_require__(126);
var ToolboxFullBleed_module_scss_1 = __webpack_require__(230);
var ToolboxFullBleedStrings_resx_1 = __webpack_require__(233);
var ToolboxFullBleed = (function (_super) {
    tslib_1.__extends(ToolboxFullBleed, _super);
    function ToolboxFullBleed(props) {
        var _this = _super.call(this, props) || this;
        _this.state = _this._getState(props.toolboxItems);
        return _this;
    }
    ToolboxFullBleed.prototype.componentWillReceiveProps = function (nextProps) {
        if (nextProps.toolboxItems !== this.props.toolboxItems) {
            this.setState(this._getState(nextProps.toolboxItems));
        }
    };
    ToolboxFullBleed.prototype.render = function () {
        var _this = this;
        var fullBleedToolboxItems = this.state.items
            .map((function (item) { return (React.createElement(ToolboxItemFullBleed_1.ToolboxItemFullBleed, { key: item.id, item: item, onClick: _this._handleClickItem })); }));
        return (React.createElement("section", { className: ToolboxFullBleed_module_scss_1.default.toolboxFullBleed, "aria-label": ToolboxFullBleedStrings_resx_1.default.ToolboxGroupNameFullWidth, role: 'group' },
            React.createElement("header", { className: ToolboxFullBleed_module_scss_1.default.header }, ToolboxFullBleedStrings_resx_1.default.ToolboxGroupNameFullWidth),
            React.createElement(office_ui_fabric_react_1.FocusZone, { direction: office_ui_fabric_react_1.FocusZoneDirection.horizontal, isCircularNavigation: true }, fullBleedToolboxItems)));
    };
    ToolboxFullBleed.prototype._getState = function (itemShims) {
        var itemMaps = itemShims.map(toolboxModel_1.mapToolboxItem);
        return {
            items: itemMaps.map((function (map) { return map.item; })),
            mapToolboxItemIdToCanvasControl: new Map(itemMaps.map((function (map) { return [map.id, map.control]; })))
        };
    };
    ToolboxFullBleed.prototype._handleClickItem = function (toolboxItemId) {
        var control = this.state.mapToolboxItemIdToCanvasControl.get(toolboxItemId);
        if (!control) {
            return;
        }
        this.props.clickItem(tslib_1.__assign({}, control, { position: this.props.controlPosition }));
    };
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], ToolboxFullBleed.prototype, "_handleClickItem", null);
    return ToolboxFullBleed;
}(React.PureComponent));
exports.ToolboxFullBleed = ToolboxFullBleed;


/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var ToolboxItemBase_1 = __webpack_require__(129);
var ToolboxItemFullBleed_module_scss_1 = __webpack_require__(227);
function ToolboxItemFullBleed(props) {
    return (React.createElement(ToolboxItemBase_1.ToolboxItemBase, tslib_1.__assign({}, props, { titleLineCount: 2, itemClassName: ToolboxItemFullBleed_module_scss_1.default.item, iconClassName: ToolboxItemFullBleed_module_scss_1.default.icon, titleClassName: ToolboxItemFullBleed_module_scss_1.default.title })));
}
exports.ToolboxItemFullBleed = ToolboxItemFullBleed;


/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(228);
var styles = {
    item: 'item_4a9e5f4c',
    icon: 'icon_4a9e5f4c',
    title: 'title_4a9e5f4c',
};
exports.default = styles;


/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(229);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".item_4a9e5f4c{width:120px;height:88px}.icon_4a9e5f4c{font-size:28px;line-height:48px}.title_4a9e5f4c{font-size:13px}", ""]);

// exports


/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(231);
var styles = {
    toolboxFullBleed: 'toolboxFullBleed_dd9f5143',
    header: 'header_dd9f5143',
};
exports.default = styles;


/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(232);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".toolboxFullBleed_dd9f5143{text-align:center;margin:100px auto;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.header_dd9f5143{color:#333;font-weight:600;letter-spacing:1px;line-height:32px;padding:0 12px}", ""]);

// exports


/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var strings = ( false)
    ? require('../resx-strings/en-us.json')
    : __webpack_require__(13);
exports.default = strings['_6tOZemhV08aF1IgNDNeiwQ'];


/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var office_ui_fabric_react_bundle_1 = __webpack_require__(23);
var sp_dragzone_1 = __webpack_require__(235);
var sp_telemetry_1 = __webpack_require__(6);
var CanvasDragIcon_1 = __webpack_require__(241);
var CanvasDragZoneConstants_1 = __webpack_require__(27);
var CanvasStrings_resx_1 = __webpack_require__(10);
var CanvasDragZone_module_scss_1 = __webpack_require__(109);
var CanvasDragZone = (function (_super) {
    tslib_1.__extends(CanvasDragZone, _super);
    function CanvasDragZone(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this._dragIcon = new CanvasDragIcon_1.default();
        return _this;
    }
    CanvasDragZone._getZoneFromDragZonePosition = function (position, layout) {
        var zoneIndex = position[2];
        var zone = layout.zones && layout.zones.length > zoneIndex && layout.zones[zoneIndex];
        if (!zone) {
            throw new Error("ZoneNotFound, zoneIndex: " + zoneIndex);
        }
        return zone;
    };
    CanvasDragZone._getSectionFromDragZonePosition = function (position, zone) {
        var sectionIndex = position[1];
        var section = zone.sections && zone.sections.length > sectionIndex &&
            zone.sections[sectionIndex];
        if (!section) {
            throw new Error('SectionNotFound, sectionIndex: ${sectionIndex}');
        }
        return section;
    };
    CanvasDragZone._droppedOnTheSamePosition = function (oldPosition, newPosition) {
        var oldControlIndex = oldPosition[0], oldSectionIndex = oldPosition[1], oldZoneIndex = oldPosition[2];
        var newControlIndex = newPosition[0], newSectionIndex = newPosition[1], newZoneIndex = newPosition[2];
        return oldZoneIndex === newZoneIndex &&
            oldSectionIndex === newSectionIndex &&
            (oldControlIndex === newControlIndex - 1 ||
                oldControlIndex === newControlIndex);
    };
    CanvasDragZone._isValidWebpartPosition = function (position) {
        return position && position.length === 3;
    };
    CanvasDragZone._isValidZonePosition = function (position) {
        return position && position.length === 1;
    };
    CanvasDragZone.prototype.render = function () {
        var dragZoneStrings = {
            handleTitle: CanvasStrings_resx_1.default.DragZoneHandleTitle,
            moveStarted: CanvasStrings_resx_1.default.DragZoneMoveStarted,
            moveComplete: CanvasStrings_resx_1.default.DragZoneMoveComplete,
            moveCancelled: CanvasStrings_resx_1.default.DragZoneMoveCancelled,
            moveNotAllowed: CanvasStrings_resx_1.default.DragZoneMoveNotAllowedAriaLabel,
            moveInsideLevel: [
                CanvasStrings_resx_1.default.DragZoneMoveInsideLevelControl,
                CanvasStrings_resx_1.default.DragZoneMoveInsideLevelSection,
                CanvasStrings_resx_1.default.DragZoneMoveInsideLevelZone
            ]
        };
        var sectionDragZoneStrings = {
            handleTitle: CanvasStrings_resx_1.default.DragZoneHandleTitle,
            moveStarted: CanvasStrings_resx_1.default.DragZoneMoveStarted,
            moveComplete: CanvasStrings_resx_1.default.DragZoneMoveCompleteZone,
            moveCancelled: CanvasStrings_resx_1.default.DragZoneMoveCancelled,
            moveNotAllowed: CanvasStrings_resx_1.default.DragZoneMoveNotAllowedAriaLabel,
            moveInsideLevel: [
                CanvasStrings_resx_1.default.DragZoneMoveInsideLevelControl
            ]
        };
        var dragZoneProps = {
            treeLevelTagsBottomUp: [CanvasDragZoneConstants_1.default.controlZoneDragTag,
                CanvasDragZoneConstants_1.default.sectionDragTag,
                CanvasDragZoneConstants_1.default.zoneDragTag],
            dropPositionOffsetBottomPx: CanvasDragZoneConstants_1.default.LINE_OFFSET_BOTTOM,
            dropPositionOffsetTopPx: CanvasDragZoneConstants_1.default.LINE_OFFSET_TOP,
            onMoved: this._onWebpartMoved,
            onMoveStart: this._onWebpartMoveStart,
            canDropOnEmptyParent: true,
            dragHandleTag: CanvasDragZoneConstants_1.default.webpartDragHandleTag,
            isEnabled: this.props.isEnabled,
            icon: this._dragIcon.HTMLIcon,
            dragZoneStrings: dragZoneStrings,
            disallowedTag: CanvasDragZoneConstants_1.default.fullWidthSectionTag,
            disallowedClassName: CanvasDragZone_module_scss_1.default.disabledArea,
            scrollIntoView: this.props.store.scrollIntoView,
            onMoving: this._onWebpartMoving
        };
        var sectionDragZoneProps = {
            treeLevelTagsBottomUp: [CanvasDragZoneConstants_1.default.zoneDragTag],
            dropPositionOffsetBottomPx: CanvasDragZoneConstants_1.default.LINE_OFFSET_BOTTOM,
            dropPositionOffsetTopPx: CanvasDragZoneConstants_1.default.LINE_OFFSET_TOP,
            onMoved: this._onZoneMoved,
            onMoveStart: this._onZoneMoveStart,
            canDropOnEmptyParent: false,
            dragHandleTag: CanvasDragZoneConstants_1.default.zoneDragHandleTag,
            isEnabled: this.props.isEnabled,
            icon: this._dragIcon.HTMLIcon,
            dragZoneStrings: sectionDragZoneStrings,
            scrollIntoView: this.props.store.scrollIntoView
        };
        return (React.createElement(sp_dragzone_1.DragZone, tslib_1.__assign({}, sectionDragZoneProps),
            React.createElement(sp_dragzone_1.DragZone, tslib_1.__assign({}, dragZoneProps), this.props.children)));
    };
    CanvasDragZone.prototype._onWebpartMoveStart = function (position) {
        if (!CanvasDragZone._isValidWebpartPosition(position)) {
            return;
        }
        var control = this._getControlFromDragZonePosition(position);
        this._dragIcon.setMoveIconBasedOnControl(control);
    };
    CanvasDragZone.prototype._onWebpartMoving = function (disallowed) {
        if (disallowed) {
            this._dragIcon.setDisallowedIcon();
        }
        else {
            this._dragIcon.setToPreviousState();
        }
    };
    CanvasDragZone.prototype._onZoneMoveStart = function (position) {
        if (!CanvasDragZone._isValidZonePosition(position)) {
            return;
        }
        var layout = this.props.store.canvasLayout;
        var zones = layout.zones;
        var oldZone = zones[position[0]];
        this._dragIcon.setMoveIconBasedOnZone(oldZone);
    };
    CanvasDragZone.prototype._onZoneMoved = function (oldPosition, newPosition) {
        if (oldPosition === newPosition ||
            !CanvasDragZone._isValidZonePosition(oldPosition) ||
            !CanvasDragZone._isValidZonePosition(newPosition) ||
            oldPosition[0] === newPosition[0] - 1 || oldPosition[0] === newPosition[0]) {
            return;
        }
        var moveMonitor = new sp_telemetry_1._QosMonitor('CanvasZoneMove');
        var layout = this.props.store.canvasLayout;
        var zones = layout.zones;
        try {
            var oldIndex = oldPosition[0];
            var newIndex = newPosition[0];
            var oldZone = zones[oldIndex];
            var newZoneIndex = 0;
            if (newIndex < zones.length) {
                newZoneIndex = zones[newIndex].index;
            }
            else {
                newZoneIndex = zones[zones.length - 1].index + 1;
            }
            layout.moveZone(oldZone, newZoneIndex);
            moveMonitor.writeSuccess();
        }
        catch (err) {
            moveMonitor.writeUnexpectedFailure('ExceptionMovingZone', err);
        }
    };
    CanvasDragZone.prototype._onWebpartMoved = function (oldPosition, newPosition) {
        if (oldPosition === newPosition ||
            !CanvasDragZone._isValidWebpartPosition(oldPosition) ||
            !CanvasDragZone._isValidWebpartPosition(newPosition) ||
            CanvasDragZone._droppedOnTheSamePosition(oldPosition, newPosition)) {
            return;
        }
        var moveMonitor = new sp_telemetry_1._QosMonitor('CanvasControlMove');
        try {
            var oldControl = this._getControlFromDragZonePosition(oldPosition);
            var newCanvasPosition = this._getNewPositionFromDragZonePosition(newPosition);
            this.props.store.canvasLayout.moveControl(oldControl, newCanvasPosition);
            moveMonitor.writeSuccess();
        }
        catch (err) {
            moveMonitor.writeUnexpectedFailure('ExceptionMovingControl', err);
        }
    };
    CanvasDragZone.prototype._getControlFromDragZonePosition = function (position) {
        var zone = CanvasDragZone._getZoneFromDragZonePosition(position, this.props.store.canvasLayout);
        var section = CanvasDragZone._getSectionFromDragZonePosition(position, zone);
        var ctrlIdx = position[0];
        var control = section.controls && section.controls.length > ctrlIdx &&
            section.controls[ctrlIdx];
        if (!control) {
            throw new Error('ControlNotFound, controlIndex: ${ctrlIdx}');
        }
        return control;
    };
    CanvasDragZone.prototype._getNewPositionFromDragZonePosition = function (position) {
        var zone = CanvasDragZone._getZoneFromDragZonePosition(position, this.props.store.canvasLayout);
        var section = zone &&
            CanvasDragZone._getSectionFromDragZonePosition(position, zone);
        var controlIndex = position[0];
        if (section.controls.length === 0) {
            controlIndex = 1;
        }
        else if (controlIndex === section.controls.length) {
            controlIndex = section.controls[section.controls.length - 1].position.controlIndex + 1;
        }
        else {
            controlIndex = section.controls[controlIndex].position.controlIndex;
        }
        var newCanvasPosition = {
            controlIndex: controlIndex,
            sectionIndex: section.index,
            sectionFactor: section.factor,
            zoneIndex: zone.index
        };
        return newCanvasPosition;
    };
    tslib_1.__decorate([
        office_ui_fabric_react_bundle_1.autobind
    ], CanvasDragZone.prototype, "_onWebpartMoveStart", null);
    tslib_1.__decorate([
        office_ui_fabric_react_bundle_1.autobind
    ], CanvasDragZone.prototype, "_onWebpartMoving", null);
    tslib_1.__decorate([
        office_ui_fabric_react_bundle_1.autobind
    ], CanvasDragZone.prototype, "_onZoneMoveStart", null);
    tslib_1.__decorate([
        office_ui_fabric_react_bundle_1.autobind
    ], CanvasDragZone.prototype, "_onZoneMoved", null);
    tslib_1.__decorate([
        office_ui_fabric_react_bundle_1.autobind
    ], CanvasDragZone.prototype, "_onWebpartMoved", null);
    return CanvasDragZone;
}(React.Component));
exports.default = CanvasDragZone;


/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DragZone_1 = __webpack_require__(236);
exports.DragZone = DragZone_1.DragZone;
var DragZoneControl_1 = __webpack_require__(107);
exports.DragZoneControl = DragZoneControl_1.DragZoneControl;


/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var DragZoneControl_1 = __webpack_require__(107);
var lodash = __webpack_require__(12);
var DragZone = (function (_super) {
    tslib_1.__extends(DragZone, _super);
    function DragZone() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DragZone.prototype.componentDidMount = function () {
        this._dragZoneControlOptions =
            lodash.extend({ host: this._container }, this.props);
        this._dragZoneControl = new DragZoneControl_1.DragZoneControl(this._dragZoneControlOptions);
        if (this.props.isEnabled) {
            this._dragZoneControl.activate();
        }
    };
    DragZone.prototype.componentDidUpdate = function (prevProps) {
        if (this.props.supportHorizontalReorder !== prevProps.supportHorizontalReorder) {
            this._dragZoneControlOptions.supportHorizontalReorder = this.props.supportHorizontalReorder;
        }
        if (this.props.isEnabled !== prevProps.isEnabled) {
            if (this.props.isEnabled) {
                this._dragZoneControl.activate();
            }
            else {
                this._dragZoneControl.deactivate();
            }
        }
        else if (this.props.isEnabled) {
            this._dragZoneControl.refreshHandles();
        }
    };
    DragZone.prototype.render = function () {
        var _this = this;
        return (React.createElement("div", { ref: function (div1) { return _this._container = div1; } }, this.props.children));
    };
    DragZone.defaultProps = {
        treeLevelTagsBottomUp: [],
        isEnabled: false,
        dropPositionOffsetTopPx: 0,
        dropPositionOffsetBottomPx: 0,
        supportKeyboardAlternative: true
    };
    return DragZone;
}(React.PureComponent));
exports.DragZone = DragZone;


/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(238);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".defaultIconClass_be933176{border:1px solid;border-color:\"[theme:themePrimary, default: #0078d7]\";height:35px;position:absolute;width:35px}.dropLocation_be933176{background-color:\"[theme:themePrimary, default: #0078d7]\";z-index:10}.dropLocation_be933176.horizontalLine_be933176{height:3px}.dropLocation_be933176.verticalLine_be933176{width:3px}.noselect_be933176{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.linePositionAbsolute_be933176{position:absolute}.linePositionAbsolute_be933176.horizontalLine_be933176{left:0;right:0}.linePositionAbsolute_be933176.verticalLine_be933176{top:0;bottom:0}.iconVisible_be933176{visibility:visible}.iconCollapsed_be933176{visibility:collapse}.iconAdditionalStyle_be933176{pointer-events:none;z-index:11}.cursorDragging_be933176 *{cursor:-webkit-grabbing!important;cursor:grabbing!important}.handleGrab_be933176{cursor:-webkit-grab!important;cursor:grab!important}.hideLine_be933176{display:none}", ""]);

// exports


/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DragZoneUtilities_1 = __webpack_require__(108);
var sp_lodash_subset_1 = __webpack_require__(12);
var DATA_ATTRIBUTE = 'data-drag-tag';
var DATA_DISALLOWED_AREA_ATTRIBUTE = 'data-drag-disallowedArea-tag';
var DATA_DISALLOWED_ATTRIBUTE = 'data-drag-disallowed-tag';
var DATA_DRAG_HANDLE = 'data-drag-handle';
var DragZoneTree = (function () {
    function DragZoneTree(treeLevelTagsBottomUp, host) {
        this._bottomElements = new Map();
        this._positionMatrix = [];
        this._treeLevelTagsBottomUp = treeLevelTagsBottomUp;
        this._treeDepth = treeLevelTagsBottomUp.length;
        this._host = host;
        this._currentPosition = { x: undefined, y: undefined };
        this._startPosition = { x: undefined, y: undefined };
    }
    Object.defineProperty(DragZoneTree.prototype, "currentPosition", {
        get: function () {
            return this._currentPosition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DragZoneTree.prototype, "startPosition", {
        get: function () {
            return this._startPosition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DragZoneTree.prototype, "depth", {
        get: function () {
            return this._treeDepth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DragZoneTree.prototype, "getDraggedItem", {
        get: function () {
            return this._getLeafElementFromMousePosition(this._startPosition.x, this._startPosition.y);
        },
        enumerable: true,
        configurable: true
    });
    DragZoneTree.prototype.getHoverOverItemPosition = function (el) {
        var element = el ||
            this.getBottomMostElementFromMousePosition();
        if (element) {
            return this._getElementPosition(element);
        }
        else {
            return undefined;
        }
    };
    DragZoneTree.prototype.getDraggedItemPosition = function () {
        var draggedElement = this._getLeafElementFromMousePosition(this._startPosition.x, this._startPosition.y);
        if (draggedElement) {
            return this._getElementPosition(draggedElement);
        }
        else {
            return undefined;
        }
    };
    DragZoneTree.prototype.getLeafElementFromMousePosition = function () {
        return this._getLeafElementFromMousePosition(this._currentPosition.x, this._currentPosition.y);
    };
    DragZoneTree.prototype.getDraggedOverElement = function () {
        return document.elementFromPoint(this._currentPosition.x, this._currentPosition.y);
    };
    DragZoneTree.prototype.isDragAllowed = function (draggedItem, dragOverElement, dataDragDisallowed) {
        var hoverOverItemWithDisallowedTag;
        if (dragOverElement) {
            hoverOverItemWithDisallowedTag =
                this.getElementWithDataDisallowedAreaTag(dragOverElement, dataDragDisallowed);
        }
        if (!draggedItem ||
            !dragOverElement ||
            (hoverOverItemWithDisallowedTag &&
                DragZoneUtilities_1.DragZoneUtilities.hasAttributeValue(draggedItem, DATA_DISALLOWED_ATTRIBUTE, dataDragDisallowed))) {
            return false;
        }
        return true;
    };
    DragZoneTree.prototype.getBottomMostElementFromMousePosition = function (draggedItem, dataDragDisallowed) {
        var _this = this;
        var parents = [];
        var elem = document.elementFromPoint(this._currentPosition.x, this._currentPosition.y);
        if (!elem || (draggedItem && !this.isDragAllowed(draggedItem, elem, dataDragDisallowed))) {
            return undefined;
        }
        do {
            parents.push(elem);
            elem = elem.parentElement;
        } while (elem && elem !== this._host);
        var _loop_1 = function (i) {
            var candidates = parents.filter((function (element) {
                return DragZoneUtilities_1.DragZoneUtilities.hasAttributeValue(element, DATA_ATTRIBUTE, _this._treeLevelTagsBottomUp[i]);
            }));
            if (candidates && candidates.length > 0) {
                var lastLeaf = this_1._getLastLeaf(candidates[0]);
                if (lastLeaf) {
                    var rect = lastLeaf.getBoundingClientRect();
                    if (rect.bottom < this_1._currentPosition.y) {
                        return { value: lastLeaf };
                    }
                    return { value: undefined };
                }
                return { value: candidates[0] };
            }
        };
        var this_1 = this;
        for (var i = 0; i < this._treeDepth; i++) {
            var state_1 = _loop_1(i);
            if (typeof state_1 === "object")
                return state_1.value;
        }
        return undefined;
    };
    DragZoneTree.prototype.isLeafElement = function (element) {
        return DragZoneUtilities_1.DragZoneUtilities.hasAttributeValue(element, DATA_ATTRIBUTE, this._treeLevelTagsBottomUp[0]);
    };
    DragZoneTree.prototype.addDisallowedStyles = function (dataDragDisallowed, dataDragDisallowedCss, draggedItem) {
        if (!draggedItem) {
            draggedItem = this._getLeafElementFromMousePosition(this._startPosition.x, this._startPosition.y);
        }
        if (DragZoneUtilities_1.DragZoneUtilities.hasAttributeValue(draggedItem, DATA_DISALLOWED_ATTRIBUTE, dataDragDisallowed)) {
            this.applyRemoveCssToDataDragDisallowed(dataDragDisallowed, true, dataDragDisallowedCss);
        }
    };
    DragZoneTree.prototype.applyRemoveCssToDataDragDisallowed = function (dataDragDisallowedTag, apply, cssClass) {
        var elements = DragZoneUtilities_1.DragZoneUtilities.getElementsWithAttribute(this._host, DATA_DISALLOWED_AREA_ATTRIBUTE, dataDragDisallowedTag);
        for (var i = 0; i < elements.length; i++) {
            if (apply) {
                elements[i].classList.add(cssClass);
            }
            else {
                elements[i].classList.remove(cssClass);
            }
        }
    };
    DragZoneTree.prototype.getElementWithDataDisallowedAreaTag = function (elem, value) {
        var tempElement = elem;
        while (tempElement && tempElement !== this._host) {
            if (DragZoneUtilities_1.DragZoneUtilities.hasAttributeValue(tempElement, DATA_DISALLOWED_AREA_ATTRIBUTE, value)) {
                return tempElement;
            }
            tempElement = tempElement.parentElement;
        }
        return undefined;
    };
    DragZoneTree.prototype.getIndexInPositionMatrix = function (position) {
        for (var i = 0; i < this._positionMatrix.length; i++) {
            var equals = true;
            for (var j = 0; j < position.length; j++) {
                if (position[j] !== this._positionMatrix[i][j]) {
                    equals = false;
                    break;
                }
            }
            if (equals) {
                return i;
            }
        }
        return -1;
    };
    DragZoneTree.prototype.getElementFromPosition = function (position, refreshMatrix) {
        if (refreshMatrix || this._bottomElements.size === 0) {
            this.refreshPositionMatrix();
        }
        var index = this.getIndexInPositionMatrix(position);
        if (index > -1 && index < this._bottomElements.size) {
            return this._bottomElements.get(index);
        }
        else {
            return undefined;
        }
    };
    DragZoneTree.prototype.getLeafElementFromHandle = function (handle) {
        var element = handle;
        while (element && element !== this._host) {
            if (DragZoneUtilities_1.DragZoneUtilities.hasAttributeValue(element, DATA_ATTRIBUTE, this._treeLevelTagsBottomUp[0])) {
                return element;
            }
            element = element.parentElement;
        }
        return undefined;
    };
    DragZoneTree.prototype.getHandleFromLeafElement = function (draggedElement, value) {
        var dragHandles = DragZoneUtilities_1.DragZoneUtilities.getElementsWithAttribute(draggedElement, DATA_DRAG_HANDLE, value);
        return dragHandles && dragHandles[0];
    };
    DragZoneTree.prototype.refreshPositionMatrix = function () {
        var currentPosition = [];
        this._positionMatrix = [];
        this._bottomElements = new Map();
        this._traverse(this._host, this._treeDepth - 1, currentPosition);
        this._fixMatrix(this._positionMatrix);
        return this._positionMatrix;
    };
    DragZoneTree.prototype._traverse = function (parent, tagLevel, currentPosition) {
        var children = DragZoneUtilities_1.DragZoneUtilities.getElementsWithAttribute(parent, DATA_ATTRIBUTE, this._treeLevelTagsBottomUp[tagLevel]);
        if (children.length === 0 || tagLevel < 0) {
            this._positionMatrix.push(sp_lodash_subset_1.clone(currentPosition));
            this._bottomElements.set(this._positionMatrix.length - 1, parent);
            return;
        }
        for (var i = 0; i < children.length; i++) {
            currentPosition.push(i);
            this._traverse(children[i], tagLevel - 1, currentPosition);
            currentPosition.pop();
        }
    };
    DragZoneTree.prototype._fixMatrix = function (positionMatrix) {
        for (var i = 0; i < positionMatrix.length; i++) {
            for (var j = 0; j < this._treeDepth; j++) {
                if (positionMatrix[i].length <= j) {
                    positionMatrix[i].push(-1);
                }
            }
            positionMatrix[i] = positionMatrix[i].reverse();
        }
    };
    DragZoneTree.prototype._getElementPosition = function (element) {
        var treeIndeces = [];
        var tempElement = element;
        var tagLevel = this._getElementTagLevel(tempElement);
        for (var i = 0; i < this._treeDepth - 1; i++) {
            if (i < tagLevel) {
                treeIndeces[i] = 0;
                continue;
            }
            var thisLevelElement = tempElement;
            while (tempElement.parentElement && tempElement !== this._host) {
                tempElement = tempElement.parentElement;
                if (DragZoneUtilities_1.DragZoneUtilities.hasAttributeValue(tempElement, DATA_ATTRIBUTE, this._treeLevelTagsBottomUp[i + 1])) {
                    break;
                }
            }
            var siblings = DragZoneUtilities_1.DragZoneUtilities.getElementsWithAttribute(tempElement, DATA_ATTRIBUTE, this._treeLevelTagsBottomUp[i]);
            treeIndeces[i] = siblings.indexOf(thisLevelElement);
            if (tempElement === this._host) {
                break;
            }
        }
        if (tempElement !== this._host) {
            var tagListLastIndex = this._treeDepth - 1;
            var siblings = DragZoneUtilities_1.DragZoneUtilities.getElementsWithAttribute(this._host, DATA_ATTRIBUTE, this._treeLevelTagsBottomUp[tagListLastIndex]);
            treeIndeces[tagListLastIndex] = siblings.indexOf(tempElement);
        }
        return treeIndeces;
    };
    DragZoneTree.prototype._getElementTagLevel = function (element) {
        var tag = element.getAttribute(DATA_ATTRIBUTE);
        if (!tag) {
            return undefined;
        }
        return this._treeLevelTagsBottomUp.indexOf(tag);
    };
    DragZoneTree.prototype._getLeafElementFromMousePosition = function (x, y) {
        var elem = document.elementFromPoint(x, y);
        while (elem.parentElement && elem.parentElement !== this._host) {
            if (DragZoneUtilities_1.DragZoneUtilities.hasAttributeValue(elem, DATA_ATTRIBUTE, this._treeLevelTagsBottomUp[0])) {
                return elem;
            }
            elem = elem.parentElement;
        }
        return undefined;
    };
    DragZoneTree.prototype._getLastLeaf = function (element) {
        var leaves = DragZoneUtilities_1.DragZoneUtilities.getElementsWithAttribute(element, DATA_ATTRIBUTE, this._treeLevelTagsBottomUp[0]);
        if (leaves.length === 0) {
            return undefined;
        }
        else {
            return leaves[leaves.length - 1];
        }
    };
    return DragZoneTree;
}());
exports.DragZoneTree = DragZoneTree;


/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var office_ui_fabric_react_1 = __webpack_require__(2);
var sp_lodash_subset_1 = __webpack_require__(12);
var odsp_utilities_bundle_1 = __webpack_require__(9);
var sp_a11y_1 = __webpack_require__(11);
var DragZone_module_scss_1 = __webpack_require__(58);
var KeyCodes;
(function (KeyCodes) {
    KeyCodes[KeyCodes["Enter"] = 13] = "Enter";
    KeyCodes[KeyCodes["Escape"] = 27] = "Escape";
    KeyCodes[KeyCodes["Space"] = 32] = "Space";
    KeyCodes[KeyCodes["LeftArrow"] = 37] = "LeftArrow";
    KeyCodes[KeyCodes["UpArrow"] = 38] = "UpArrow";
    KeyCodes[KeyCodes["RightArrow"] = 39] = "RightArrow";
    KeyCodes[KeyCodes["DownArrow"] = 40] = "DownArrow";
})(KeyCodes || (KeyCodes = {}));
var DRAG_ZONE = 'DragZone';
var DragZoneKeyboard = (function () {
    function DragZoneKeyboard(options) {
        var _this = this;
        this._isMovingForward = false;
        options.strings = options.strings || {
            handleTitle: '',
            moveStarted: '',
            moveComplete: '',
            moveCancelled: '',
            moveNotAllowed: '',
            moveInsideLevel: []
        }; 
        this._options = options;
        var handles = options.handles;
        var host = options.host, strings = options.strings;
        if (handles) {
            handles.forEach((function (handle) {
                handle.addEventListener('keydown', _this._viewModeKeyDown);
                handle.title = strings.handleTitle;
            }));
        }
        else {
            host.addEventListener('keydown', this._viewModeKeyDown);
            handles = [];
        }
    }
    DragZoneKeyboard.prototype.dispose = function () {
        var _this = this;
        var _a = this._options, handles = _a.handles, host = _a.host;
        if (handles) {
            handles.forEach((function (handle) {
                handle.removeEventListener('keydown', _this._viewModeKeyDown);
            }));
        }
        else {
            host.removeEventListener('keydown', this._viewModeKeyDown);
        }
    };
    DragZoneKeyboard.prototype.addHandles = function (handles) {
        var _this = this;
        handles.forEach((function (handle) {
            handle.addEventListener('keydown', _this._viewModeKeyDown);
            handle.title = _this._options.strings.handleTitle;
            _this._options.handles.push(handle);
        }));
    };
    DragZoneKeyboard.prototype._viewModeKeyDown = function (evt) {
        var _a = this._options, disallowedTag = _a.disallowedTag, disallowedClassName = _a.disallowedClassName, changeIconVisibility = _a.changeIconVisibility, onMoveStart = _a.onMoveStart, moveIcon = _a.moveIcon, removeLine = _a.removeLine, strings = _a.strings, host = _a.host, tree = _a.tree;
        if (!this._isMoving && (evt.keyCode === KeyCodes.Enter || evt.keyCode === KeyCodes.Space)) {
            this._isMoving = true;
            sp_a11y_1.ScreenReader.alert(DRAG_ZONE, strings.moveStarted);
            host.addEventListener('keydown', this._moveModeKeyDown);
            this._draggedElement = tree.getLeafElementFromHandle(evt.target);
            this._draggedPosition = tree.getHoverOverItemPosition(this._draggedElement);
            this._treeMatrix = tree.refreshPositionMatrix();
            this._currentLocationIndex = tree.getIndexInPositionMatrix(this._draggedPosition);
            if (disallowedTag && disallowedClassName) {
                tree.addDisallowedStyles(disallowedTag, disallowedClassName, this._draggedElement);
            }
            if (onMoveStart) {
                onMoveStart(this._draggedPosition);
            }
            var iconPosition = this._getIconPosition(this._draggedElement);
            if (iconPosition) {
                moveIcon(iconPosition.iconLeft, iconPosition.iconTop);
            }
            changeIconVisibility(true);
            evt.stopPropagation();
            evt.preventDefault();
        }
        else if (evt.keyCode === KeyCodes.Escape) {
            removeLine();
            changeIconVisibility(false);
            sp_a11y_1.ScreenReader.alert(DRAG_ZONE, strings.moveCancelled);
            this._isMoving = false;
            this._setFocusOnHandle(this._draggedElement);
            host.removeEventListener('keydown', this._moveModeKeyDown);
            this._removeStylesFromDisallowedArea();
        }
    };
    DragZoneKeyboard.prototype._moveModeKeyDown = function (evt) {
        var _a = this._options, removeLine = _a.removeLine, host = _a.host, moveItem = _a.moveItem, strings = _a.strings, supportHorizontalReorder = _a.supportHorizontalReorder, tree = _a.tree, disallowedTag = _a.disallowedTag, changeIconVisibility = _a.changeIconVisibility;
        if (evt.keyCode === KeyCodes.Enter) {
            removeLine();
            changeIconVisibility(false);
            if (tree.isDragAllowed(this._draggedElement, this._dropOverElement, disallowedTag)) {
                moveItem(this._draggedPosition, this._dropPosition);
                var draggedElement = tree.getElementFromPosition(this._dropPosition, true);
                sp_a11y_1.ScreenReader.alert(DRAG_ZONE, odsp_utilities_bundle_1.StringHelper.format(strings.moveComplete, this._formatFullPosition(this._draggedPosition), this._formatFullPosition(this._dropPosition)));
                this._setFocusOnHandle(draggedElement);
            }
            else {
                sp_a11y_1.ScreenReader.alert(DRAG_ZONE, strings.moveNotAllowed);
            }
            this._isMoving = false;
            var dropPosition = sp_lodash_subset_1.clone(this._dropPosition);
            if (this._isMovingForward && dropPosition && !dropPosition[1] && !dropPosition[2]) {
                dropPosition[0]--;
            }
            var newDraggedElement = tree.getElementFromPosition(dropPosition, true);
            sp_a11y_1.ScreenReader.alert(DRAG_ZONE, odsp_utilities_bundle_1.StringHelper.format(strings.moveComplete, this._formatFullPosition(this._draggedPosition), this._formatFullPosition(this._dropPosition)));
            this._setFocusOnHandle(newDraggedElement);
            host.removeEventListener('keydown', this._moveModeKeyDown);
            this._removeStylesFromDisallowedArea();
        }
        else if (evt.keyCode === KeyCodes.DownArrow ||
            supportHorizontalReorder && KeyCodes.RightArrow === office_ui_fabric_react_1.getRTLSafeKeyCode(evt.keyCode)) {
            this._moveForward();
            this._isMovingForward = true;
        }
        else if (evt.keyCode === KeyCodes.UpArrow ||
            supportHorizontalReorder && KeyCodes.LeftArrow === office_ui_fabric_react_1.getRTLSafeKeyCode(evt.keyCode)) {
            this._moveBack();
            this._isMovingForward = false;
        }
        evt.stopPropagation();
        evt.preventDefault();
    };
    DragZoneKeyboard.prototype._removeStylesFromDisallowedArea = function () {
        var _a = this._options, disallowedTag = _a.disallowedTag, disallowedClassName = _a.disallowedClassName, tree = _a.tree;
        if (disallowedTag && disallowedClassName) {
            tree.applyRemoveCssToDataDragDisallowed(disallowedTag, false, disallowedClassName);
        }
    };
    DragZoneKeyboard.prototype._setFocusOnHandle = function (element) {
        var _a = this._options, handleTag = _a.handleTag, tree = _a.tree;
        var dragHandle = tree.getHandleFromLeafElement(element, handleTag);
        if (dragHandle) {
            var tabIndex = dragHandle.getAttribute('tabindex');
            if (tabIndex !== '0') {
                dragHandle.setAttribute('tabindex', '0');
                dragHandle.focus();
                if (!isNaN(+tabIndex)) {
                    dragHandle.setAttribute('tabindex', tabIndex);
                }
            }
            else {
                dragHandle.focus();
            }
        }
    };
    DragZoneKeyboard.prototype._moveForward = function () {
        var _a = this._options, tree = _a.tree, moveLine = _a.moveLine, strings = _a.strings, scrollIntoView = _a.scrollIntoView, moveIcon = _a.moveIcon, onMoving = _a.onMoving, disallowedTag = _a.disallowedTag;
        var line;
        if (this._currentLocationIndex < this._treeMatrix.length - 1) {
            var newIndex = this._currentLocationIndex + 1;
            var newTentativeElement = tree.getElementFromPosition(this._treeMatrix[newIndex]);
            this._dropPosition = sp_lodash_subset_1.clone(this._treeMatrix[newIndex]);
            this._dropOverElement = newTentativeElement && newTentativeElement.parentElement;
            if (!tree.isLeafElement(newTentativeElement)) {
                this._dropPosition[0]++;
                line = moveLine(newTentativeElement, false, false, true);
                this._currentLocationIndex++;
                sp_a11y_1.ScreenReader.alert(DRAG_ZONE, this._formatFullPosition(this._dropPosition));
            }
            else {
                if (this._indexNotChanged) {
                    this._indexNotChanged = false;
                    this._dropPosition[0]++;
                    line = moveLine(newTentativeElement, true, false, true);
                    this._currentLocationIndex++;
                    sp_a11y_1.ScreenReader.alert(DRAG_ZONE, this._formatPosition(this._dropPosition));
                }
                else if (this._upperLevelChange(this._treeMatrix[this._currentLocationIndex], this._treeMatrix[newIndex])) {
                    line = moveLine(newTentativeElement, true, true, true);
                    this._indexNotChanged = true;
                    sp_a11y_1.ScreenReader.alert(DRAG_ZONE, this._formatFullPosition(this._dropPosition));
                }
                else {
                    line = moveLine(newTentativeElement, true, true, true);
                    this._currentLocationIndex++;
                    sp_a11y_1.ScreenReader.alert(DRAG_ZONE, this._formatPosition(this._dropPosition));
                }
            }
            scrollIntoView('partial', line, 500, 0);
            var iconPosition = this._getIconPosition(line);
            if (iconPosition) {
                if (onMoving) {
                    onMoving(!tree.isDragAllowed(this._draggedElement, this._dropOverElement, disallowedTag));
                }
                moveIcon(iconPosition.iconLeft, iconPosition.iconTop);
            }
        }
        else {
            sp_a11y_1.ScreenReader.alert(DRAG_ZONE, strings.moveNotAllowed);
        }
        this._checkMoveAllowed(line);
    };
    DragZoneKeyboard.prototype._moveBack = function () {
        var _a = this._options, tree = _a.tree, moveLine = _a.moveLine, strings = _a.strings, scrollIntoView = _a.scrollIntoView, moveIcon = _a.moveIcon, onMoving = _a.onMoving, disallowedTag = _a.disallowedTag;
        var line;
        if (this._currentLocationIndex > 0) {
            var newIndex = this._currentLocationIndex - 1;
            var newTentativeElement = tree.getElementFromPosition(this._treeMatrix[newIndex]);
            this._dropPosition = sp_lodash_subset_1.clone(this._treeMatrix[newIndex]);
            this._dropOverElement = newTentativeElement && newTentativeElement.parentElement;
            if (!tree.isLeafElement(newTentativeElement)) {
                this._dropPosition[0]++;
                line = moveLine(newTentativeElement, false, false, true);
                this._currentLocationIndex--;
                sp_a11y_1.ScreenReader.alert(DRAG_ZONE, this._formatFullPosition(this._dropPosition));
            }
            else {
                if (this._indexNotChanged) {
                    this._indexNotChanged = false;
                    line = moveLine(newTentativeElement, true, true, true);
                    this._currentLocationIndex--;
                    sp_a11y_1.ScreenReader.alert(DRAG_ZONE, this._formatPosition(this._dropPosition));
                }
                else if (this._upperLevelChange(this._treeMatrix[this._currentLocationIndex], this._treeMatrix[newIndex])) {
                    this._dropPosition[0]++;
                    line = moveLine(newTentativeElement, true, false, true);
                    this._indexNotChanged = true;
                    sp_a11y_1.ScreenReader.alert(DRAG_ZONE, this._formatFullPosition(this._dropPosition));
                }
                else {
                    line = moveLine(newTentativeElement, true, true, true);
                    this._currentLocationIndex--;
                    sp_a11y_1.ScreenReader.alert(DRAG_ZONE, this._formatPosition(this._dropPosition));
                }
            }
            scrollIntoView('partial', line, 500, 0, true);
            var iconPosition = this._getIconPosition(line);
            if (iconPosition) {
                if (onMoving) {
                    onMoving(!tree.isDragAllowed(this._draggedElement, this._dropOverElement, disallowedTag));
                }
                moveIcon(iconPosition.iconLeft, iconPosition.iconTop);
            }
        }
        else {
            sp_a11y_1.ScreenReader.alert(DRAG_ZONE, strings.moveNotAllowed);
        }
        this._checkMoveAllowed(line);
    };
    DragZoneKeyboard.prototype._checkMoveAllowed = function (line) {
        var _a = this._options, tree = _a.tree, strings = _a.strings, disallowedTag = _a.disallowedTag;
        if (disallowedTag && !tree.isDragAllowed(this._draggedElement, this._dropOverElement, disallowedTag) && line) {
            line.classList.add(DragZone_module_scss_1.default.hideLine);
            sp_a11y_1.ScreenReader.alert(DRAG_ZONE, strings.moveNotAllowed);
        }
    };
    DragZoneKeyboard.prototype._upperLevelChange = function (oldPosition, newPosition) {
        if (oldPosition.length !== newPosition.length || oldPosition.length < 2 || newPosition.length < 2) {
            return false;
        }
        for (var i = 1; i < oldPosition.length; i++) {
            if (oldPosition[i] !== newPosition[i]) {
                return true;
            }
        }
        return false;
    };
    DragZoneKeyboard.prototype._formatFullPosition = function (position) {
        var moveInsideLevel = this._options.strings.moveInsideLevel;
        if (moveInsideLevel.length === 0 || position.length === 0) {
            return;
        }
        return odsp_utilities_bundle_1.StringHelper.format.apply(odsp_utilities_bundle_1.StringHelper, [moveInsideLevel[moveInsideLevel.length - 1]].concat(position.reverse().map((function (val) {
            return val + 1;
        }))));
    };
    DragZoneKeyboard.prototype._getIconPosition = function (element) {
        var boundingRect = element && element.getBoundingClientRect();
        if (boundingRect) {
            var position = {
                iconLeft: boundingRect.left + boundingRect.width / 2,
                iconTop: boundingRect.top
            };
            return position;
        }
        return undefined;
    };
    DragZoneKeyboard.prototype._formatPosition = function (position) {
        var moveInsideLevel = this._options.strings.moveInsideLevel;
        if (moveInsideLevel.length === 0 || position.length === 0) {
            return;
        }
        return odsp_utilities_bundle_1.StringHelper.format(moveInsideLevel[0], position[0] + 1);
    };
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], DragZoneKeyboard.prototype, "_viewModeKeyDown", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], DragZoneKeyboard.prototype, "_moveModeKeyDown", null);
    return DragZoneKeyboard;
}());
exports.default = DragZoneKeyboard;


/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var office_ui_fabric_react_1 = __webpack_require__(2);
var CanvasControlType_1 = __webpack_require__(7);
var CanvasDragZone_module_scss_1 = __webpack_require__(109);
var CanvasStrings_resx_1 = __webpack_require__(10);
var CanvasDragIcon = (function () {
    function CanvasDragIcon() {
        this._icon = this._getDefaultIcon();
    }
    CanvasDragIcon._extractLabelFromRTE = function (control) {
        var domParser = new DOMParser();
        var docToParse = domParser.parseFromString(control.innerHTML || '', 'text/html');
        var element = docToParse.firstElementChild && docToParse.firstElementChild;
        return (element && element.innerText) || CanvasStrings_resx_1.default.DragIconFallbackRTEText;
    };
    CanvasDragIcon._getIconStyle = function (iconName) {
        return "ms-Icon " + office_ui_fabric_react_1.getIconClassName(iconName);
    };
    Object.defineProperty(CanvasDragIcon.prototype, "HTMLIcon", {
        get: function () {
            return this._icon;
        },
        enumerable: true,
        configurable: true
    });
    CanvasDragIcon.prototype.setMoveIconBasedOnControl = function (control) {
        if (!control) {
            return;
        }
        var iconControl = this._getTagByInternalId(CanvasDragIcon.ICON_INTERNAL_ID);
        var textControl = this._getTagByInternalId(CanvasDragIcon.TEXT_INTERNAL_ID);
        if (control.controlType === CanvasControlType_1.default.RTE) {
            iconControl.className = CanvasDragIcon._getIconStyle('Font');
            textControl.innerText = CanvasDragIcon._extractLabelFromRTE(control);
        }
        else if (control.controlType === CanvasControlType_1.default.WebPartZone) {
            var webPart = control;
            if (webPart && webPart.webPartManifest && webPart.webPartManifest.preconfiguredEntries &&
                webPart.webPartManifest.preconfiguredEntries.length > 0) {
                var entry = webPart.webPartManifest.preconfiguredEntries[0]; 
                iconControl.className = CanvasDragIcon._getIconStyle(entry.officeFabricIconFontName);
            }
            textControl.innerText = webPart && webPart.webPartData && webPart.webPartData.title;
        }
        this._className = iconControl.className;
        this._innerText = textControl.innerText || textControl.innerHTML;
    };
    CanvasDragIcon.prototype.setMoveIconBasedOnZone = function (zone) {
        if (!zone) {
            return;
        }
        var iconControl = this._getTagByInternalId(CanvasDragIcon.ICON_INTERNAL_ID);
        var textControl = this._getTagByInternalId(CanvasDragIcon.TEXT_INTERNAL_ID);
        if (!iconControl || !textControl) {
            return;
        }
        iconControl.className = CanvasDragIcon._getIconStyle('Edit');
        var text;
        switch (zone.layoutType) {
            case CanvasControlType_1.default.FullWidth:
                text = CanvasStrings_resx_1.default.ToolboxFullWidthColumnPart;
                iconControl.className = CanvasDragIcon._getIconStyle('FullWidth');
                break;
            case CanvasControlType_1.default.OneColumn:
                text = CanvasStrings_resx_1.default.ToolboxOneColumnPart;
                iconControl.className = CanvasDragIcon._getIconStyle('SingleColumn');
                break;
            case CanvasControlType_1.default.OneThirdColumnLeft:
                text = CanvasStrings_resx_1.default.ToolboxOneThirdLeftColumnPart;
                iconControl.className = CanvasDragIcon._getIconStyle('ColumnRightTwoThirds');
                break;
            case CanvasControlType_1.default.OneThirdColumnRight:
                text = CanvasStrings_resx_1.default.ToolboxOneThirdRightColumnPart;
                iconControl.className = CanvasDragIcon._getIconStyle('ColumnLeftTwoThirds');
                break;
            case CanvasControlType_1.default.ThreeColumns:
                text = CanvasStrings_resx_1.default.ToolboxThreeColumnPart;
                iconControl.className = CanvasDragIcon._getIconStyle('TripleColumn');
                break;
            case CanvasControlType_1.default.TwoColumns:
                text = CanvasStrings_resx_1.default.ToolboxTwoColumnPart;
                iconControl.className = CanvasDragIcon._getIconStyle('DoubleColumn');
                break;
            default:
                if (true) {
                    throw new Error('A new layout has been added, need to add drag icon string');
                }
        }
        textControl.innerText = text;
        this._className = iconControl.className;
        this._innerText = text;
    };
    CanvasDragIcon.prototype.setDisallowedIcon = function () {
        var iconControl = this._getTagByInternalId(CanvasDragIcon.ICON_INTERNAL_ID);
        var textControl = this._getTagByInternalId(CanvasDragIcon.TEXT_INTERNAL_ID);
        iconControl.className = CanvasDragIcon._getIconStyle('StatusErrorFull');
        textControl.innerText = CanvasStrings_resx_1.default.DragZoneMoveNotAllowed;
    };
    CanvasDragIcon.prototype.setToPreviousState = function () {
        var iconControl = this._getTagByInternalId(CanvasDragIcon.ICON_INTERNAL_ID);
        var textControl = this._getTagByInternalId(CanvasDragIcon.TEXT_INTERNAL_ID);
        iconControl.className = this._className;
        textControl.innerText = this._innerText;
    };
    CanvasDragIcon.prototype._getDefaultIcon = function () {
        var dragIcon = document.createElement('div');
        dragIcon.className = CanvasDragZone_module_scss_1.default.dragIconContainer;
        var iconContainer = document.createElement('div');
        iconContainer.className = CanvasDragZone_module_scss_1.default.dragIcon;
        var iconElement = document.createElement('i');
        iconElement.setAttribute(CanvasDragIcon.DATA_INTERNAL_ID, CanvasDragIcon.ICON_INTERNAL_ID);
        iconContainer.appendChild(iconElement);
        var textContainer = document.createElement('div');
        textContainer.className = CanvasDragZone_module_scss_1.default.dragText;
        textContainer.classList.add('ms-fontSize-m');
        textContainer.setAttribute(CanvasDragIcon.DATA_INTERNAL_ID, CanvasDragIcon.TEXT_INTERNAL_ID);
        dragIcon.appendChild(iconContainer);
        dragIcon.appendChild(textContainer);
        document.body.appendChild(dragIcon);
        return dragIcon;
    };
    CanvasDragIcon.prototype._getTagByInternalId = function (internalId) {
        return this._icon.querySelector("[" + CanvasDragIcon.DATA_INTERNAL_ID + "='" + internalId + "']");
    };
    CanvasDragIcon.ICON_INTERNAL_ID = 'iconControl';
    CanvasDragIcon.TEXT_INTERNAL_ID = 'textControl';
    CanvasDragIcon.DATA_INTERNAL_ID = 'data-internal-id';
    return CanvasDragIcon;
}());
exports.default = CanvasDragIcon;


/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(243);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".dragIconContainer_525e47ce{position:absolute;top:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:\"[theme:neutralLighterAlt, default: #f8f8f8]\"}.dragIconContainer_525e47ce .dragIcon_525e47ce{width:50px;height:50px;background-color:\"[theme:themePrimary, default:#0078d7]\"}.dragIconContainer_525e47ce .dragIcon_525e47ce .ms-Icon{font-size:32px;padding:9px}.dragIconContainer_525e47ce .dragText_525e47ce{height:22px;padding:4px;max-width:200px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;background-color:rgba(0,0,0,.5);color:#fff;font-family:Segoe UI Light WestEuropean,Segoe UI Light,Segoe WP Light,Segoe UI,Segoe WP,Tahoma,Arial,sans-serif}.dragIconContainer_525e47ce .singleColumn_525e47ce:before{content:\"\\F1D3\"}.dragIconContainer_525e47ce .doubleColumn_525e47ce:before{content:\"\\F1D4\"}.dragIconContainer_525e47ce .tripleColumn_525e47ce:before{content:\"\\F1D5\"}.dragIconContainer_525e47ce .columnLeftTwoThirds_525e47ce:before{content:\"\\F1D6\"}.dragIconContainer_525e47ce .columnRightTwoThirds_525e47ce:before{content:\"\\F1D7\"}.disabledArea_525e47ce{position:relative}.disabledArea_525e47ce:before{background-color:\"[theme:neutralSecondary, default: #666666]\";content:\"\";display:block;position:absolute;height:100%;width:100%;z-index:100;opacity:.6}", ""]);

// exports


/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var office_ui_fabric_react_1 = __webpack_require__(2);
var sp_webpart_base_1 = __webpack_require__(16);
var CanvasControlType_1 = __webpack_require__(7);
var CanvasStore_1 = __webpack_require__(15);
var CanvasStrings_resx_1 = __webpack_require__(10);
var CanvasZonePropertyPaneControl = (function (_super) {
    tslib_1.__extends(CanvasZonePropertyPaneControl, _super);
    function CanvasZonePropertyPaneControl(zone, render) {
        var _this = _super.call(this) || this;
        _this._zone = zone;
        _this._render = render;
        return _this;
    }
    CanvasZonePropertyPaneControl.prototype._internalGetPropertyPaneData = function () {
        return {
            webPartId: this._zone.index.toString(),
            title: CanvasStrings_resx_1.default.SectionPropertyPaneTitle,
            configuration: {
                pages: this._getProperyPanePages()
            },
            onPropertyPaneFieldChanged: undefined,
            onConfigurationEvent: undefined,
            onRendered: undefined,
            properties: {},
            isReactive: true
        };
    };
    CanvasZonePropertyPaneControl.prototype._internalDispose = function () {
        this._zone.dispose();
    };
    CanvasZonePropertyPaneControl.prototype._internalOnPropertyPaneFieldChanged = function (propertyPath, newValue) {
        this._zone.changeZone(newValue);
        this._render();
    };
    CanvasZonePropertyPaneControl.prototype._getProperyPanePages = function () {
        if (!CanvasStore_1.default.isPolarisMultiColumnEditEnabled) {
            return undefined;
        }
        var currentColumnSize = this._zone.layoutType;
        return [{
                groups: [
                    {
                        groupName: CanvasStrings_resx_1.default.SectionPropertyPaneColumnGroupName,
                        groupFields: [
                            sp_webpart_base_1.PropertyPaneChoiceGroup('selectedLayout', {
                                options: [
                                    {
                                        checked: CanvasControlType_1.default.OneColumn === currentColumnSize,
                                        iconProps: {
                                            officeFabricIconFontName: 'SingleColumn'
                                        },
                                        key: CanvasControlType_1.default.OneColumn,
                                        text: CanvasStrings_resx_1.default.ToolboxOneColumnPart
                                    },
                                    {
                                        checked: CanvasControlType_1.default.TwoColumns === currentColumnSize,
                                        iconProps: {
                                            officeFabricIconFontName: 'DoubleColumn'
                                        },
                                        key: CanvasControlType_1.default.TwoColumns,
                                        text: CanvasStrings_resx_1.default.ToolboxTwoColumnPart
                                    },
                                    {
                                        checked: CanvasControlType_1.default.ThreeColumns === currentColumnSize,
                                        iconProps: {
                                            officeFabricIconFontName: 'TripleColumn'
                                        },
                                        key: CanvasControlType_1.default.ThreeColumns,
                                        text: CanvasStrings_resx_1.default.ToolboxThreeColumnPart
                                    },
                                    {
                                        checked: CanvasControlType_1.default.OneThirdColumnLeft === currentColumnSize,
                                        iconProps: {
                                            officeFabricIconFontName: office_ui_fabric_react_1.getRTL() ? 'ColumnLeftTwoThirds' : 'ColumnRightTwoThirds'
                                        },
                                        key: CanvasControlType_1.default.OneThirdColumnLeft,
                                        text: CanvasStrings_resx_1.default.ToolboxOneThirdLeftColumnPart
                                    },
                                    {
                                        checked: CanvasControlType_1.default.OneThirdColumnRight === currentColumnSize,
                                        iconProps: {
                                            officeFabricIconFontName: office_ui_fabric_react_1.getRTL() ? 'ColumnRightTwoThirds' : 'ColumnLeftTwoThirds'
                                        },
                                        key: CanvasControlType_1.default.OneThirdColumnRight,
                                        text: CanvasStrings_resx_1.default.ToolboxOneThirdRightColumnPart
                                    }
                                ]
                            })
                        ]
                    }
                ]
            }];
    };
    return CanvasZonePropertyPaneControl;
}(sp_webpart_base_1.BasePropertyPaneControl));
exports.default = CanvasZonePropertyPaneControl;


/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_webpart_base_1 = __webpack_require__(16);
var CanvasWebPartHost = (function () {
    function CanvasWebPartHost(serviceScope, handleResize, handleCanvasChanged, reclaimFocus, setSelectedWebPartId) {
        this._handleCanvasChanged = handleCanvasChanged;
        this._handleResize = handleResize;
        this._reclaimFocus = reclaimFocus;
        this._serviceScope = serviceScope;
        this._setSelectedWebPartId = setSelectedWebPartId;
        this.webPartConfigurationEventCallback = this.webPartConfigurationEventCallback.bind(this);
    }
    Object.defineProperty(CanvasWebPartHost.prototype, "serviceScope", {
        get: function () {
            return this._serviceScope;
        },
        enumerable: true,
        configurable: true
    });
    CanvasWebPartHost.prototype.setDirty = function (wpInstanceId) {
        if (this._handleCanvasChanged) {
            this._handleCanvasChanged();
        }
    };
    CanvasWebPartHost.prototype.webPartConfigurationEventCallback = function (event, data) {
        if (event === sp_webpart_base_1.WebPartConfigurationEvent.PropertyPaneOpened) {
            this._handleResize(document.querySelector('.ControlZone--selected'), 500, 44);
        }
        else if (event === sp_webpart_base_1.WebPartConfigurationEvent.PropertyPaneClosed ||
            event === sp_webpart_base_1.WebPartConfigurationEvent.PropertyPaneLostFocus) {
            this._reclaimFocus();
        }
        else if (event === sp_webpart_base_1.WebPartConfigurationEvent.PropertyPaneWebPartsSwitched &&
            this._setSelectedWebPartId &&
            data) {
            this._setSelectedWebPartId(data.instanceId);
        }
    };
    return CanvasWebPartHost;
}());
exports.default = CanvasWebPartHost;


/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var sp_telemetry_1 = __webpack_require__(6);
var CanvasControlType_1 = __webpack_require__(7);
var SPRte_1 = __webpack_require__(112);
var SPRteTouchDevice_1 = __webpack_require__(283);
var WebPartZone_1 = __webpack_require__(284);
var Utilities_1 = __webpack_require__(114);
var CanvasControlFactory = (function () {
    function CanvasControlFactory() {
    }
    CanvasControlFactory.CreateCanvasControl = function (props, store) {
        props.onChange = store.notifyChanged;
        props.ref = store.addReference;
        var control;
        switch (props.controlType) {
            case CanvasControlType_1.default.RTE:
                sp_telemetry_1._PageMetricsLogger.recordMetric('RichTextEditors');
                var rteProps = tslib_1.__assign({}, props, { serviceScope: store.serviceScope });
                if (Utilities_1.default.isTouchEnabled()) {
                    control = React.createElement(SPRteTouchDevice_1.default, rteProps);
                }
                else {
                    control = React.createElement(SPRte_1.default, rteProps);
                }
                break;
            case CanvasControlType_1.default.WebPartZone:
                control = React.createElement(WebPartZone_1.default, props);
                break;
        }
        return control;
    };
    return CanvasControlFactory;
}());
exports.default = CanvasControlFactory;


/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var ReactDOM = __webpack_require__(17);
var sp_core_library_1 = __webpack_require__(5);
undefined/*! require.include @microsoft/office-ui-fabric-react-bundle */;
undefined/*! require.include @microsoft/sp-core-library */;
undefined/*! require.include @microsoft/sp-http */;
undefined/*! require.include @microsoft/sp-lodash-subset */;
undefined/*! require.include @microsoft/sp-page-context */;
undefined/*! require.include @ms/i18n-utilities */;
undefined/*! require.include @ms/sp-telemetry */;
undefined/*! require.include office-ui-fabric-react */;
var PagePicker = (function () {
    function PagePicker(config) {
        this._pagePickerComponentPromise = new Promise(function (resolve) {
            __webpack_require__.e/* require.ensure */(2).then((function (require) {
                var pagePickerElement = React.createElement(__webpack_require__(134).default, __assign({}, config, { ref: resolve }));
                ReactDOM.render(
                pagePickerElement, document.createElement('div'));
            }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);
        });
    }
    Object.defineProperty(PagePicker, "isEnabled", {
        get: function () {
            return sp_core_library_1._SPFlight.isEnabled(499 );
        },
        enumerable: true,
        configurable: true
    });
    PagePicker.prototype.open = function (link) {
        this._pagePickerComponentPromise.then((function (pagePickerComponent) {
            pagePickerComponent.open(link);
        }));
    };
    PagePicker.prototype.close = function () {
        this._pagePickerComponentPromise.then((function (pagePickerComponent) {
            pagePickerComponent.close();
        }));
    };
    return PagePicker;
}());
exports.default = PagePicker;


/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SafeHtml_1 = __webpack_require__(249);
exports.SafeHtml = SafeHtml_1.SafeHtml;


/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DOMPurify = __webpack_require__(250);
var config = {
    ADD_TAGS: ['iframe']
};
var uriWhitelist = ['http', 'https', 'ftp', 'mailto', 'pnm', 'mms', 'news'];
var regex = RegExp('^(' + uriWhitelist.join('|') + '):', 'gim');
var SafeHtml = (function () {
    function SafeHtml() {
    }
    SafeHtml.clean = function (unsafeHtml) {
        SafeHtml._sanitizeLinks();
        return DOMPurify.sanitize(unsafeHtml, config);
    };
    SafeHtml._sanitizeLinks = function () {
        DOMPurify.addHook('afterSanitizeAttributes', (function (node) {
            var anchor = document.createElement('a');
            if (node.hasAttribute('href')) {
                anchor.href = node.getAttribute('href'); 
                if (anchor.protocol && !anchor.protocol.match(regex)) {
                    node.removeAttribute('href');
                }
            }
            if (node.hasAttribute('action')) {
                anchor.href = node.getAttribute('action'); 
                if (anchor.protocol && !anchor.protocol.match(regex)) {
                    node.removeAttribute('action');
                }
            }
            if (node.hasAttribute('xlink:href')) {
                anchor.href = node.getAttribute('xlink:href'); 
                if (anchor.protocol && !anchor.protocol.match(regex)) {
                    node.removeAttribute('xlink:href');
                }
            }
        }));
    };
    return SafeHtml;
}());
exports.SafeHtml = SafeHtml;


/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

(function (global, factory) {
	 true ? module.exports = factory() :
	typeof define === 'function' && define.amd ? define(factory) :
	(global.DOMPurify = factory());
}(this, (function () { 'use strict';

var html = ['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr'];

// SVG
var svg = ['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'audio', 'canvas', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'video', 'view', 'vkern'];

var svgFilters = ['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'feSpecularLighting', 'feTile', 'feTurbulence'];

var mathMl = ['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmuliscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mpspace', 'msqrt', 'mystyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover'];

var text = ['#text'];

var html$1 = ['accept', 'action', 'align', 'alt', 'autocomplete', 'background', 'bgcolor', 'border', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'coords', 'datetime', 'default', 'dir', 'disabled', 'download', 'enctype', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'ismap', 'label', 'lang', 'list', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'multiple', 'name', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'span', 'srclang', 'start', 'src', 'step', 'style', 'summary', 'tabindex', 'title', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns'];

var svg$1 = ['accent-height', 'accumulate', 'additivive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'tabindex', 'targetx', 'targety', 'transform', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan'];

var mathMl$1 = ['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns'];

var xml = ['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink'];

/* Add properties to a lookup table */
function addToSet(set, array) {
  var l = array.length;
  while (l--) {
    if (typeof array[l] === 'string') {
      array[l] = array[l].toLowerCase();
    }
    set[array[l]] = true;
  }
  return set;
}

/* Shallow clone an object */
function clone(object) {
  var newObject = {};
  var property = void 0;
  for (property in object) {
    if (Object.prototype.hasOwnProperty.call(object, property)) {
      newObject[property] = object[property];
    }
  }
  return newObject;
}

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var getGlobal = function getGlobal() {
  return typeof window === 'undefined' ? null : window;
};

function createDOMPurify() {
  var window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();

  var DOMPurify = function DOMPurify(root) {
    return createDOMPurify(root);
  };

  /**
      * Version label, exposed for easier checks
      * if DOMPurify is up to date or not
      */
  DOMPurify.version = '1.0.2';

  /**
    * Array of elements that DOMPurify removed during sanitation.
    * Empty if nothing was removed.
    */
  DOMPurify.removed = [];

  if (!window || !window.document || window.document.nodeType !== 9) {
    // Not running in a browser, provide a factory function
    // so that you can pass your own Window
    DOMPurify.isSupported = false;

    return DOMPurify;
  }

  var originalDocument = window.document;
  var useDOMParser = false; // See comment below
  var useXHR = false;

  var document = window.document;
  var DocumentFragment = window.DocumentFragment,
      HTMLTemplateElement = window.HTMLTemplateElement,
      Node = window.Node,
      NodeFilter = window.NodeFilter,
      _window$NamedNodeMap = window.NamedNodeMap,
      NamedNodeMap = _window$NamedNodeMap === undefined ? window.NamedNodeMap || window.MozNamedAttrMap : _window$NamedNodeMap,
      Text = window.Text,
      Comment = window.Comment,
      DOMParser = window.DOMParser,
      _window$XMLHttpReques = window.XMLHttpRequest,
      XMLHttpRequest = _window$XMLHttpReques === undefined ? window.XMLHttpRequest : _window$XMLHttpReques,
      _window$encodeURI = window.encodeURI,
      encodeURI = _window$encodeURI === undefined ? window.encodeURI : _window$encodeURI;

  // As per issue #47, the web-components registry is inherited by a
  // new document created via createHTMLDocument. As per the spec
  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)
  // a new empty registry is used when creating a template contents owner
  // document, so we use that as our parent document to ensure nothing
  // is inherited.

  if (typeof HTMLTemplateElement === 'function') {
    var template = document.createElement('template');
    if (template.content && template.content.ownerDocument) {
      document = template.content.ownerDocument;
    }
  }

  var _document = document,
      implementation = _document.implementation,
      createNodeIterator = _document.createNodeIterator,
      getElementsByTagName = _document.getElementsByTagName,
      createDocumentFragment = _document.createDocumentFragment;

  var importNode = originalDocument.importNode;

  var hooks = {};

  /**
    * Expose whether this browser supports running the full DOMPurify.
    */
  DOMPurify.isSupported = implementation && typeof implementation.createHTMLDocument !== 'undefined' && document.documentMode !== 9;

  /**
    * We consider the elements and attributes below to be safe. Ideally
    * don't add any new ones but feel free to remove unwanted ones.
    */

  /* allowed element names */
  var ALLOWED_TAGS = null;
  var DEFAULT_ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray(html), _toConsumableArray(svg), _toConsumableArray(svgFilters), _toConsumableArray(mathMl), _toConsumableArray(text)));

  /* Allowed attribute names */
  var ALLOWED_ATTR = null;
  var DEFAULT_ALLOWED_ATTR = addToSet({}, [].concat(_toConsumableArray(html$1), _toConsumableArray(svg$1), _toConsumableArray(mathMl$1), _toConsumableArray(xml)));

  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */
  var FORBID_TAGS = null;

  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */
  var FORBID_ATTR = null;

  /* Decide if ARIA attributes are okay */
  var ALLOW_ARIA_ATTR = true;

  /* Decide if custom data attributes are okay */
  var ALLOW_DATA_ATTR = true;

  /* Decide if unknown protocols are okay */
  var ALLOW_UNKNOWN_PROTOCOLS = false;

  /* Output should be safe for jQuery's $() factory? */
  var SAFE_FOR_JQUERY = false;

  /* Output should be safe for common template engines.
   * This means, DOMPurify removes data attributes, mustaches and ERB
   */
  var SAFE_FOR_TEMPLATES = false;

  /* Specify template detection regex for SAFE_FOR_TEMPLATES mode */
  var MUSTACHE_EXPR = /\{\{[\s\S]*|[\s\S]*\}\}/gm;
  var ERB_EXPR = /<%[\s\S]*|[\s\S]*%>/gm;

  /* Decide if document with <html>... should be returned */
  var WHOLE_DOCUMENT = false;

  /* Track whether config is already set on this instance of DOMPurify. */
  var SET_CONFIG = false;

  /* Decide if all elements (e.g. style, script) must be children of
   * document.body. By default, browsers might move them to document.head */
  var FORCE_BODY = false;

  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html string.
   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead
   */
  var RETURN_DOM = false;

  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html string */
  var RETURN_DOM_FRAGMENT = false;

  /* If `RETURN_DOM` or `RETURN_DOM_FRAGMENT` is enabled, decide if the returned DOM
   * `Node` is imported into the current `Document`. If this flag is not enabled the
   * `Node` will belong (its ownerDocument) to a fresh `HTMLDocument`, created by
   * DOMPurify. */
  var RETURN_DOM_IMPORT = false;

  /* Output should be free from DOM clobbering attacks? */
  var SANITIZE_DOM = true;

  /* Keep element content when removing element? */
  var KEEP_CONTENT = true;

  /* Allow usage of profiles like html, svg and mathMl */
  var USE_PROFILES = {};

  /* Tags to ignore content of when KEEP_CONTENT is true */
  var FORBID_CONTENTS = addToSet({}, ['audio', 'head', 'math', 'script', 'style', 'template', 'svg', 'video']);

  /* Tags that are safe for data: URIs */
  var DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image']);

  /* Attributes safe for values like "javascript:" */
  var URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'summary', 'title', 'value', 'style', 'xmlns']);

  /* Keep a reference to config to pass to hooks */
  var CONFIG = null;

  /* Ideally, do not touch anything below this line */
  /* ______________________________________________ */

  var formElement = document.createElement('form');

  /**
  * _parseConfig
  *
  * @param  optional config literal
  */
  // eslint-disable-next-line complexity
  var _parseConfig = function _parseConfig(cfg) {
    /* Shield configuration object from tampering */
    if ((typeof cfg === 'undefined' ? 'undefined' : _typeof(cfg)) !== 'object') {
      cfg = {};
    }

    /* Set configuration parameters */
    ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS) : DEFAULT_ALLOWED_TAGS;
    ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR) : DEFAULT_ALLOWED_ATTR;
    FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS) : {};
    FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR) : {};
    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;
    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true
    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true
    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false
    SAFE_FOR_JQUERY = cfg.SAFE_FOR_JQUERY || false; // Default false
    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false
    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false
    RETURN_DOM = cfg.RETURN_DOM || false; // Default false
    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false
    RETURN_DOM_IMPORT = cfg.RETURN_DOM_IMPORT || false; // Default false
    FORCE_BODY = cfg.FORCE_BODY || false; // Default false
    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true
    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true

    if (SAFE_FOR_TEMPLATES) {
      ALLOW_DATA_ATTR = false;
    }

    if (RETURN_DOM_FRAGMENT) {
      RETURN_DOM = true;
    }

    /* Parse profile info */
    if (USE_PROFILES) {
      ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray(text)));
      ALLOWED_ATTR = [];
      if (USE_PROFILES.html === true) {
        addToSet(ALLOWED_TAGS, html);
        addToSet(ALLOWED_ATTR, html$1);
      }
      if (USE_PROFILES.svg === true) {
        addToSet(ALLOWED_TAGS, svg);
        addToSet(ALLOWED_ATTR, svg$1);
        addToSet(ALLOWED_ATTR, xml);
      }
      if (USE_PROFILES.svgFilters === true) {
        addToSet(ALLOWED_TAGS, svgFilters);
        addToSet(ALLOWED_ATTR, svg$1);
        addToSet(ALLOWED_ATTR, xml);
      }
      if (USE_PROFILES.mathMl === true) {
        addToSet(ALLOWED_TAGS, mathMl);
        addToSet(ALLOWED_ATTR, mathMl$1);
        addToSet(ALLOWED_ATTR, xml);
      }
    }

    /* Merge configuration parameters */
    if (cfg.ADD_TAGS) {
      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {
        ALLOWED_TAGS = clone(ALLOWED_TAGS);
      }
      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);
    }
    if (cfg.ADD_ATTR) {
      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {
        ALLOWED_ATTR = clone(ALLOWED_ATTR);
      }
      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);
    }
    if (cfg.ADD_URI_SAFE_ATTR) {
      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);
    }

    /* Add #text in case KEEP_CONTENT is set to true */
    if (KEEP_CONTENT) {
      ALLOWED_TAGS['#text'] = true;
    }

    // Prevent further manipulation of configuration.
    // Not available in IE8, Safari 5, etc.
    if (Object && 'freeze' in Object) {
      Object.freeze(cfg);
    }

    CONFIG = cfg;
  };

  /**
  * _forceRemove
  *
  * @param  a DOM node
  */
  var _forceRemove = function _forceRemove(node) {
    DOMPurify.removed.push({ element: node });
    try {
      node.parentNode.removeChild(node);
    } catch (err) {
      node.outerHTML = '';
    }
  };

  /**
  * _removeAttribute
  *
  * @param  an Attribute name
  * @param  a DOM node
  */
  var _removeAttribute = function _removeAttribute(name, node) {
    DOMPurify.removed.push({
      attribute: node.getAttributeNode(name),
      from: node
    });
    node.removeAttribute(name);
  };

  /**
  * _initDocument
  *
  * @param  a string of dirty markup
  * @return a DOM, filled with the dirty markup
  */
  var _initDocument = function _initDocument(dirty) {
    /* Create a HTML document */
    var doc = void 0;
    var body = void 0;

    if (FORCE_BODY) {
      dirty = '<remove></remove>' + dirty;
    }

    /* Use XHR if necessary because Safari 10.1 and newer are buggy */
    if (useXHR) {
      try {
        dirty = encodeURI(dirty);
      } catch (err) {}
      var xhr = new XMLHttpRequest();
      xhr.responseType = 'document';
      xhr.open('GET', 'data:text/html;charset=utf-8,' + dirty, false);
      xhr.send(null);
      doc = xhr.response;
    }

    /* Use DOMParser to workaround Firefox bug (see comment below) */
    if (useDOMParser) {
      try {
        doc = new DOMParser().parseFromString(dirty, 'text/html');
      } catch (err) {}
    }

    /* Otherwise use createHTMLDocument, because DOMParser is unsafe in
    Safari (see comment below) */
    if (!doc || !doc.documentElement) {
      doc = implementation.createHTMLDocument('');
      body = doc.body;
      body.parentNode.removeChild(body.parentNode.firstElementChild);
      body.outerHTML = dirty;
    }

    /* Work on whole document or just its body */
    return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];
  };

  // Safari 10.1+ (unfixed as of time of writing) has a catastrophic bug in
  // its implementation of DOMParser such that the following executes the
  // JavaScript:
  //
  // new DOMParser()
  //   .parseFromString('<svg onload=alert(document.domain)>', 'text/html');
  //
  // Later, it was also noticed that even more assumed benign and inert ways
  // of creating a document are now insecure thanks to Safari. So we work
  // around that with a feature test and use XHR to create the document in
  // case we really have to. That one seems safe for now.
  //
  // However, Firefox uses a different parser for innerHTML rather than
  // DOMParser (see https://bugzilla.mozilla.org/show_bug.cgi?id=1205631)
  // which means that you *must* use DOMParser, otherwise the output may
  // not be safe if used in a document.write context later.
  //
  // So we feature detect the Firefox bug and use the DOMParser if necessary.
  if (DOMPurify.isSupported) {
    (function () {
      var doc = _initDocument('<svg><g onload="this.parentNode.remove()"></g></svg>');
      if (!doc.querySelector('svg')) {
        useXHR = true;
      }
      try {
        doc = _initDocument('<svg><p><style><img src="</style><img src=x onerror=alert(1)//">');
        if (doc.querySelector('svg img')) {
          useDOMParser = true;
        }
      } catch (err) {}
    })();
  }

  /**
  * _createIterator
  *
  * @param  document/fragment to create iterator for
  * @return iterator instance
  */
  var _createIterator = function _createIterator(root) {
    return createNodeIterator.call(root.ownerDocument || root, root, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, (function () {
      return NodeFilter.FILTER_ACCEPT;
    }), false);
  };

  /**
  * _isClobbered
  *
  * @param  element to check for clobbering attacks
  * @return true if clobbered, false if safe
  */
  var _isClobbered = function _isClobbered(elm) {
    if (elm instanceof Text || elm instanceof Comment) {
      return false;
    }
    if (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function') {
      return true;
    }
    return false;
  };

  /**
  * _isNode
  *
  * @param object to check whether it's a DOM node
  * @return true is object is a DOM node
  */
  var _isNode = function _isNode(obj) {
    return (typeof Node === 'undefined' ? 'undefined' : _typeof(Node)) === 'object' ? obj instanceof Node : obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && typeof obj.nodeType === 'number' && typeof obj.nodeName === 'string';
  };

  /**
  * _executeHook
  * Execute user configurable hooks
  *
  * @param  {String} entryPoint  Name of the hook's entry point
  * @param  {Node} currentNode
  */
  var _executeHook = function _executeHook(entryPoint, currentNode, data) {
    if (!hooks[entryPoint]) {
      return;
    }

    hooks[entryPoint].forEach((function (hook) {
      hook.call(DOMPurify, currentNode, data, CONFIG);
    }));
  };

  /**
  * _sanitizeElements
  *
  * @protect nodeName
  * @protect textContent
  * @protect removeChild
  *
  * @param   node to check for permission to exist
  * @return  true if node was killed, false if left alive
  */
  var _sanitizeElements = function _sanitizeElements(currentNode) {
    var content = void 0;

    /* Execute a hook if present */
    _executeHook('beforeSanitizeElements', currentNode, null);

    /* Check if element is clobbered or can clobber */
    if (_isClobbered(currentNode)) {
      _forceRemove(currentNode);
      return true;
    }

    /* Now let's check the element's type and name */
    var tagName = currentNode.nodeName.toLowerCase();

    /* Execute a hook if present */
    _executeHook('uponSanitizeElement', currentNode, {
      tagName: tagName,
      allowedTags: ALLOWED_TAGS
    });

    /* Remove element if anything forbids its presence */
    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {
      /* Keep content except for black-listed elements */
      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName] && typeof currentNode.insertAdjacentHTML === 'function') {
        try {
          currentNode.insertAdjacentHTML('AfterEnd', currentNode.innerHTML);
        } catch (err) {}
      }
      _forceRemove(currentNode);
      return true;
    }

    /* Convert markup to cover jQuery behavior */
    if (SAFE_FOR_JQUERY && !currentNode.firstElementChild && (!currentNode.content || !currentNode.content.firstElementChild) && /</g.test(currentNode.textContent)) {
      DOMPurify.removed.push({ element: currentNode.cloneNode() });
      currentNode.innerHTML = currentNode.textContent.replace(/</g, '&lt;');
    }

    /* Sanitize element content to be template-safe */
    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {
      /* Get the element's text content */
      content = currentNode.textContent;
      content = content.replace(MUSTACHE_EXPR, ' ');
      content = content.replace(ERB_EXPR, ' ');
      if (currentNode.textContent !== content) {
        DOMPurify.removed.push({ element: currentNode.cloneNode() });
        currentNode.textContent = content;
      }
    }

    /* Execute a hook if present */
    _executeHook('afterSanitizeElements', currentNode, null);

    return false;
  };

  var DATA_ATTR = /^data-[\-\w.\u00B7-\uFFFF]/; // eslint-disable-line no-useless-escape
  var ARIA_ATTR = /^aria-[\-\w]+$/; // eslint-disable-line no-useless-escape
  var IS_ALLOWED_URI = /^(?:(?:(?:f|ht)tps?|mailto|tel):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i; // eslint-disable-line no-useless-escape
  var IS_SCRIPT_OR_DATA = /^(?:\w+script|data):/i;
  /* This needs to be extensive thanks to Webkit/Blink's behavior */
  var ATTR_WHITESPACE = /[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205f\u3000]/g;

  /**
  * _sanitizeAttributes
  *
  * @protect attributes
  * @protect nodeName
  * @protect removeAttribute
  * @protect setAttribute
  *
  * @param   node to sanitize
  * @return  void
  */
  // eslint-disable-next-line complexity
  var _sanitizeAttributes = function _sanitizeAttributes(currentNode) {
    var attr = void 0;
    var name = void 0;
    var value = void 0;
    var lcName = void 0;
    var idAttr = void 0;
    var attributes = void 0;
    var l = void 0;
    /* Execute a hook if present */
    _executeHook('beforeSanitizeAttributes', currentNode, null);

    attributes = currentNode.attributes;

    /* Check if we have attributes; if not we might have a text node */
    if (!attributes) {
      return;
    }

    var hookEvent = {
      attrName: '',
      attrValue: '',
      keepAttr: true,
      allowedAttributes: ALLOWED_ATTR
    };
    l = attributes.length;

    /* Go backwards over all attributes; safely remove bad ones */
    while (l--) {
      attr = attributes[l];
      name = attr.name;
      value = attr.value.trim();
      lcName = name.toLowerCase();

      /* Execute a hook if present */
      hookEvent.attrName = lcName;
      hookEvent.attrValue = value;
      hookEvent.keepAttr = true;
      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);
      value = hookEvent.attrValue;

      /* Remove attribute */
      // Safari (iOS + Mac), last tested v8.0.5, crashes if you try to
      // remove a "name" attribute from an <img> tag that has an "id"
      // attribute at the time.
      if (lcName === 'name' && currentNode.nodeName === 'IMG' && attributes.id) {
        idAttr = attributes.id;
        attributes = Array.prototype.slice.apply(attributes);
        _removeAttribute('id', currentNode);
        _removeAttribute(name, currentNode);
        if (attributes.indexOf(idAttr) > l) {
          currentNode.setAttribute('id', idAttr.value);
        }
      } else if (
      // This works around a bug in Safari, where input[type=file]
      // cannot be dynamically set after type has been removed
      currentNode.nodeName === 'INPUT' && lcName === 'type' && value === 'file' && (ALLOWED_ATTR[lcName] || !FORBID_ATTR[lcName])) {
        continue;
      } else {
        // This avoids a crash in Safari v9.0 with double-ids.
        // The trick is to first set the id to be empty and then to
        // remove the attribute
        if (name === 'id') {
          currentNode.setAttribute(name, '');
        }
        _removeAttribute(name, currentNode);
      }

      /* Did the hooks approve of the attribute? */
      if (!hookEvent.keepAttr) {
        continue;
      }

      /* Make sure attribute cannot clobber */
      if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in window || value in document || value in formElement)) {
        continue;
      }

      /* Sanitize attribute content to be template-safe */
      if (SAFE_FOR_TEMPLATES) {
        value = value.replace(MUSTACHE_EXPR, ' ');
        value = value.replace(ERB_EXPR, ' ');
      }

      /* Allow valid data-* attributes: At least one character after "-"
         (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)
         XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)
         We don't need to check the value; it's always URI safe. */
      if (ALLOW_DATA_ATTR && DATA_ATTR.test(lcName)) {
        // This attribute is safe
      } else if (ALLOW_ARIA_ATTR && ARIA_ATTR.test(lcName)) {
        // This attribute is safe
        /* Otherwise, check the name is permitted */
      } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {
        continue;

        /* Check value is safe. First, is attr inert? If so, is safe */
      } else if (URI_SAFE_ATTRIBUTES[lcName]) {
        // This attribute is safe
        /* Check no script, data or unknown possibly unsafe URI
         unless we know URI values are safe for that attribute */
      } else if (IS_ALLOWED_URI.test(value.replace(ATTR_WHITESPACE, ''))) {
        // This attribute is safe
        /* Keep image data URIs alive if src/xlink:href is allowed */
      } else if ((lcName === 'src' || lcName === 'xlink:href') && value.indexOf('data:') === 0 && DATA_URI_TAGS[currentNode.nodeName.toLowerCase()]) {
        // This attribute is safe
        /* Allow unknown protocols: This provides support for links that
         are handled by protocol handlers which may be unknown ahead of
         time, e.g. fb:, spotify: */
      } else if (ALLOW_UNKNOWN_PROTOCOLS && !IS_SCRIPT_OR_DATA.test(value.replace(ATTR_WHITESPACE, ''))) {
        // This attribute is safe
        /* Check for binary attributes */
        // eslint-disable-next-line no-negated-condition
      } else if (!value) {
        // Binary attributes are safe at this point
        /* Anything else, presume unsafe, do not add it back */
      } else {
        continue;
      }

      /* Handle invalid data-* attribute set by try-catching it */
      try {
        currentNode.setAttribute(name, value);
        DOMPurify.removed.pop();
      } catch (err) {}
    }

    /* Execute a hook if present */
    _executeHook('afterSanitizeAttributes', currentNode, null);
  };

  /**
  * _sanitizeShadowDOM
  *
  * @param  fragment to iterate over recursively
  * @return void
  */
  var _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {
    var shadowNode = void 0;
    var shadowIterator = _createIterator(fragment);

    /* Execute a hook if present */
    _executeHook('beforeSanitizeShadowDOM', fragment, null);

    while (shadowNode = shadowIterator.nextNode()) {
      /* Execute a hook if present */
      _executeHook('uponSanitizeShadowNode', shadowNode, null);

      /* Sanitize tags and elements */
      if (_sanitizeElements(shadowNode)) {
        continue;
      }

      /* Deep shadow DOM detected */
      if (shadowNode.content instanceof DocumentFragment) {
        _sanitizeShadowDOM(shadowNode.content);
      }

      /* Check attributes, sanitize if necessary */
      _sanitizeAttributes(shadowNode);
    }

    /* Execute a hook if present */
    _executeHook('afterSanitizeShadowDOM', fragment, null);
  };

  /**
  * Sanitize
  * Public method providing core sanitation functionality
  *
  * @param {String|Node} dirty string or DOM node
  * @param {Object} configuration object
  */
  // eslint-disable-next-line complexity
  DOMPurify.sanitize = function (dirty, cfg) {
    var body = void 0;
    var importedNode = void 0;
    var currentNode = void 0;
    var oldNode = void 0;
    var returnNode = void 0;
    /* Make sure we have a string to sanitize.
      DO NOT return early, as this will return the wrong type if
      the user has requested a DOM object rather than a string */
    if (!dirty) {
      dirty = '<!-->';
    }

    /* Stringify, in case dirty is an object */
    if (typeof dirty !== 'string' && !_isNode(dirty)) {
      // eslint-disable-next-line no-negated-condition
      if (typeof dirty.toString !== 'function') {
        throw new TypeError('toString is not a function');
      } else {
        dirty = dirty.toString();
      }
    }

    /* Check we can run. Otherwise fall back or ignore */
    if (!DOMPurify.isSupported) {
      if (_typeof(window.toStaticHTML) === 'object' || typeof window.toStaticHTML === 'function') {
        if (typeof dirty === 'string') {
          return window.toStaticHTML(dirty);
        } else if (_isNode(dirty)) {
          return window.toStaticHTML(dirty.outerHTML);
        }
      }
      return dirty;
    }

    /* Assign config vars */
    if (!SET_CONFIG) {
      _parseConfig(cfg);
    }

    /* Clean up removed elements */
    DOMPurify.removed = [];

    if (dirty instanceof Node) {
      /* If dirty is a DOM element, append to an empty document to avoid
         elements being stripped by the parser */
      body = _initDocument('<!-->');
      importedNode = body.ownerDocument.importNode(dirty, true);
      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {
        /* Node is already a body, use as is */
        body = importedNode;
      } else {
        body.appendChild(importedNode);
      }
    } else {
      /* Exit directly if we have nothing to do */
      if (!RETURN_DOM && !WHOLE_DOCUMENT && dirty.indexOf('<') === -1) {
        return dirty;
      }

      /* Initialize the document to work on */
      body = _initDocument(dirty);

      /* Check we have a DOM node from the data */
      if (!body) {
        return RETURN_DOM ? null : '';
      }
    }

    /* Remove first element node (ours) if FORCE_BODY is set */
    if (FORCE_BODY) {
      _forceRemove(body.firstChild);
    }

    /* Get node iterator */
    var nodeIterator = _createIterator(body);

    /* Now start iterating over the created document */
    while (currentNode = nodeIterator.nextNode()) {
      /* Fix IE's strange behavior with manipulated textNodes #89 */
      if (currentNode.nodeType === 3 && currentNode === oldNode) {
        continue;
      }

      /* Sanitize tags and elements */
      if (_sanitizeElements(currentNode)) {
        continue;
      }

      /* Shadow DOM detected, sanitize it */
      if (currentNode.content instanceof DocumentFragment) {
        _sanitizeShadowDOM(currentNode.content);
      }

      /* Check attributes, sanitize if necessary */
      _sanitizeAttributes(currentNode);

      oldNode = currentNode;
    }

    /* Return sanitized string or DOM */
    if (RETURN_DOM) {
      if (RETURN_DOM_FRAGMENT) {
        returnNode = createDocumentFragment.call(body.ownerDocument);

        while (body.firstChild) {
          returnNode.appendChild(body.firstChild);
        }
      } else {
        returnNode = body;
      }

      if (RETURN_DOM_IMPORT) {
        /* AdoptNode() is not used because internal state is not reset
               (e.g. the past names map of a HTMLFormElement), this is safe
               in theory but we would rather not risk another attack vector.
               The state that is cloned by importNode() is explicitly defined
               by the specs. */
        returnNode = importNode.call(originalDocument, returnNode, true);
      }

      return returnNode;
    }

    return WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;
  };

  /**
  * Public method to set the configuration once
  * setConfig
  *
  * @param {Object} configuration object
  * @return void
  */
  DOMPurify.setConfig = function (cfg) {
    _parseConfig(cfg);
    SET_CONFIG = true;
  };

  /**
  * Public method to remove the configuration
  * clearConfig
  *
  * @return void
  */
  DOMPurify.clearConfig = function () {
    CONFIG = null;
    SET_CONFIG = false;
  };

  /**
  * AddHook
  * Public method to add DOMPurify hooks
  *
  * @param {String} entryPoint
  * @param {Function} hookFunction
  */
  DOMPurify.addHook = function (entryPoint, hookFunction) {
    if (typeof hookFunction !== 'function') {
      return;
    }
    hooks[entryPoint] = hooks[entryPoint] || [];
    hooks[entryPoint].push(hookFunction);
  };

  /**
  * RemoveHook
  * Public method to remove a DOMPurify hook at a given entryPoint
  * (pops it from the stack of hooks if more are present)
  *
  * @param {String} entryPoint
  * @return void
  */
  DOMPurify.removeHook = function (entryPoint) {
    if (hooks[entryPoint]) {
      hooks[entryPoint].pop();
    }
  };

  /**
  * RemoveHooks
  * Public method to remove all DOMPurify hooks at a given entryPoint
  *
  * @param  {String} entryPoint
  * @return void
  */
  DOMPurify.removeHooks = function (entryPoint) {
    if (hooks[entryPoint]) {
      hooks[entryPoint] = [];
    }
  };

  /**
  * RemoveAllHooks
  * Public method to remove all DOMPurify hooks
  *
  * @return void
  */
  DOMPurify.removeAllHooks = function () {
    hooks = {};
  };

  return DOMPurify;
}

var purify = createDOMPurify();

return purify;

})));


/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_telemetry_1 = __webpack_require__(6);
var sp_core_library_1 = __webpack_require__(5);
var CKEDITOR_PATH_KEY = 'CKEDITOR_BASEPATH';
var COMM_SITE_FLIGHT_ID = 932; 
var RESOURCES_PATH = __webpack_require__.p;
var CKLoader = (function () {
    function CKLoader() {
    }
    CKLoader._setup = function (editor) {
        CKLoader._editorModule = editor;
        if (sp_core_library_1._SPFlight.isEnabled(COMM_SITE_FLIGHT_ID)) {
            CKEDITOR.disableAutoInline = true;
        }
    };
    CKLoader.prototype.loadModule = function (editorSrc) {
        var url = __webpack_require__(252);
        if (false) {
            return Promise.resolve(undefined);
        }
        if (!CKLoader._editorPromise) {
            var path = "ckeditor/";
            window[CKEDITOR_PATH_KEY] = editorSrc || url.resolve(RESOURCES_PATH, path);
            CKLoader._editorPromise = new Promise(function (complete) {
                if (editorSrc) {
                    __webpack_require__.e/* require.ensure */(0).then((function (require) {
                        var editor = __webpack_require__(135);
                        CKLoader._setup(editor);
                        complete(editor);
                    }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);
                }
                else {
                    __webpack_require__.e/* require.ensure */(0).then((function (require) {
                        var editor = __webpack_require__(136);
                        CKLoader._setup(editor);
                        complete(editor);
                    }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);
                }
            });
            CKLoader._editorPromise.catch((function (error) {
                sp_telemetry_1._TraceLogger.logError(CKLoader.logSource, error);
            }));
        }
        return CKLoader._editorPromise;
    };
    CKLoader.logSource = sp_telemetry_1._LogSource.create('SPRteCKLoader');
    return CKLoader;
}());
exports.default = CKLoader;


/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



var punycode = __webpack_require__(253);
var util = __webpack_require__(255);

exports.parse = urlParse;
exports.resolve = urlResolve;
exports.resolveObject = urlResolveObject;
exports.format = urlFormat;

exports.Url = Url;

function Url() {
  this.protocol = null;
  this.slashes = null;
  this.auth = null;
  this.host = null;
  this.port = null;
  this.hostname = null;
  this.hash = null;
  this.search = null;
  this.query = null;
  this.pathname = null;
  this.path = null;
  this.href = null;
}

// Reference: RFC 3986, RFC 1808, RFC 2396

// define these here so at least they only have to be
// compiled once on the first module load.
var protocolPattern = /^([a-z0-9.+-]+:)/i,
    portPattern = /:[0-9]*$/,

    // Special case for a simple path URL
    simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,

    // RFC 2396: characters reserved for delimiting URLs.
    // We actually just auto-escape these.
    delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],

    // RFC 2396: characters not allowed for various reasons.
    unwise = ['{', '}', '|', '\\', '^', '`'].concat(delims),

    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
    autoEscape = ['\''].concat(unwise),
    // Characters that are never ever allowed in a hostname.
    // Note that any invalid chars are also handled, but these
    // are the ones that are *expected* to be seen, so we fast-path
    // them.
    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
    hostEndingChars = ['/', '?', '#'],
    hostnameMaxLen = 255,
    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,
    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
    // protocols that can allow "unsafe" and "unwise" chars.
    unsafeProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that never have a hostname.
    hostlessProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that always contain a // bit.
    slashedProtocol = {
      'http': true,
      'https': true,
      'ftp': true,
      'gopher': true,
      'file': true,
      'http:': true,
      'https:': true,
      'ftp:': true,
      'gopher:': true,
      'file:': true
    },
    querystring = __webpack_require__(256);

function urlParse(url, parseQueryString, slashesDenoteHost) {
  if (url && util.isObject(url) && url instanceof Url) return url;

  var u = new Url;
  u.parse(url, parseQueryString, slashesDenoteHost);
  return u;
}

Url.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {
  if (!util.isString(url)) {
    throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
  }

  // Copy chrome, IE, opera backslash-handling behavior.
  // Back slashes before the query string get converted to forward slashes
  // See: https://code.google.com/p/chromium/issues/detail?id=25916
  var queryIndex = url.indexOf('?'),
      splitter =
          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',
      uSplit = url.split(splitter),
      slashRegex = /\\/g;
  uSplit[0] = uSplit[0].replace(slashRegex, '/');
  url = uSplit.join(splitter);

  var rest = url;

  // trim before proceeding.
  // This is to support parse stuff like "  http://foo.com  \n"
  rest = rest.trim();

  if (!slashesDenoteHost && url.split('#').length === 1) {
    // Try fast path regexp
    var simplePath = simplePathPattern.exec(rest);
    if (simplePath) {
      this.path = rest;
      this.href = rest;
      this.pathname = simplePath[1];
      if (simplePath[2]) {
        this.search = simplePath[2];
        if (parseQueryString) {
          this.query = querystring.parse(this.search.substr(1));
        } else {
          this.query = this.search.substr(1);
        }
      } else if (parseQueryString) {
        this.search = '';
        this.query = {};
      }
      return this;
    }
  }

  var proto = protocolPattern.exec(rest);
  if (proto) {
    proto = proto[0];
    var lowerProto = proto.toLowerCase();
    this.protocol = lowerProto;
    rest = rest.substr(proto.length);
  }

  // figure out if it's got a host
  // user@server is *always* interpreted as a hostname, and url
  // resolution will treat //foo/bar as host=foo,path=bar because that's
  // how the browser resolves relative URLs.
  if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
    var slashes = rest.substr(0, 2) === '//';
    if (slashes && !(proto && hostlessProtocol[proto])) {
      rest = rest.substr(2);
      this.slashes = true;
    }
  }

  if (!hostlessProtocol[proto] &&
      (slashes || (proto && !slashedProtocol[proto]))) {

    // there's a hostname.
    // the first instance of /, ?, ;, or # ends the host.
    //
    // If there is an @ in the hostname, then non-host chars *are* allowed
    // to the left of the last @ sign, unless some host-ending character
    // comes *before* the @-sign.
    // URLs are obnoxious.
    //
    // ex:
    // http://a@b@c/ => user:a@b host:c
    // http://a@b?@c => user:a host:c path:/?@c

    // v0.12 TODO(isaacs): This is not quite how Chrome does things.
    // Review our test case against browsers more comprehensively.

    // find the first instance of any hostEndingChars
    var hostEnd = -1;
    for (var i = 0; i < hostEndingChars.length; i++) {
      var hec = rest.indexOf(hostEndingChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }

    // at this point, either we have an explicit point where the
    // auth portion cannot go past, or the last @ char is the decider.
    var auth, atSign;
    if (hostEnd === -1) {
      // atSign can be anywhere.
      atSign = rest.lastIndexOf('@');
    } else {
      // atSign must be in auth portion.
      // http://a@b/c@d => host:b auth:a path:/c@d
      atSign = rest.lastIndexOf('@', hostEnd);
    }

    // Now we have a portion which is definitely the auth.
    // Pull that off.
    if (atSign !== -1) {
      auth = rest.slice(0, atSign);
      rest = rest.slice(atSign + 1);
      this.auth = decodeURIComponent(auth);
    }

    // the host is the remaining to the left of the first non-host char
    hostEnd = -1;
    for (var i = 0; i < nonHostChars.length; i++) {
      var hec = rest.indexOf(nonHostChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }
    // if we still have not hit it, then the entire thing is a host.
    if (hostEnd === -1)
      hostEnd = rest.length;

    this.host = rest.slice(0, hostEnd);
    rest = rest.slice(hostEnd);

    // pull out port.
    this.parseHost();

    // we've indicated that there is a hostname,
    // so even if it's empty, it has to be present.
    this.hostname = this.hostname || '';

    // if hostname begins with [ and ends with ]
    // assume that it's an IPv6 address.
    var ipv6Hostname = this.hostname[0] === '[' &&
        this.hostname[this.hostname.length - 1] === ']';

    // validate a little.
    if (!ipv6Hostname) {
      var hostparts = this.hostname.split(/\./);
      for (var i = 0, l = hostparts.length; i < l; i++) {
        var part = hostparts[i];
        if (!part) continue;
        if (!part.match(hostnamePartPattern)) {
          var newpart = '';
          for (var j = 0, k = part.length; j < k; j++) {
            if (part.charCodeAt(j) > 127) {
              // we replace non-ASCII char with a temporary placeholder
              // we need this to make sure size of hostname is not
              // broken by replacing non-ASCII by nothing
              newpart += 'x';
            } else {
              newpart += part[j];
            }
          }
          // we test again with ASCII char only
          if (!newpart.match(hostnamePartPattern)) {
            var validParts = hostparts.slice(0, i);
            var notHost = hostparts.slice(i + 1);
            var bit = part.match(hostnamePartStart);
            if (bit) {
              validParts.push(bit[1]);
              notHost.unshift(bit[2]);
            }
            if (notHost.length) {
              rest = '/' + notHost.join('.') + rest;
            }
            this.hostname = validParts.join('.');
            break;
          }
        }
      }
    }

    if (this.hostname.length > hostnameMaxLen) {
      this.hostname = '';
    } else {
      // hostnames are always lower case.
      this.hostname = this.hostname.toLowerCase();
    }

    if (!ipv6Hostname) {
      // IDNA Support: Returns a punycoded representation of "domain".
      // It only converts parts of the domain name that
      // have non-ASCII characters, i.e. it doesn't matter if
      // you call it with a domain that already is ASCII-only.
      this.hostname = punycode.toASCII(this.hostname);
    }

    var p = this.port ? ':' + this.port : '';
    var h = this.hostname || '';
    this.host = h + p;
    this.href += this.host;

    // strip [ and ] from the hostname
    // the host field still retains them, though
    if (ipv6Hostname) {
      this.hostname = this.hostname.substr(1, this.hostname.length - 2);
      if (rest[0] !== '/') {
        rest = '/' + rest;
      }
    }
  }

  // now rest is set to the post-host stuff.
  // chop off any delim chars.
  if (!unsafeProtocol[lowerProto]) {

    // First, make 100% sure that any "autoEscape" chars get
    // escaped, even if encodeURIComponent doesn't think they
    // need to be.
    for (var i = 0, l = autoEscape.length; i < l; i++) {
      var ae = autoEscape[i];
      if (rest.indexOf(ae) === -1)
        continue;
      var esc = encodeURIComponent(ae);
      if (esc === ae) {
        esc = escape(ae);
      }
      rest = rest.split(ae).join(esc);
    }
  }


  // chop off from the tail first.
  var hash = rest.indexOf('#');
  if (hash !== -1) {
    // got a fragment string.
    this.hash = rest.substr(hash);
    rest = rest.slice(0, hash);
  }
  var qm = rest.indexOf('?');
  if (qm !== -1) {
    this.search = rest.substr(qm);
    this.query = rest.substr(qm + 1);
    if (parseQueryString) {
      this.query = querystring.parse(this.query);
    }
    rest = rest.slice(0, qm);
  } else if (parseQueryString) {
    // no query string, but parseQueryString still requested
    this.search = '';
    this.query = {};
  }
  if (rest) this.pathname = rest;
  if (slashedProtocol[lowerProto] &&
      this.hostname && !this.pathname) {
    this.pathname = '/';
  }

  //to support http.request
  if (this.pathname || this.search) {
    var p = this.pathname || '';
    var s = this.search || '';
    this.path = p + s;
  }

  // finally, reconstruct the href based on what has been validated.
  this.href = this.format();
  return this;
};

// format a parsed object into a url string
function urlFormat(obj) {
  // ensure it's an object, and not a string url.
  // If it's an obj, this is a no-op.
  // this way, you can call url_format() on strings
  // to clean up potentially wonky urls.
  if (util.isString(obj)) obj = urlParse(obj);
  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
  return obj.format();
}

Url.prototype.format = function() {
  var auth = this.auth || '';
  if (auth) {
    auth = encodeURIComponent(auth);
    auth = auth.replace(/%3A/i, ':');
    auth += '@';
  }

  var protocol = this.protocol || '',
      pathname = this.pathname || '',
      hash = this.hash || '',
      host = false,
      query = '';

  if (this.host) {
    host = auth + this.host;
  } else if (this.hostname) {
    host = auth + (this.hostname.indexOf(':') === -1 ?
        this.hostname :
        '[' + this.hostname + ']');
    if (this.port) {
      host += ':' + this.port;
    }
  }

  if (this.query &&
      util.isObject(this.query) &&
      Object.keys(this.query).length) {
    query = querystring.stringify(this.query);
  }

  var search = this.search || (query && ('?' + query)) || '';

  if (protocol && protocol.substr(-1) !== ':') protocol += ':';

  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
  // unless they had them to begin with.
  if (this.slashes ||
      (!protocol || slashedProtocol[protocol]) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }

  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
  if (search && search.charAt(0) !== '?') search = '?' + search;

  pathname = pathname.replace(/[?#]/g, (function(match) {
    return encodeURIComponent(match);
  }));
  search = search.replace('#', '%23');

  return protocol + host + pathname + search + hash;
};

function urlResolve(source, relative) {
  return urlParse(source, false, true).resolve(relative);
}

Url.prototype.resolve = function(relative) {
  return this.resolveObject(urlParse(relative, false, true)).format();
};

function urlResolveObject(source, relative) {
  if (!source) return relative;
  return urlParse(source, false, true).resolveObject(relative);
}

Url.prototype.resolveObject = function(relative) {
  if (util.isString(relative)) {
    var rel = new Url();
    rel.parse(relative, false, true);
    relative = rel;
  }

  var result = new Url();
  var tkeys = Object.keys(this);
  for (var tk = 0; tk < tkeys.length; tk++) {
    var tkey = tkeys[tk];
    result[tkey] = this[tkey];
  }

  // hash is always overridden, no matter what.
  // even href="" will remove it.
  result.hash = relative.hash;

  // if the relative url is empty, then there's nothing left to do here.
  if (relative.href === '') {
    result.href = result.format();
    return result;
  }

  // hrefs like //foo/bar always cut to the protocol.
  if (relative.slashes && !relative.protocol) {
    // take everything except the protocol from relative
    var rkeys = Object.keys(relative);
    for (var rk = 0; rk < rkeys.length; rk++) {
      var rkey = rkeys[rk];
      if (rkey !== 'protocol')
        result[rkey] = relative[rkey];
    }

    //urlParse appends trailing / to urls like http://www.example.com
    if (slashedProtocol[result.protocol] &&
        result.hostname && !result.pathname) {
      result.path = result.pathname = '/';
    }

    result.href = result.format();
    return result;
  }

  if (relative.protocol && relative.protocol !== result.protocol) {
    // if it's a known url protocol, then changing
    // the protocol does weird things
    // first, if it's not file:, then we MUST have a host,
    // and if there was a path
    // to begin with, then we MUST have a path.
    // if it is file:, then the host is dropped,
    // because that's known to be hostless.
    // anything else is assumed to be absolute.
    if (!slashedProtocol[relative.protocol]) {
      var keys = Object.keys(relative);
      for (var v = 0; v < keys.length; v++) {
        var k = keys[v];
        result[k] = relative[k];
      }
      result.href = result.format();
      return result;
    }

    result.protocol = relative.protocol;
    if (!relative.host && !hostlessProtocol[relative.protocol]) {
      var relPath = (relative.pathname || '').split('/');
      while (relPath.length && !(relative.host = relPath.shift()));
      if (!relative.host) relative.host = '';
      if (!relative.hostname) relative.hostname = '';
      if (relPath[0] !== '') relPath.unshift('');
      if (relPath.length < 2) relPath.unshift('');
      result.pathname = relPath.join('/');
    } else {
      result.pathname = relative.pathname;
    }
    result.search = relative.search;
    result.query = relative.query;
    result.host = relative.host || '';
    result.auth = relative.auth;
    result.hostname = relative.hostname || relative.host;
    result.port = relative.port;
    // to support http.request
    if (result.pathname || result.search) {
      var p = result.pathname || '';
      var s = result.search || '';
      result.path = p + s;
    }
    result.slashes = result.slashes || relative.slashes;
    result.href = result.format();
    return result;
  }

  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),
      isRelAbs = (
          relative.host ||
          relative.pathname && relative.pathname.charAt(0) === '/'
      ),
      mustEndAbs = (isRelAbs || isSourceAbs ||
                    (result.host && relative.pathname)),
      removeAllDots = mustEndAbs,
      srcPath = result.pathname && result.pathname.split('/') || [],
      relPath = relative.pathname && relative.pathname.split('/') || [],
      psychotic = result.protocol && !slashedProtocol[result.protocol];

  // if the url is a non-slashed url, then relative
  // links like ../.. should be able
  // to crawl up to the hostname, as well.  This is strange.
  // result.protocol has already been set by now.
  // Later on, put the first path part into the host field.
  if (psychotic) {
    result.hostname = '';
    result.port = null;
    if (result.host) {
      if (srcPath[0] === '') srcPath[0] = result.host;
      else srcPath.unshift(result.host);
    }
    result.host = '';
    if (relative.protocol) {
      relative.hostname = null;
      relative.port = null;
      if (relative.host) {
        if (relPath[0] === '') relPath[0] = relative.host;
        else relPath.unshift(relative.host);
      }
      relative.host = null;
    }
    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
  }

  if (isRelAbs) {
    // it's absolute.
    result.host = (relative.host || relative.host === '') ?
                  relative.host : result.host;
    result.hostname = (relative.hostname || relative.hostname === '') ?
                      relative.hostname : result.hostname;
    result.search = relative.search;
    result.query = relative.query;
    srcPath = relPath;
    // fall through to the dot-handling below.
  } else if (relPath.length) {
    // it's relative
    // throw away the existing file, and take the new path instead.
    if (!srcPath) srcPath = [];
    srcPath.pop();
    srcPath = srcPath.concat(relPath);
    result.search = relative.search;
    result.query = relative.query;
  } else if (!util.isNullOrUndefined(relative.search)) {
    // just pull out the search.
    // like href='?foo'.
    // Put this after the other two cases because it simplifies the booleans
    if (psychotic) {
      result.hostname = result.host = srcPath.shift();
      //occationaly the auth can get stuck only in host
      //this especially happens in cases like
      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
      var authInHost = result.host && result.host.indexOf('@') > 0 ?
                       result.host.split('@') : false;
      if (authInHost) {
        result.auth = authInHost.shift();
        result.host = result.hostname = authInHost.shift();
      }
    }
    result.search = relative.search;
    result.query = relative.query;
    //to support http.request
    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
      result.path = (result.pathname ? result.pathname : '') +
                    (result.search ? result.search : '');
    }
    result.href = result.format();
    return result;
  }

  if (!srcPath.length) {
    // no path at all.  easy.
    // we've already handled the other stuff above.
    result.pathname = null;
    //to support http.request
    if (result.search) {
      result.path = '/' + result.search;
    } else {
      result.path = null;
    }
    result.href = result.format();
    return result;
  }

  // if a url ENDs in . or .., then it must get a trailing slash.
  // however, if it ends in anything else non-slashy,
  // then it must NOT get a trailing slash.
  var last = srcPath.slice(-1)[0];
  var hasTrailingSlash = (
      (result.host || relative.host || srcPath.length > 1) &&
      (last === '.' || last === '..') || last === '');

  // strip single dots, resolve double dots to parent dir
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = srcPath.length; i >= 0; i--) {
    last = srcPath[i];
    if (last === '.') {
      srcPath.splice(i, 1);
    } else if (last === '..') {
      srcPath.splice(i, 1);
      up++;
    } else if (up) {
      srcPath.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (!mustEndAbs && !removeAllDots) {
    for (; up--; up) {
      srcPath.unshift('..');
    }
  }

  if (mustEndAbs && srcPath[0] !== '' &&
      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
    srcPath.unshift('');
  }

  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {
    srcPath.push('');
  }

  var isAbsolute = srcPath[0] === '' ||
      (srcPath[0] && srcPath[0].charAt(0) === '/');

  // put the host back
  if (psychotic) {
    result.hostname = result.host = isAbsolute ? '' :
                                    srcPath.length ? srcPath.shift() : '';
    //occationaly the auth can get stuck only in host
    //this especially happens in cases like
    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
    var authInHost = result.host && result.host.indexOf('@') > 0 ?
                     result.host.split('@') : false;
    if (authInHost) {
      result.auth = authInHost.shift();
      result.host = result.hostname = authInHost.shift();
    }
  }

  mustEndAbs = mustEndAbs || (result.host && srcPath.length);

  if (mustEndAbs && !isAbsolute) {
    srcPath.unshift('');
  }

  if (!srcPath.length) {
    result.pathname = null;
    result.path = null;
  } else {
    result.pathname = srcPath.join('/');
  }

  //to support request.http
  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
    result.path = (result.pathname ? result.pathname : '') +
                  (result.search ? result.search : '');
  }
  result.auth = relative.auth || result.auth;
  result.slashes = result.slashes || relative.slashes;
  result.href = result.format();
  return result;
};

Url.prototype.parseHost = function() {
  var host = this.host;
  var port = portPattern.exec(host);
  if (port) {
    port = port[0];
    if (port !== ':') {
      this.port = port.substr(1);
    }
    host = host.substr(0, host.length - port.length);
  }
  if (host) this.hostname = host;
};


/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/punycode v1.4.1 by @mathias */
;(function(root) {

	/** Detect free variables */
	var freeExports = typeof exports == 'object' && exports &&
		!exports.nodeType && exports;
	var freeModule = typeof module == 'object' && module &&
		!module.nodeType && module;
	var freeGlobal = typeof global == 'object' && global;
	if (
		freeGlobal.global === freeGlobal ||
		freeGlobal.window === freeGlobal ||
		freeGlobal.self === freeGlobal
	) {
		root = freeGlobal;
	}

	/**
	 * The `punycode` object.
	 * @name punycode
	 * @type Object
	 */
	var punycode,

	/** Highest positive signed 32-bit float value */
	maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1

	/** Bootstring parameters */
	base = 36,
	tMin = 1,
	tMax = 26,
	skew = 38,
	damp = 700,
	initialBias = 72,
	initialN = 128, // 0x80
	delimiter = '-', // '\x2D'

	/** Regular expressions */
	regexPunycode = /^xn--/,
	regexNonASCII = /[^\x20-\x7E]/, // unprintable ASCII chars + non-ASCII chars
	regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, // RFC 3490 separators

	/** Error messages */
	errors = {
		'overflow': 'Overflow: input needs wider integers to process',
		'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
		'invalid-input': 'Invalid input'
	},

	/** Convenience shortcuts */
	baseMinusTMin = base - tMin,
	floor = Math.floor,
	stringFromCharCode = String.fromCharCode,

	/** Temporary variable */
	key;

	/*--------------------------------------------------------------------------*/

	/**
	 * A generic error utility function.
	 * @private
	 * @param {String} type The error type.
	 * @returns {Error} Throws a `RangeError` with the applicable error message.
	 */
	function error(type) {
		throw new RangeError(errors[type]);
	}

	/**
	 * A generic `Array#map` utility function.
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} callback The function that gets called for every array
	 * item.
	 * @returns {Array} A new array of values returned by the callback function.
	 */
	function map(array, fn) {
		var length = array.length;
		var result = [];
		while (length--) {
			result[length] = fn(array[length]);
		}
		return result;
	}

	/**
	 * A simple `Array#map`-like wrapper to work with domain name strings or email
	 * addresses.
	 * @private
	 * @param {String} domain The domain name or email address.
	 * @param {Function} callback The function that gets called for every
	 * character.
	 * @returns {Array} A new string of characters returned by the callback
	 * function.
	 */
	function mapDomain(string, fn) {
		var parts = string.split('@');
		var result = '';
		if (parts.length > 1) {
			// In email addresses, only the domain name should be punycoded. Leave
			// the local part (i.e. everything up to `@`) intact.
			result = parts[0] + '@';
			string = parts[1];
		}
		// Avoid `split(regex)` for IE8 compatibility. See #17.
		string = string.replace(regexSeparators, '\x2E');
		var labels = string.split('.');
		var encoded = map(labels, fn).join('.');
		return result + encoded;
	}

	/**
	 * Creates an array containing the numeric code points of each Unicode
	 * character in the string. While JavaScript uses UCS-2 internally,
	 * this function will convert a pair of surrogate halves (each of which
	 * UCS-2 exposes as separate characters) into a single code point,
	 * matching UTF-16.
	 * @see `punycode.ucs2.encode`
	 * @see <https://mathiasbynens.be/notes/javascript-encoding>
	 * @memberOf punycode.ucs2
	 * @name decode
	 * @param {String} string The Unicode input string (UCS-2).
	 * @returns {Array} The new array of code points.
	 */
	function ucs2decode(string) {
		var output = [],
		    counter = 0,
		    length = string.length,
		    value,
		    extra;
		while (counter < length) {
			value = string.charCodeAt(counter++);
			if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
				// high surrogate, and there is a next character
				extra = string.charCodeAt(counter++);
				if ((extra & 0xFC00) == 0xDC00) { // low surrogate
					output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
				} else {
					// unmatched surrogate; only append this code unit, in case the next
					// code unit is the high surrogate of a surrogate pair
					output.push(value);
					counter--;
				}
			} else {
				output.push(value);
			}
		}
		return output;
	}

	/**
	 * Creates a string based on an array of numeric code points.
	 * @see `punycode.ucs2.decode`
	 * @memberOf punycode.ucs2
	 * @name encode
	 * @param {Array} codePoints The array of numeric code points.
	 * @returns {String} The new Unicode string (UCS-2).
	 */
	function ucs2encode(array) {
		return map(array, (function(value) {
			var output = '';
			if (value > 0xFFFF) {
				value -= 0x10000;
				output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
				value = 0xDC00 | value & 0x3FF;
			}
			output += stringFromCharCode(value);
			return output;
		})).join('');
	}

	/**
	 * Converts a basic code point into a digit/integer.
	 * @see `digitToBasic()`
	 * @private
	 * @param {Number} codePoint The basic numeric code point value.
	 * @returns {Number} The numeric value of a basic code point (for use in
	 * representing integers) in the range `0` to `base - 1`, or `base` if
	 * the code point does not represent a value.
	 */
	function basicToDigit(codePoint) {
		if (codePoint - 48 < 10) {
			return codePoint - 22;
		}
		if (codePoint - 65 < 26) {
			return codePoint - 65;
		}
		if (codePoint - 97 < 26) {
			return codePoint - 97;
		}
		return base;
	}

	/**
	 * Converts a digit/integer into a basic code point.
	 * @see `basicToDigit()`
	 * @private
	 * @param {Number} digit The numeric value of a basic code point.
	 * @returns {Number} The basic code point whose value (when used for
	 * representing integers) is `digit`, which needs to be in the range
	 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
	 * used; else, the lowercase form is used. The behavior is undefined
	 * if `flag` is non-zero and `digit` has no uppercase form.
	 */
	function digitToBasic(digit, flag) {
		//  0..25 map to ASCII a..z or A..Z
		// 26..35 map to ASCII 0..9
		return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
	}

	/**
	 * Bias adaptation function as per section 3.4 of RFC 3492.
	 * https://tools.ietf.org/html/rfc3492#section-3.4
	 * @private
	 */
	function adapt(delta, numPoints, firstTime) {
		var k = 0;
		delta = firstTime ? floor(delta / damp) : delta >> 1;
		delta += floor(delta / numPoints);
		for (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {
			delta = floor(delta / baseMinusTMin);
		}
		return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
	}

	/**
	 * Converts a Punycode string of ASCII-only symbols to a string of Unicode
	 * symbols.
	 * @memberOf punycode
	 * @param {String} input The Punycode string of ASCII-only symbols.
	 * @returns {String} The resulting string of Unicode symbols.
	 */
	function decode(input) {
		// Don't use UCS-2
		var output = [],
		    inputLength = input.length,
		    out,
		    i = 0,
		    n = initialN,
		    bias = initialBias,
		    basic,
		    j,
		    index,
		    oldi,
		    w,
		    k,
		    digit,
		    t,
		    /** Cached calculation results */
		    baseMinusT;

		// Handle the basic code points: let `basic` be the number of input code
		// points before the last delimiter, or `0` if there is none, then copy
		// the first basic code points to the output.

		basic = input.lastIndexOf(delimiter);
		if (basic < 0) {
			basic = 0;
		}

		for (j = 0; j < basic; ++j) {
			// if it's not a basic code point
			if (input.charCodeAt(j) >= 0x80) {
				error('not-basic');
			}
			output.push(input.charCodeAt(j));
		}

		// Main decoding loop: start just after the last delimiter if any basic code
		// points were copied; start at the beginning otherwise.

		for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {

			// `index` is the index of the next character to be consumed.
			// Decode a generalized variable-length integer into `delta`,
			// which gets added to `i`. The overflow checking is easier
			// if we increase `i` as we go, then subtract off its starting
			// value at the end to obtain `delta`.
			for (oldi = i, w = 1, k = base; /* no condition */; k += base) {

				if (index >= inputLength) {
					error('invalid-input');
				}

				digit = basicToDigit(input.charCodeAt(index++));

				if (digit >= base || digit > floor((maxInt - i) / w)) {
					error('overflow');
				}

				i += digit * w;
				t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);

				if (digit < t) {
					break;
				}

				baseMinusT = base - t;
				if (w > floor(maxInt / baseMinusT)) {
					error('overflow');
				}

				w *= baseMinusT;

			}

			out = output.length + 1;
			bias = adapt(i - oldi, out, oldi == 0);

			// `i` was supposed to wrap around from `out` to `0`,
			// incrementing `n` each time, so we'll fix that now:
			if (floor(i / out) > maxInt - n) {
				error('overflow');
			}

			n += floor(i / out);
			i %= out;

			// Insert `n` at position `i` of the output
			output.splice(i++, 0, n);

		}

		return ucs2encode(output);
	}

	/**
	 * Converts a string of Unicode symbols (e.g. a domain name label) to a
	 * Punycode string of ASCII-only symbols.
	 * @memberOf punycode
	 * @param {String} input The string of Unicode symbols.
	 * @returns {String} The resulting Punycode string of ASCII-only symbols.
	 */
	function encode(input) {
		var n,
		    delta,
		    handledCPCount,
		    basicLength,
		    bias,
		    j,
		    m,
		    q,
		    k,
		    t,
		    currentValue,
		    output = [],
		    /** `inputLength` will hold the number of code points in `input`. */
		    inputLength,
		    /** Cached calculation results */
		    handledCPCountPlusOne,
		    baseMinusT,
		    qMinusT;

		// Convert the input in UCS-2 to Unicode
		input = ucs2decode(input);

		// Cache the length
		inputLength = input.length;

		// Initialize the state
		n = initialN;
		delta = 0;
		bias = initialBias;

		// Handle the basic code points
		for (j = 0; j < inputLength; ++j) {
			currentValue = input[j];
			if (currentValue < 0x80) {
				output.push(stringFromCharCode(currentValue));
			}
		}

		handledCPCount = basicLength = output.length;

		// `handledCPCount` is the number of code points that have been handled;
		// `basicLength` is the number of basic code points.

		// Finish the basic string - if it is not empty - with a delimiter
		if (basicLength) {
			output.push(delimiter);
		}

		// Main encoding loop:
		while (handledCPCount < inputLength) {

			// All non-basic code points < n have been handled already. Find the next
			// larger one:
			for (m = maxInt, j = 0; j < inputLength; ++j) {
				currentValue = input[j];
				if (currentValue >= n && currentValue < m) {
					m = currentValue;
				}
			}

			// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
			// but guard against overflow
			handledCPCountPlusOne = handledCPCount + 1;
			if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
				error('overflow');
			}

			delta += (m - n) * handledCPCountPlusOne;
			n = m;

			for (j = 0; j < inputLength; ++j) {
				currentValue = input[j];

				if (currentValue < n && ++delta > maxInt) {
					error('overflow');
				}

				if (currentValue == n) {
					// Represent delta as a generalized variable-length integer
					for (q = delta, k = base; /* no condition */; k += base) {
						t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
						if (q < t) {
							break;
						}
						qMinusT = q - t;
						baseMinusT = base - t;
						output.push(
							stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))
						);
						q = floor(qMinusT / baseMinusT);
					}

					output.push(stringFromCharCode(digitToBasic(q, 0)));
					bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
					delta = 0;
					++handledCPCount;
				}
			}

			++delta;
			++n;

		}
		return output.join('');
	}

	/**
	 * Converts a Punycode string representing a domain name or an email address
	 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
	 * it doesn't matter if you call it on a string that has already been
	 * converted to Unicode.
	 * @memberOf punycode
	 * @param {String} input The Punycoded domain name or email address to
	 * convert to Unicode.
	 * @returns {String} The Unicode representation of the given Punycode
	 * string.
	 */
	function toUnicode(input) {
		return mapDomain(input, (function(string) {
			return regexPunycode.test(string)
				? decode(string.slice(4).toLowerCase())
				: string;
		}));
	}

	/**
	 * Converts a Unicode string representing a domain name or an email address to
	 * Punycode. Only the non-ASCII parts of the domain name will be converted,
	 * i.e. it doesn't matter if you call it with a domain that's already in
	 * ASCII.
	 * @memberOf punycode
	 * @param {String} input The domain name or email address to convert, as a
	 * Unicode string.
	 * @returns {String} The Punycode representation of the given domain name or
	 * email address.
	 */
	function toASCII(input) {
		return mapDomain(input, (function(string) {
			return regexNonASCII.test(string)
				? 'xn--' + encode(string)
				: string;
		}));
	}

	/*--------------------------------------------------------------------------*/

	/** Define the public API */
	punycode = {
		/**
		 * A string representing the current Punycode.js version number.
		 * @memberOf punycode
		 * @type String
		 */
		'version': '1.4.1',
		/**
		 * An object of methods to convert from JavaScript's internal character
		 * representation (UCS-2) to Unicode code points, and back.
		 * @see <https://mathiasbynens.be/notes/javascript-encoding>
		 * @memberOf punycode
		 * @type Object
		 */
		'ucs2': {
			'decode': ucs2decode,
			'encode': ucs2encode
		},
		'decode': decode,
		'encode': encode,
		'toASCII': toASCII,
		'toUnicode': toUnicode
	};

	/** Expose `punycode` */
	// Some AMD build optimizers, like r.js, check for specific condition patterns
	// like the following:
	if (
		true
	) {
		!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
			return punycode;
		}.call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else if (freeExports && freeModule) {
		if (module.exports == freeExports) {
			// in Node.js, io.js, or RingoJS v0.8.0+
			freeModule.exports = punycode;
		} else {
			// in Narwhal or RingoJS v0.7.0-
			for (key in punycode) {
				punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);
			}
		}
	} else {
		// in Rhino or a web browser
		root.punycode = punycode;
	}

}(this));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(254)(module), __webpack_require__(104)))

/***/ }),
/* 254 */
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  isString: function(arg) {
    return typeof(arg) === 'string';
  },
  isObject: function(arg) {
    return typeof(arg) === 'object' && arg !== null;
  },
  isNull: function(arg) {
    return arg === null;
  },
  isNullOrUndefined: function(arg) {
    return arg == null;
  }
};


/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.decode = exports.parse = __webpack_require__(257);
exports.encode = exports.stringify = __webpack_require__(258);


/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



// If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707
function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function(qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);

  var maxKeys = 1000;
  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length;
  // maxKeys <= 0 means that we should not limit keys count
  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr, vstr, k, v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};


/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



var stringifyPrimitive = function(v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function(obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';
  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return map(objectKeys(obj), (function(k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
      if (isArray(obj[k])) {
        return map(obj[k], (function(v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        })).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    })).join(sep);

  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq +
         encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map (xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];
  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }
  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }
  return res;
};


/***/ }),
/* 259 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(260);


/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(261);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 261 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".cke .cke_top{display:none}.cke_editable{overflow:hidden}[dir=ltr] .cke_editable{text-align:left}[dir=rtl] .cke_editable{text-align:right}.cke_editable .canvasRteResponsiveTable{overflow-x:auto}[dir=ltr] .cke_editable ol,[dir=ltr] .cke_editable ul{padding-left:50px}[dir=rtl] .cke_editable ol,[dir=rtl] .cke_editable ul{padding-right:50px}[dir=ltr] .cke_editable li:before{margin-left:-19px}[dir=rtl] .cke_editable li:before{margin-right:-19px}[dir=ltr] .cke_editable li:before{margin-right:4px}[dir=rtl] .cke_editable li:before{margin-left:4px}[dir=ltr] .cke_editable li:before{text-align:right}[dir=rtl] .cke_editable li:before{text-align:left}.cke_editable ol{counter-reset:item}.cke_editable ol>li{counter-increment:item}.cke_editable ol ol>li{display:block}.cke_editable ol ol>li:before{content:counter(item,lower-alpha) \". \"}.cke_editable table,.cke_editable td,.cke_editable th,.cke_editable tr{border:1px solid!important;border-collapse:collapse}.cke_editable table{margin-top:10px;margin-bottom:10px;max-width:820px!important}.cke_editable td,.cke_editable td p,.cke_editable th,.cke_editable th p{font-size:15px;color:\"[theme:neutralPrimary, default: #333333]\";white-space:normal;font-weight:400;margin:0}.cke_editable th{font-weight:600;text-align:center}.cke_editable td,.cke_editable th{padding-top:8px;padding-bottom:8px;width:75px}[dir=ltr] .cke_editable td,[dir=ltr] .cke_editable th{padding-left:8px}[dir=rtl] .cke_editable td,[dir=rtl] .cke_editable th{padding-right:8px}[dir=ltr] .cke_editable td,[dir=ltr] .cke_editable th{padding-right:16px}[dir=ltr] [dir=rtl] .cke_editable td,[dir=ltr] [dir=rtl] .cke_editable th,[dir=rtl] .cke_editable td,[dir=rtl] .cke_editable th{padding-left:16px}[dir=rtl] [dir=rtl] .cke_editable td,[dir=rtl] [dir=rtl] .cke_editable th{padding-right:16px}[dir=ltr] [dir=rtl] .cke_editable td,[dir=ltr] [dir=rtl] .cke_editable th{padding-right:8px}[dir=rtl] [dir=rtl] .cke_editable td,[dir=rtl] [dir=rtl] .cke_editable th{padding-left:8px}.cke_editable td[valign=top]{padding-top:8px;padding-bottom:0}[dir=ltr] .cke_editable td[valign=top]{padding-left:8px}[dir=rtl] .cke_editable td[valign=top]{padding-right:8px}[dir=ltr] .cke_editable td[valign=top]{padding-right:16px}[dir=rtl] .cke_editable td[valign=top]{padding-left:16px}.cke_editable td[valign=bottom]{padding-top:0;padding-bottom:8px}[dir=ltr] .cke_editable td[valign=bottom]{padding-left:8px}[dir=rtl] .cke_editable td[valign=bottom]{padding-right:8px}[dir=ltr] .cke_editable td[valign=bottom]{padding-right:16px}[dir=rtl] .cke_editable td[valign=bottom]{padding-left:16px}.cke_editable td[align=center],.cke_editable td p[style*=\"text-align:center\"],.cke_editable td p[style*=\"text-align: center\"]{padding:8px 16px}.cke_editable td[align=left],.cke_editable td p[style*=\"text-align:left\"],.cke_editable td p[style*=\"text-align: left\"]{padding:8px 16px 8px 8px}.cke_editable td[align=right],.cke_editable td p[style*=\"text-align:right\"],.cke_editable td p[style*=\"text-align: right\"]{padding:8px 8px 8px 16px}.cke_editable tr td th:nth-last-child(n+20):first-child,.cke_editable tr td th:nth-last-child(n+20):first-child~*{padding:4px!important;font-size:10px!important}[dir=ltr] .cke_editable .ql-indent-1{padding-left:40px}[dir=rtl] .cke_editable .ql-indent-1{padding-right:40px}[dir=ltr] .cke_editable li.ql-indent-1{padding-left:59px}[dir=rtl] .cke_editable li.ql-indent-1{padding-right:59px}[dir=ltr] .cke_editable .ql-indent-2{padding-left:80px}[dir=rtl] .cke_editable .ql-indent-2{padding-right:80px}[dir=ltr] .cke_editable li.ql-indent-2{padding-left:99px}[dir=rtl] .cke_editable li.ql-indent-2{padding-right:99px}[dir=ltr] .cke_editable .ql-indent-3{padding-left:120px}[dir=rtl] .cke_editable .ql-indent-3{padding-right:120px}[dir=ltr] .cke_editable li.ql-indent-3{padding-left:139px}[dir=rtl] .cke_editable li.ql-indent-3{padding-right:139px}[dir=ltr] .cke_editable .ql-indent-4{padding-left:160px}[dir=rtl] .cke_editable .ql-indent-4{padding-right:160px}[dir=ltr] .cke_editable li.ql-indent-4{padding-left:179px}[dir=rtl] .cke_editable li.ql-indent-4{padding-right:179px}[dir=ltr] .cke_editable .ql-indent-5{padding-left:200px}[dir=rtl] .cke_editable .ql-indent-5{padding-right:200px}[dir=ltr] .cke_editable li.ql-indent-5{padding-left:219px}[dir=rtl] .cke_editable li.ql-indent-5{padding-right:219px}[dir=ltr] .cke_editable .ql-indent-6{padding-left:240px}[dir=rtl] .cke_editable .ql-indent-6{padding-right:240px}[dir=ltr] .cke_editable li.ql-indent-6{padding-left:259px}[dir=rtl] .cke_editable li.ql-indent-6{padding-right:259px}[dir=ltr] .cke_editable .ql-indent-7{padding-left:280px}[dir=rtl] .cke_editable .ql-indent-7{padding-right:280px}[dir=ltr] .cke_editable li.ql-indent-7{padding-left:299px}[dir=rtl] .cke_editable li.ql-indent-7{padding-right:299px}[dir=ltr] .cke_editable .ql-indent-8{padding-left:320px}[dir=rtl] .cke_editable .ql-indent-8{padding-right:320px}[dir=ltr] .cke_editable li.ql-indent-8{padding-left:339px}[dir=rtl] .cke_editable li.ql-indent-8{padding-right:339px}[dir=ltr] .cke_editable .ql-align-right{text-align:right}[dir=rtl] .cke_editable .ql-align-right{text-align:left}.cke_editable .ql-align-center{text-align:center}.cke_editable .fontColorRedDark{color:#a80000}.cke_editable .fontColorRed{color:#e81123}.cke_editable .fontColorYellow{color:#ffb900}.cke_editable .fontColorYellowLight{color:#fff100}.cke_editable .fontColorGreenLight{color:#bad80a}.cke_editable .fontColorGreen{color:#107c10}.cke_editable .fontColorBlueLight{color:#00bcf2}.cke_editable .fontColorBlue{color:#0078d7}.cke_editable .fontColorBlueDark{color:#002050}.cke_editable .fontColorPurple{color:#5c2d91}.cke_editable .fontColorNeutralDark{color:\"[theme:neutralDark, default: #212121]\"}.cke_editable .fontColorNeutralPrimary{color:\"[theme:neutralPrimary, default: #333333]\"}.cke_editable .fontColorNeutralPrimaryAlt{color:#3c3c3c}.cke_editable .fontColorNeutralSecondary{color:\"[theme:neutralSecondary, default: #666666]\"}.cke_editable .fontColorNeutralTertiary{color:\"[theme:neutralTertiary, default: #a6a6a6]\"}.cke_editable .fontColorThemeDarker{color:\"[theme:themeDarker, default:#004578]\"}.cke_editable .fontColorThemeDark{color:\"[theme:themeDark, default:#005a9e]\"}.cke_editable .fontColorThemeDarkAlt{color:\"[theme:themeDarkAlt, default:#106ebe]\"}.cke_editable .fontColorThemePrimary{color:\"[theme:themePrimary, default:#0078d7]\"}.cke_editable .fontColorThemeSecondary{color:\"[theme:themeSecondary, default:#2b88d8]\"}.cke_editable .fontSizeSmall{font-size:12px}.cke_editable .fontSizeMedium{font-size:14px}.cke_editable .fontSizeMediumPlus{font-size:15px}.cke_editable .fontSizeLarge{font-size:17px}.cke_editable .fontSizeXLarge{font-size:21px}.cke_editable .fontSizeXLargePlus{font-size:24px}.cke_editable .fontSizeXxLarge{font-size:28px}.cke_editable .fontSizeXxxLarge{font-size:32px}.cke_editable .fontSizeXxLargePlus{font-size:36px}.cke_editable .fontSizeSuper{font-size:42px}.cke_editable .fontSizeMedium,.cke_editable .fontSizeMediumPlus,.cke_editable .fontSizeSmall,.cke_editable .fontSizeSuper,.cke_editable .fontSizeXxLargePlus,.cke_editable .fontSizeXxxLarge{line-height:1.3}.cke_editable .highlightColorYellow{background-color:#ff0}.cke_editable .highlightColorGreen{background-color:#0f0}.cke_editable .highlightColorAqua{background-color:#0ff}.cke_editable .highlightColorMagenta{background-color:#f0f}.cke_editable .highlightColorBlue{background-color:#00f}.cke_editable .highlightColorRed{background-color:red}.cke_editable .highlightColorDarkBlue{background-color:navy}.cke_editable .highlightColorTeal{background-color:teal}.cke_editable .highlightColorDarkGreen{background-color:green}.cke_editable .highlightColorPurple{background-color:purple}.cke_editable .highlightColorMaroon{background-color:maroon}.cke_editable .highlightColorGold{background-color:olive}.cke_editable .highlightColorDarkGrey{background-color:grey}.cke_editable .highlightColorGrey{background-color:silver}.cke_editable .highlightColorBlack{background-color:#000}@media only screen and (max-width:640px){.cke_editable table,.cke_editable td,.cke_editable th{padding:8px!important;white-space:normal}.cke_editable table{max-width:600px!important}.cke_editable td p,.cke_editable td p span,.cke_editable th p,.cke_editable th p span{font-size:12px!important}}", ""]);

// exports


/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function Base64MimeType(encoded) {
    var result = undefined;
    var mime = encoded.match(/data:([a-zA-Z0-9]+\/[a-zA-Z0-9-.+]+).*,.*/);
    if (mime && mime.length) {
        result = mime[1];
    }
    return result;
}
exports.Base64MimeType = Base64MimeType;
function Base64toBlob(b64Data, contentType) {
    if (contentType === void 0) { contentType = ''; }
    var sliceSize = 512;
    var byteCharacters = atob(b64Data);
    var byteArrays = [];
    var length = byteCharacters.length;
    var byteNumbers;
    for (var offset = 0; offset < length; offset += sliceSize) {
        var slice = byteCharacters.slice(offset, offset + sliceSize);
        byteNumbers = [];
        for (var i = 0; i < slice.length; i++) {
            byteNumbers[i] = slice.charCodeAt(i);
        }
        var byteArray = new Uint8Array(byteNumbers);
        byteArrays.push(byteArray);
        byteNumbers.length = 0;
    }
    var blob = new Blob(byteArrays, { type: contentType });
    return blob;
}
exports.Base64toBlob = Base64toBlob;


/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(264);


/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(265);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".ToolbarButton{background-color:\"[theme:neutralPrimary, default: #333333]\";border:1px solid transparent;height:34px;overflow:hidden;padding:0 8px;position:relative;text-align:center;top:0;transition:all .3s;transition-property:background-color,color;min-width:34px;color:\"[theme:neutralLighterAlt, default: #f8f8f8]\";font-weight:400;font-size:14px}.ToolbarButton .ms-Icon{font-size:16px;line-height:1.2}.ToolbarButton:hover{background-color:\"[theme:neutralSecondaryAlt, default: #767676]\";cursor:pointer}.ToolbarButton.ToolbarButton--active{background-color:\"[theme:themeSecondary, default:#2b88d8]\"}.ToolbarButton.ToolbarButton--active+.ToolbarButton--divider:after,.ToolbarButton.ToolbarButton--active.ToolbarButton--divider:after{border:\"[theme:themeSecondary, default:#2b88d8]\"}.ToolbarButton:active{background-color:\"[theme:themeDarkAlt, default:#106ebe]\"}.ToolbarButton.ToolbarButton--disabled,.ToolbarButton.ToolbarButton--disabled:hover{background-color:\"[theme:neutralPrimary, default: #333333]\";color:\"[theme:neutralSecondary, default: #666666]\"}.ToolbarButton.ToolbarButton--disabled .ms-Icon,.ToolbarButton.ToolbarButton--disabled:hover .ms-Icon{color:\"[theme:neutralSecondary, default: #666666]\"}.ToolbarButton:focus{border:1px solid;outline:0}.ToolbarButton.ToolbarButton--divider:after{content:\"\";position:absolute;height:20px;top:6px}[dir=ltr] .ToolbarButton.ToolbarButton--divider:after{left:0}[dir=rtl] .ToolbarButton.ToolbarButton--divider:after{right:0}[dir=ltr] .ToolbarButton.ToolbarButton--divider:after{border-left:1px solid}[dir=rtl] .ToolbarButton.ToolbarButton--divider:after{border-right:1px solid}.ToolbarButton--h2{font-size:21px;font-weight:100}.ToolbarButton--blockquote{font-style:italic}", ""]);

// exports


/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(267);


/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(268);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".ToolbarSubmenu{width:44px;position:relative}.ToolbarSubmenu .ToolbarButton{width:44px}[dir=ltr] .ToolbarSubmenu-displayButton{padding-right:20px}[dir=rtl] .ToolbarSubmenu-displayButton{padding-left:20px}.ToolbarSubmenu-caret{color:\"[theme:neutralLighterAlt, default: #f8f8f8]\";font-size:8px;pointer-events:none;position:absolute;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);z-index:1}[dir=ltr] .ToolbarSubmenu-caret{right:4px}[dir=rtl] .ToolbarSubmenu-caret{left:4px}.ToolbarSubmenu-menuItems{display:none;position:absolute;top:34px}[dir=ltr] .ToolbarSubmenu-menuItems .ToolbarButton{padding-right:20px}[dir=rtl] .ToolbarSubmenu-menuItems .ToolbarButton{padding-left:20px}.ToolbarSubmenu--wide{width:160px!important}.ToolbarSubmenu--wide .ToolbarButton{width:100%}[dir=ltr] .ToolbarSubmenu--wide .ToolbarButton{text-align:left}[dir=rtl] .ToolbarSubmenu--wide .ToolbarButton{text-align:right}.ToolbarSubmenu.is-open .ToolbarSubmenu-menuItems{display:block}", ""]);

// exports


/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var office_ui_fabric_react_1 = __webpack_require__(2);
var React = __webpack_require__(1);
__webpack_require__(270);
var RteStrings_resx_1 = __webpack_require__(22);
var SPRteFormattingBar = (function (_super) {
    tslib_1.__extends(SPRteFormattingBar, _super);
    function SPRteFormattingBar(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            isFaded: false
        };
        return _this;
    }
    SPRteFormattingBar.prototype.componentDidMount = function () {
        this._domNode.addEventListener('keydown', this.props.onKeyDown);
    };
    SPRteFormattingBar.prototype.componentWillReceiveProps = function (nextProps) {
        if (this.props.position.top !== nextProps.position.top) {
            this.setState({
                isFaded: true
            });
        }
    };
    SPRteFormattingBar.prototype.componentDidUpdate = function () {
        var _this = this;
        if (this.state.isFaded) {
            window.setTimeout((function () {
                _this.setState({
                    isFaded: false
                });
            }), 300);
        }
    };
    SPRteFormattingBar.prototype.render = function () {
        var style = this.props.position;
        var className = office_ui_fabric_react_1.css('SPRteFormattingBar', 'rteFlyout-visible', 'stack-panel-class', 'ms-slideUpIn10', {
            'faded': this.state.isFaded,
            'formattingBarWidthV2': this.props.isFormattingBarV2
        });
        return (React.createElement("div", { role: 'toolbar', "aria-label": RteStrings_resx_1.default.FormattingBarAccessibleLabel, className: className, ref: this._resolveRef('_domNode'), style: style, "data-automation-id": 'toolbar' },
            React.createElement(office_ui_fabric_react_1.FocusZone, { isCircularNavigation: true }, this.props.buttons)));
    };
    return SPRteFormattingBar;
}(office_ui_fabric_react_1.BaseComponent));
exports.default = SPRteFormattingBar;


/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(271);


/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(272);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 272 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".rteFlyout-visible{position:absolute;z-index:2;box-shadow:0 0 5px 0 #c8c8c8;top:-45px;font-weight:400}@media (max-width:720px){.rteFlyout-visible .rteFlyout-button{padding:10px;font-size:11px}}.rteFlyout-visible .rteFlyout-button:hover{background:#0078d7}.rteFlyout-visible .rteFlyout-button .ms-Icon{padding:13px;color:#767676;font-size:14px!important}.rteFlyout-visible .rteFlyout-button:hover .ms-Icon{color:#fff}.rteFlyout-visible .rteFlyout-button img{vertical-align:middle;display:inline-block}.rteFlyout-visible .stack-panel-class{background:\"[theme:neutralPrimary, default: #333333]\"}.rteFlyout-button{background-color:transparent;border-width:0;padding:0;cursor:pointer!important}.stack-panel-class{white-space:nowrap}.SPRteFormattingBar{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;background-color:\"[theme:neutralPrimary, default: #333333]\";transition:all 367ms cubic-bezier(.1,.9,.2,1);min-width:505px;max-width:none}.SPRteFormattingBar.formattingBarWidthV2{min-width:418px}[dir=ltr] .SPRteFormattingBar .ToolbarButton,[dir=ltr] .SPRteFormattingBar .ToolbarSubmenu{float:left}[dir=rtl] .SPRteFormattingBar .ToolbarButton,[dir=rtl] .SPRteFormattingBar .ToolbarSubmenu{float:right}.SPRteFormattingBar.faded{display:none}.SPRteFormattingBar-divider{height:16px;margin-top:8px;width:0;border-right:1px solid}[dir=ltr] .SPRteFormattingBar-divider{float:left}[dir=rtl] .SPRteFormattingBar-divider{float:right}.msIcon_h2_temp:after{content:\"H2\";font-size:16px;font-style:normal;font-weight:600}.button_quote_temp .ms-Icon{font-size:28px!important;font-weight:100;line-height:1.7!important}.button_linkRemove_temp .ms-Icon:after{content:\"x\";font-family:Arial}[dir=ltr] .button_linkRemove_temp .ms-Icon:after{margin-left:-5px}[dir=rtl] .button_linkRemove_temp .ms-Icon:after{margin-right:-5px}[dir=ltr] .button_linkRemove_temp .ms-Icon:after{margin-right:5px}[dir=rtl] .button_linkRemove_temp .ms-Icon:after{margin-left:5px}", ""]);

// exports


/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var RteStrings_resx_1 = __webpack_require__(22);
var office_ui_fabric_react_1 = __webpack_require__(2);
var RteA11y_1 = __webpack_require__(61);
var SPRteLinkDialog_module_scss_1 = __webpack_require__(277);
var SPRteLinkDialog = (function (_super) {
    tslib_1.__extends(SPRteLinkDialog, _super);
    function SPRteLinkDialog(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            isURLValid: true
        };
        return _this;
    }
    SPRteLinkDialog.prototype.render = function () {
        var _a = this.props, editorElement = _a.editorElement, isOpen = _a.isOpen, onDismiss = _a.onDismiss, onCancelClicked = _a.onCancelClicked, textFieldValue = _a.textFieldValue, selectedText = _a.selectedText, onUnlink = _a.onUnlink;
        return (React.createElement(office_ui_fabric_react_1.Dialog, { isOpen: isOpen, type: office_ui_fabric_react_1.DialogType.normal, onDismiss: onDismiss, title: RteStrings_resx_1.default.LinkDialogTitle, isBlocking: true, elementToFocusOnDismiss: editorElement, containerClassName: SPRteLinkDialog_module_scss_1.default.LinkDialogContainer },
            React.createElement(office_ui_fabric_react_1.TextField, tslib_1.__assign({ label: RteStrings_resx_1.default.LinkDialogTextFieldLabel, ariaLabel: RteStrings_resx_1.default.LinkDialogTextFieldAriaLabel, onChanged: this._handleTextFieldChange, onGetErrorMessage: this._getErrorMessage, onKeyDown: this._handleKeyDown, defaultValue: textFieldValue, componentRef: this._resolveRef('_textField'), "data-automation-id": 'linkDialogTextField' }, { placeholder: SPRteLinkDialog.http } )),
            React.createElement(office_ui_fabric_react_1.TextField, { label: RteStrings_resx_1.default.LinkDialogDisplayTextFieldLabel, ariaLabel: RteStrings_resx_1.default.LinkDialogDisplayTextFieldLabel, onKeyDown: this._handleKeyDown, defaultValue: selectedText, componentRef: this._resolveRef('_displayTextField'), "data-automation-id": 'displayTextField' }),
            React.createElement(office_ui_fabric_react_1.DialogFooter, null,
                React.createElement(office_ui_fabric_react_1.PrimaryButton, { disabled: !this.state.isURLValid, onClick: this._handleSaveClicked, ariaLabel: RteStrings_resx_1.default.RichTextLinkDialogSaveButtonLabel, "data-automation-id": 'confirmLinkDialogButton', text: RteStrings_resx_1.default.RichTextLinkDialogSaveButtonLabel }),
                textFieldValue !== SPRteLinkDialog.http &&
                    textFieldValue !== '' &&
                    React.createElement(office_ui_fabric_react_1.DefaultButton, { onClick: onUnlink, "data-automation-id": 'removeLinkButton', text: RteStrings_resx_1.default.FormattingBarUnlinkButtonTitle }),
                React.createElement(office_ui_fabric_react_1.DefaultButton, { onClick: onCancelClicked, ariaLabel: RteStrings_resx_1.default.RichTextLinkDialogCancelButtonLabel, "data-automation-id": 'cancelLinkDialogButton', text: RteStrings_resx_1.default.RichTextLinkDialogCancelButtonLabel }))));
    };
    SPRteLinkDialog.prototype.componentDidUpdate = function (prevProps) {
        var _this = this;
        if (this._textField && this.props.isOpen && !this._initCursorSet) {
            this._async.setTimeout((function () {
                _this._initCursorSet = true;
                _this._textField.select();
                var textValue = _this._textField.value;
                if (textValue) {
                    _this._textField.setSelectionStart(textValue.length);
                    _this._textField.setSelectionEnd(textValue.length);
                }
                _this._textField.focus();
            }), 300);
        }
        else if (!this.props.isOpen) {
            this._initCursorSet = false;
        }
    };
    SPRteLinkDialog.prototype.componentWillReceiveProps = function (newProps) {
        if (this.props.textFieldValue !== newProps.textFieldValue) {
            this.state = {
                isURLValid: this._isURLValid(newProps.textFieldValue)
            };
        }
    };
    Object.defineProperty(SPRteLinkDialog.prototype, "textFieldValue", {
        get: function () {
            var url = '';
            if (this._textField) {
                url = this._textField.value;
                if (!this._hasProtocol(url)) {
                    url = "" + SPRteLinkDialog.http + url;
                }
            }
            return url;
        },
        enumerable: true,
        configurable: true
    });
    SPRteLinkDialog.prototype._getErrorMessage = function () {
        return !this._isURLValid(this.textFieldValue) &&
            this.textFieldValue !== SPRteLinkDialog.http ?
            RteStrings_resx_1.default.LinkDialogErrorNotSupportedLink : '';
    };
    SPRteLinkDialog.prototype._handleKeyDown = function (evt) {
        if (RteA11y_1.isEnter(evt) && this._isURLValid(this.textFieldValue)) {
            this._onSaveClicked();
            evt.stopPropagation();
            evt.preventDefault();
        }
    };
    SPRteLinkDialog.prototype._handleSaveClicked = function () {
        if (this._isURLValid(this.textFieldValue)) {
            this._onSaveClicked();
        }
    };
    SPRteLinkDialog.prototype._onSaveClicked = function () {
        this.props.onSaveClicked(this._displayTextField.value);
    };
    SPRteLinkDialog.prototype._handleTextFieldChange = function () {
        this.setState({
            isURLValid: this._isURLValid(this.textFieldValue)
        });
    };
    SPRteLinkDialog.prototype._hasProtocol = function (url) {
        var hasProtocolRegex = new RegExp('^([A-Za-z0-9]+:(\/\/)?|#|\/|\\\\).+', 'i');
        return hasProtocolRegex.test(url);
    };
    SPRteLinkDialog.prototype._isURLValid = function (url) {
        return this.props.validationRegex.test(url);
    };
    SPRteLinkDialog.http = 'http://';
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], SPRteLinkDialog.prototype, "_getErrorMessage", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], SPRteLinkDialog.prototype, "_handleKeyDown", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], SPRteLinkDialog.prototype, "_handleSaveClicked", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], SPRteLinkDialog.prototype, "_onSaveClicked", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], SPRteLinkDialog.prototype, "_handleTextFieldChange", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], SPRteLinkDialog.prototype, "_isURLValid", null);
    return SPRteLinkDialog;
}(office_ui_fabric_react_1.BaseComponent));
exports.default = SPRteLinkDialog;


/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(275);
var styles = {
    screenReaderOnly: 'screenReaderOnly_2e3ad3c3',
};
exports.default = styles;


/***/ }),
/* 275 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(276);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".screenReaderOnly_2e3ad3c3{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}", ""]);

// exports


/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(278);
var styles = {
    LinkDialogContainer: 'LinkDialogContainer_181d5c15',
};
exports.default = styles;


/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(279);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".LinkDialogContainer_181d5c15{min-width:360px!important;max-width:none!important}", ""]);

// exports


/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(281);


/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(282);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".cke_editable{cursor:text;margin:0;padding:0 2px;min-height:68px;margin-bottom:-16px}.rte--edit a{pointer-events:none}.cke_editable:focus{outline:0}.cke_editable blockquote,.cke_editable div,.cke_editable h2,.cke_editable h3,.cke_editable h4,.cke_editable ol,.cke_editable p,.cke_editable ul{-webkit-font-smoothing:antialiased;color:\"[theme:neutralPrimary, default: #333333]\";line-height:1.3;margin:0 0 16px;word-wrap:break-word}.cke_editable div,.cke_editable p{font-size:15px;font-weight:400}.cke_editable h2,.cke_editable h3,.cke_editable h4{font-weight:100!important}.cke_editable h2{font-size:24px}.cke_editable h3{font-size:21px}.cke_editable h4{font-size:17px;font-weight:300}.cke_editable ol,.cke_editable ul{font-size:15px;font-weight:400;padding:0}.cke_editable ol li,.cke_editable ul li{margin-bottom:8px}.cke_editable ol{list-style-type:decimal}.cke_editable ul{list-style-type:disc}.cke_editable blockquote,.cke_editable div.quote-true{border-bottom:1px solid;border-top:1px solid;border-bottom-color:\"[theme:neutralTertiaryAlt, default: #c8c8c8]\";border-top-color:\"[theme:neutralTertiaryAlt, default: #c8c8c8]\";border-left:none;border-right:none;font-weight:100;font-size:24px;font-style:italic;margin:28px 0;padding:32px;text-align:center;color:\"[theme:neutralSecondaryAlt, default: #767676]\";font-family:Segoe UI Light WestEuropean,Segoe UI Light,Segoe WP Light,Segoe UI,Segoe WP,Tahoma,Arial,sans-serif}.cke_editable blockquote p{font-size:24px;margin:0}.cke_editable a{text-decoration:underline;color:\"[theme:themePrimary, default:#0078d7]\"}.cke_editable i{font-style:italic}.cke_editable u{text-decoration:underline}@media screen and (min-width:480px){.cke_editable h2{font-size:28px}.cke_editable h3{font-size:24px}.cke_editable h4{font-size:21px}.cke_editable blockquote,.cke_editable div.quote-true{font-size:24px}}@media screen and (min-width:1024px){.cke_editable h2{font-size:28px}.cke_editable h3{font-size:24px}.cke_editable h4{font-size:21px}.cke_editable div,.cke_editable ol,.cke_editable p,.cke_editable ul{font-size:17px;font-weight:300;line-height:1.3}.cke_editable td,.cke_editable td p,.cke_editable th,.cke_editable th p{font-size:15px;font-weight:400}}", ""]);

// exports


/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var SPRte_1 = __webpack_require__(112);
var office_ui_fabric_react_1 = __webpack_require__(2);
var SPRteTouchDevice = (function (_super) {
    tslib_1.__extends(SPRteTouchDevice, _super);
    function SPRteTouchDevice(props) {
        return _super.call(this, props) || this;
    }
    SPRteTouchDevice._getFormattingBarDefaultPosition = function (isRtl) {
        if (isRtl === void 0) { isRtl = false; }
        var left = isRtl ? 254 : undefined;
        var top = 198;
        var position = 'fixed';
        var right = undefined;
        return { left: left, top: top, position: position, right: right };
    };
    SPRteTouchDevice.prototype.componentWillUnmount = function () {
        _super.prototype.componentWillUnmount.call(this);
    };
    SPRteTouchDevice.prototype._afterEditorCreated = function (editor) {
        _super.prototype._afterEditorCreated.call(this, editor);
    };
    SPRteTouchDevice.prototype._initState = function () {
        this.state = {
            displayMode: this.props.displayMode,
            formattingBarPosition: SPRteTouchDevice._getFormattingBarDefaultPosition(this._isRtl),
            isFormattingBarHidden: false,
            isLinkDialogOpen: false
        };
    };
    SPRteTouchDevice.prototype._getFormattingBarPosition = function () {
        return SPRteTouchDevice._getFormattingBarDefaultPosition(this._isRtl);
    };
    SPRteTouchDevice.prototype._handleScroll = function () {
    };
    SPRteTouchDevice.prototype._handleSelectionChange = function (range, forceUpdate) {
        if (range) {
            this.setState({ currentSubmenuOpen: undefined });
            if (this._restoreOnFocus()) {
                this._updateFormattingBar(false);
                return;
            }
        }
        if (!range) {
            return;
        }
        else {
            this._updateSelection(range, forceUpdate);
        }
    };
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], SPRteTouchDevice.prototype, "_handleSelectionChange", null);
    return SPRteTouchDevice;
}(SPRte_1.default));
exports.default = SPRteTouchDevice;


/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var sp_telemetry_1 = __webpack_require__(6);
var sp_core_library_1 = __webpack_require__(5);
var sp_webpart_base_1 = __webpack_require__(16);
var sp_a11y_1 = __webpack_require__(11);
var WebPartZone = (function (_super) {
    tslib_1.__extends(WebPartZone, _super);
    function WebPartZone(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this._webPartManager = _this.context.store.webPartManager;
        _this.handleConfigureButtonClicked = _this.handleConfigureButtonClicked.bind(_this);
        _this.state = {
            displayMode: _this.props.displayMode
        };
        return _this;
    }
    WebPartZone.prototype.componentDidMount = function () {
        var _this = this;
        var store = this.context.store;
        var context = {
            domElement: this._webPartDiv,
            scrollableParent: store.scrollableParent,
            instanceId: this.props.id,
            manifest: this.props.webPartManifest,
            displayMode: this.props.displayMode,
            webPartData: this.props.webPartData,
            addedFromPersistedData: this.props.addedFromPersistedData,
            onViewportWebPartsRendered: this._onViewportWebPartsRendered.bind(this),
            totalWebparts: store.webPartsCount
        };
        this._loadWebPartPromise = this._webPartManager.loadWebPart(context).then((function () {
            try {
                if (_this.state.displayMode === sp_core_library_1.DisplayMode.Edit && _this.props.id === store.selectedControlId) {
                    store.webPartManager.setPropertyPaneState(_this.props.id);
                }
                _this._isLoaded = true;
            }
            catch (err) {
                sp_telemetry_1._TraceLogger.logError(WebPartZone._logSource, err, 'didMount.set');
            }
        }), (function (error) {
            sp_telemetry_1._TraceLogger.logError(WebPartZone._logSource, error, 'didMount.load');
            if (window['_isTransitioning']) {
                location.reload(true);
            }
        }));
    };
    WebPartZone.prototype.shouldComponentUpdate = function (newProps, newState) {
        return false;
    };
    WebPartZone.prototype.render = function () {
        var _this = this;
        return (React.createElement("div", { ref: function (htmlElement) { return _this._webPartDiv = htmlElement; }, style: { width: '100%' } }));
    };
    Object.defineProperty(WebPartZone.prototype, "instanceId", {
        get: function () {
            return this.props.id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WebPartZone.prototype, "isFocusable", {
        get: function () {
            return !!sp_a11y_1.Focus.getFirstFocusableChild(this._webPartDiv);
        },
        enumerable: true,
        configurable: true
    });
    WebPartZone.prototype.focus = function () {
        if (!this.context.store.a11yManager.focusInside(this._webPartDiv)) {
            this.context.store.a11yManager.focusOutOf(this._webPartDiv);
        }
    };
    WebPartZone.prototype.handleConfigureButtonClicked = function (shouldToggle) {
        if (this._isLoaded) {
            this._webPartManager.setPropertyPaneState(this.props.id, shouldToggle ? sp_webpart_base_1.PropertyPaneState.Toggle : sp_webpart_base_1.PropertyPaneState.Open);
        }
    };
    WebPartZone.prototype.handleDeleteButtonClicked = function () {
        var _this = this;
        this._loadWebPartPromise.then((function () { return _this._webPartManager.onWebPartDelete(_this.props.id); }));
    };
    WebPartZone.prototype.serialize = function () {
        var webPartData = this._isLoaded ? this._webPartManager.serialize(this.props.id).get(this.props.id) : this.props.webPartData;
        var serialization = JSON.parse(JSON.stringify(this.props));
        serialization.webPartData = webPartData;
        return serialization;
    };
    WebPartZone.prototype.setDisplayMode = function (newDisplayMode) {
        var _this = this;
        this.setState({
            displayMode: newDisplayMode
        });
        var qos = this.context.store.createQosScope("SetWebPartDisplayModeTo" + newDisplayMode);
        this._loadWebPartPromise.then((function () {
            _this._webPartManager.setDisplayMode(newDisplayMode, _this.props.id);
            qos.writeSuccess();
        }), (function (error) { return qos.writeUnexpectedFailure('Rejected', error, { 'id': _this.props.webPartId }); }));
    };
    WebPartZone.prototype._onViewportWebPartsRendered = function (endTime) {
        this.context.store.onViewportWebPartsRendered(endTime);
    };
    WebPartZone.contextTypes = {
        store: React.PropTypes.object.isRequired
    };
    WebPartZone.webPartManagerInitialized = false;
    WebPartZone._logSource = sp_telemetry_1._LogSource.create('WebPartZone');
    return WebPartZone;
}(React.Component));
exports.default = WebPartZone;


/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(286);


/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(287);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".CanvasToolboxHint{background:0 0;border:none;cursor:pointer;height:23px;opacity:0;outline:0;padding:0;position:relative;transition:all .3s ease;width:100%;color:\"[theme:neutralTertiary, default: #a6a6a6]\"}.CanvasToolboxHint:first-of-type .CanvasToolboxHint-plusButtonWrapper .CanvasToolboxHint-plusButton.CanvasToolboxHint-plusButtonZone{top:12px}.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapperOriginal{max-width:1200px}.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapperOriginal .CanvasToolboxHint-plusButtonOriginal{background-color:\"[theme:neutralTertiary, default: #a6a6a6]\";border-radius:50%;color:\"[theme:white, default: #ffffff]\";font-size:15px;height:23px;line-height:23px;opacity:0;padding:0;position:relative;text-align:center;top:0;width:23px;z-index:1;transition:all .3s ease}[dir=ltr] .CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapperOriginal .CanvasToolboxHint-plusButtonOriginal{left:calc(50% - 11.5px)}[dir=rtl] .CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapperOriginal .CanvasToolboxHint-plusButtonOriginal{right:calc(50% - 11.5px)}.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapperOriginal .CanvasToolboxHint-plusButtonOriginal .ms-Icon{position:relative}.CanvasToolboxHint.ZoneHint .CanvasToolboxHint-plusButtonWrapper{top:-26px}[dir=ltr] .CanvasToolboxHint.ZoneHint .CanvasToolboxHint-plusButtonWrapper{left:-11.5px}[dir=rtl] .CanvasToolboxHint.ZoneHint .CanvasToolboxHint-plusButtonWrapper{right:-11.5px}.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapper .CanvasToolboxHint-plusButton{background-color:\"[theme:neutralTertiary, default: #a6a6a6]\";border-radius:50%;box-shadow:0 0 4px 0 rgba(0,0,0,.5);color:\"[theme:white, default: #ffffff]\";opacity:0;padding:0;position:relative;text-align:center;z-index:1;transition:all .3s ease}.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapper .CanvasToolboxHint-plusButton.CanvasToolboxHint-plusButtonZone{font-size:14px;height:23px;line-height:23px;width:23px}.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapper .CanvasToolboxHint-plusButton.CanvasToolboxHint-plusButtonSection{font-size:14px;height:23px;line-height:23px;top:0;width:23px}[dir=ltr] .CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapper .CanvasToolboxHint-plusButton.CanvasToolboxHint-plusButtonSection{left:calc(50% - 11.5px)}[dir=rtl] .CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapper .CanvasToolboxHint-plusButton.CanvasToolboxHint-plusButtonSection{right:calc(50% - 11.5px)}.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapper .CanvasToolboxHint-plusButton .ms-Icon{position:relative}.CanvasToolboxHint:after,.CanvasToolboxHint:before{border-top:1px dashed;content:\"\";height:1px;position:absolute;top:12px;width:100%;transition:all .3s ease}[dir=ltr] .CanvasToolboxHint:after,[dir=ltr] .CanvasToolboxHint:before{left:0}[dir=rtl] .CanvasToolboxHint:after,[dir=rtl] .CanvasToolboxHint:before{right:0}.CanvasToolboxHint.ZoneHint{margin-top:-11.5px;top:-9px}[dir=ltr] .CanvasToolboxHint.ZoneHint{left:-11.5px}[dir=rtl] .CanvasToolboxHint.ZoneHint{right:-11.5px}.CanvasToolboxHint.ZoneHint:after,.CanvasToolboxHint.ZoneHint:before{top:27px}[dir=ltr] .CanvasToolboxHint.ZoneHint:after,[dir=ltr] .CanvasToolboxHint.ZoneHint:before{left:12px}[dir=rtl] .CanvasToolboxHint.ZoneHint:after,[dir=rtl] .CanvasToolboxHint.ZoneHint:before{right:12px}.CanvasToolboxHint.ZoneHint:before{margin-top:-17.5px;border:0}.CanvasToolboxHint.ZoneHint:after{margin-top:-15.5px}.CanvasToolboxHint.SectionHint:after{top:12px}.CanvasToolboxHint.is-visible,.CanvasToolboxHint.zone-active .CanvasToolboxHint-plusButton{opacity:1}.CanvasToolboxHint.zone-selected:after{border-top:1px solid;border-top-color:\"[theme:themePrimary, default:#0078d7]\"}.CanvasToolboxHint.zone-selected .CanvasToolboxHint-plusButton,.CanvasToolboxHint.zone-selected .CanvasToolboxHint-plusButtonOriginal{background-color:\"[theme:themePrimary, default:#0078d7]\";opacity:1}.CanvasToolboxHint.zone-focused:after{border-top:1px solid;border-top-color:\"[theme:neutralTertiary, default: #a6a6a6]\"}.CanvasToolboxHint:focus,.CanvasToolboxHint:hover{opacity:1}.CanvasToolboxHint:focus .CanvasToolboxHint-plusButton,.CanvasToolboxHint:focus .CanvasToolboxHint-plusButtonOriginal,.CanvasToolboxHint:hover .CanvasToolboxHint-plusButton,.CanvasToolboxHint:hover .CanvasToolboxHint-plusButtonOriginal{background-color:\"[theme:themePrimary, default:#0078d7]\";opacity:1}.CanvasToolboxHint:focus:after,.CanvasToolboxHint:hover:after{border-color:\"[theme:themePrimary, default:#0078d7]\"}.Canvas>.CanvasToolboxHint:first-of-type:nth-last-of-type(1),.Canvas>.CanvasToolboxHint:first-of-type:nth-last-of-type(1) .CanvasToolboxHint-plusButton,.Canvas>.CanvasToolboxHint:first-of-type:nth-last-of-type(1) .CanvasToolboxHint-plusButtonOriginal,.CanvasSection button.CanvasToolboxHint .CanvasToolboxHint-plusButton,.CanvasSection button.CanvasToolboxHint .CanvasToolboxHint-plusButtonOriginal{opacity:1}.CanvasSection button.CanvasToolboxHint:after{border-top:1px solid}.CanvasSection button.CanvasToolboxHint:focus:after,.CanvasSection button.CanvasToolboxHint:hover:after{border-color:\"[theme:themePrimary, default:#0078d7]\"}.CanvasSection:hover button.CanvasToolboxHint:first-of-type:nth-last-of-type(1),.CanvasZone--selected button.CanvasToolboxHint:first-of-type:nth-last-of-type(1),.EmptyCanvasHint button.CanvasToolboxHint:first-of-type{opacity:1}@media screen and (-ms-high-contrast:active){.CanvasToolboxHint{color:#1aebff}}@media screen and (-ms-high-contrast:black-on-white){.CanvasToolboxHint{color:#37006e}}", ""]);

// exports


/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(2);
var sp_core_library_1 = __webpack_require__(5);
var odsp_utilities_bundle_1 = __webpack_require__(9);
var sp_webpart_base_1 = __webpack_require__(16);
var sp_a11y_1 = __webpack_require__(11);
var sp_lodash_subset_1 = __webpack_require__(12);
var CanvasA11yConstants_1 = __webpack_require__(44);
var CanvasControlType_1 = __webpack_require__(7);
var CanvasStore_1 = __webpack_require__(15);
var CanvasDragZoneConstants_1 = __webpack_require__(27);
var CanvasFullWidthSection_1 = __webpack_require__(43);
var CanvasStrings_resx_1 = __webpack_require__(10);
var ControlZone = (function (_super) {
    tslib_1.__extends(ControlZone, _super);
    function ControlZone(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this._handleClickCapture = _this._handleClickCapture.bind(_this);
        _this._handleKeydownCapture = _this._handleKeydownCapture.bind(_this);
        _this._handleMouseOut = _this._handleMouseOut.bind(_this);
        _this._handleMouseOver = _this._handleMouseOver.bind(_this);
        _this._handleToolbarKeydown = _this._handleToolbarKeydown.bind(_this);
        _this._handleTrapFocus = _this._handleTrapFocus.bind(_this);
        _this._handleControlFocus = _this._handleControlFocus.bind(_this);
        _this._selectControl = _this._selectControl.bind(_this);
        __webpack_require__(289);
        return _this;
    }
    ControlZone._getDragDisallowedAttribute = function (control) {
        if (!CanvasFullWidthSection_1.default.isFullWidthControl(control)) {
            return CanvasDragZoneConstants_1.default.fullWidthSectionTag;
        }
        else {
            return undefined;
        }
    };
    ControlZone.prototype.shouldComponentUpdate = function (nextProps) {
        var _a = this.props, displayMode = _a.displayMode, isSelected = _a.isSelected;
        return (displayMode !== nextProps.displayMode ||
            isSelected !== nextProps.isSelected ||
            !sp_lodash_subset_1.isEqual(nextProps.position, this.props.position));
    };
    ControlZone.prototype.componentDidMount = function () {
        var store = this.context.store;
        var displayMode = this.props.displayMode;
        if (store.selectedControlId === this.props.id) {
            store.scrollIntoView('partial', this._domElement, 500, ControlZone._VERTICAL_MARGIN * 2);
            store.a11yManager.focusTo(this._domElement);
        }
        this._childControl = store.getControl(this.props.id);
        if (sp_core_library_1.DisplayMode.Edit === displayMode) {
            this._toolbarElement.addEventListener('keydown', this._handleToolbarKeydown);
            this._childControlElement.addEventListener('keydown', this._handleKeydownCapture, true);
        }
        if (CanvasStore_1.default.isScrollAnimationsEnabled && sp_core_library_1.DisplayMode.Read === displayMode) {
            sp_webpart_base_1._Animations.instance.reveal(this._domElement);
        }
    };
    ControlZone.prototype.componentDidUpdate = function (prevProps) {
        var displayMode = this.props.displayMode;
        if (prevProps.displayMode !== displayMode) {
            if (displayMode === sp_core_library_1.DisplayMode.Edit) {
                this._toolbarElement.addEventListener('keydown', this._handleToolbarKeydown);
                this._childControlElement.addEventListener('keydown', this._handleKeydownCapture, true);
            }
            else if (displayMode === sp_core_library_1.DisplayMode.Read) {
                this._toolbarElement.removeEventListener('keydown', this._handleToolbarKeydown);
                this._childControlElement.removeEventListener('keydown', this._handleKeydownCapture, true);
                if (CanvasStore_1.default.isScrollAnimationsEnabled) {
                    sp_webpart_base_1._Animations.instance.reveal(this._domElement);
                }
            }
        }
        if (prevProps.position.sectionFactor !== this.props.position.sectionFactor) {
            this.context.store.webPartManager.notifyWebPartContainerResize(this.props.id);
        }
    };
    ControlZone.prototype.render = function () {
        var _this = this;
        var _a = this.props, children = _a.children, displayMode = _a.displayMode, isSelected = _a.isSelected, id = _a.id;
        var controlType = children[0].props.controlType;
        var isReadMode = displayMode === sp_core_library_1.DisplayMode.Read;
        var accessibleLabel = '';
        var ariaPrimaryLabelById = "cswpAccessibleLabel_" + id;
        var ariaContextualLabelId = "cswpAccessibleLabelContextual_" + id;
        var ariaLabelledBy;
        if (controlType === CanvasControlType_1.default.WebPartZone) {
            ariaLabelledBy = ariaContextualLabelId;
        }
        else if (controlType === CanvasControlType_1.default.RTE) {
            accessibleLabel = odsp_utilities_bundle_1.StringHelper.format(CanvasStrings_resx_1.default.CanvasZoneAriaWebpartName || '', CanvasStrings_resx_1.default.TextWebPartDisplayName || '') || '';
            ariaLabelledBy = ariaPrimaryLabelById;
        }
        if (displayMode === sp_core_library_1.DisplayMode.Edit) {
            accessibleLabel = odsp_utilities_bundle_1.StringHelper.format(CanvasStrings_resx_1.default.AriaWebPartOrSectionEnterTemplate || '', accessibleLabel, CanvasStrings_resx_1.default.WebPartAriaLabel) || '';
            if (controlType === CanvasControlType_1.default.WebPartZone) {
                ariaLabelledBy += " " + ariaPrimaryLabelById;
            }
        }
        var shouldHideZone = CanvasStore_1.default.isScrollAnimationsEnabled && sp_core_library_1.DisplayMode.Read === displayMode;
        var zoneClassName = office_ui_fabric_react_1.css('ControlZone', {
            'ControlZone--edit': !isReadMode,
            'ControlZone--selected': isSelected,
            'ControlZone--hidden': shouldHideZone
        });
        return (
        React.createElement("div", { "aria-labelledby": ariaLabelledBy, className: zoneClassName, ref: function (ref) { return _this._domElement = ref; }, onMouseOut: this._handleMouseOut, onMouseOver: this._handleMouseOver, tabIndex: isReadMode ? undefined : 0, "data-automation-id": 'ControlZone', "data-drag-tag": CanvasDragZoneConstants_1.default.controlZoneDragTag, "data-drag-disallowed-tag": children && children[0] && ControlZone._getDragDisallowedAttribute(children[0].props), "data-sp-a11y-id": CanvasA11yConstants_1.getControlZoneA11yId(id) },
            React.createElement("div", null,
                React.createElement("div", { className: 'ControlZone-control', onClickCapture: isReadMode ? undefined : this._handleClickCapture, onFocus: isReadMode ? undefined : this._handleControlFocus, ref: function (ref) { return _this._childControlElement = ref; } }, children[0]),
                React.createElement("div", { ref: function (ref) { return _this._toolbarElement = ref; } }, children[1]),
                displayMode === sp_core_library_1.DisplayMode.Edit &&
                    React.createElement("div", { id: ariaPrimaryLabelById, className: 'ControlZone-screenReaderOnly' }, accessibleLabel))));
    };
    ControlZone.prototype._handleControlFocus = function (e) {
        this._selectControl();
    };
    ControlZone.prototype._handleClickCapture = function (e) {
        this._selectControl();
    };
    ControlZone.prototype._handleKeydownCapture = function (evt) {
        if (this._childControl && this._childControl.props.controlType === CanvasControlType_1.default.WebPartZone) {
            this._selectControl();
            if (sp_a11y_1.Keyboard.isEscape(evt)) {
                this.context.store.a11yManager.focusTo(this._domElement);
                evt.stopPropagation();
                evt.preventDefault();
            }
            else if (sp_a11y_1.Keyboard.isKey(CanvasA11yConstants_1.KeyCodes.F10, evt, { alt: true })) {
                this.context.store.a11yManager.focusTo(this._toolbarElement);
                this.context.store.a11yManager.alert(CanvasStrings_resx_1.default.ToolbarNavigationArrowKeys);
                evt.stopPropagation();
                evt.preventDefault();
            }
            else if (sp_a11y_1.Keyboard.isKey(CanvasA11yConstants_1.KeyCodes.P, evt, { alt: true })) {
                this.context.store.webPartManager.setPropertyPaneState(this._childControl.props.id, sp_webpart_base_1.PropertyPaneState.Open);
                evt.stopPropagation();
                evt.preventDefault();
            }
            else if (!sp_a11y_1.Keyboard.isShiftTab(evt) || evt.target !== sp_a11y_1.Focus.getFirstFocusableChild(this._childControlElement)) {
                this.context.store.a11yManager.skipEvent(evt);
            }
        }
    };
    ControlZone.prototype._handleToolbarKeydown = function (evt) {
        if (this._childControl && this._childControl.props.controlType === CanvasControlType_1.default.RTE) {
            this._selectControl();
            if (sp_a11y_1.Keyboard.isEscape(evt)) {
                this._childControl.focus();
                evt.stopPropagation();
                evt.preventDefault();
            }
            else if (sp_a11y_1.Keyboard.isTab(evt)) {
                this._childControl.focusFormattingBar();
                evt.stopPropagation();
                evt.preventDefault();
            }
        }
    };
    ControlZone.prototype._handleMouseOut = function (e) {
        this.context.store.hoveredControlId = undefined;
    };
    ControlZone.prototype._handleMouseOver = function (e) {
        this.context.store.hoveredControlId = this.props.id;
    };
    ControlZone.prototype._handleTrapFocus = function (e) {
        if (e.target === this._trapDiv) {
            this._childControl.focus();
        }
    };
    ControlZone.prototype._selectControl = function () {
        if (this.context.store.selectedControlId !== this.props.id) {
            this.context.store.selectedControlId = this.props.id;
        }
    };
    ControlZone.contextTypes = {
        store: React.PropTypes.object.isRequired
    };
    ControlZone._VERTICAL_MARGIN = 22;
    return ControlZone;
}(React.PureComponent));
exports.default = ControlZone;


/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(290);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".CanvasZone:not(.CanvasZone--fullWidth) .ControlZone{padding:8px}.ControlZone .ControlZone-target{bottom:0;cursor:pointer;left:0;right:0;position:absolute;top:0}.ControlZone .ControlZone-target:focus{outline:0}.ControlZone .ControlZone-target.ControlZone-target--hidden{z-index:-1}.ControlZone:after{border:1px solid;color:\"[theme:neutralTertiary, default: #a6a6a6]\";bottom:0;content:\"\";left:0;right:0;pointer-events:none;position:absolute;top:0;transition:all .3s ease}.ControlZone .CanvasControlToolbar,.ControlZone:after{opacity:0;transition:all .3s ease}.ControlZone.ControlZone--edit{outline:0;position:relative}.ControlZone.ControlZone--edit.ControlZone--selected .CanvasControlToolbar,.ControlZone.ControlZone--edit.ControlZone--selected:after,.ControlZone.ControlZone--edit:focus .CanvasControlToolbar,.ControlZone.ControlZone--edit:focus:after,.ControlZone.ControlZone--edit:hover .CanvasControlToolbar,.ControlZone.ControlZone--edit:hover:after{opacity:1}.ControlZone.ControlZone--selected:after{border:1px solid;color:\"[theme:themePrimary, default:#0078d7]\"}.ControlZone.ControlZone--selected+button.CanvasToolboxHint{opacity:1}.ControlZone.ControlZone--hidden{visibility:hidden}.ControlZone .ControlZone-screenReaderOnly{position:absolute;text-indent:-9999px;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;border:0}", ""]);

// exports


/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(292);


/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(293);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".CanvasControlToolbar{position:absolute;top:0;width:32px;z-index:1}[dir=ltr] .CanvasControlToolbar{left:-40px}[dir=rtl] .CanvasControlToolbar{right:-40px}[dir=ltr] .CanvasControlToolbar{padding-right:10px}[dir=rtl] .CanvasControlToolbar{padding-left:10px}", ""]);

// exports


/***/ }),
/* 294 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(295);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 295 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, "[dir=rtl] .ms-Grid-col{float:right}@media screen and (min-width:1024px){.CanvasSection--edit{min-width:312px}.CanvasSection--edit:nth-child(n+2):before{content:\"\";position:absolute;height:100%;color:\"[theme:neutralTertiary, default: #a6a6a6]\"}[dir=ltr] .CanvasSection--edit:nth-child(n+2):before{border-left:1px dashed}[dir=rtl] .CanvasSection--edit:nth-child(n+2):before{border-right:1px dashed}[dir=ltr] .CanvasSection--edit:nth-child(n+2):before{left:-1px}[dir=rtl] .CanvasSection--edit:nth-child(n+2):before{right:-1px}}@media screen and (max-width:1023px){.CanvasSection--edit:nth-child(n+2):before{content:\"\";position:absolute;left:0;right:0;width:100%;color:\"[theme:neutralTertiary, default: #a6a6a6]\";border-bottom:1px dashed}}@media screen and (min-width:641px){.CanvasSection--read .ControlZone{margin-top:24px}.CanvasSection--read .ControlZone:last-of-type{margin-bottom:24px}}", ""]);

// exports


/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
__webpack_require__(62);
var CanvasStrings_resx_1 = __webpack_require__(10);
var ToolboxSmall_1 = __webpack_require__(63);
var ToolboxItem_1 = __webpack_require__(123);
var ToolboxGroup_1 = __webpack_require__(122);
__webpack_require__(62);
var EmbeddedToolbox = (function (_super) {
    tslib_1.__extends(EmbeddedToolbox, _super);
    function EmbeddedToolbox(props, context) {
        return _super.call(this, props, context) || this;
    }
    Object.defineProperty(EmbeddedToolbox.prototype, "_toolboxContent", {
        get: function () {
            var _a = this.props, onItemClick = _a.onItemClick, toolboxItems = _a.toolboxItems, controlPosition = _a.controlPosition;
            var embeddedItemViews = [];
            toolboxItems.forEach((function (item) {
                item.onClick = onItemClick;
                item.embeddedToolbox = true;
                item.itemProps.position = controlPosition;
                embeddedItemViews.push(React.createElement(ToolboxItem_1.default, tslib_1.__assign({}, item)));
            }));
            this._itemCount = embeddedItemViews.length;
            var embeddedGroup = React.createElement(ToolboxGroup_1.default, { embeddedToolbox: true, groupName: CanvasStrings_resx_1.default.ToolboxGroupNameFullWidth, hasHeader: true, key: CanvasStrings_resx_1.default.ToolboxGroupNameFullWidth }, embeddedItemViews);
            return React.createElement("div", null, embeddedGroup);
        },
        enumerable: true,
        configurable: true
    });
    EmbeddedToolbox.prototype._handleKeyDownCapture = function (e) {
    };
    Object.defineProperty(EmbeddedToolbox.prototype, "_canvasToolBoxClassName", {
        get: function () {
            return 'CanvasToolbox CanvasToolbox--Embedded';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EmbeddedToolbox.prototype, "_canvasToolBoxContainerClassName", {
        get: function () {
            return 'CanvasToolboxContainer CanvasToolboxContainer--Embedded';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EmbeddedToolbox.prototype, "_searchBoxComponent", {
        get: function () {
            return undefined;
        },
        enumerable: true,
        configurable: true
    });
    return EmbeddedToolbox;
}(ToolboxSmall_1.default));
exports.default = EmbeddedToolbox;


/***/ }),
/* 297 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(298);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".CanvasToolboxContainer{position:absolute;top:0;width:100%;max-width:1280px}[dir=ltr] .CanvasToolboxContainer{left:0}[dir=rtl] .CanvasToolboxContainer{right:0}.CanvasToolbox{background:\"[theme:white, default: #ffffff]\";border:1px solid #d6d6d6;box-shadow:0 0 8px 0 rgba(0,0,0,.2);box-sizing:border-box;max-height:330px;margin-top:26px;overflow-y:auto;position:absolute;width:292px;z-index:10;margin-left:0;margin-right:0}[dir=ltr] .CanvasToolbox{left:0}[dir=rtl] .CanvasToolbox{right:0}.CanvasToolbox .CanvasToolbox-Error{background-color:#fde7e9;font-weight:600;font-size:12px;letter-spacing:1px;padding:0 12px}.CanvasToolbox .ms-Spinner-container{margin-top:151px}[dir=ltr] .CanvasToolbox .ms-Spinner-container{margin-left:132px}[dir=rtl] .CanvasToolbox .ms-Spinner-container{margin-right:132px}.CanvasToolbox-noResults{-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;font-size:13px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:13px}.CanvasToolboxContainer--Embedded{max-width:none}.CanvasToolbox--Embedded{width:auto;text-align:center;border:none;box-shadow:none;margin:100px auto;position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;max-width:700px;height:auto}", ""]);

// exports


/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(300);


/***/ }),
/* 300 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(301);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 301 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".CanvasToolboxItemsGroup{clear:both}.CanvasToolboxItemsGroup-header{background-color:\"[theme:neutralLighter, default: #f4f4f4]\";color:\"[theme:neutralPrimary, default: #333333]\";font-weight:600;height:32px;letter-spacing:1px;line-height:32px;padding:0 12px}[dir=ltr] .CanvasToolboxItemsGroup-header{text-align:left}[dir=rtl] .CanvasToolboxItemsGroup-header{text-align:right}.CanvasToolboxItemsGroup-header--Embedded{background:0 0}.CanvasToolboxItemsGroup-divider{margin:0;border:0;border-top:1px solid;color:\"[theme:neutralLight, default: #eaeaea]\"}", ""]);

// exports


/***/ }),
/* 302 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(303);


/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(304);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 304 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".CanvasToolboxItem{background-color:transparent;border:1px solid transparent;height:88px;overflow:hidden;padding:0;width:33.333%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.CanvasToolboxItem:focus,.CanvasToolboxItem:hover{background-color:\"[theme:themeLighter, default:#deecf9]\";cursor:pointer}.CanvasToolboxItem:focus .CanvasToolboxItem-icon,.CanvasToolboxItem:focus .CanvasToolboxItem-title,.CanvasToolboxItem:hover .CanvasToolboxItem-icon,.CanvasToolboxItem:hover .CanvasToolboxItem-title{color:\"[theme:themeDarkAlt, default:#106ebe]\"}[dir=ltr] .CanvasToolboxItemFloat{float:left}[dir=rtl] .CanvasToolboxItemFloat{float:right}.CanvasToolboxItem--Embedded{width:25%;display:inline-block}.CanvasToolboxItem-icon{color:\"[theme:neutralPrimary, default: #333333]\";display:block;font-size:28px;line-height:48px}.CanvasToolboxItem-image{padding:10px 0;width:40px;height:28px}.CanvasToolboxItem-title{color:\"[theme:neutralSecondary, default: #666666]\";display:block;font-weight:400;font-size:13px;padding:0 8px;text-align:center;line-height:17px;max-width:88px}@media screen and (-ms-high-contrast:active){.CanvasToolboxItem:focus,.CanvasToolboxItem:hover{color:#1aebff}}@media screen and (-ms-high-contrast:black-on-white){.CanvasToolboxItem:focus,.CanvasToolboxItem:hover{color:#37006e}}", ""]);

// exports


/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function StripOutNewLinesAndSpacesFromInnerHTML(innerHTML) {
    return innerHTML.replace(/>\s+</g, '><');
}
exports.StripOutNewLinesAndSpacesFromInnerHTML = StripOutNewLinesAndSpacesFromInnerHTML;


/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_core_library_1 = __webpack_require__(5);
var KillSwitches_1 = __webpack_require__(45);
var CONNECTORS_ID = '893a257e-9c92-49bc-8a36-2f6bb058da34';
var FORMS_ID = 'b19b3b9e-8d13-4fec-a93c-401a091c0707';
var GROUP_CALENDAR_ID = '6676088b-e28e-4a90-b9cb-d0d0303cd2eb';
var LINK_PREVIEW_ID = '6410b3b6-d440-4663-8744-378976dc041e';
var PLANNER_ID = '39c4c1c2-63fa-41be-8cc2-f6c0b49b253d';
var POWER_BI_ID = '58fcd18b-e1af-4b0a-b23b-422c2c52d5a2';
var POWERAPPS_PLAYER_ID = '9d7e898c-f1bb-473a-9ace-8b415036578b';
var YAMMER_ID = '7259eba6-2b8d-439b-a613-9c627656cc2a';
var ONPREM_EXCLUDE_WEBPART_FROM_TOOLBOX = new Set([
    LINK_PREVIEW_ID
]);
var GROUP_ONLY_PARTS = new Set([CONNECTORS_ID, PLANNER_ID]);
var OPEN_ID_CONNECT_PARTS = new Set([
    CONNECTORS_ID,
    FORMS_ID,
    GROUP_CALENDAR_ID,
    PLANNER_ID,
    POWER_BI_ID,
    POWERAPPS_PLAYER_ID,
    YAMMER_ID
]);
function shouldExcludeFromToolbox(manifest, pageContext) {
    if (!KillSwitches_1.default.isExcludeOnPremWebPartKillSwitchActivated
        && !true
        && ONPREM_EXCLUDE_WEBPART_FROM_TOOLBOX.has(manifest.id)) {
        return true;
    }
    return (manifest.hiddenFromToolbox ||
        missingRequiredGroup(manifest, pageContext) ||
        isRequiredOAuthDisabled(manifest) 
    );
}
exports.shouldExcludeFromToolbox = shouldExcludeFromToolbox;
function missingRequiredGroup(manifest, pageContext) {
    var hasGroup = Boolean(pageContext &&
        pageContext.site &&
        pageContext.site.group &&
        pageContext.site.group.id);
    return (!KillSwitches_1.default.isExcludeSitesRequiringGroupsKillSwitchActivated &&
        !hasGroup &&
        GROUP_ONLY_PARTS.has(manifest.id));
}
function isRequiredOAuthDisabled(manifest) {
    return (!KillSwitches_1.default.isExcludeOpenIdConnectPartsKillSwitchActivated &&
        OPEN_ID_CONNECT_PARTS.has(manifest.id) &&
        !sp_core_library_1._SPFlight.isEnabled(127 ));
}


/***/ }),
/* 307 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(2);
var sp_core_library_1 = __webpack_require__(5);
var odsp_utilities_bundle_1 = __webpack_require__(9);
var sp_a11y_1 = __webpack_require__(11);
var CanvasSection_1 = __webpack_require__(111);
var CanvasFullWidthSection_1 = __webpack_require__(43);
var Flights_1 = __webpack_require__(28);
var KillSwitches_1 = __webpack_require__(45);
var Toolbar_1 = __webpack_require__(119);
var CanvasDragZoneConstants_1 = __webpack_require__(27);
__webpack_require__(308);
var CanvasControlType_1 = __webpack_require__(7);
var CanvasStrings_resx_1 = __webpack_require__(10);
var CanvasA11yConstants_1 = __webpack_require__(44);
var CanvasZone = (function (_super) {
    tslib_1.__extends(CanvasZone, _super);
    function CanvasZone(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this.state = {
            isToolbarFixed: false,
            accessibleLabel: ''
        };
        _this._store = _this.context.store;
        _this._isTabPressed = false;
        return _this;
    }
    CanvasZone.prototype.componentDidMount = function () {
        if (this._domElement) {
            this._domElement.addEventListener('keydown', this._handleKeydownCapture, true);
            this._domElement.addEventListener('focus', this._handleZoneFocus, true);
            this._domElement.addEventListener('blur', this._handleZoneBlur, true);
            if (this.props.selectedPosition.zoneIndex === this.props.zone.index &&
                !this._isChildElement(document.activeElement)) {
                this.focus();
            }
        }
    };
    CanvasZone.prototype.componentWillUnmount = function () {
        if (this._domElement) {
            this._domElement.removeEventListener('keydown', this._handleKeydownCapture, true);
            this._domElement.removeEventListener('focus', this._handleZoneFocus, true);
            this._domElement.removeEventListener('blur', this._handleZoneBlur, true);
        }
    };
    CanvasZone.prototype.focus = function () {
        if (this._domElement) {
            this._domElement.focus();
        }
    };
    CanvasZone.prototype.render = function () {
        var _this = this;
        var displayMode = this._store.displayMode;
        var _a = this.props, fullWidth = _a.fullWidth, zone = _a.zone, selectedPosition = _a.selectedPosition, shouldCenterAlign = _a.shouldCenterAlign;
        var isReadMode = displayMode === sp_core_library_1.DisplayMode.Read;
        var layoutZoneClassName = office_ui_fabric_react_1.css('CanvasZone', 'ms-Grid-row', {
            'CanvasZone--centerAlign': shouldCenterAlign,
            'CanvasZone--edit': !isReadMode,
            'CanvasZone--hintUpdate': Flights_1.default.isHintDiscoverabilityEnabled
        });
        if (Flights_1.default.isHintDiscoverabilityEnabled && !isReadMode && zone === undefined) {
            return (React.createElement("div", { className: layoutZoneClassName },
                React.createElement(CanvasSection_1.default, { hintLayout: this.props.hintLayout, selectedPosition: selectedPosition, zoneIndex: this.props.hintLayout.zoneIndex, section: undefined })));
        }
        var isZoneOnlySelected = selectedPosition.zoneIndex === zone.index &&
            !selectedPosition.controlIndex;
        var isControlWithinZoneSelected = selectedPosition.zoneIndex === zone.index &&
            (!!selectedPosition.controlIndex || this._store.toolboxProps.isOpen);
        var isCurZoneEmpty = true;
        var sectionComponents = [];
        var sections = zone.sections;
        sections.forEach((function (curSection, curIdx) {
            if (fullWidth) {
                sectionComponents.push(React.createElement(CanvasFullWidthSection_1.default, { zoneIndex: zone.index, section: curSection, selectedPosition: selectedPosition, key: curSection.index }));
            }
            else {
                sectionComponents.push(React.createElement(CanvasSection_1.default, { zoneIndex: zone.index, section: curSection, selectedPosition: selectedPosition, key: curSection.index }));
            }
            if (isCurZoneEmpty && !curSection.isEmpty()) {
                isCurZoneEmpty = false;
            }
        }));
        layoutZoneClassName = office_ui_fabric_react_1.css('CanvasZone', 'ms-Grid-row', {
            'CanvasZone--edit': !isReadMode,
            'CanvasZone--fullWidth': fullWidth,
            'CanvasZone--fullWidth--read': fullWidth && isReadMode,
            'CanvasZone--read': isReadMode,
            'CanvasZone--selected': isZoneOnlySelected,
            'CanvasZone--controlSelected': isControlWithinZoneSelected,
            'CanvasZone--empty': isCurZoneEmpty,
            'CanvasZone--centerAlign': shouldCenterAlign,
            'CanvasZone--hintUpdate': Flights_1.default.isHintDiscoverabilityEnabled
        });
        var layoutZoneContainerClassName = office_ui_fabric_react_1.css('CanvasZoneContainer', {
            'CanvasZoneContainer--hintUpdate': Flights_1.default.isHintDiscoverabilityEnabled,
            'CanvasZoneContainer--read': isReadMode
        });
        var zoneContents = (React.createElement("div", { className: layoutZoneClassName, "data-automation-id": 'CanvasZone', "data-drag-tag": CanvasDragZoneConstants_1.default.zoneDragTag, "data-negative-space": true, tabIndex: isReadMode ? undefined : 0, "aria-label": isReadMode ? undefined : this.state.accessibleLabel, "data-sp-a11y-id": CanvasA11yConstants_1.getCanvasZoneA11yId(zone.index.toString()), onClickCapture: KillSwitches_1.default.isCanvasZoneContainerKillswitchEnabled ?
                !isReadMode && this._handleClickCapture :
                undefined, ref: KillSwitches_1.default.isCanvasZoneContainerKillswitchEnabled ? function (ref) { return _this._domElement = ref; } : undefined },
            sectionComponents,
            React.createElement(Toolbar_1.default, { ref: function (ref) { return _this._toolbarElement = ref; }, className: office_ui_fabric_react_1.css('CanvasZoneToolbar', { 'FixedToolbar': this.state.isToolbarFixed }), controlType: zone.layoutType, controlPosition: { zoneIndex: zone.index, sectionIndex: undefined, controlIndex: undefined }, displayMode: displayMode, id: zone.index.toString(), onConfigureButtonClick: this._onToolbarEditClick, onDeleteButtonClick: this._store.handleDeleteZoneButtonClicked, fixedPosition: this.state.fixedPosition })));
        return KillSwitches_1.default.isCanvasZoneContainerKillswitchEnabled ?
            zoneContents : (React.createElement("div", { className: layoutZoneContainerClassName, onClickCapture: !isReadMode && this._handleClickCapture, ref: function (ref) { return _this._domElement = ref; }, "data-negative-space": true }, zoneContents));
    };
    CanvasZone.prototype.handleScroll = function () {
        var zoneRect = this._domElement.getBoundingClientRect();
        var canvasRect = this._store.canvasElement.getBoundingClientRect();
        var stickTop = this._store.scrollableParent.getBoundingClientRect().top;
        var shouldToolbarStick = stickTop > zoneRect.top && stickTop < zoneRect.bottom - this._toolbarElement.getHeight();
        if (shouldToolbarStick !== this.state.isToolbarFixed) {
            this.setState({
                isToolbarFixed: shouldToolbarStick,
                fixedPosition: shouldToolbarStick ? {
                    top: stickTop,
                    left: office_ui_fabric_react_1.getRTL() ? canvasRect.right - 32  : canvasRect.left
                } : undefined
            });
        }
    };
    CanvasZone.prototype._handleKeydownCapture = function (evt) {
        this._isTabPressed = false;
        if (this._domElement) {
            if (sp_a11y_1.Keyboard.isEscape(evt)) {
                this._store.a11yManager.focusTo(this._domElement);
                this._store.a11yManager.alert(this._zoneLabel);
                evt.preventDefault();
            }
            else if (sp_a11y_1.Keyboard.isKey(CanvasA11yConstants_1.KeyCodes.F10, evt, { alt: true })) {
                this._store.a11yManager.focusTo(this._toolbarElement.toolBarElement);
                this._store.a11yManager.alert(CanvasStrings_resx_1.default.ToolbarNavigationArrowKeys);
                evt.preventDefault();
            }
            else if (sp_a11y_1.Keyboard.isKey(CanvasA11yConstants_1.KeyCodes.P, evt, { alt: true })) {
                this._onToolbarEditClick();
                evt.preventDefault();
            }
            else if (sp_a11y_1.Keyboard.isTab(evt) || sp_a11y_1.Keyboard.isShiftTab(evt)) {
                this._isTabPressed = true;
            }
            else if (sp_a11y_1.Keyboard.isEnter(evt)) {
                this._clearAccessibleLabel();
            }
        }
    };
    Object.defineProperty(CanvasZone.prototype, "_zoneLabel", {
        get: function () {
            return odsp_utilities_bundle_1.StringHelper.format(CanvasStrings_resx_1.default.AriaWebPartOrSectionEnterTemplate || '', this._getSectionContextualAriaLabel(), CanvasStrings_resx_1.default.SectionAriaLabel);
        },
        enumerable: true,
        configurable: true
    });
    CanvasZone.prototype._handleZoneFocus = function (evt) {
        var displayMode = this._store.displayMode;
        if (displayMode === sp_core_library_1.DisplayMode.Edit &&
            document.activeElement === this._domElement) {
            if (this.state.accessibleLabel === '') {
                this.setState({
                    accessibleLabel: this._zoneLabel
                });
            }
            this._selectZone();
        }
    };
    CanvasZone.prototype._getSectionContextualAriaLabel = function () {
        var zone = this.props.zone;
        var sections = zone.sections;
        var contextualLabel = '';
        var isCurZoneEmpty = true;
        sections.forEach((function (curSection) {
            var controls = curSection.controls;
            controls.forEach((function (control) {
                var webPartName = '';
                if (control.controlType === CanvasControlType_1.default.RTE) {
                    webPartName = odsp_utilities_bundle_1.StringHelper.format(CanvasStrings_resx_1.default.CanvasZoneAriaWebpartName, CanvasStrings_resx_1.default.TextWebPartDisplayName);
                }
                else {
                    var webPartProps = control;
                    webPartName = odsp_utilities_bundle_1.StringHelper.format(CanvasStrings_resx_1.default.CanvasZoneAriaWebpartName, webPartProps.webPartData.title);
                }
                if (contextualLabel === '') {
                    contextualLabel = webPartName;
                }
                else {
                    contextualLabel = odsp_utilities_bundle_1.StringHelper.format(CanvasStrings_resx_1.default.WebPartsInSectionLabel, contextualLabel, webPartName);
                }
            }));
            if (isCurZoneEmpty && !curSection.isEmpty()) {
                isCurZoneEmpty = false;
            }
        }));
        if (isCurZoneEmpty) {
            contextualLabel = CanvasStrings_resx_1.default.EmptySectionAriaLabel;
        }
        return odsp_utilities_bundle_1.StringHelper.format(CanvasStrings_resx_1.default.SectionContextualAriaLabel, this.props.zoneLabel, this._getAccessibleSectionLabel(this.props.zone.layoutType), contextualLabel);
    };
    CanvasZone.prototype._handleZoneBlur = function (evt) {
        var target = evt.relatedTarget;
        if (this._isTabPressed &&
            !this._isChildElement(target)) {
            this._store.selectedZoneIndex = -1;
        }
        this._isTabPressed = false;
        if (this._toolbarElement &&
            this._toolbarElement.toolBarElement &&
            this._toolbarElement.toolBarElement.contains(target)) {
            this._store.a11yManager.alert(CanvasStrings_resx_1.default.ToolbarNavigationArrowKeys);
        }
    };
    CanvasZone.prototype._onToolbarEditClick = function () {
        if (this.props.zone && this.props.zone.index !== undefined) {
            this._store.handleConfigureZoneButtonClicked(this.props.zone.index.toString(), this.focus);
            this._selectZone();
        }
    };
    CanvasZone.prototype._handleClickCapture = function (e) {
        if (e.target !== this._domElement && e.target.getAttribute('data-negative-space') !== 'true') {
            return;
        }
        if (this.props.zone && this.props.zone.index !== undefined) {
            this._selectZone();
        }
    };
    CanvasZone.prototype._selectZone = function () {
        this._store.selectedZoneIndex = this.props.zone.index;
    };
    CanvasZone.prototype._isChildElement = function (elem) {
        return this._domElement && this._domElement.contains(elem);
    };
    CanvasZone.prototype._getAccessibleSectionLabel = function (layoutType) {
        switch (layoutType) {
            case CanvasControlType_1.default.OneColumn:
                return CanvasStrings_resx_1.default.ToolboxOneColumnPart;
            case CanvasControlType_1.default.TwoColumns:
                return CanvasStrings_resx_1.default.ToolboxTwoColumnPart;
            case CanvasControlType_1.default.ThreeColumns:
                return CanvasStrings_resx_1.default.ToolboxThreeColumnPart;
            case CanvasControlType_1.default.OneThirdColumnRight:
                return CanvasStrings_resx_1.default.ToolboxOneThirdRightColumnPart;
            case CanvasControlType_1.default.OneThirdColumnLeft:
                return CanvasStrings_resx_1.default.ToolboxOneThirdLeftColumnPart;
            case CanvasControlType_1.default.FullWidth:
                return CanvasStrings_resx_1.default.ToolboxFullWidthColumnPart;
            default:
                return undefined;
        }
    };
    CanvasZone.prototype._clearAccessibleLabel = function () {
        var _this = this;
        this._async.setTimeout((function () {
            _this.setState({
                accessibleLabel: ''
            });
        }), 100);
    };
    CanvasZone.contextTypes = {
        store: React.PropTypes.object.isRequired
    };
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], CanvasZone.prototype, "focus", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], CanvasZone.prototype, "handleScroll", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], CanvasZone.prototype, "_handleKeydownCapture", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], CanvasZone.prototype, "_handleZoneFocus", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], CanvasZone.prototype, "_handleZoneBlur", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], CanvasZone.prototype, "_onToolbarEditClick", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], CanvasZone.prototype, "_handleClickCapture", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], CanvasZone.prototype, "_clearAccessibleLabel", null);
    return CanvasZone;
}(office_ui_fabric_react_1.BaseComponent));
exports.default = CanvasZone;


/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(309);


/***/ }),
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(310);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 310 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".CanvasZoneContainer.CanvasZoneContainer--hintUpdate{position:relative;margin-top:-18px}.CanvasZoneContainer.CanvasZoneContainer--read{margin-top:0}.CanvasZone{max-width:1280px;padding:0 12px;margin:0}.CanvasZone:focus{outline:0}.CanvasZone.CanvasZone--centerAlign{margin:auto;max-width:1204px}.CanvasZone.CanvasZone--hintUpdate{margin-top:-18px}.CanvasZone.CanvasZone--hintUpdate.CanvasZone--read{margin-top:0}.CanvasZone.CanvasZone--selected .CanvasSection--edit:before{color:\"[theme:themePrimary, default:#0078d7]\";border-bottom:1px solid}[dir=ltr] .CanvasZone.CanvasZone--selected .CanvasSection--edit:before{border-left:1px solid}[dir=rtl] .CanvasZone.CanvasZone--selected .CanvasSection--edit:before{border-right:1px solid}.CanvasZone.CanvasZone--selected .CanvasZoneToolbar .CanvasControlToolbar-item{color:\"[theme:themePrimary, default:#0078d7]\"}.CanvasZone.CanvasZone--controlSelected .CanvasSection--edit:before{color:\"[theme:neutralTertiary, default: #a6a6a6]\";border-bottom:1px dashed}[dir=ltr] .CanvasZone.CanvasZone--controlSelected .CanvasSection--edit:before{border-left:1px dashed}[dir=rtl] .CanvasZone.CanvasZone--controlSelected .CanvasSection--edit:before{border-right:1px dashed}.CanvasZone.CanvasZone--controlSelected+button.CanvasToolboxHint{opacity:1}.CanvasZone.CanvasZone--fullWidth{max-width:100%;padding:0;margin:-10px 0 -12px}.CanvasZone.CanvasZone--fullWidth.CanvasZone--hintUpdate{margin-top:-18px;margin-bottom:-1px}.CanvasZone.CanvasZone--fullWidth .CanvasSection{padding-left:0;padding-right:0}.CanvasZone.CanvasZone--fullWidth.CanvasZone--fullWidth--read{margin-top:0}[dir=ltr] .CanvasZone.CanvasZone--fullWidth .CanvasToolboxHint-plusButtonWrapperOriginal{padding-left:40px}[dir=rtl] .CanvasZone.CanvasZone--fullWidth .CanvasToolboxHint-plusButtonWrapperOriginal{padding-right:40px}[dir=ltr] .CanvasZone.CanvasZone--fullWidth .CanvasToolboxHint-plusButtonWrapperOriginal{padding-right:24px}[dir=rtl] .CanvasZone.CanvasZone--fullWidth .CanvasToolboxHint-plusButtonWrapperOriginal{padding-left:24px}.CanvasZone.CanvasZone--fullWidth .centerAlign{margin:auto}.CanvasZone.CanvasZone--fullWidth .CanvasControlToolbar{border:1px solid \"[theme:neutralLight, default: #eaeaea]\";top:8px}[dir=ltr] .CanvasZone.CanvasZone--fullWidth .CanvasControlToolbar{left:8px}[dir=rtl] .CanvasZone.CanvasZone--fullWidth .CanvasControlToolbar{right:8px}[dir=ltr] .CanvasZone.CanvasZone--fullWidth .CanvasControlToolbar{padding-right:2px}[dir=rtl] .CanvasZone.CanvasZone--fullWidth .CanvasControlToolbar{padding-left:2px}.CanvasZone .CanvasZoneToolbar{margin-top:12px;position:absolute;width:32px}[dir=ltr] .CanvasZone .CanvasZoneToolbar{left:-32px}[dir=rtl] .CanvasZone .CanvasZoneToolbar{right:-32px}.CanvasZone .CanvasZoneToolbar.FixedToolbar{margin-top:0;position:fixed;left:auto;right:auto}.CanvasZone .CanvasZoneToolbar .CanvasControlToolbar-item{background-color:transparent;color:\"[theme:neutralTertiary, default: #a6a6a6]\";height:32px;min-width:32px;width:32px}.CanvasZone .CanvasZoneToolbar .CanvasControlToolbar-item:focus,.CanvasZone .CanvasZoneToolbar .CanvasControlToolbar-item:hover{background-color:\"[theme:themePrimary, default:#0078d7]\";color:\"[theme:white, default: #ffffff]\";cursor:pointer}.CanvasZone.CanvasZone--fullWidth--read .ControlZone{margin-top:0;margin-bottom:0}@media screen and (min-width:1024px){.CanvasZone--edit{display:-webkit-box;display:-ms-flexbox;display:flex}.CanvasZone--edit.CanvasZone--empty{height:320px}.CanvasZone--edit.CanvasZone--fullWidth{max-width:100%;padding:0;min-height:320px}}@media screen and (min-width:641px){.CanvasZone{padding:0 24px}[dir=ltr] .CanvasZone.CanvasZone--edit{padding-left:40px}[dir=rtl] .CanvasZone.CanvasZone--edit{padding-right:40px}[dir=ltr] .CanvasZone.CanvasZone--edit{padding-right:24px}[dir=rtl] .CanvasZone.CanvasZone--edit{padding-left:24px}.CanvasZone.CanvasZone--edit.CanvasZone--fullWidth{max-width:100%;padding:0;min-height:320px}}", ""]);

// exports


/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(2);
var odsp_utilities_bundle_1 = __webpack_require__(9);
var CanvasStrings_resx_1 = __webpack_require__(10);
var ConfirmationDialog = (function (_super) {
    tslib_1.__extends(ConfirmationDialog, _super);
    function ConfirmationDialog() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ConfirmationDialog.prototype.componentDidUpdate = function (prevProps) {
        if (this.props.isOpen && !prevProps.isOpen) {
            var a11yManager = this.context.store.a11yManager;
            if (a11yManager) {
                a11yManager.alert(this._dialogDescription);
            }
        }
    };
    ConfirmationDialog.prototype.render = function () {
        var _a = this.props, isOpen = _a.isOpen, message = _a.message, onConfirmation = _a.onConfirmation, onDismiss = _a.onDismiss, title = _a.title, elementToFocusOnDismiss = _a.elementToFocusOnDismiss;
        return (React.createElement(office_ui_fabric_react_1.Dialog, { isOpen: isOpen, onDismiss: onDismiss, title: title, subText: message, firstFocusableSelector: 'confirmButton', closeButtonAriaLabel: CanvasStrings_resx_1.default.CloseButtonAriaLabel, 
            onDismissed: elementToFocusOnDismiss ? this._handleDismissed : undefined, ignoreExternalFocusing: !!elementToFocusOnDismiss },
            React.createElement(office_ui_fabric_react_1.DialogFooter, null,
                React.createElement(office_ui_fabric_react_1.PrimaryButton, { onClick: onConfirmation, ariaLabel: CanvasStrings_resx_1.default.ConfirmationDialogYes, "data-automation-id": 'confirmButton', className: 'confirmButton', text: CanvasStrings_resx_1.default.ConfirmationDialogYes }),
                React.createElement(office_ui_fabric_react_1.DefaultButton, { onClick: onDismiss, ariaLabel: CanvasStrings_resx_1.default.ConfirmationDialogNo, "data-automation-id": 'cancelButton', text: CanvasStrings_resx_1.default.ConfirmationDialogNo }))));
    };
    ConfirmationDialog.prototype._handleDismissed = function () {
        var a11yManager = this.context.store.a11yManager;
        if (a11yManager) {
            a11yManager.focusTo(this.props.elementToFocusOnDismiss);
        }
    };
    Object.defineProperty(ConfirmationDialog.prototype, "_dialogDescription", {
        get: function () {
            var _a = this.props, title = _a.title, message = _a.message;
            return odsp_utilities_bundle_1.StringHelper.format(CanvasStrings_resx_1.default.DialogDescription, title, message);
        },
        enumerable: true,
        configurable: true
    });
    ConfirmationDialog.contextTypes = {
        store: React.PropTypes.object.isRequired
    };
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], ConfirmationDialog.prototype, "_handleDismissed", null);
    return ConfirmationDialog;
}(React.Component));
exports.default = ConfirmationDialog;


/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(313);


/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(314);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".CanvasComponent{position:relative}.CanvasSectionBarBg{position:absolute;top:0;height:100%;width:32px;background-color:\"[theme:neutralLighter, default: #f4f4f4]\"}[dir=ltr] .CanvasSectionBarBg{left:0}[dir=rtl] .CanvasSectionBarBg{right:0}.Canvas{position:relative;padding:0}.Canvas>.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapperOriginal{padding:0 12px}.Canvas>.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapperOriginal.centerAlign{margin:auto}.Canvas--edit{padding-bottom:80px}[dir=ltr] .Canvas--edit.Canvas--withLayout{margin-left:32px}[dir=rtl] .Canvas--edit.Canvas--withLayout{margin-right:32px}[dir=ltr] .Canvas--edit.Canvas--withLayout{box-shadow:-4px 0 8px -5px \"[theme:neutralTertiaryAlt, default: #c8c8c8]\"}[dir=rtl] .Canvas--edit.Canvas--withLayout{box-shadow:4px 0 8px -5px \"[theme:neutralTertiaryAlt, default: #c8c8c8]\"}[dir=ltr] .Canvas--edit>.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapperOriginal{padding-left:40px}[dir=rtl] .Canvas--edit>.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapperOriginal{padding-right:40px}[dir=ltr] .Canvas--edit>.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapperOriginal{padding-right:24px}[dir=rtl] .Canvas--edit>.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapperOriginal{padding-left:24px}.Canvas-screenReaderOnly{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}", ""]);

// exports


/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var ReactDom = __webpack_require__(17);
var sp_telemetry_1 = __webpack_require__(6);
var odsp_utilities_bundle_1 = __webpack_require__(9);
var office_ui_fabric_react_1 = __webpack_require__(2);
var sp_lodash_subset_1 = __webpack_require__(12);
var BaseRte_1 = __webpack_require__(49);
var CKEditorForWebPartRte_1 = __webpack_require__(316);
var SPRteCKEditorConfiguration_1 = __webpack_require__(116);
var RteA11y_1 = __webpack_require__(61);
var RteStrings_resx_1 = __webpack_require__(22);
var WebPartRte = (function (_super) {
    tslib_1.__extends(WebPartRte, _super);
    function WebPartRte(props) {
        var _this = _super.call(this, props, WebPartRte.defaultOptions) || this;
        _this.TAG_NAME = 'WebPartRte.';
        return _this;
    }
    WebPartRte._getFormattingBarDefaultPosition = function (isRtl) {
        if (isRtl === void 0) { isRtl = false; }
        var left = isRtl ? undefined : 0;
        var top = -202;
        var position = 'relative';
        var right = isRtl ? 0 : undefined;
        return { left: left, top: top, position: position, right: right };
    };
    WebPartRte.prototype.focus = function () {
        _super.prototype.focus.call(this);
    };
    WebPartRte.prototype._initState = function () {
        this.state = {
            displayMode: this.props.displayMode,
            formattingBarPosition: WebPartRte._getFormattingBarDefaultPosition(this._isRtl),
            isFormattingBarHidden: false,
            isLinkDialogOpen: false
        };
    };
    WebPartRte.prototype._createNewEditor = function (innerHTML, startupFocus) {
        return this._options.editor.createNewEditor(this._config, innerHTML, this._editorElement, this._handleSelectionChange, this._handleTextChange.bind(this), startupFocus, (function () { }), (function () { }), (function () { }), this._handleEditorKeyDown, this.props.placeholder);
    };
    WebPartRte.prototype._afterEditorCreated = function (editor) {
        this._editor = editor;
        this._handleTextChange();
        var formattingbarElement = ReactDom.findDOMNode(this._formattingbar);
        this._editorElement.style.position = 'relative';
        this._editorElement.style.top = formattingbarElement.offsetHeight + "px";
        formattingbarElement.style.top = "-" + this._editorElement.offsetHeight + "px";
        var iframe = this._editorElement.querySelector('iframe');
        if (iframe) {
            iframe.contentDocument.addEventListener('paste', this._onBeforePaste, true);
            var ariaLabel = odsp_utilities_bundle_1.StringHelper.format(RteStrings_resx_1.default.RichTextEditorIframeTitle, this.props.ariaLabel || '', RteStrings_resx_1.default.RichTextEditorAriaLabel);
            iframe.setAttribute('title', ariaLabel);
        }
        this._initPagePicker();
    };
    WebPartRte.prototype._finalizeAction = function (ariaActionName) {
        _super.prototype._finalizeAction.call(this, ariaActionName);
        if (this.props.onChanged) {
            this.props.onChanged(this._editor ? this._editor.getHTML() : this.props.innerHTML);
        }
    };
    WebPartRte.prototype._handleKeyDown = function (evt) { };
    WebPartRte.prototype._handleEditorKeyDown = function (evt) {
        if (RteA11y_1.isKey(RteA11y_1.KeyCodes.F10, evt, true)  && this._formattingbarElement) {
            sp_telemetry_1._EngagementLogger.logEvent(this.TAG_NAME + 'ToolbarByKeyboardShortcut.Focus', evt.type);
            RteA11y_1.navigateInside(this._formattingbarElement);
            var screenReaderInstruction = odsp_utilities_bundle_1.StringHelper.format(RteStrings_resx_1.default.RichTextNavigationAltF10Keys, RteStrings_resx_1.default.ToolbarNavigationArrowKeys, RteStrings_resx_1.default.ToolbarNavigationShiftTabKey);
            RteA11y_1.ariaAlert(screenReaderInstruction);
            evt.stopPropagation();
            evt.preventDefault();
        }
        else if (RteA11y_1.isKey('K'.charCodeAt(0), evt, false, true) ) {
            this._handleLink();
            evt.stopPropagation();
            evt.preventDefault();
        }
        else if (!RteA11y_1.isKey(RteA11y_1.KeyCodes.Tab, evt) && !RteA11y_1.isKey(RteA11y_1.KeyCodes.Tab, evt, false, false, true) ) {
            this._redispatchKeyboardEvent(evt);
        }
    };
    WebPartRte.prototype._redispatchKeyboardEvent = function (evt) {
        var emptyEvent = document.createEvent('Event');
        emptyEvent.initEvent(evt.type, true, true);
        var clonedEvent = sp_lodash_subset_1.merge(emptyEvent, {
            keyCode: evt.keyCode,
            code: evt.code,
            which: evt.which,
            altKey: evt.altKey,
            ctrlKey: evt.ctrlKey
        });
        if (this._editorElement) {
            this._editorElement.dispatchEvent(clonedEvent);
        }
    };
    WebPartRte.defaultOptions = {
        editor: CKEditorForWebPartRte_1.default,
        config: new SPRteCKEditorConfiguration_1.default(),
        loader: CKEditorForWebPartRte_1.default.moduleLoader
    };
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], WebPartRte.prototype, "_handleEditorKeyDown", null);
    return WebPartRte;
}(BaseRte_1.BaseRte));
exports.default = WebPartRte;


/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var sp_telemetry_1 = __webpack_require__(6);
var CKTextEditor_1 = __webpack_require__(48);
var CKEditorForWebPartRte = (function (_super) {
    tslib_1.__extends(CKEditorForWebPartRte, _super);
    function CKEditorForWebPartRte(config, currentHTML, editorElement, selectionChangeCallback, textChangeCallback, startUpFocus, onReadyCallback, onKeyDownCallBack, placeholder) {
        var _this = _super.call(this, config, currentHTML, editorElement, selectionChangeCallback, textChangeCallback, startUpFocus, onReadyCallback) || this;
        var pluginsToBeRemoved = 'contextmenu,menubutton,scayt,liststyle,tableselection,tabletools,magicline,link,resize,autogrow,elementspath,divarea';
        _this._ckEditorConfig = {
            disableNativeSpellChecker: false,
            on: {
                change: _this._handleTextChange,
                selectionChange: _this._handleSelectionChangeConvert
            },
            removePlugins: "tableselection," + pluginsToBeRemoved,
            extraPlugins: 'justify,placeholdertext',
            placeholder: placeholder,
            removeButtons: '',
            stylesSet: false,
            toolbar: [],
            startupFocus: _this._startupFocus,
            fullPage: false,
            resize_enabled: false,
            width: '100%',
            height: 200,
            title: false
        };
        _this._onKeyDownCallBack = onKeyDownCallBack;
        _this._ckEditorConfig.allowedContent = true;
        _this._initialize(currentHTML);
        return _this;
    }
    CKEditorForWebPartRte.createNewEditor = function (config, currentHTML, editorElement, selectionChangeCallback, textChangeCallback, startupFocus, onImagePasteCallBack, onPasteCallback, onContextMenuCallBack, onKeyDownCallBack, placeholder) {
        return new Promise(function (resolve) {
            CKEditorForWebPartRte.moduleLoader.loadModule(config.editorSource).then((function () {
                var editor = new CKEditorForWebPartRte(config, currentHTML, editorElement, selectionChangeCallback, textChangeCallback, startupFocus, function () { resolve(editor); }, onKeyDownCallBack, placeholder);
            })).catch((function (error) {
                sp_telemetry_1._TraceLogger.logError(CKEditorForWebPartRte.logSource, error);
            }));
        });
    };
    CKEditorForWebPartRte.prototype._initialize = function (currentHTML) {
        if (!this._ckEditorConfig) {
            return;
        }
        var textPart = document.createElement('textarea');
        this._editorElement.appendChild(textPart);
        this._editor = CKEDITOR.replace(textPart, this._ckEditorConfig);
        this._editor.setData(currentHTML);
        this._editor.on('key', this._handleKeyDown.bind(this));
        this._addCustomToolbarCommands();
    };
    CKEditorForWebPartRte.prototype._handleKeyDown = function (ev) {
        var keyboardEvent = ev.data && ev.data.domEvent && ev.data.domEvent.$;
        if (keyboardEvent && this._onKeyDownCallBack) {
            this._onKeyDownCallBack(keyboardEvent);
            if (keyboardEvent.defaultPrevented) {
                ev.cancel();
            }
        }
    };
    CKEditorForWebPartRte.logSource = sp_telemetry_1._LogSource.create('CKEditorForWebPartRte');
    return CKEditorForWebPartRte;
}(CKTextEditor_1.default));
exports.default = CKEditorForWebPartRte;


/***/ }),
/* 317 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(318);
var styles = {
    showPane: 'showPane_e2bf8675',
    spPropertyPaneContainer: 'spPropertyPaneContainer_e2bf8675',
    shrinkContent: 'shrinkContent_e2bf8675',
};
exports.default = styles;


/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(319);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 319 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, "[id^=spPropertyPaneContainer].showPane_e2bf8675{width:340px}[id^=spPropertyPaneContainer].showPane_e2bf8675 button{display:block}[id^=spPropertyPaneContainerNoFlexbox].spPropertyPaneContainer_e2bf8675{position:absolute;top:50px;bottom:0;z-index:999}[dir=ltr] [id^=spPropertyPaneContainerNoFlexbox].spPropertyPaneContainer_e2bf8675{right:-340px}[dir=rtl] [id^=spPropertyPaneContainerNoFlexbox].spPropertyPaneContainer_e2bf8675{left:-340px}[dir=ltr] [id^=spPropertyPaneContainerNoFlexbox].showPane_e2bf8675{right:0}[dir=rtl] [id^=spPropertyPaneContainerNoFlexbox].showPane_e2bf8675{left:0}[dir=ltr] [id^=spPageChromeAppDiv].shrinkContent_e2bf8675{right:340px}[dir=rtl] [id^=spPageChromeAppDiv].shrinkContent_e2bf8675{left:340px}[dir=ltr] [id^=workbenchPageContent].shrinkContent_e2bf8675{right:340px}[dir=rtl] [id^=workbenchPageContent].shrinkContent_e2bf8675{left:340px}[dir=ltr] [id^=workbenchCommandBar].shrinkContent_e2bf8675{padding-right:340px}[dir=rtl] [id^=workbenchCommandBar].shrinkContent_e2bf8675{padding-left:340px}", ""]);

// exports


/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(321);
var styles = {
    canvasHost: 'canvasHost_587ebfc5',
    belowHeader: 'belowHeader_587ebfc5',
    content: 'content_587ebfc5',
    hasHeader: 'hasHeader_587ebfc5',
    hasCommandBar: 'hasCommandBar_587ebfc5',
    NavPane: 'NavPane_587ebfc5',
};
exports.default = styles;


/***/ }),
/* 321 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(322);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 322 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".belowHeader_587ebfc5,.canvasHost_587ebfc5,.content_587ebfc5{position:absolute;left:0;top:0;right:0;bottom:0}.belowHeader_587ebfc5,.content_587ebfc5{overflow:hidden}.content_587ebfc5{transition:margin-right .6s ease;-webkit-transition:margin-right .6s ease;padding:10px 30px;overflow-y:auto}.hasHeader_587ebfc5 .belowHeader_587ebfc5{top:50px}.hasCommandBar_587ebfc5 .content_587ebfc5{top:40px}.canvasHost_587ebfc5 .NavPane_587ebfc5{width:220px;right:auto}", ""]);

// exports


/***/ }),
/* 323 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var strings = ( false)
    ? require('../../resx-strings/en-us.json')
    : __webpack_require__(13);
exports.default = strings['_vd/LT/qfiQhbHFfeM1GtlA'];


/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.mobilePreviewDevices = {
    phones: [
        { name: 'iPhone 6 Plus', width: 414, height: 736 },
        { name: 'Samsung Galaxy S6/S7', width: 360, height: 640 },
        { name: 'iPhone 5', width: 320, height: 568 },
        { name: 'Microsoft Lumia 1520', width: 432, height: 768 }
    ],
    tablets: [
        { name: 'Microsoft Surface Pro 3', width: 1440, height: 960 },
        { name: 'Microsoft Surface Pro', width: 1280, height: 720 },
        { name: 'iPad', width: 1024, height: 768 },
        { name: 'iPad Pro', width: 1366, height: 1024 },
        { name: 'Samsung Galaxy Tab', width: 1280, height: 800 }
    ],
    desktops: []
};


/***/ }),
/* 325 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(2);
var MobilePreviewClickStop_1 = __webpack_require__(326);
var MobilePreviewClickStopBar_module_scss_1 = __webpack_require__(330);
var MobilePreview_resx_1 = __webpack_require__(36);
var MobilePreviewClickStopBar = (function (_super) {
    tslib_1.__extends(MobilePreviewClickStopBar, _super);
    function MobilePreviewClickStopBar(props) {
        return _super.call(this, props) || this;
    }
    MobilePreviewClickStopBar.prototype.render = function () {
        var props = this.props;
        var deviceDiv = [];
        var _loop_1 = function (device) {
            var selected = false;
            if (device === props.currentDevice) {
                selected = true;
            }
            deviceDiv.push(React.createElement(MobilePreviewClickStop_1.default, { key: device.name, device: device, onClick: function () { return props.onSelectClickStop(device); }, selected: selected, orientation: props.currentOrientation, deviceType: this_1.props.deviceType }));
        };
        var this_1 = this;
        for (var _i = 0, _a = props.devices; _i < _a.length; _i++) {
            var device = _a[_i];
            _loop_1(device);
        }
        var containerStyle = office_ui_fabric_react_1.css(MobilePreviewClickStopBar_module_scss_1.default.clickStopNavBar, 'ms-borderColor-neutralTertiaryAlt', 'ms-bgColor-neutralLighter', 'ms-fontColor-neutralPrimary');
        return (React.createElement("div", { className: containerStyle, "data-sp-a11y-alertonfocusin": MobilePreview_resx_1.default.ScreenReaderDevicePickerEntered },
            React.createElement(office_ui_fabric_react_1.FocusZone, { direction: office_ui_fabric_react_1.FocusZoneDirection.horizontal },
                React.createElement("ul", { className: MobilePreviewClickStopBar_module_scss_1.default.navBarItems },
                    deviceDiv,
                    React.createElement("div", { id: 'clickStopBarLabel', className: MobilePreviewClickStopBar_module_scss_1.default.mobilePreviewDeviceTitle }, props.currentDevice.name)))));
    };
    return MobilePreviewClickStopBar;
}(React.Component));
exports.default = MobilePreviewClickStopBar;


/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(2);
var MobilePreview_1 = __webpack_require__(35);
var MobilePreviewClickStop_module_scss_1 = __webpack_require__(327);
var MobilePreview_resx_1 = __webpack_require__(36);
var MobilePreviewClickStop = (function (_super) {
    tslib_1.__extends(MobilePreviewClickStop, _super);
    function MobilePreviewClickStop(props) {
        return _super.call(this, props) || this;
    }
    MobilePreviewClickStop.prototype.render = function () {
        var _this = this;
        var effectiveWidth = this.props.device.width;
        if (this.props.deviceType === MobilePreview_1.DeviceType.Phone) {
            if (this.props.orientation === MobilePreview_1.DeviceOrientation.Landscape) {
                effectiveWidth = this.props.device.height;
            }
        }
        else if (this.props.deviceType === MobilePreview_1.DeviceType.Tablet) {
            if (this.props.orientation === MobilePreview_1.DeviceOrientation.Portrait) {
                effectiveWidth = this.props.device.height;
            }
        }
        var leftCalc = "calc(50% - " + effectiveWidth / 2 + "px)";
        var divStyle = {
            width: effectiveWidth,
            left: leftCalc
        };
        var className = office_ui_fabric_react_1.css(MobilePreviewClickStop_module_scss_1.default.navBarItem, 'ms-borderColor-white', MobilePreviewClickStop_module_scss_1.default.clickStop, (_a = {},
            _a[MobilePreviewClickStop_module_scss_1.default.clickStopSelected] = this.props.selected,
            _a));
        return (React.createElement("li", { className: className, role: 'button', "aria-label": this.props.device.name, tabIndex: 0, onClick: this._handleClick, onKeyDown: this._handleKeyDown, style: divStyle, onFocus: this._handleFocus, ref: function (c) { return _this._mainDiv = c; } }));
        var _a;
    };
    MobilePreviewClickStop.prototype._handleFocus = function () {
        if (document.activeElement === this._mainDiv && !this.props.selected) {
            this.context.a11yManager.alert(MobilePreview_resx_1.default.ScreenReaderDevicePickerSelectionChanged);
        }
    };
    MobilePreviewClickStop.prototype._handleClick = function () {
        this.props.onClick(this.props.device);
    };
    MobilePreviewClickStop.prototype._handleKeyDown = function (evt) {
        if (evt.keyCode === 13) {
            this._handleClick();
        }
    };
    MobilePreviewClickStop.contextTypes = {
        a11yManager: React.PropTypes.object
    };
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], MobilePreviewClickStop.prototype, "_handleFocus", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], MobilePreviewClickStop.prototype, "_handleClick", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], MobilePreviewClickStop.prototype, "_handleKeyDown", null);
    return MobilePreviewClickStop;
}(React.Component));
exports.default = MobilePreviewClickStop;


/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(328);
var styles = {
    clickStop: 'clickStop_a0de1e42',
    clickStopSelected: 'clickStopSelected_a0de1e42',
    navBarItem: 'navBarItem_a0de1e42',
};
exports.default = styles;


/***/ }),
/* 328 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(329);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 329 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".clickStop_a0de1e42{border-width:0;border-left-width:2px;border-right-width:2px;border-style:solid;height:30px;line-height:30px;position:absolute}.clickStop_a0de1e42:hover{background-color:#c8c8c8;cursor:pointer}.clickStopSelected_a0de1e42{background-color:#c8c8c8}.navBarItem_a0de1e42{float:left;margin-right:18px;font-size:14px;padding:0;box-sizing:border-box;display:block}", ""]);

// exports


/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(331);
var styles = {
    clickStopNavBar: 'clickStopNavBar_ba8924f8',
    navBarItems: 'navBarItems_ba8924f8',
    mobilePreviewDeviceTitle: 'mobilePreviewDeviceTitle_ba8924f8',
};
exports.default = styles;


/***/ }),
/* 331 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(332);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 332 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".clickStopNavBar_ba8924f8{height:30px;border-width:0;border-top-width:1px;border-style:solid;box-sizing:content-box;font-size:14px;font-weight:400;margin:0;box-shadow:none;padding:0 10px;width:100%;outline:1px solid transparent}.navBarItems_ba8924f8{display:block;list-style:none;margin:0 7px 0 0;padding:0}.mobilePreviewDeviceTitle_ba8924f8{width:200px;margin:auto;text-align:center;padding:4px;position:relative}", ""]);

// exports


/***/ }),
/* 333 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var office_ui_fabric_react_bundle_1 = __webpack_require__(23);
var MobilePreviewHeaderBar_module_scss_1 = __webpack_require__(334);
var MobilePreviewURLEntry_1 = __webpack_require__(337);
var MobilePreviewDeviceTypeSelector_1 = __webpack_require__(341);
var MobilePreviewHeaderBar = (function (_super) {
    tslib_1.__extends(MobilePreviewHeaderBar, _super);
    function MobilePreviewHeaderBar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MobilePreviewHeaderBar.prototype.render = function () {
        var mobilePreviewURLEntry = React.createElement(MobilePreviewURLEntry_1.default, { onChangeURL: this.props.onChangeURL, onClickURLSubmit: this.props.onClickURLSubmit });
        var mobilePreviewDeviceTypeSelector = React.createElement(MobilePreviewDeviceTypeSelector_1.default, { onChangeDeviceType: this.props.onChangeDeviceType });
        var mobilePreviewNavBar = office_ui_fabric_react_bundle_1.css(MobilePreviewHeaderBar_module_scss_1.default.mobilePreviewNavBar, 'ms-fontColor-neutralPrimary', 'ms-bgColor-neutralLighter');
        var navBarItems = office_ui_fabric_react_bundle_1.css('ms-Grid-row', MobilePreviewHeaderBar_module_scss_1.default.navBarItems);
        var navBarItemSmClass = office_ui_fabric_react_bundle_1.css('ms-Grid-col', 'ms-sm6', 'ms-md6', 'ms-lg3', MobilePreviewHeaderBar_module_scss_1.default.navBarItem);
        var navBarItemMdClass = office_ui_fabric_react_bundle_1.css('ms-Grid-col', 'ms-hiddenMdDown', 'ms-lg6', MobilePreviewHeaderBar_module_scss_1.default.navBarItem);
        var navBarItemRightClass = office_ui_fabric_react_bundle_1.css(MobilePreviewHeaderBar_module_scss_1.default.navBarItem, MobilePreviewHeaderBar_module_scss_1.default.navBarItemRight);
        var xClass = office_ui_fabric_react_bundle_1.css(office_ui_fabric_react_bundle_1.getIconClassName('Cancel'), 'ms-fontColor-neutralTertiary', MobilePreviewHeaderBar_module_scss_1.default.mobilePreviewXIcon, 'ms-borderColor-neutralTertiaryAlt');
        return (React.createElement("div", { className: mobilePreviewNavBar },
            React.createElement("div", { className: navBarItems },
                React.createElement("div", { className: navBarItemSmClass },
                    React.createElement("span", { className: MobilePreviewHeaderBar_module_scss_1.default.mobilePreviewTitle }, "Mobile Preview")),
                React.createElement("div", { className: navBarItemMdClass }, mobilePreviewURLEntry),
                React.createElement("div", { className: 'ms-Grid-col ms-sm6 ms-md6 ms-lg3' },
                    React.createElement("div", { className: navBarItemRightClass },
                        React.createElement("a", { role: 'button', onClick: this.props.onExit },
                            React.createElement("span", { className: xClass }))),
                    mobilePreviewDeviceTypeSelector))));
    };
    return MobilePreviewHeaderBar;
}(React.Component));
exports.default = MobilePreviewHeaderBar;


/***/ }),
/* 334 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(335);
var styles = {
    mobilePreviewNavBar: 'mobilePreviewNavBar_aaa11c0b',
    navBarItems: 'navBarItems_aaa11c0b',
    navBarItem: 'navBarItem_aaa11c0b',
    navBarItemRight: 'navBarItemRight_aaa11c0b',
    mobilePreviewTitle: 'mobilePreviewTitle_aaa11c0b',
    mobilePreviewXIcon: 'mobilePreviewXIcon_aaa11c0b',
};
exports.default = styles;


/***/ }),
/* 335 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(336);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 336 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".mobilePreviewNavBar_aaa11c0b{height:50px;font-size:14px;font-weight:400;box-sizing:border-box;margin:0;box-shadow:none;padding:0 10px;width:100%;outline:1px solid transparent}.navBarItems_aaa11c0b{display:block;list-style:none;margin:0 7px 0 0;padding:0}.navBarItem_aaa11c0b{margin-right:0;float:left;font-size:14px;padding:0;box-sizing:border-box;display:block;height:40px;line-height:40px;position:relative}.navBarItemRight_aaa11c0b{float:right;margin:0}.mobilePreviewTitle_aaa11c0b{line-height:50px;margin-left:15px;font-size:xx-large}.mobilePreviewXIcon_aaa11c0b{font-size:30px;border-left-width:1px;margin:auto;margin-left:30px;line-height:50px}.mobilePreviewXIcon_aaa11c0b:hover{cursor:pointer;color:#767676}", ""]);

// exports


/***/ }),
/* 337 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(2);
var MobilePreviewURLEntry_module_scss_1 = __webpack_require__(338);
var MobilePreview_resx_1 = __webpack_require__(36);
var MobilePreviewURLEntry = (function (_super) {
    tslib_1.__extends(MobilePreviewURLEntry, _super);
    function MobilePreviewURLEntry() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MobilePreviewURLEntry.prototype.render = function () {
        return (React.createElement("div", { className: MobilePreviewURLEntry_module_scss_1.default.mobilePreviewURLbar },
            React.createElement(office_ui_fabric_react_1.TextField, tslib_1.__assign({ className: MobilePreviewURLEntry_module_scss_1.default.mobilePreviewTextfield, onChanged: this._validateAndCompleteURL }, { placeholder: MobilePreview_resx_1.default.UrlTextBoxPlaceholder } )),
            React.createElement(office_ui_fabric_react_1.Button, { className: MobilePreviewURLEntry_module_scss_1.default.mobilePreviewURLbutton, onClick: this.props.onClickURLSubmit }, "View Preview")));
    };
    MobilePreviewURLEntry.prototype._validateAndCompleteURL = function (value) {
        if (!value || value === '') {
            return;
        }
        var regex = /https?:\/\//;
        if (!regex.test(value)) {
            value = 'http://' + value;
        }
        this.props.onChangeURL(value);
    };
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], MobilePreviewURLEntry.prototype, "_validateAndCompleteURL", null);
    return MobilePreviewURLEntry;
}(React.Component));
exports.default = MobilePreviewURLEntry;


/***/ }),
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(339);
var styles = {
    mobilePreviewURLbar: 'mobilePreviewURLbar_25e72151',
    mobilePreviewTextfield: 'mobilePreviewTextfield_25e72151',
    mobilePreviewURLbutton: 'mobilePreviewURLbutton_25e72151',
};
exports.default = styles;


/***/ }),
/* 339 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(340);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".mobilePreviewURLbar_25e72151{height:100%;padding:5px;width:100%}.mobilePreviewTextfield_25e72151{position:absolute;left:0;width:calc(100% - 135px)}.mobilePreviewURLbutton_25e72151{position:absolute;right:0;margin:6px;background-color:#c8c8c8;border:1px solid #c8c8c8;border-radius:2px;top:4px}.mobilePreviewURLbutton_25e72151:hover{background-color:#a6a6a6}.mobilePreviewURLbutton_25e72151:active,.mobilePreviewURLbutton_25e72151:focus{background-color:#c8c8c8;border:1px solid #a6a6a6}", ""]);

// exports


/***/ }),
/* 341 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var office_ui_fabric_react_bundle_1 = __webpack_require__(23);
var MobilePreviewDeviceTypeSelector_module_scss_1 = __webpack_require__(342);
var MobilePreview_1 = __webpack_require__(35);
var MobilePreviewDeviceTypeSelector = (function (_super) {
    tslib_1.__extends(MobilePreviewDeviceTypeSelector, _super);
    function MobilePreviewDeviceTypeSelector() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MobilePreviewDeviceTypeSelector.prototype.render = function () {
        var _this = this;
        var spanClassNameMobile = office_ui_fabric_react_bundle_1.css(office_ui_fabric_react_bundle_1.getIconClassName('CellPhone'), 'ms-fontColor-neutralTertiary', MobilePreviewDeviceTypeSelector_module_scss_1.default.mobilePreviewDeviceIcon);
        var spanClassNameTablet = office_ui_fabric_react_bundle_1.css(office_ui_fabric_react_bundle_1.getIconClassName('Tablet'), 'ms-fontColor-neutralTertiary', MobilePreviewDeviceTypeSelector_module_scss_1.default.mobilePreviewDeviceIcon);
        return (React.createElement("div", null,
            React.createElement("div", { className: MobilePreviewDeviceTypeSelector_module_scss_1.default.navBarItemRight },
                React.createElement("a", { tabIndex: 0, role: 'button', onClick: function () { return _this.props.onChangeDeviceType(MobilePreview_1.DeviceType.Phone); } },
                    React.createElement("span", { className: spanClassNameMobile }))),
            React.createElement("div", { className: MobilePreviewDeviceTypeSelector_module_scss_1.default.navBarItemRight },
                React.createElement("a", { tabIndex: 0, role: 'button', onClick: function () { return _this.props.onChangeDeviceType(MobilePreview_1.DeviceType.Tablet); } },
                    React.createElement("span", { className: spanClassNameTablet })))));
    };
    return MobilePreviewDeviceTypeSelector;
}(React.Component));
exports.default = MobilePreviewDeviceTypeSelector;


/***/ }),
/* 342 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(343);
var styles = {
    mobilePreviewDeviceIcon: 'mobilePreviewDeviceIcon_aa28ad88',
    navBarItemRight: 'navBarItemRight_aa28ad88',
};
exports.default = styles;


/***/ }),
/* 343 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(344);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 344 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".mobilePreviewDeviceIcon_aa28ad88{margin:auto;padding:auto;font-size:40px;line-height:50px}.mobilePreviewDeviceIcon_aa28ad88:hover{cursor:pointer;color:#767676}.navBarItemRight_aa28ad88{font-size:14px;padding:0;box-sizing:border-box;display:block;height:40px;line-height:40px;position:relative;float:right;margin:0}", ""]);

// exports


/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(2);
var MobilePreviewDeviceView_module_scss_1 = __webpack_require__(346);
var MobilePreview_1 = __webpack_require__(35);
var MobilePreviewDeviceView = (function (_super) {
    tslib_1.__extends(MobilePreviewDeviceView, _super);
    function MobilePreviewDeviceView(props) {
        return _super.call(this, props) || this;
    }
    MobilePreviewDeviceView.prototype.render = function () {
        var formStyle = {
            width: this.props.currentDevice.width,
            height: this.props.currentDevice.height
        };
        var mobilePreviewClassName = office_ui_fabric_react_1.css(MobilePreviewDeviceView_module_scss_1.default.mobilePreviewDevice, 'ms-borderColor-neutralSecondaryAlt', this.props.deviceType === MobilePreview_1.DeviceType.Tablet ? MobilePreviewDeviceView_module_scss_1.default.mobilePreviewTablet :
            this.props.currentOrientation === MobilePreview_1.DeviceOrientation.Portrait ? MobilePreviewDeviceView_module_scss_1.default.mobilePreviewPortrait :
                MobilePreviewDeviceView_module_scss_1.default.mobilePreviewLandscape);
        var iFrameStyle = office_ui_fabric_react_1.css(MobilePreviewDeviceView_module_scss_1.default.mobilePreviewIframe, 'ms-bgColor-white');
        if (this.props.deviceType === MobilePreview_1.DeviceType.Phone) {
            if (this.props.currentOrientation === MobilePreview_1.DeviceOrientation.Landscape) {
                formStyle.width = this.props.currentDevice.height;
                formStyle.height = this.props.currentDevice.width;
            }
        }
        if (this.props.deviceType === MobilePreview_1.DeviceType.Tablet) {
            if (this.props.currentOrientation === MobilePreview_1.DeviceOrientation.Portrait) {
                formStyle.width = this.props.currentDevice.height;
                formStyle.height = this.props.currentDevice.width;
            }
        }
        return (React.createElement("div", { className: mobilePreviewClassName, style: formStyle },
            React.createElement("iframe", { className: iFrameStyle, src: this.props.url })));
    };
    return MobilePreviewDeviceView;
}(React.Component));
exports.default = MobilePreviewDeviceView;


/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(347);
var styles = {
    mobilePreviewDevice: 'mobilePreviewDevice_985214bd',
    mobilePreviewPortrait: 'mobilePreviewPortrait_985214bd',
    mobilePreviewLandscape: 'mobilePreviewLandscape_985214bd',
    mobilePreviewTablet: 'mobilePreviewTablet_985214bd',
    mobilePreviewIframe: 'mobilePreviewIframe_985214bd',
};
exports.default = styles;


/***/ }),
/* 347 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(348);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 348 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".mobilePreviewDevice_985214bd{border-radius:15px;border-style:solid;position:relative;margin:auto;margin-top:70px}.mobilePreviewPortrait_985214bd{border-width:60px 16px}.mobilePreviewLandscape_985214bd{border-width:16px 60px}.mobilePreviewTablet_985214bd{border-width:40px}.mobilePreviewIframe_985214bd{width:100%;height:100%;position:absolute;border:none}", ""]);

// exports


/***/ }),
/* 349 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(2);
var MobilePreviewDimensionInput_module_scss_1 = __webpack_require__(350);
var MobilePreview_resx_1 = __webpack_require__(36);
var MobilePreviewDimensionInput = (function (_super) {
    tslib_1.__extends(MobilePreviewDimensionInput, _super);
    function MobilePreviewDimensionInput(props) {
        return _super.call(this, props) || this;
    }
    MobilePreviewDimensionInput.prototype.render = function () {
        var xContainerClassName = office_ui_fabric_react_1.css(MobilePreviewDimensionInput_module_scss_1.default.mobilePreviewTextfieldXY, MobilePreviewDimensionInput_module_scss_1.default.xField);
        var yContainerClassName = office_ui_fabric_react_1.css(MobilePreviewDimensionInput_module_scss_1.default.mobilePreviewTextfieldXY, MobilePreviewDimensionInput_module_scss_1.default.yField);
        var textfieldsClass = office_ui_fabric_react_1.css(MobilePreviewDimensionInput_module_scss_1.default.xyTextfields, 'ms-borderColor-neutralTertiaryAlt', 'ms-fontColor-neutralSecondary');
        var labelsClass = office_ui_fabric_react_1.css(MobilePreviewDimensionInput_module_scss_1.default.xyLabels, 'ms-fontColor-neutralTertiaryAlt');
        return (React.createElement("div", null,
            React.createElement("div", { className: xContainerClassName },
                React.createElement("label", { className: labelsClass }, MobilePreview_resx_1.default.Width + ":"),
                React.createElement("input", { "aria-label": MobilePreview_resx_1.default.Width, className: textfieldsClass, onChange: this.props.onChangedX, value: this.props.currentDevice.width.toString() })),
            React.createElement("div", { className: yContainerClassName },
                React.createElement("label", { className: labelsClass }, MobilePreview_resx_1.default.Height + ":"),
                React.createElement("input", { "aria-label": MobilePreview_resx_1.default.Height, className: textfieldsClass, onChange: this.props.onChangedY, value: this.props.currentDevice.height.toString() }))));
    };
    return MobilePreviewDimensionInput;
}(React.Component));
exports.default = MobilePreviewDimensionInput;


/***/ }),
/* 350 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(351);
var styles = {
    xField: 'xField_72782149',
    yField: 'yField_72782149',
    mobilePreviewTextfieldXY: 'mobilePreviewTextfieldXY_72782149',
    xyTextfields: 'xyTextfields_72782149',
    xyLabels: 'xyLabels_72782149',
};
exports.default = styles;


/***/ }),
/* 351 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(352);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".xField_72782149{left:15px}.yField_72782149{left:140px}.mobilePreviewTextfieldXY_72782149{margin:10px;position:absolute;top:15px;width:114px}.mobilePreviewTextfieldXY_72782149 .xyTextfields_72782149{position:absolute;min-width:20px;width:50px;right:0;height:28px;box-sizing:border-box;margin:0;box-shadow:none;border:1px solid;font-size:12px;padding:6px 10px 8px;outline:0}.mobilePreviewTextfieldXY_72782149 .xyLabels_72782149{position:absolute;font-size:20px;left:0;padding:0;font-weight:400;margin:0;box-shadow:none;box-sizing:border-box;display:block}", ""]);

// exports


/***/ }),
/* 353 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var office_ui_fabric_react_bundle_1 = __webpack_require__(23);
var MobilePreviewRotate_module_scss_1 = __webpack_require__(354);
var MobilePreview_1 = __webpack_require__(35);
var MobilePreviewRotate = (function (_super) {
    tslib_1.__extends(MobilePreviewRotate, _super);
    function MobilePreviewRotate() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MobilePreviewRotate.prototype.render = function () {
        var rotateIconClass = office_ui_fabric_react_bundle_1.css(office_ui_fabric_react_bundle_1.getIconClassName('Refresh'), 'ms-fontColor-neutralLight', MobilePreviewRotate_module_scss_1.default.mobilePreviewRotateIcon);
        return (React.createElement("div", null,
            React.createElement("a", { role: 'button', onClick: this._onClickRotate },
                React.createElement("span", { className: rotateIconClass }))));
    };
    MobilePreviewRotate.prototype._onClickRotate = function () {
        var orientation = this.props.currentOrientation === MobilePreview_1.DeviceOrientation.Portrait
            ? MobilePreview_1.DeviceOrientation.Landscape
            : MobilePreview_1.DeviceOrientation.Portrait;
        this.props.onRotate(orientation);
    };
    tslib_1.__decorate([
        office_ui_fabric_react_bundle_1.autobind
    ], MobilePreviewRotate.prototype, "_onClickRotate", null);
    return MobilePreviewRotate;
}(React.Component));
exports.default = MobilePreviewRotate;


/***/ }),
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(355);
var styles = {
    mobilePreviewRotateIcon: 'mobilePreviewRotateIcon_8e77c534',
};
exports.default = styles;


/***/ }),
/* 355 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(356);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".mobilePreviewRotateIcon_8e77c534{position:absolute;right:30px;top:15px;font-size:50px;margin:5px;cursor:pointer;font-weight:100}", ""]);

// exports


/***/ }),
/* 357 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(358);
var styles = {
    mobilePreviewContainer: 'mobilePreviewContainer_7d74b981',
    mobilePreviewDeviceContainer: 'mobilePreviewDeviceContainer_7d74b981',
};
exports.default = styles;


/***/ }),
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(359);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 359 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".mobilePreviewContainer_7d74b981{position:fixed;top:0;bottom:0;left:0;right:0;background:rgba(0,0,0,.87);z-index:2147483647;box-sizing:border-box;padding:0;font-family:Segoe UI Semilight WestEuropean,Segoe UI Semilight,Segoe UI,Tahoma,Arial,sans-serif}.mobilePreviewDeviceContainer_7d74b981{position:relative;height:calc(100% - 71px);-webkit-box-align:center;-ms-flex-align:center;align-items:center;overflow:auto;display:-webkit-box;display:-ms-flexbox;display:flex}", ""]);

// exports


/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(2);
var sp_canvas_1 = __webpack_require__(69);
var SerializedWebPart_1 = __webpack_require__(361);
var encodingUtilities_1 = __webpack_require__(124);
var SerializedCanvasView_resx_1 = __webpack_require__(367);
var SerializedCanvasView_module_scss_1 = __webpack_require__(125);
var SerializedCanvasView = (function (_super) {
    tslib_1.__extends(SerializedCanvasView, _super);
    function SerializedCanvasView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SerializedCanvasView.prototype.render = function () {
        var webpartDataCollection = (this.props.getSerializedData)
            ? JSON.parse(decodeURI(this.props.getSerializedData(true) || '[]'))
                .filter((function (controlData) { return controlData.controlType === sp_canvas_1.CanvasControlType.WebPartZone; }))
                .map((function (controlData) { return controlData.webPartData; }))
            : [];
        var serializedData = (this.props.getSerializedData) ? this.props.getSerializedData(false) : '';
        return (React.createElement(office_ui_fabric_react_1.Dialog, { isOpen: this.props.isVisible, type: office_ui_fabric_react_1.DialogType.normal, onDismiss: this.props.closeCallback, title: SerializedCanvasView_resx_1.default.WebPartData, isBlocking: false, containerClassName: SerializedCanvasView_module_scss_1.default.container, contentClassName: SerializedCanvasView_module_scss_1.default.content },
            React.createElement("div", null,
                React.createElement(office_ui_fabric_react_1.Pivot, null,
                    React.createElement(office_ui_fabric_react_1.PivotItem, { linkText: SerializedCanvasView_resx_1.default.ModernPages },
                        React.createElement("div", { className: SerializedCanvasView_module_scss_1.default.pivotItem },
                            React.createElement("p", { className: SerializedCanvasView_module_scss_1.default.serializedTextArea }, encodingUtilities_1.getReactLines(serializedData)))),
                    React.createElement(office_ui_fabric_react_1.PivotItem, { linkText: SerializedCanvasView_resx_1.default.ClassicPages },
                        React.createElement("div", { className: SerializedCanvasView_module_scss_1.default.pivotItem }, webpartDataCollection.map((function (webpartData) {
                            return React.createElement(SerializedWebPart_1.default, { key: webpartData.instanceId, serializedWebPart: webpartData });
                        }))))),
                React.createElement(office_ui_fabric_react_1.Link, tslib_1.__assign({ className: SerializedCanvasView_module_scss_1.default.learnMoreLink }, {
                    href: 'https://dev.office.com/sharepoint/docs/' +
                        'spfx/web-parts/get-started/provision-sp-assets-from-package',
                    target: '_blank'
                } ), SerializedCanvasView_resx_1.default.WebPartDataHelpInfoLink)),
            React.createElement(office_ui_fabric_react_1.DialogFooter, null,
                React.createElement(office_ui_fabric_react_1.Button, { onClick: this.props.closeCallback }, SerializedCanvasView_resx_1.default.Close))));
    };
    return SerializedCanvasView;
}(React.Component));
exports.default = SerializedCanvasView;


/***/ }),
/* 361 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(2);
var sp_webpart_base_1 = __webpack_require__(16);
var encodingUtilities_1 = __webpack_require__(124);
var SerializedWebPart_module_scss_1 = __webpack_require__(362);
var SerializedCanvasView_module_scss_1 = __webpack_require__(125);
var SerializedWebPart = (function (_super) {
    tslib_1.__extends(SerializedWebPart, _super);
    function SerializedWebPart() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SerializedWebPart.prototype.render = function () {
        var serializedString = sp_webpart_base_1.WebPartDataConverter.convertWebPartDataToHtml(this.props.serializedWebPart);
        var escapedSerializedString = encodingUtilities_1.htmlEncode(serializedString);
        var webPartXmlLines = ['<webParts>',
            '  <webPart xmlns="http://schemas.microsoft.com/WebPart/v3">',
            '    <metaData>',
            '      <type name="Microsoft.SharePoint.WebPartPages.ClientSideWebPart,',
            '        Microsoft.SharePoint, Version=16.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c" />',
            '      <importErrorMessage>Cannot Import WebPart</importErrorMessage>',
            '    </metaData>',
            '    <data>',
            '      <properties>',
            "        <property name=\"Title\" type=\"string\">" + this.props.serializedWebPart.title + "</property>",
            "        <property name=\"Description\" type=\"string\">" + this.props.serializedWebPart.description + "</property>",
            "        <property name=\"IconUrl\" type=\"string\">" + '' + "</property>",
            "        <property name=\"ClientSideWebPartId\">" + this.props.serializedWebPart.id + "</property>",
            "        <property name=\"ClientSideWebPartData\" type=\"string\">" + escapedSerializedString + "</property>",
            '      </properties>',
            '    </data>',
            '  </webPart>',
            '</webParts>'];
        return (React.createElement("p", { key: this.props.serializedWebPart.instanceId, className: office_ui_fabric_react_1.css(SerializedWebPart_module_scss_1.default.serializedWebPartItem, SerializedCanvasView_module_scss_1.default.serializedTextArea) }, encodingUtilities_1.getReactLines(webPartXmlLines)));
    };
    return SerializedWebPart;
}(React.Component));
exports.default = SerializedWebPart;


/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(363);
var styles = {
    serializedWebPartItem: 'serializedWebPartItem_d9bfe6f8',
};
exports.default = styles;


/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(364);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".serializedWebPartItem_d9bfe6f8{margin:20px 0}", ""]);

// exports


/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(366);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 366 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".container_6d46df37{min-width:90vw!important}.content_6d46df37{height:70vh}.pivotItem_6d46df37{overflow-y:scroll;height:66vh}.learnMoreLink_6d46df37{position:absolute;margin-top:20px!important;z-index:1}.serializedTextArea_6d46df37{font-family:monospace}", ""]);

// exports


/***/ }),
/* 367 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var strings = ( false)
    ? require('../../resx-strings/en-us.json')
    : __webpack_require__(13);
exports.default = strings['_8EVKOH1av6NjR/ZNfdafrw'];


/***/ }),
/* 368 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var strings = ( false)
    ? require('../../resx-strings/en-us.json')
    : __webpack_require__(13);
exports.default = strings['_IusqdbcSoVYQiit3+QRSxw'];


/***/ }),
/* 369 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(370);
var styles = {
    workbench: 'workbench_269706e9',
    header: 'header_269706e9',
    headerMenu: 'headerMenu_269706e9',
    headerTitle: 'headerTitle_269706e9',
    headerPerson: 'headerPerson_269706e9',
    pageContent: 'pageContent_269706e9',
    commandBar: 'commandBar_269706e9',
};
exports.default = styles;


/***/ }),
/* 370 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(371);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 371 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".workbench_269706e9{position:absolute;top:0;right:0;bottom:0;left:0;overflow-x:hidden}.header_269706e9{background:#000;height:50px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.headerMenu_269706e9{background-color:#0075c7;font-size:30px;height:50px;left:0;text-align:center;width:50px}.headerMenu_269706e9,.headerTitle_269706e9{color:#fff;line-height:50px;position:absolute;top:0}.headerTitle_269706e9{left:66px}.headerTitle_269706e9 em{border-right:1px solid #666;font-style:normal;margin-right:12px;padding-right:20px}.headerPerson_269706e9{background-color:#a6a6a6;border-left:5px solid #b6cfd8;color:#fff;font-size:48px;height:50px;line-height:50px;position:absolute;right:0;text-align:center;width:50px}.pageContent_269706e9{border:1px solid #e5e5e5;border-bottom:0;bottom:0;margin:0 auto;max-width:924px;position:absolute;top:106px}[dir=ltr] .pageContent_269706e9{transition:right 367ms cubic-bezier(.1,.9,.2,1);-webkit-transition:right 367ms cubic-bezier(.1,.9,.2,1)}[dir=rtl] .pageContent_269706e9{transition:left 367ms cubic-bezier(.1,.9,.2,1);-webkit-transition:left 367ms cubic-bezier(.1,.9,.2,1)}[dir=ltr] .pageContent_269706e9{left:16px}[dir=ltr] .pageContent_269706e9,[dir=rtl] .pageContent_269706e9{right:16px}[dir=rtl] .pageContent_269706e9{left:16px}[dir=ltr] .commandBar_269706e9{transition:padding-right 367ms cubic-bezier(.1,.9,.2,1);-webkit-transition:padding-right 367ms cubic-bezier(.1,.9,.2,1)}[dir=rtl] .commandBar_269706e9{transition:padding-left 367ms cubic-bezier(.1,.9,.2,1);-webkit-transition:padding-left 367ms cubic-bezier(.1,.9,.2,1)}[dir=ltr] .commandBar_269706e9{padding-right:0}[dir=rtl] .commandBar_269706e9{padding-left:0}", ""]);

// exports


/***/ }),
/* 372 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var office_ui_fabric_react_1 = __webpack_require__(2);
var PageStore = (function () {
    function PageStore(serviceScope) {
        var _this = this;
        this._PAGE_DATA_KEY = 'sp_webpart_workbench_state';
        this._pageReadyPromise = new Promise(function (resolve) {
            _this._resolvePageReady = resolve;
        });
        this._serviceScope = serviceScope;
        window.setInterval(this.savePageState, 3 * 1000);
    }
    Object.defineProperty(PageStore.prototype, "serviceScope", {
        get: function () {
            return this._serviceScope;
        },
        enumerable: true,
        configurable: true
    });
    PageStore.prototype.getSerializeCallback = function () {
        return this._serializePage;
    };
    PageStore.prototype.setSerializeCallback = function (callback) {
        this._serializePage = callback;
        if (window['SP']) {
            window['SP'].logSerializedPageState = callback;
        }
    };
    PageStore.prototype.setClearCallback = function (callback) {
        this._clearPage = callback;
    };
    PageStore.prototype.savePageState = function () {
        if (this._serializePage) {
            sessionStorage.setItem(this._PAGE_DATA_KEY, this._serializePage());
        }
    };
    PageStore.prototype.clearPageState = function () {
        sessionStorage.removeItem(this._PAGE_DATA_KEY);
        if (this._clearPage) {
            this._clearPage();
        }
    };
    PageStore.prototype.getPageState = function () {
        return sessionStorage.getItem(this._PAGE_DATA_KEY);
    };
    PageStore.prototype.getPageReadyPromise = function () {
        return this._pageReadyPromise;
    };
    PageStore.prototype.setPageReady = function () {
        this._resolvePageReady();
    };
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], PageStore.prototype, "getSerializeCallback", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], PageStore.prototype, "setSerializeCallback", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], PageStore.prototype, "setClearCallback", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], PageStore.prototype, "savePageState", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], PageStore.prototype, "clearPageState", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], PageStore.prototype, "getPageState", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], PageStore.prototype, "getPageReadyPromise", null);
    tslib_1.__decorate([
        office_ui_fabric_react_1.autobind
    ], PageStore.prototype, "setPageReady", null);
    return PageStore;
}());
exports.PageStore = PageStore;


/***/ }),
/* 373 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var strings = ( false)
    ? require('resx-strings/en-us.json')
    : __webpack_require__(13);
exports.default = strings['_NAR8NFw8cblGJm9t5CjqOw'];


/***/ }),
/* 374 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(375);
var styles = {};
exports.default = styles;


/***/ }),
/* 375 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(376);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 376 */
/***/ ((function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(undefined);
// imports


// module
exports.push([module.i, ".SPPageChromeNoFlexbox-app{top:0!important;height:100%!important}", ""]);

// exports


/***/ }))
/******/ ])}));;