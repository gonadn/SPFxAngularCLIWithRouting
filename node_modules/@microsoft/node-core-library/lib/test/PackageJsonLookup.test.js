"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
Object.defineProperty(exports, "__esModule", { value: true });
/// <reference types="mocha" />
/* tslint:disable:no-function-expression - Mocha uses a poorly scoped "this" pointer */
const chai_1 = require("chai");
const path = require("path");
const PackageJsonLookup_1 = require("../PackageJsonLookup");
describe('PackageJsonLookup', function () {
    describe('basic tests', function () {
        it('getPackageName() test', function () {
            const packageJsonLookup = new PackageJsonLookup_1.PackageJsonLookup();
            const sourceFilePath = path.join(__dirname, './test-data/example-package');
            chai_1.assert.equal(packageJsonLookup.getPackageName(sourceFilePath), 'example-package');
        });
        it('tryGetPackageFolder() test', function () {
            const packageJsonLookup = new PackageJsonLookup_1.PackageJsonLookup();
            const sourceFilePath = path.join(__dirname, './test-data/example-package/src/ExampleFile.txt');
            // Example: C:\web-build-tools\libraries\node-core-library\src\test\example-package
            const foundPath = packageJsonLookup.tryGetPackageFolder(sourceFilePath);
            chai_1.assert.isTrue(foundPath && foundPath.search(/[\\/]example-package$/i) >= 0, 'Unexpected result: ' + foundPath);
        });
    });
});

//# sourceMappingURL=PackageJsonLookup.test.js.map
