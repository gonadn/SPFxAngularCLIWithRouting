"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var decorators_1 = require("@microsoft/decorators");
var SPHttpClientCommonConfiguration_1 = require("./SPHttpClientCommonConfiguration");
var ODataVersion_1 = require("./ODataVersion");
var HttpClient_1 = require("../httpClient/HttpClient");
var SPHttpClientConfiguration = (function (_super) {
    tslib_1.__extends(SPHttpClientConfiguration, _super);
    function SPHttpClientConfiguration(flags, overrideFlags) {
        return _super.call(this, flags, overrideFlags) || this;
    }
    SPHttpClientConfiguration.prototype.overrideWith = function (sourceFlags) {
        return new SPHttpClientConfiguration(this.flags, sourceFlags);
    };
    Object.defineProperty(SPHttpClientConfiguration.prototype, "defaultSameOriginCredentials", {
        get: function () {
            return this.flags.defaultSameOriginCredentials;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPHttpClientConfiguration.prototype, "defaultODataVersion", {
        get: function () {
            return this.flags.defaultODataVersion;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPHttpClientConfiguration.prototype, "requestDigest", {
        get: function () {
            return this.flags.requestDigest;
        },
        enumerable: true,
        configurable: true
    });
    SPHttpClientConfiguration.prototype.initializeFlags = function () {
        _super.prototype.initializeFlags.call(this);
        this.flags.defaultSameOriginCredentials = false;
        this.flags.defaultODataVersion = ODataVersion_1.default.v3;
        this.flags.requestDigest = false;
    };
    tslib_1.__decorate([
        decorators_1.override
    ], SPHttpClientConfiguration.prototype, "overrideWith", null);
    tslib_1.__decorate([
        decorators_1.override
    ], SPHttpClientConfiguration.prototype, "initializeFlags", null);
    return SPHttpClientConfiguration;
}(SPHttpClientCommonConfiguration_1.default));
exports.default = SPHttpClientConfiguration;
exports.predefinedConfigurations = {
    v1: new SPHttpClientConfiguration(HttpClient_1.default.configurations.v1, {
        jsonRequest: true,
        jsonResponse: true,
        defaultSameOriginCredentials: true,
        defaultODataVersion: ODataVersion_1.default.v4,
        requestDigest: true
    })
};
