"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var decorators_1 = require("@microsoft/decorators");
var sp_core_library_1 = require("@microsoft/sp-core-library");
var HttpClientResponse_1 = require("../httpClient/HttpClientResponse");
var SPHttpClientResponse = (function (_super) {
    tslib_1.__extends(SPHttpClientResponse, _super);
    function SPHttpClientResponse(response) {
        return _super.call(this, response) || this;
    }
    SPHttpClientResponse_1 = SPHttpClientResponse;
    SPHttpClientResponse.prototype.clone = function () {
        return new SPHttpClientResponse_1(this.nativeResponse.clone());
    };
    Object.defineProperty(SPHttpClientResponse.prototype, "correlationId", {
        get: function () {
            if (!this._correlationId) {
                this._correlationId = sp_core_library_1.Guid.tryParse(this.headers.get("SPRequestGuid" ));
            }
            return this._correlationId;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPHttpClientResponse.prototype, "statusMessage", {
        get: function () {
            var correlationId = this.headers.get('sprequestguid') || '';
            var spVersion = this.headers.get('microsoftsharepointteamservices') || '';
            return "[HTTP]:" + this.status + " - " + this.statusText + " [CorrelationId]:" + correlationId + " [Version]:" + spVersion;
        },
        enumerable: true,
        configurable: true
    });
    tslib_1.__decorate([
        decorators_1.override
    ], SPHttpClientResponse.prototype, "clone", null);
    SPHttpClientResponse = SPHttpClientResponse_1 = tslib_1.__decorate([
        decorators_1.sealed
    ], SPHttpClientResponse);
    return SPHttpClientResponse;
    var SPHttpClientResponse_1;
}(HttpClientResponse_1.default));
exports.default = SPHttpClientResponse;
