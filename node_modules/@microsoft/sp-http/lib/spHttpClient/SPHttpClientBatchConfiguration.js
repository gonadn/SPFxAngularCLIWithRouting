"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var decorators_1 = require("@microsoft/decorators");
var SPHttpClientCommonConfiguration_1 = require("./SPHttpClientCommonConfiguration");
var HttpClient_1 = require("../httpClient/HttpClient");
var SPHttpClientBatchConfiguration = (function (_super) {
    tslib_1.__extends(SPHttpClientBatchConfiguration, _super);
    function SPHttpClientBatchConfiguration(flags, overrideFlags) {
        return _super.call(this, flags, overrideFlags) || this;
    }
    SPHttpClientBatchConfiguration.prototype.overrideWith = function (sourceFlags) {
        return new SPHttpClientBatchConfiguration(this.flags, sourceFlags);
    };
    SPHttpClientBatchConfiguration.prototype.initializeFlags = function () {
        _super.prototype.initializeFlags.call(this);
    };
    tslib_1.__decorate([
        decorators_1.override
    ], SPHttpClientBatchConfiguration.prototype, "overrideWith", null);
    tslib_1.__decorate([
        decorators_1.override
    ], SPHttpClientBatchConfiguration.prototype, "initializeFlags", null);
    return SPHttpClientBatchConfiguration;
}(SPHttpClientCommonConfiguration_1.default));
exports.default = SPHttpClientBatchConfiguration;
exports.predefinedConfigurations = {
    v1: new SPHttpClientBatchConfiguration(HttpClient_1.default.configurations.v1, {
        jsonRequest: true,
        jsonResponse: true
    })
};
