{"version":3,"sources":["ast/AstEnumValue.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAE3D,uCAAkE;AAClE,oDAA6C;AAE7C;;;GAGG;AACH,kBAAkC,SAAQ,iBAAO;IAC/C,YAAY,OAAwB;QAClC,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,qBAAW,CAAC,SAAS,CAAC;IACpC,CAAC;IAED;;OAEG;IACI,kBAAkB;QACvB,MAAM,CAAC,uBAAa,CAAC,qBAAqB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/D,CAAC;CACF;AAZD,+BAYC","file":"ast/AstEnumValue.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport AstItem, { AstItemKind, IAstItemOptions } from './AstItem';\r\nimport PrettyPrinter from '../PrettyPrinter';\r\n\r\n/**\r\n * This class is part of the AstItem abstract syntax tree. It represents a TypeScript enum value.\r\n * The parent container will always be an AstEnum instance.\r\n */\r\nexport default class AstEnumValue extends AstItem {\r\n  constructor(options: IAstItemOptions) {\r\n    super(options);\r\n    this.kind = AstItemKind.EnumValue;\r\n  }\r\n\r\n  /**\r\n   * Returns a text string such as \"MyValue = 123,\"\r\n   */\r\n  public getDeclarationLine(): string {\r\n    return PrettyPrinter.getDeclarationSummary(this.declaration);\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\src"}