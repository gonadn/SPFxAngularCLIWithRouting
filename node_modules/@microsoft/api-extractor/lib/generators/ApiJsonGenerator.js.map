{"version":3,"sources":["generators/ApiJsonGenerator.ts"],"names":[],"mappings":"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","file":"generators/ApiJsonGenerator.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as os  from 'os';\r\nimport * as path from 'path';\r\nimport * as ts from 'typescript';\r\nimport { JsonFile, IJsonSchemaErrorInfo } from '@microsoft/node-core-library';\r\n\r\nimport { ExtractorContext } from '../ExtractorContext';\r\nimport AstStructuredType from '../ast/AstStructuredType';\r\nimport AstEnum from '../ast/AstEnum';\r\nimport AstEnumValue from '../ast/AstEnumValue';\r\nimport AstFunction from '../ast/AstFunction';\r\nimport AstItem, { AstItemKind } from '../ast/AstItem';\r\nimport AstItemVisitor from './AstItemVisitor';\r\nimport AstPackage from '../ast/AstPackage';\r\nimport AstParameter from '../ast/AstParameter';\r\nimport AstProperty from '../ast/AstProperty';\r\nimport AstMember, { ApiAccessModifier } from '../ast/AstMember';\r\nimport AstNamespace from '../ast/AstNamespace';\r\nimport AstModuleVariable from '../ast/AstModuleVariable';\r\nimport AstMethod from '../ast/AstMethod';\r\nimport { ReleaseTag } from '../aedoc/ReleaseTag';\r\nimport { IAedocParameter } from '../aedoc/ApiDocumentation';\r\nimport { IApiReturnValue, IApiParameter, IApiNameMap } from '../api/ApiItem';\r\nimport { ApiJsonConverter } from '../api/ApiJsonConverter';\r\nimport { ApiJsonFile } from '../api/ApiJsonFile';\r\n\r\n/**\r\n * For a library such as \"example-package\", ApiFileGenerator generates the \"example-package.api.json\"\r\n * file which represents the API surface for that package.  This file should be published as part\r\n * of the library's NPM package.  API Extractor will read this file later when it is analyzing\r\n * another project that consumes the library.  (Otherwise, API Extractor would have to re-analyze all\r\n * the *.d.ts files, which would be bad because the compiler definitions might not be available for\r\n * a published package, or the results of the analysis might be different somehow.)  Documentation\r\n * tools such as api-documenter can also use the *.api.json files.\r\n *\r\n * @public\r\n */\r\nexport default class ApiJsonGenerator extends AstItemVisitor {\r\n  private static _methodCounter: number = 0;\r\n  private static _MEMBERS_KEY: string = 'members';\r\n  private static _EXPORTS_KEY: string = 'exports';\r\n\r\n  protected jsonOutput: Object = {};\r\n\r\n  public writeJsonFile(reportFilename: string, context: ExtractorContext): void {\r\n    this.visit(context.package, this.jsonOutput);\r\n\r\n    // Write the output before validating the schema, so we can debug it\r\n    JsonFile.save(this.jsonOutput, reportFilename);\r\n\r\n    // Validate that the output conforms to our JSON schema\r\n    ApiJsonFile.jsonSchema.validateObjectWithCallback(this.jsonOutput, (errorInfo: IJsonSchemaErrorInfo) => {\r\n      const errorMessage: string = path.basename(reportFilename)\r\n        + ` does not conform to the expected schema -- please report this API Extractor bug:`\r\n        + os.EOL + errorInfo.details;\r\n\r\n      console.log(os.EOL + 'ERROR: ' + errorMessage + os.EOL + os.EOL);\r\n      throw new Error(errorMessage);\r\n    });\r\n  }\r\n\r\n  // @override\r\n  protected visit(astItem: AstItem, refObject?: Object): void {\r\n    switch (astItem.inheritedReleaseTag) {\r\n      case ReleaseTag.None:\r\n      case ReleaseTag.Beta:\r\n      case ReleaseTag.Public:\r\n        break;\r\n      default:\r\n        return; // skip @alpha and @internal definitions\r\n    }\r\n\r\n    super.visit(astItem, refObject);\r\n  }\r\n\r\n  protected visitAstStructuredType(astStructuredType: AstStructuredType, refObject?: Object): void {\r\n    if (!astStructuredType.supportedName) {\r\n      return;\r\n    }\r\n\r\n    const kind: string =\r\n      astStructuredType.kind === AstItemKind.Class ? ApiJsonConverter.convertKindToJson(AstItemKind.Class) :\r\n      astStructuredType.kind === AstItemKind.Interface ?\r\n        ApiJsonConverter.convertKindToJson(AstItemKind.Interface) : '';\r\n\r\n    const structureNode: Object = {\r\n      kind: kind,\r\n      extends: astStructuredType.extends || '',\r\n      implements: astStructuredType.implements || '',\r\n      typeParameters: astStructuredType.typeParameters || [],\r\n      deprecatedMessage: astStructuredType.inheritedDeprecatedMessage || [],\r\n      summary: astStructuredType.documentation.summary || [],\r\n      remarks: astStructuredType.documentation.remarks || [],\r\n      isBeta: astStructuredType.inheritedReleaseTag === ReleaseTag.Beta\r\n    };\r\n    refObject[astStructuredType.name] = structureNode;\r\n\r\n    ApiJsonGenerator._methodCounter = 0;\r\n\r\n    const members: AstItem[] = astStructuredType.getSortedMemberItems();\r\n\r\n    if (members && members.length) {\r\n      const membersNode: Object = {};\r\n      structureNode[ApiJsonGenerator._MEMBERS_KEY] = membersNode;\r\n\r\n      for (const astItem of members) {\r\n        this.visit(astItem, membersNode);\r\n      }\r\n    }\r\n  }\r\n\r\n  protected visitAstEnum(astEnum: AstEnum, refObject?: Object): void {\r\n    if (!astEnum.supportedName) {\r\n      return;\r\n    }\r\n\r\n    const valuesNode: Object = {};\r\n    const enumNode: Object = {\r\n      kind: ApiJsonConverter.convertKindToJson(astEnum.kind),\r\n      values: valuesNode,\r\n      deprecatedMessage: astEnum.inheritedDeprecatedMessage || [],\r\n      summary: astEnum.documentation.summary || [],\r\n      remarks: astEnum.documentation.remarks || [],\r\n      isBeta: astEnum.inheritedReleaseTag === ReleaseTag.Beta\r\n    };\r\n    refObject[astEnum.name] = enumNode;\r\n\r\n    for (const astItem of astEnum.getSortedMemberItems()) {\r\n      this.visit(astItem, valuesNode);\r\n    }\r\n  }\r\n\r\n  protected visitAstEnumValue(astEnumValue: AstEnumValue, refObject?: Object): void {\r\n    if (!astEnumValue.supportedName) {\r\n      return;\r\n    }\r\n\r\n    const declaration: ts.Declaration = astEnumValue.getDeclaration();\r\n    const firstToken: ts.Node = declaration ? declaration.getFirstToken() : undefined;\r\n    const lastToken: ts.Node = declaration ? declaration.getLastToken() : undefined;\r\n\r\n    const value: string = lastToken && lastToken !== firstToken ? lastToken.getText() : '';\r\n\r\n    refObject[astEnumValue.name] = {\r\n      kind: ApiJsonConverter.convertKindToJson(astEnumValue.kind),\r\n      value: value,\r\n      deprecatedMessage: astEnumValue.inheritedDeprecatedMessage || [],\r\n      summary: astEnumValue.documentation.summary || [],\r\n      remarks: astEnumValue.documentation.remarks || [],\r\n      isBeta: astEnumValue.inheritedReleaseTag === ReleaseTag.Beta\r\n    };\r\n  }\r\n\r\n  protected visitAstFunction(astFunction: AstFunction, refObject?: Object): void {\r\n    if (!astFunction.supportedName) {\r\n      return;\r\n    }\r\n\r\n    const returnValueNode: IApiReturnValue = {\r\n      type: astFunction.returnType,\r\n      description: astFunction.documentation.returnsMessage\r\n    };\r\n\r\n    const newNode: Object = {\r\n      kind: ApiJsonConverter.convertKindToJson(astFunction.kind),\r\n      signature: astFunction.getDeclarationLine(),\r\n      returnValue: returnValueNode,\r\n      parameters: this._createParameters(astFunction),\r\n      deprecatedMessage: astFunction.inheritedDeprecatedMessage || [],\r\n      summary: astFunction.documentation.summary || [],\r\n      remarks: astFunction.documentation.remarks || [],\r\n      isBeta: astFunction.inheritedReleaseTag === ReleaseTag.Beta\r\n    };\r\n\r\n    refObject[astFunction.name] = newNode;\r\n  }\r\n\r\n  protected visitAstPackage(astPackage: AstPackage, refObject?: Object): void {\r\n    /* tslint:disable:no-string-literal */\r\n    refObject['kind'] = ApiJsonConverter.convertKindToJson(astPackage.kind);\r\n    refObject['name'] = astPackage.name;\r\n    refObject['summary'] = astPackage.documentation.summary;\r\n    refObject['remarks'] = astPackage.documentation.remarks;\r\n    /* tslint:enable:no-string-literal */\r\n\r\n    const membersNode: Object = {};\r\n    refObject[ApiJsonGenerator._EXPORTS_KEY] = membersNode;\r\n\r\n    for (const astItem of astPackage.getSortedMemberItems()) {\r\n      this.visit(astItem, membersNode);\r\n    }\r\n  }\r\n\r\n  protected visitAstNamespace(astNamespace: AstNamespace, refObject?: Object): void {\r\n    if (!astNamespace.supportedName) {\r\n      return;\r\n    }\r\n\r\n    const membersNode: Object = {};\r\n    for (const astItem of astNamespace.getSortedMemberItems()) {\r\n      this.visit(astItem, membersNode);\r\n    }\r\n\r\n    const newNode: Object = {\r\n      kind: ApiJsonConverter.convertKindToJson(astNamespace.kind),\r\n      deprecatedMessage: astNamespace.inheritedDeprecatedMessage || [],\r\n      summary: astNamespace.documentation.summary || [],\r\n      remarks: astNamespace.documentation.remarks || [],\r\n      isBeta: astNamespace.inheritedReleaseTag === ReleaseTag.Beta,\r\n      exports: membersNode\r\n    };\r\n\r\n    refObject[astNamespace.name] = newNode;\r\n  }\r\n\r\n  protected visitAstMember(astMember: AstMember, refObject?: Object): void {\r\n    if (!astMember.supportedName) {\r\n      return;\r\n    }\r\n\r\n    refObject[astMember.name] = 'astMember-' + astMember.getDeclaration().kind;\r\n  }\r\n\r\n  protected visitAstProperty(astProperty: AstProperty, refObject?: Object): void {\r\n    if (!astProperty.supportedName) {\r\n      return;\r\n    }\r\n\r\n    if (astProperty.getDeclaration().kind === ts.SyntaxKind.SetAccessor) {\r\n      return;\r\n    }\r\n\r\n    const newNode: Object = {\r\n      kind: ApiJsonConverter.convertKindToJson(astProperty.kind),\r\n      signature: astProperty.getDeclarationLine(),\r\n      isOptional: !!astProperty.isOptional,\r\n      isReadOnly: !!astProperty.isReadOnly,\r\n      isStatic: !!astProperty.isStatic,\r\n      type: astProperty.type,\r\n      deprecatedMessage: astProperty.inheritedDeprecatedMessage || [],\r\n      summary: astProperty.documentation.summary || [],\r\n      remarks: astProperty.documentation.remarks || [],\r\n      isBeta: astProperty.inheritedReleaseTag === ReleaseTag.Beta\r\n    };\r\n\r\n    refObject[astProperty.name] = newNode;\r\n  }\r\n\r\n  protected visitAstModuleVariable(astModuleVariable: AstModuleVariable, refObject?: Object): void {\r\n    const newNode: Object = {\r\n      kind: ApiJsonConverter.convertKindToJson(astModuleVariable.kind),\r\n      signature: astModuleVariable.getDeclarationLine(),\r\n      type: astModuleVariable.type,\r\n      value: astModuleVariable.value,\r\n      deprecatedMessage: astModuleVariable.inheritedDeprecatedMessage || [],\r\n      summary: astModuleVariable.documentation.summary || [],\r\n      remarks: astModuleVariable.documentation.remarks || [],\r\n      isBeta: astModuleVariable.inheritedReleaseTag === ReleaseTag.Beta\r\n    };\r\n\r\n    refObject[astModuleVariable.name] = newNode;\r\n  }\r\n\r\n  protected visitAstMethod(astMethod: AstMethod, refObject?: Object): void {\r\n    if (!astMethod.supportedName) {\r\n      return;\r\n    }\r\n\r\n    let newNode: Object;\r\n    if (astMethod.name === '__constructor') {\r\n      newNode = {\r\n        kind: ApiJsonConverter.convertKindToJson(AstItemKind.Constructor),\r\n        signature: astMethod.getDeclarationLine(),\r\n        parameters: this._createParameters(astMethod),\r\n        deprecatedMessage: astMethod.inheritedDeprecatedMessage || [],\r\n        summary: astMethod.documentation.summary || [],\r\n        remarks: astMethod.documentation.remarks || []\r\n      };\r\n    } else {\r\n      const returnValueNode: IApiReturnValue = {\r\n        type: astMethod.returnType,\r\n        description: astMethod.documentation.returnsMessage\r\n      };\r\n\r\n      newNode = {\r\n        kind: ApiJsonConverter.convertKindToJson(astMethod.kind),\r\n        signature: astMethod.getDeclarationLine(),\r\n        accessModifier: astMethod.accessModifier ? ApiAccessModifier[astMethod.accessModifier].toLowerCase() : '',\r\n        isOptional: !!astMethod.isOptional,\r\n        isStatic: !!astMethod.isStatic,\r\n        returnValue: returnValueNode,\r\n        parameters: this._createParameters(astMethod),\r\n        deprecatedMessage: astMethod.inheritedDeprecatedMessage || [],\r\n        summary: astMethod.documentation.summary || [],\r\n        remarks: astMethod.documentation.remarks || [],\r\n        isBeta: astMethod.inheritedReleaseTag === ReleaseTag.Beta\r\n      };\r\n    }\r\n\r\n    refObject[astMethod.name] = newNode;\r\n  }\r\n\r\n  private _createParameters(astFunction: AstMethod | AstFunction): IApiNameMap<IApiParameter> {\r\n    const result: IApiNameMap<IApiParameter> = { };\r\n\r\n    for (const astParameter of astFunction.params) {\r\n      if (!astParameter.supportedName) {\r\n        continue; // skip parameter names with unusual characters\r\n      }\r\n\r\n      const apiParameter: IApiParameter = {\r\n        name: astParameter.name,\r\n        description: [],\r\n        isOptional: astParameter.isOptional,\r\n        isSpread: astParameter.isSpread,\r\n        type: astParameter.type || ''\r\n      };\r\n\r\n      const aedocParameter: IAedocParameter = astFunction.documentation.parameters[astParameter.name];\r\n      if (aedocParameter) {\r\n        apiParameter.description = aedocParameter.description;\r\n      }\r\n\r\n      result[astParameter.name] = apiParameter;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"..\\..\\src"}