{"version":3,"sources":["api/ApiJsonFile.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAE3D,6BAA6B;AAG7B,oEAA0F;AAE1F;;;;GAIG;AACH;IAOE;;;OAGG;IACI,MAAM,CAAC,YAAY,CAAC,eAAuB;QAChD,MAAM,CAAC,4BAAQ,CAAC,2BAA2B,CAAC,eAAe,EAAE,WAAW,CAAC,UAAU,EACjF,CAAC,SAA+B;YAE9B,MAAM,YAAY,GACd,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,GAAG,6CAA6C;kBAC9E,iEAAiE;kBACjE,SAAS,CAAC,OAAO,CAAC;YAEtB,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC;QAChC,CAAC,CACF,CAAC;IACJ,CAAC;;AAtBD;;GAEG;AACW,sBAAU,GAAe,8BAAU,CAAC,QAAQ,CACxD,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,wBAAwB,CAAC,CAAC,CAAC;AALpD,kCAwBC","file":"api/ApiJsonFile.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as path from 'path';\r\n\r\nimport { IApiPackage } from './ApiItem';\r\nimport { JsonSchema, JsonFile, IJsonSchemaErrorInfo } from '@microsoft/node-core-library';\r\n\r\n/**\r\n * Support for loading the *.api.json file.\r\n *\r\n * @public\r\n */\r\nexport class ApiJsonFile {\r\n  /**\r\n   * The JSON Schema for API Extractor's *.api.json files (api-json.schema.json).\r\n   */\r\n  public static jsonSchema: JsonSchema = JsonSchema.fromFile(\r\n    path.join(__dirname, './api-json.schema.json'));\r\n\r\n  /**\r\n   * Loads an *.api.json data file, and validates that it conforms to the api-json.schema.json\r\n   * schema.\r\n   */\r\n  public static loadFromFile(apiJsonFilePath: string): IApiPackage {\r\n    return JsonFile.loadAndValidateWithCallback(apiJsonFilePath, ApiJsonFile.jsonSchema,\r\n      (errorInfo: IJsonSchemaErrorInfo) => {\r\n\r\n        const errorMessage: string\r\n          = path.basename(apiJsonFilePath) + ' does not conform to the expected schema.\\n'\r\n          + '(Was it created by an incompatible release of API Extractor?)\\n'\r\n          + errorInfo.details;\r\n\r\n        throw new Error(errorMessage);\r\n      }\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\src"}