"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var DeferredClass = (function () {
    function DeferredClass() {
        var _this = this;
        this._onAfterLoadPromise = new Promise(function (resolve) { return _this._resolveOnAfterLoadCallbacks = resolve; });
    }
    DeferredClass.instance = function () {
        if (!this._instance) {
            this._instance = new this();
        }
        return this._instance;
    };
    Object.defineProperty(DeferredClass.prototype, "isLoaded", {
        get: function () {
            return !!this._classType;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DeferredClass.prototype, "shouldLoad", {
        get: function () {
            return true;
        },
        enumerable: true,
        configurable: true
    });
    DeferredClass.prototype.load = function () {
        var _this = this;
        if (!this._loadPromise) {
            if (this.shouldLoad) {
                this._loadPromise = this._internalLoad();
                this._loadPromise.then(function (type) {
                    _this._classType = type;
                    _this._resolveOnAfterLoadCallbacks();
                });
            }
            else {
                this._loadPromise = Promise.reject(new Error('shouldLoad returns false'));
            }
        }
        return this._loadPromise;
    };
    DeferredClass.prototype.onAfterLoad = function () {
        return this._onAfterLoadPromise;
    };
    return DeferredClass;
}());
exports.default = DeferredClass;
