import { ITaskWriter } from '@microsoft/stream-collator';
import RushConfiguration from '../../data/RushConfiguration';
import RushConfigurationProject from '../../data/RushConfigurationProject';
import TaskStatus from './TaskStatus';
import { ITaskDefinition } from '../taskRunner/ITask';
/**
 * A TaskRunner task which cleans and builds a project
 */
export default class ProjectBuildTask implements ITaskDefinition {
    private _rushProject;
    private _rushConfiguration;
    private _commandToRun;
    private _customFlags;
    isIncrementalBuildAllowed: boolean;
    readonly name: string;
    private _hasWarningOrError;
    constructor(_rushProject: RushConfigurationProject, _rushConfiguration: RushConfiguration, _commandToRun: string, _customFlags: string[], isIncrementalBuildAllowed: boolean);
    execute(writer: ITaskWriter): Promise<TaskStatus>;
    private _getPackageDependencies(buildCommand, writer);
    private _executeTask(buildCommand, writer, currentPackageDeps, resolve, reject);
    private _isBuildCommand();
    private _getScriptToRun();
    private _getScriptCommand(script);
    private _writeLogsToDisk(writer);
}
