{"version":3,"sources":["cli/taskRunner/ProjectBuildTask.ts"],"names":[],"mappings":"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","file":"cli/taskRunner/ProjectBuildTask.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as child_process from 'child_process';\r\nimport * as fsx from 'fs-extra';\r\nimport * as path from 'path';\r\nimport { JsonFile } from '@microsoft/node-core-library';\r\nimport { ITaskWriter } from '@microsoft/stream-collator';\r\n  import {\r\n    IPackageDeps\r\n  } from '@microsoft/package-deps-hash';\r\n\r\nimport RushConfiguration from '../../data/RushConfiguration';\r\nimport RushConfigurationProject from '../../data/RushConfigurationProject';\r\nimport { RushConstants } from '../../RushConstants';\r\nimport Utilities from '../../utilities/Utilities';\r\nimport TaskStatus from './TaskStatus';\r\nimport TaskError from './TaskError';\r\nimport { ITaskDefinition } from '../taskRunner/ITask';\r\nimport {\r\n  PackageChangeAnalyzer\r\n} from '../utilities/PackageChangeAnalyzer';\r\n\r\ninterface IPackageDependencies extends IPackageDeps {\r\n  arguments: string;\r\n}\r\n\r\n/**\r\n * A TaskRunner task which cleans and builds a project\r\n */\r\nexport default class ProjectBuildTask implements ITaskDefinition {\r\n  public get name(): string {\r\n    return this._rushProject.packageName;\r\n  }\r\n\r\n  private _hasWarningOrError: boolean;\r\n\r\n  constructor(\r\n    private _rushProject: RushConfigurationProject,\r\n    private _rushConfiguration: RushConfiguration,\r\n    private _commandToRun: string,\r\n    private _customFlags: string[],\r\n    public isIncrementalBuildAllowed: boolean\r\n  ) {}\r\n\r\n  public execute(writer: ITaskWriter): Promise<TaskStatus> {\r\n    return new Promise<TaskStatus>((resolve: (status: TaskStatus) => void, reject: (errors: TaskError[]) => void) => {\r\n      try {\r\n        const build: string = this._getScriptToRun();\r\n        const deps: IPackageDependencies | undefined = this._getPackageDependencies(build, writer);\r\n        this._executeTask(build, writer, deps, resolve, reject);\r\n      } catch (error) {\r\n        reject([new TaskError('executing', error.toString())]);\r\n      }\r\n    });\r\n  }\r\n\r\n  private _getPackageDependencies(buildCommand: string, writer: ITaskWriter): IPackageDependencies | undefined {\r\n    let deps: IPackageDependencies | undefined = undefined;\r\n    PackageChangeAnalyzer.rushConfig = this._rushConfiguration;\r\n    try {\r\n      deps = {\r\n        files: PackageChangeAnalyzer.instance.getPackageDepsHash(this._rushProject.packageName)!.files,\r\n        arguments: buildCommand\r\n      };\r\n    } catch (error) {\r\n      writer.writeLine('Unable to calculate incremental build state. ' +\r\n        'Instead running full rebuild. ' + error.toString());\r\n    }\r\n    return deps;\r\n  }\r\n\r\n  private _executeTask(\r\n    buildCommand: string,\r\n    writer: ITaskWriter,\r\n    currentPackageDeps: IPackageDependencies | undefined,\r\n    resolve: (status: TaskStatus) => void,\r\n    reject: (errors: TaskError[]) => void\r\n  ): void {\r\n    this._hasWarningOrError = false;\r\n\r\n    const projectFolder: string = this._rushProject.projectFolder;\r\n    let lastPackageDeps: IPackageDependencies | undefined = undefined;\r\n\r\n    try {\r\n      writer.writeLine(`>>> ${this.name}`);\r\n\r\n      const currentDepsPath: string = path.join(this._rushProject.projectFolder, RushConstants.packageDepsFilename);\r\n      if (fsx.existsSync(currentDepsPath)) {\r\n        lastPackageDeps = JsonFile.load(currentDepsPath) as IPackageDependencies;\r\n      }\r\n\r\n      const isPackageUnchanged: boolean = (\r\n        !!(\r\n          lastPackageDeps &&\r\n          currentPackageDeps &&\r\n          (currentPackageDeps.arguments === lastPackageDeps.arguments &&\r\n          _areShallowEqual(currentPackageDeps.files, lastPackageDeps.files, writer))\r\n        )\r\n      );\r\n\r\n      if (isPackageUnchanged && this.isIncrementalBuildAllowed) {\r\n        resolve(TaskStatus.Skipped);\r\n      } else {\r\n        // If the deps file exists, remove it before starting a build.\r\n        if (fsx.existsSync(currentDepsPath)) {\r\n          fsx.unlinkSync(currentDepsPath);\r\n        }\r\n\r\n        if (!buildCommand) {\r\n          // tslint:disable-next-line:max-line-length\r\n          writer.writeLine(`The 'build' or 'test' command was registered in the package.json but is blank, so no action will be taken.`);\r\n          resolve(TaskStatus.Success);\r\n          return;\r\n        }\r\n\r\n        // Run the build step\r\n        writer.writeLine(buildCommand);\r\n        const buildTask: child_process.ChildProcess =\r\n          Utilities.executeShellCommandAsync(buildCommand, projectFolder, process.env, true);\r\n\r\n        // Hook into events, in order to get live streaming of build log\r\n        buildTask.stdout.on('data', (data: string) => {\r\n          writer.write(data);\r\n        });\r\n\r\n        buildTask.stderr.on('data', (data: string) => {\r\n          writer.writeError(data);\r\n          this._hasWarningOrError = true;\r\n        });\r\n\r\n        buildTask.on('close', (code: number) => {\r\n          // Write the logs to disk\r\n          this._writeLogsToDisk(writer);\r\n\r\n          if (code) {\r\n            reject([new TaskError('error', `Returned error code: ${code}`)]);\r\n          } else if (this._hasWarningOrError) {\r\n            resolve(TaskStatus.SuccessWithWarning);\r\n          } else {\r\n            // Write deps on success.\r\n            if (currentPackageDeps) {\r\n              JsonFile.save(currentPackageDeps, currentDepsPath);\r\n            }\r\n            resolve(TaskStatus.Success);\r\n          }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n      // Write the logs to disk\r\n      this._writeLogsToDisk(writer);\r\n      reject([new TaskError('error', error.toString())]);\r\n    }\r\n  }\r\n\r\n  private _isBuildCommand(): boolean {\r\n    return this._commandToRun === 'build' || this._commandToRun === 'rebuild';\r\n  }\r\n\r\n  private _getScriptToRun(): string {\r\n    let script: string | undefined = undefined;\r\n    if (this._isBuildCommand()) {\r\n      script = this._getScriptCommand('build');\r\n\r\n      if (script === undefined) {\r\n        // tslint:disable-next-line:max-line-length\r\n        throw new Error(`The project [${this._rushProject.packageName}] does not define a 'build' command in the 'scripts' section of its package.json`);\r\n      }\r\n\r\n    } else {\r\n      script = this._getScriptCommand(this._commandToRun);\r\n\r\n      if (script === undefined) {\r\n        // tslint:disable-next-line:max-line-length\r\n        throw new Error(`The project [${this._rushProject.packageName}] does not define a '${this._commandToRun}' command in the 'scripts' section of its package.json`);\r\n      }\r\n    }\r\n\r\n    if (script === '') {\r\n      return script;\r\n    }\r\n\r\n    return `${script} ${this._customFlags.join(' ')}`;\r\n  }\r\n\r\n  private _getScriptCommand(script: string): string | undefined {\r\n    // tslint:disable-next-line:no-string-literal\r\n    if (!this._rushProject.packageJson.scripts) {\r\n      return undefined;\r\n    }\r\n\r\n    const rawCommand: string = this._rushProject.packageJson.scripts[script];\r\n\r\n    // tslint:disable-next-line:no-null-keyword\r\n    if (rawCommand === undefined || rawCommand === null) {\r\n      return undefined;\r\n    }\r\n\r\n    return rawCommand;\r\n  }\r\n\r\n  // @todo #179371: add log files to list of things that get gulp cleaned\r\n  private _writeLogsToDisk(writer: ITaskWriter): void {\r\n    const logFilename: string = path.basename(this._rushProject.projectFolder);\r\n\r\n    const stdout: string = writer.getStdOutput().replace(/\\x1B[[(?);]{0,2}(;?\\d)*./g, '');\r\n    if (stdout) {\r\n      fsx.writeFileSync(path.join(this._rushProject.projectFolder, logFilename + '.build.log'), stdout);\r\n    }\r\n\r\n    const stderr: string = writer.getStdError().replace(/\\x1B[[(?);]{0,2}(;?\\d)*./g, '');\r\n    if (stderr) {\r\n      fsx.writeFileSync(path.join(this._rushProject.projectFolder, logFilename + '.build.error.log'), stderr);\r\n    }\r\n  }\r\n}\r\n\r\nfunction _areShallowEqual(object1: Object, object2: Object, writer: ITaskWriter): boolean {\r\n  for (const n in object1) {\r\n    if (!(n in object2) || object1[n] !== object2[n]) {\r\n      writer.writeLine(`Found mismatch: \"${n}\": \"${object1[n]}\" !== \"${object2[n]}\"`);\r\n      return false;\r\n    }\r\n  }\r\n  for (const n in object2) {\r\n    if (!(n in object1)) {\r\n      writer.writeLine(`Found new prop in obj2: \"${n}\" value=\"${object2[n]}\"`);\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}