{"version":3,"sources":["cli/utilities/Telemetry.ts"],"names":[],"mappings":"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","file":"cli/utilities/Telemetry.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as path from 'path';\r\nimport * as fsx from 'fs-extra';\r\nimport { cloneDeep } from 'lodash';\r\n\r\nimport RushConfiguration from '../../data/RushConfiguration';\r\nimport Rush from '../../Rush';\r\n\r\nexport interface ITelemetryData {\r\n  name: string;\r\n  duration: number;\r\n  result: string;\r\n  timestamp?: number;\r\n  platform?: string;\r\n  rushVersion?: string;\r\n  extraData?: { [key: string]: string };\r\n}\r\n\r\nconst MAX_FILE_COUNT: number = 100;\r\n\r\nexport default class Telemetry {\r\n  private _enabled: boolean;\r\n  private _store: ITelemetryData[];\r\n  private _dataFolder: string;\r\n\r\n  public constructor(private _rushConfiguration: RushConfiguration) {\r\n    this._enabled = this._rushConfiguration.telemetryEnabled;\r\n    this._store = [];\r\n\r\n    const folderName: string = 'telemetry';\r\n    this._dataFolder = path.join(this._rushConfiguration.commonTempFolder, folderName);\r\n  }\r\n\r\n  public log(telemetryData: ITelemetryData): void {\r\n    if (!this._enabled) {\r\n      return;\r\n    }\r\n    const data: ITelemetryData = cloneDeep(telemetryData);\r\n    data.timestamp = data.timestamp || new Date().getTime();\r\n    data.platform = data.platform || process.platform;\r\n    data.rushVersion = data.rushVersion || Rush.version;\r\n    this._store.push(data);\r\n  }\r\n\r\n  public flush(writeFile: (file: string, data: string) => void = fsx.writeFileSync): void {\r\n    if (!this._enabled || this._store.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const fullPath: string = this._getFilePath();\r\n    fsx.ensureDirSync(this._dataFolder);\r\n    writeFile(fullPath, JSON.stringify(this._store));\r\n    this._store = [];\r\n    this._cleanUp();\r\n  }\r\n\r\n  public get store(): ITelemetryData[] {\r\n    return this._store;\r\n  }\r\n\r\n  /**\r\n   * When there are too many log files, delete the old ones.\r\n   */\r\n  private _cleanUp(): void {\r\n    if (fsx.existsSync(this._dataFolder)) {\r\n      const files: string[] = fsx.readdirSync(this._dataFolder);\r\n      if (files.length > MAX_FILE_COUNT) {\r\n        const sortedFiles: string[] = files.map(fileName => {\r\n          const filePath: string = path.join(this._dataFolder, fileName);\r\n          const stats: fsx.Stats = fsx.statSync(filePath);\r\n          return {\r\n            filePath: filePath,\r\n            modifiedTime: stats.mtime.getTime(),\r\n            isFile: stats.isFile()\r\n          };\r\n        })\r\n        .filter(value => {\r\n          // Only delete files\r\n          return value.isFile;\r\n        })\r\n        .sort((a, b) => {\r\n          return a.modifiedTime - b.modifiedTime;\r\n        })\r\n        .map(s => {\r\n          return s.filePath;\r\n        });\r\n        const filesToDelete: number = sortedFiles.length - MAX_FILE_COUNT;\r\n        for (let i: number = 0; i < filesToDelete; i++) {\r\n          fsx.unlinkSync(sortedFiles[i]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private _getFilePath(): string {\r\n    let fileName: string = `telemetry_${new Date().toISOString()}`;\r\n    fileName = fileName.replace(/[\\-\\:\\.]/g, '_') + '.json';\r\n    return path.join(this._dataFolder, fileName);\r\n  }\r\n}"],"sourceRoot":"..\\..\\..\\src"}