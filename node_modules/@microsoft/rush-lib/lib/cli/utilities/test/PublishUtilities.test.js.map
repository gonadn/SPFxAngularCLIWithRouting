{"version":3,"sources":["cli/utilities/test/PublishUtilities.test.ts"],"names":[],"mappings":"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","file":"cli/utilities/test/PublishUtilities.test.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { expect } from 'chai';\r\nimport * as path from 'path';\r\n\r\nimport {\r\n  IChangeInfo,\r\n  ChangeType\r\n} from '../../../data/ChangeManagement';\r\nimport RushConfiguration from '../../../data/RushConfiguration';\r\nimport RushConfigurationProject from '../../../data/RushConfigurationProject';\r\nimport {\r\n  default as PublishUtilities,\r\n  IChangeInfoHash\r\n} from '../PublishUtilities';\r\nimport ChangeFiles from '../ChangeFiles';\r\n\r\n/* tslint:disable:no-string-literal */\r\n\r\ndescribe('findChangeRequests', () => {\r\n\r\n  it('returns no changes in an empty change folder', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> =\r\n      RushConfiguration.loadFromConfigurationFile(path.resolve(__dirname, 'packages', 'rush.json')).projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      new ChangeFiles(path.join(__dirname, 'noChange')));\r\n\r\n    expect(Object.keys(allChanges).length).to.equal(0);\r\n  });\r\n\r\n  it('returns 1 change when changing a leaf package', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> =\r\n      RushConfiguration.loadFromConfigurationFile(path.resolve(__dirname, 'packages', 'rush.json')).projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      new ChangeFiles(path.join(__dirname, 'leafChange')));\r\n\r\n    expect(Object.keys(allChanges).length).to.equal(1);\r\n    expect(allChanges).has.property('d');\r\n    expect(allChanges['d'].changeType).equals(ChangeType.patch, 'd was not patched');\r\n  });\r\n\r\n  it('returns 2 changes when patching a root package', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> =\r\n      RushConfiguration.loadFromConfigurationFile(path.resolve(__dirname, 'packages', 'rush.json')).projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      new ChangeFiles(path.join(__dirname, 'rootPatchChange')));\r\n\r\n    expect(Object.keys(allChanges).length).to.equal(2);\r\n\r\n    expect(allChanges).has.property('a');\r\n    expect(allChanges).has.property('b');\r\n\r\n    expect(allChanges['a'].changeType).equals(ChangeType.patch, 'a was not a patch');\r\n    expect(allChanges['b'].changeType).equals(ChangeType.dependency, 'b was not a dependency change');\r\n\r\n    expect(allChanges['a'].newVersion).equals('1.0.1', 'a was not patched');\r\n    expect(allChanges['b'].newVersion).equals('1.0.0', 'b was not left unchanged');\r\n  });\r\n\r\n  it('returns 3 changes when major bumping a root package', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> =\r\n      RushConfiguration.loadFromConfigurationFile(path.resolve(__dirname, 'packages', 'rush.json')).projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      new ChangeFiles(path.join(__dirname, 'rootMajorChange')));\r\n\r\n    expect(Object.keys(allChanges).length).to.equal(3);\r\n\r\n    expect(allChanges).has.property('a');\r\n    expect(allChanges).has.property('b');\r\n    expect(allChanges).has.property('c');\r\n\r\n    expect(allChanges['a'].changeType).equals(ChangeType.major, 'a was not a major');\r\n    expect(allChanges['b'].changeType).equals(ChangeType.patch, 'b was not a patch');\r\n    expect(allChanges['c'].changeType).equals(ChangeType.dependency, 'c was not a dependency change');\r\n\r\n    expect(allChanges['a'].newVersion).equals('2.0.0', 'a was not a major change');\r\n    expect(allChanges['b'].newVersion).equals('1.0.1', 'b was not patched');\r\n    expect(allChanges['c'].newVersion).equals('1.0.0', 'c was not left unchanged');\r\n  });\r\n\r\n  it('returns 2 changes when bumping cyclic dependencies', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> =\r\n      RushConfiguration.loadFromConfigurationFile(path.resolve(__dirname, 'packages', 'rush.json')).projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      new ChangeFiles(path.join(__dirname, 'cyclicDeps')));\r\n\r\n    expect(Object.keys(allChanges).length).to.equal(2);\r\n\r\n    expect(allChanges).has.property('cyclic-dep-1');\r\n    expect(allChanges).has.property('cyclic-dep-2');\r\n\r\n    expect(allChanges['cyclic-dep-1'].changeType).equals(ChangeType.major, 'cyclic-dep-1 was not a major');\r\n    expect(allChanges['cyclic-dep-2'].changeType).equals(ChangeType.patch, 'cyclic-dep-2 was not a patch');\r\n  });\r\n\r\n  it('can resolve multiple changes requests on the same package', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> =\r\n      RushConfiguration.loadFromConfigurationFile(path.resolve(__dirname, 'packages', 'rush.json')).projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      new ChangeFiles(path.join(__dirname, 'multipleChanges')));\r\n\r\n    expect(Object.keys(allChanges).length).to.equal(3);\r\n    expect(allChanges).has.property('a');\r\n    expect(allChanges).has.property('b');\r\n    expect(allChanges).has.property('c');\r\n    expect(allChanges['a'].changeType).equals(ChangeType.major, 'a was not a major');\r\n    expect(allChanges['b'].changeType).equals(ChangeType.patch, 'b was not a patch');\r\n    expect(allChanges['c'].changeType).equals(ChangeType.dependency, 'c was not a dependency change');\r\n    expect(allChanges['a'].newVersion).equals('2.0.0', 'a was not a major change');\r\n    expect(allChanges['b'].newVersion).equals('1.0.1', 'b was not patched');\r\n    expect(allChanges['c'].newVersion).equals('1.0.0', 'b was not left unchanged');\r\n  });\r\n\r\n  it('can update an explicit dependency', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> =\r\n      RushConfiguration.loadFromConfigurationFile(path.resolve(__dirname, 'packages', 'rush.json')).projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      new ChangeFiles(path.join(__dirname, 'explicitVersionChange')));\r\n\r\n    expect(Object.keys(allChanges).length).to.equal(2);\r\n    expect(allChanges).has.property('c');\r\n    expect(allChanges).has.property('d');\r\n    expect(allChanges['c'].changeType).equals(ChangeType.patch, 'c was not a patch');\r\n    expect(allChanges['d'].changeType).equals(ChangeType.patch, 'd was not a patch');\r\n  });\r\n\r\n  it('can exclude lock step projects', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> =\r\n      RushConfiguration.loadFromConfigurationFile(path.resolve(__dirname, 'repo', 'rush.json')).projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      new ChangeFiles(path.join(__dirname, 'repo', 'changes')),\r\n      false,\r\n      undefined,\r\n      new Set<string>(['a', 'b', 'e']));\r\n    expect(Object.keys(allChanges).length).to.equal(5);\r\n    expect(allChanges['a'].newVersion).equals('1.0.0', 'a version is changed');\r\n    expect(allChanges['b'].newVersion).equals('2.0.0', 'b version is changed');\r\n    expect(allChanges['c'].changeType).equals(ChangeType.patch, 'c was not a patch');\r\n    expect(allChanges['c'].newVersion).equals('3.1.2');\r\n    expect(allChanges['d'].changeType).equals(ChangeType.patch, 'd was not a patch');\r\n    expect(allChanges['d'].newVersion).equals('4.1.2');\r\n    expect(allChanges['e'].newVersion).equals(allPackages.get('e')!.packageJson.version, 'e version gets changed');\r\n  });\r\n});\r\n\r\ndescribe('sortChangeRequests', () => {\r\n  it('can return a sorted array of the change requests to be published in the correct order', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> =\r\n      RushConfiguration.loadFromConfigurationFile(path.resolve(__dirname, 'packages', 'rush.json')).projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      new ChangeFiles(path.join(__dirname, 'multipleChanges')));\r\n    const orderedChanges: IChangeInfo[] = PublishUtilities.sortChangeRequests(allChanges);\r\n\r\n    expect(orderedChanges.length).equals(3, 'there was not 3 changes');\r\n    expect(orderedChanges[0].packageName).equals('a', 'a was not at index 0');\r\n    expect(orderedChanges[1].packageName).equals('b', 'b was not at index 1');\r\n    expect(orderedChanges[2].packageName).equals('c', 'c was not at index 2');\r\n  });\r\n});\r\n\r\ndescribe('isRangeDependency', () => {\r\n  it('can test ranges', () => {\r\n    /* tslint:disable:no-unused-expression */\r\n    expect(PublishUtilities.isRangeDependency('>=1.0.0 <2.0.0')).is.true;\r\n    expect(PublishUtilities.isRangeDependency('>=1.0.0-pr.1 <2.0.0')).is.true;\r\n    expect(PublishUtilities.isRangeDependency('1.0.0')).is.false;\r\n    expect(PublishUtilities.isRangeDependency('^1.0.0')).is.false;\r\n    expect(PublishUtilities.isRangeDependency('~1.0.0')).is.false;\r\n    /* tslint:enable:no-unused-expression */\r\n  });\r\n});\r\n\r\ndescribe('getNewDependencyVersion', () => {\r\n  it('can update dependency versions', () => {\r\n    const dependencies: { [key: string]: string} = {\r\n      'a': '~1.0.0',\r\n      'b': '^1.0.0',\r\n      'c': '>=1.0.0 <2.0.0'\r\n    };\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies,\r\n      'a', '1.1.0')).equals('~1.1.0');\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies,\r\n      'b', '1.2.0')).equals('^1.2.0');\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies,\r\n      'c', '1.3.0')).equals('>=1.3.0 <2.0.0');\r\n  });\r\n\r\n  it('can update dependency versions with prereleases', () => {\r\n    const dependencies: { [key: string]: string} = {\r\n      'a': '~1.0.0-pr.1',\r\n      'b': '^1.0.0-pr.1',\r\n      'c': '>=1.0.0-pr.1 <2.0.0'\r\n    };\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies,\r\n      'a', '1.1.0-pr.1')).equals('~1.1.0-pr.1');\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies,\r\n      'b', '1.2.0-pr.2')).equals('^1.2.0-pr.2');\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies,\r\n      'c', '1.3.0-pr.3')).equals('>=1.3.0-pr.3 <2.0.0');\r\n  });\r\n});"],"sourceRoot":"..\\..\\..\\..\\src"}