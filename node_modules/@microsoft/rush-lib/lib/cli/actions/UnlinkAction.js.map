{"version":3,"sources":["cli/actions/UnlinkAction.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAE3D,gCAAgC;AAChC,yBAAyB;AACzB,6BAA6B;AAE7B,yDAAkD;AAElD,qDAAkD;AAElD,kBAAkC,SAAQ,+BAAc;IAGtD,YAAY,MAA6B;QACvC,KAAK,CAAC;YACJ,UAAU,EAAE,QAAQ;YACpB,OAAO,EAAE,+CAA+C;YACxD,aAAa,EAAE,kFAAkF;kBAC9F,0GAA0G;kBAC1G,yBAAyB;SAC7B,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACxB,CAAC;IAES,kBAAkB;QAC1B,gBAAgB;IAClB,CAAC;IAES,GAAG;QACX,2DAA2D;QAC3D,2CAA2C;QAC3C,mBAAS,CAAC,UAAU,CAAC,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,CAAC;QAElE,IAAI,WAAW,GAAY,KAAK,CAAC;QACjC,GAAG,CAAC,CAAC,MAAM,WAAW,IAAI,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC1D,MAAM,iBAAiB,GAAW,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC;YACvF,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;gBACtC,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,iBAAiB,CAAC,CAAC;gBAC5C,mBAAS,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,CAAC;gBACnD,WAAW,GAAG,IAAI,CAAC;YACrB,CAAC;QACH,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACjB,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAChC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,OAAO,CAAC,CAAC;QAChC,CAAC;IACH,CAAC;CACF;AAtCD,+BAsCC","file":"cli/actions/UnlinkAction.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as fsx from 'fs-extra';\r\nimport * as os from 'os';\r\nimport * as path from 'path';\r\n\r\nimport Utilities from '../../utilities/Utilities';\r\nimport RushCommandLineParser from './RushCommandLineParser';\r\nimport { BaseRushAction } from './BaseRushAction';\r\n\r\nexport default class UnlinkAction extends BaseRushAction {\r\n  private _parser: RushCommandLineParser;\r\n\r\n  constructor(parser: RushCommandLineParser) {\r\n    super({\r\n      actionVerb: 'unlink',\r\n      summary: 'Delete node_modules symlinks for all projects',\r\n      documentation: 'This removes the symlinks created by the \"rush link\" command. This is useful for'\r\n       + ' cleaning a repo using \"git clean\" without accidentally deleting source files, or for using standard NPM'\r\n       + ' commands on a project.'\r\n    });\r\n    this._parser = parser;\r\n  }\r\n\r\n  protected onDefineParameters(): void {\r\n    // No parameters\r\n  }\r\n\r\n  protected run(): void {\r\n    // Delete the flag file if it exists; this will ensure that\r\n    // a full \"rush link\" is required next time\r\n    Utilities.deleteFile(this.rushConfiguration.rushLinkJsonFilename);\r\n\r\n    let didAnything: boolean = false;\r\n    for (const rushProject of this.rushConfiguration.projects) {\r\n      const localModuleFolder: string = path.join(rushProject.projectFolder, 'node_modules');\r\n      if (fsx.existsSync(localModuleFolder)) {\r\n        console.log('Purging ' + localModuleFolder);\r\n        Utilities.dangerouslyDeletePath(localModuleFolder);\r\n        didAnything = true;\r\n      }\r\n    }\r\n    if (!didAnything) {\r\n      console.log('Nothing to do.');\r\n    } else {\r\n      console.log(os.EOL + 'Done.');\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}