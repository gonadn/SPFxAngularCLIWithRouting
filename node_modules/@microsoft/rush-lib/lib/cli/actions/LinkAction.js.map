{"version":3,"sources":["cli/actions/LinkAction.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAK3D,0DAAmD;AACnD,qDAAkD;AAElD,gBAAgC,SAAQ,+BAAc;IAIpD,YAAY,MAA6B;QACvC,KAAK,CAAC;YACJ,UAAU,EAAE,MAAM;YAClB,OAAO,EAAE,+CAA+C;YACxD,aAAa,EAAE,+CAA+C;SAC/D,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACxB,CAAC;IAES,kBAAkB;QAC1B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC;YACrC,iBAAiB,EAAE,SAAS;YAC5B,kBAAkB,EAAE,IAAI;YACxB,WAAW,EAAE,+FAA+F;gBAC1G,cAAc;SACjB,CAAC,CAAC;IACL,CAAC;IAES,GAAG;QACX,MAAM,WAAW,GAAgB,IAAI,qBAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACzE,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,WAAW,CAAC,yBAAyB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;IACzF,CAAC;CACF;AA1BD,6BA0BC","file":"cli/actions/LinkAction.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { CommandLineFlagParameter } from '@microsoft/ts-command-line';\r\n\r\nimport RushCommandLineParser from './RushCommandLineParser';\r\nimport LinkManager from '../utilities/LinkManager';\r\nimport { BaseRushAction } from './BaseRushAction';\r\n\r\nexport default class LinkAction extends BaseRushAction {\r\n  private _parser: RushCommandLineParser;\r\n  private _force: CommandLineFlagParameter;\r\n\r\n  constructor(parser: RushCommandLineParser) {\r\n    super({\r\n      actionVerb: 'link',\r\n      summary: 'Create node_modules symlinks for all projects',\r\n      documentation: 'Create node_modules symlinks for all projects'\r\n    });\r\n    this._parser = parser;\r\n  }\r\n\r\n  protected onDefineParameters(): void {\r\n    this._force = this.defineFlagParameter({\r\n      parameterLongName: '--force',\r\n      parameterShortName: '-f',\r\n      description: 'Deletes and recreates all links, even if the filesystem state seems to indicate that this is ' +\r\n        'unnecessary.'\r\n    });\r\n  }\r\n\r\n  protected run(): void {\r\n    const linkManager: LinkManager = new LinkManager(this.rushConfiguration);\r\n    this._parser.catchSyncErrors(linkManager.createSymlinksForProjects(this._force.value));\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}