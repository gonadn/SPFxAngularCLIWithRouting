{"version":3,"sources":["cli/actions/CheckAction.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAE3D,iCAAiC;AAGjC,uDAAoD;AACpD,4EAAyE;AAEzE,qDAAkD;AAElD,iBAAiC,SAAQ,+BAAc;IAGrD,YAAY,MAA6B;QACvC,KAAK,CAAC;YACJ,UAAU,EAAE,OAAO;YACnB,OAAO,EAAE,8FAA8F;gBACrG,oCAAoC;YACtC,aAAa,EAAE,yFAAyF;gBACtG,yCAAyC;SAC5C,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACxB,CAAC;IAES,kBAAkB;QAC1B,WAAW;IACb,CAAC;IAES,GAAG;QACX,MAAM,cAAc,GAAqC,EAAE,CAAC;QAC5D,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,OAAe,EAAE,UAAkB;YAChF,cAAc,CAAC,UAAU,CAAC,GAAG,OAAO,CAAC;QACvC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC;YACnC,WAAW,EAAE,6BAAa,CAAC,sBAAsB;YACjD,WAAW,EAAE,EAAE,YAAY,EAAE,cAAc,EAAE;SAClB,CAAC,CAAC;QAE/B,MAAM,cAAc,GAA0B,IAAI,6CAAqB,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QAEzG,0FAA0F;QAC1F,cAAc,CAAC,aAAa,EAAE,CAAC,OAAO,CAAC,CAAC,UAAkB;YACxD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;YACvC,cAAc,CAAC,qBAAqB,CAAC,UAAU,CAAE,CAAC,OAAO,CAAC,CAAC,OAAe;gBACxE,OAAO,CAAC,GAAG,CAAC,KAAK,OAAO,EAAE,CAAC,CAAC;gBAC5B,cAAc,CAAC,sBAAsB,CAAC,UAAU,EAAE,OAAO,CAAE,CAAC,OAAO,CAAC,CAAC,OAAe;oBAClF,OAAO,CAAC,GAAG,CAAC,QAAQ,OAAO,EAAE,CAAC,CAAC;gBACjC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACtC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,cAAc,CAAC,kBAAkB,6BAA6B,CAAC,CAAC,CAAC;YACjG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,qCAAqC,CAAC,CAAC,CAAC;QACnE,CAAC;IACH,CAAC;CACF;AAlDD,8BAkDC","file":"cli/actions/CheckAction.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as colors from 'colors';\r\n\r\nimport RushConfigurationProject from '../../data/RushConfigurationProject';\r\nimport { RushConstants } from '../../RushConstants';\r\nimport { VersionMismatchFinder } from '../../data/VersionMismatchFinder';\r\nimport RushCommandLineParser from './RushCommandLineParser';\r\nimport { BaseRushAction } from './BaseRushAction';\r\n\r\nexport default class CheckAction extends BaseRushAction {\r\n  private _parser: RushCommandLineParser;\r\n\r\n  constructor(parser: RushCommandLineParser) {\r\n    super({\r\n      actionVerb: 'check',\r\n      summary: 'Checks each project\\'s package.json files and ensures that all dependencies are of the same ' +\r\n        'version throughout the repository.',\r\n      documentation: 'Checks each project\\'s package.json files and ensures that all dependencies are of the ' +\r\n        'same version throughout the repository.'\r\n    });\r\n    this._parser = parser;\r\n  }\r\n\r\n  protected onDefineParameters(): void {\r\n    // abstract\r\n  }\r\n\r\n  protected run(): void {\r\n    const pinnedVersions: { [dependency: string]: string } = {};\r\n    this.rushConfiguration.pinnedVersions.forEach((version: string, dependency: string) => {\r\n      pinnedVersions[dependency] = version;\r\n    });\r\n\r\n    this.rushConfiguration.projects.push({\r\n      packageName: RushConstants.pinnedVersionsFilename,\r\n      packageJson: { dependencies: pinnedVersions }\r\n    } as RushConfigurationProject);\r\n\r\n    const mismatchFinder: VersionMismatchFinder = new VersionMismatchFinder(this.rushConfiguration.projects);\r\n\r\n    // Iterate over the list. For any dependency with mismatching versions, print the projects\r\n    mismatchFinder.getMismatches().forEach((dependency: string) => {\r\n      console.log(colors.yellow(dependency));\r\n      mismatchFinder.getVersionsOfMismatch(dependency)!.forEach((version: string) => {\r\n        console.log(`  ${version}`);\r\n        mismatchFinder.getConsumersOfMismatch(dependency, version)!.forEach((project: string) => {\r\n          console.log(`   - ${project}`);\r\n        });\r\n      });\r\n      console.log();\r\n    });\r\n\r\n    if (mismatchFinder.numberOfMismatches) {\r\n      console.log(colors.red(`Found ${mismatchFinder.numberOfMismatches} mis-matching dependencies!`));\r\n      process.exit(1);\r\n    } else {\r\n      console.log(colors.green(`Found no mis-matching dependencies!`));\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}