{"version":3,"sources":["data/VersionMismatchFinder.ts"],"names":[],"mappings":"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","file":"data/VersionMismatchFinder.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport RushConfigurationProject from './RushConfigurationProject';\r\n\r\n/**\r\n * @public\r\n */\r\nexport class VersionMismatchFinder {\r\n /* store it like this:\r\n  * {\r\n  *   \"@types/node\": {\r\n  *     \"1.0.0\": [ '@ms/rush' ]\r\n  *   }\r\n  * }\r\n  */\r\n  private _mismatches: Map<string, Map<string, string[]>>;\r\n\r\n  constructor(private _projects: RushConfigurationProject[]) {\r\n    this._mismatches = new Map<string, Map<string, string[]>>();\r\n    this._analyze();\r\n  }\r\n\r\n  public get numberOfMismatches(): number {\r\n    return this._mismatches.size;\r\n  }\r\n\r\n  public getMismatches(): Array<string> {\r\n    return this._getKeys(this._mismatches);\r\n  }\r\n\r\n  public getVersionsOfMismatch(mismatch: string): Array<string> | undefined {\r\n    return this._mismatches.has(mismatch)\r\n      ? this._getKeys(this._mismatches.get(mismatch))\r\n      : undefined;\r\n  }\r\n\r\n  public getConsumersOfMismatch(mismatch: string, version: string): Array<string> | undefined {\r\n    const mismatchedPackage: Map<string, string[]> | undefined = this._mismatches.get(mismatch);\r\n    if (!mismatchedPackage) {\r\n      return undefined;\r\n    }\r\n\r\n    const mismatchedVersion: string[] | undefined = mismatchedPackage.get(version);\r\n    return mismatchedVersion;\r\n  }\r\n\r\n  private _analyze(): void {\r\n    this._projects.forEach((project: RushConfigurationProject) => {\r\n      this._addDependenciesToList(project.packageName,\r\n        project.packageJson.dependencies, project.cyclicDependencyProjects);\r\n      this._addDependenciesToList(project.packageName,\r\n        project.packageJson.devDependencies, project.cyclicDependencyProjects);\r\n      this._addDependenciesToList(project.packageName,\r\n        project.packageJson.peerDependencies, project.cyclicDependencyProjects);\r\n      this._addDependenciesToList(project.packageName,\r\n        project.packageJson.optionalDependencies, project.cyclicDependencyProjects);\r\n    });\r\n\r\n    this._mismatches.forEach((mismatches: Map<string, string[]>, project: string) => {\r\n      if (mismatches.size <= 1) {\r\n        this._mismatches.delete(project);\r\n      }\r\n    });\r\n  }\r\n\r\n  private _addDependenciesToList(\r\n    project: string,\r\n    dependencyMap: { [dependency: string]: string } | undefined,\r\n    exclude: Set<string>): void {\r\n\r\n    if (dependencyMap) {\r\n      Object.keys(dependencyMap).forEach((dependency: string) => {\r\n        if (!exclude || !exclude.has(dependency)) {\r\n          const version: string = dependencyMap[dependency];\r\n          if (!this._mismatches.has(dependency)) {\r\n            this._mismatches.set(dependency, new Map<string, string[]>());\r\n          }\r\n\r\n          const dependencyVersions: Map<string, string[]> = this._mismatches.get(dependency)!;\r\n\r\n          if (!dependencyVersions.has(version)) {\r\n            dependencyVersions.set(version, []);\r\n          }\r\n          dependencyVersions.get(version)!.push(project);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  private _getKeys(iterable: Map<string, any> | undefined): string[] {\r\n    const keys: string[] = [];\r\n    if (iterable) {\r\n      // tslint:disable-next-line:no-any\r\n      iterable.forEach((value: any, key: string) => {\r\n        keys.push(key);\r\n      });\r\n    }\r\n    return keys;\r\n  }\r\n}"],"sourceRoot":"..\\..\\src"}