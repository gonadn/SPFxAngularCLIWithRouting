{"version":3,"sources":["CommandLineDefinition.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D","file":"CommandLineDefinition.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\n/**\r\n * For use with CommandLineParser, this interface represents a generic command-line parameter\r\n *\r\n * @public\r\n */\r\nexport interface IBaseCommandLineDefinition {\r\n  /**\r\n   * The long name of the flag including double dashes, e.g. \"--do-something\"\r\n   */\r\n  parameterLongName: string;\r\n\r\n  /**\r\n   * An optional short name for the flag including the dash, e.g. \"-d\"\r\n   */\r\n  parameterShortName?: string;\r\n\r\n  /**\r\n   * Documentation for the flag, that will be shown when invoking the tool with \"--help\"\r\n   */\r\n  description: string;\r\n}\r\n\r\nexport interface IKeyedCommandLineDefinition extends IBaseCommandLineDefinition {\r\n  /**\r\n   * The key used to identify the value of this parameter. This must be a unique value. If it is\r\n   * omitted, a unique key is created. This key name appears in the help menu.\r\n   * For certain definitions, the key value is not surfaced in the UI.\r\n   */\r\n  key?: string;\r\n}\r\n\r\n/**\r\n * For use with CommandLineParser, this interface represents a boolean flag command line parameter\r\n *\r\n * @public\r\n */\r\nexport interface ICommandLineFlagDefinition extends IBaseCommandLineDefinition { }\r\n\r\n/**\r\n * For use with CommandLineParser, this interface represents a string command line parameter\r\n *\r\n * @public\r\n */\r\nexport interface ICommandLineStringDefinition extends IKeyedCommandLineDefinition { }\r\n\r\n/**\r\n * For use with CommandLineParser, this interface represents a string command line parameter\r\n *\r\n * @public\r\n */\r\nexport interface ICommandLineStringListDefinition extends IKeyedCommandLineDefinition { }\r\n\r\n/**\r\n * For use with CommandLineParser, this interface represents a parameter which is constrained to\r\n * a list of possible options\r\n *\r\n * @public\r\n */\r\nexport interface ICommandLineOptionDefinition extends IBaseCommandLineDefinition {\r\n  /**\r\n   * A list of strings (which contain no spaces), of possible options which can be selected\r\n   */\r\n  options: string[];\r\n\r\n  /**\r\n   * The default value which will be used if the parameter is omitted from the command line\r\n   */\r\n  defaultValue?: string;\r\n}\r\n\r\n/**\r\n * For use with CommandLineParser, this interface represents an integer command line parameter\r\n *\r\n * @public\r\n */\r\nexport interface ICommandLineIntegerDefinition extends IKeyedCommandLineDefinition { }"],"sourceRoot":"..\\src"}