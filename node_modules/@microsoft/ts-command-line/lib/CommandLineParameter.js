"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * The base class for the various command-line parameter types.
 *
 * @remarks
 *
 * The "subclasses" of this class are not actually constructed directly.  Instead,
 * they are used as shorthand for various parameterizations of CommandLineParameter<T>.
 * @public
 */
class CommandLineParameter {
    constructor(key, converter) {
        this._converter = converter || ((data) => data); /* tslint:disable-line:no-any */
        this._keyData = key;
    }
    /**
     * Called internally by CommandLineParameterProvider._processParsedData()
     * @internal
     */
    _setValue(data) {
        this._value = this._converter(data[this._keyData]);
    }
    /**
     * After the command line has been parsed, this returns the value of the parameter.
     * @remarks
     * For example, for a CommandLineFlagParameter it will be a boolean indicating
     * whether the switch was provided.  For a CommandLineStringListParameter it will
     * be an array of strings.
     */
    get value() {
        return this._value;
    }
    /**
     * An internal key used to retrieve the value from the parser's dictionary
     * @internal
     */
    get _key() {
        return this._keyData;
    }
}
exports.CommandLineParameter = CommandLineParameter;
/**
 * The data type returned by {@link CommandLineParameterProvider.defineOptionParameter}.
 * @public
 */
class CommandLineOptionParameter extends CommandLineParameter {
}
exports.CommandLineOptionParameter = CommandLineOptionParameter;
/**
 * The data type returned by {@link CommandLineParameterProvider.defineStringParameter}.
 * @public
 */
class CommandLineStringParameter extends CommandLineParameter {
}
exports.CommandLineStringParameter = CommandLineStringParameter;
/**
 * The data type returned by {@link CommandLineParameterProvider.defineStringListParameter}.
 * @public
 */
class CommandLineStringListParameter extends CommandLineParameter {
}
exports.CommandLineStringListParameter = CommandLineStringListParameter;
/**
 * The data type returned by {@link CommandLineParameterProvider.defineFlagParameter}.
 * @public
 */
class CommandLineFlagParameter extends CommandLineParameter {
}
exports.CommandLineFlagParameter = CommandLineFlagParameter;
/**
 * The data type returned by {@link CommandLineParameterProvider.defineIntegerParameter}.
 * @public
 */
class CommandLineIntegerParameter extends CommandLineParameter {
}
exports.CommandLineIntegerParameter = CommandLineIntegerParameter;

//# sourceMappingURL=CommandLineParameter.js.map
