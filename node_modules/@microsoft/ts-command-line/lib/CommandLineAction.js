"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
Object.defineProperty(exports, "__esModule", { value: true });
const CommandLineParameterProvider_1 = require("./CommandLineParameterProvider");
/**
 * Represents a sub-command that is part of the CommandLineParser command line.
 * Applications should create subclasses of CommandLineAction corresponding to
 * each action that they want to expose.
 *
 * @public
 */
class CommandLineAction extends CommandLineParameterProvider_1.default {
    constructor(options) {
        super();
        this.options = options;
    }
    /**
     * This is called internally by CommandLineParser.addAction()
     * @internal
     */
    _buildParser(actionsSubParser) {
        this._argumentParser = actionsSubParser.addParser(this.options.actionVerb, {
            help: this.options.summary,
            description: this.options.documentation
        });
        this.onDefineParameters();
    }
    /**
     * This is called internally by CommandLineParser.execute()
     * @internal
     */
    _processParsedData(data) {
        super._processParsedData(data);
    }
    /**
     * Invoked by CommandLineParser.onExecute().
     * @internal
     */
    _execute() {
        this.onExecute();
    }
}
exports.CommandLineAction = CommandLineAction;
exports.default = CommandLineAction;

//# sourceMappingURL=CommandLineAction.js.map
