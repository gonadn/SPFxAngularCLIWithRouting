import * as argparse from 'argparse';
import { ICommandLineFlagDefinition, ICommandLineStringDefinition, ICommandLineStringListDefinition, ICommandLineIntegerDefinition, ICommandLineOptionDefinition } from './CommandLineDefinition';
import { ICommandLineParserData, CommandLineFlagParameter, CommandLineStringParameter, CommandLineStringListParameter, CommandLineIntegerParameter, CommandLineOptionParameter } from './CommandLineParameter';
/**
 * This is the common base class for CommandLineAction and CommandLineParser
 * that provides functionality for defining command-line parameters.
 *
 * @public
 */
declare abstract class CommandLineParameterProvider {
    private static _keyCounter;
    /**
     * NOTE: THIS IS INTERNAL.  IN THE FUTURE, WE MAY REPLACE "argparse" WITH A DIFFERENT ENGINE.
     * @internal
     */
    protected _argumentParser: argparse.ArgumentParser;
    private _parameters;
    private _keys;
    constructor();
    /**
     * The child class should implement this hook to define its command-line parameters,
     * e.g. by calling defineFlagParameter().
     */
    protected abstract onDefineParameters(): void;
    /**
     * Defines a command-line switch whose boolean value is true if the switch is provided,
     * and false otherwise.
     *
     * @remarks
     * Example:  example-tool --debug
     */
    protected defineFlagParameter(definition: ICommandLineFlagDefinition): CommandLineFlagParameter;
    /**
     * Defines a command-line parameter whose value is a single text string.
     *
     * @remarks
     * Example:  example-tool --message "Hello, world!"
     */
    protected defineStringParameter(definition: ICommandLineStringDefinition): CommandLineStringParameter;
    /**
     * Defines a command-line parameter whose value is one or more text strings.
     *
     * @remarks
     * Example:  example-tool --add file1.txt --add file2.txt --add file3.txt
     */
    protected defineStringListParameter(definition: ICommandLineStringListDefinition): CommandLineStringListParameter;
    /**
     * Defines a command-line parameter whose value is an integer.
     *
     * @remarks
     * Example:  example-tool l --max-attempts 5
     */
    protected defineIntegerParameter(definition: ICommandLineIntegerDefinition): CommandLineIntegerParameter;
    /**
     * Defines a command-line parameter whose value must be a string from a fixed set of
     * allowable choice (similar to an enum).
     *
     * @remarks
     * Example:  example-tool --log-level warn
     */
    protected defineOptionParameter(definition: ICommandLineOptionDefinition): CommandLineOptionParameter;
    /** @internal */
    protected _processParsedData(data: ICommandLineParserData): void;
    private _getKey(parameterLongName, key?);
    private _createParameter(definition, argparseOptions?, key?, converter?);
}
export default CommandLineParameterProvider;
